{"schemaVersion":{"minor":1,"patch":2,"major":0},"interfaceLanguages":{"swift":[{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init()","path":"\/documentation\/logboard\/consoleappender\/init()"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func append(LBLogger, level: LBLogger.Level, format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/consoleappender\/append(_:level:format:arguments:file:function:line:)","type":"method"},{"title":"func append(LBLogger, level: LBLogger.Level, message: [Any], file: StaticString, function: StaticString, line: Int)","type":"method","path":"\/documentation\/logboard\/consoleappender\/append(_:level:message:file:function:line:)"}],"title":"ConsoleAppender","path":"\/documentation\/logboard\/consoleappender","type":"class"},{"path":"\/documentation\/logboard\/lblogger","type":"class","title":"LBLogger","children":[{"title":"Structures","type":"groupMarker"},{"path":"\/documentation\/logboard\/lblogger\/data","type":"struct","children":[{"type":"groupMarker","title":"Initializers"},{"title":"init?(Data)","path":"\/documentation\/logboard\/lblogger\/data\/init(_:)","type":"init"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/logboard\/lblogger\/data\/date","type":"property","title":"let date: Date"},{"path":"\/documentation\/logboard\/lblogger\/data\/file","title":"let file: String","type":"property"},{"title":"let function: String","path":"\/documentation\/logboard\/lblogger\/data\/function","type":"property"},{"type":"property","title":"let identifier: String","path":"\/documentation\/logboard\/lblogger\/data\/identifier"},{"path":"\/documentation\/logboard\/lblogger\/data\/level","type":"property","title":"let level: LBLogger.Level"},{"path":"\/documentation\/logboard\/lblogger\/data\/line","type":"property","title":"let line: Int"},{"title":"let message: String","path":"\/documentation\/logboard\/lblogger\/data\/message","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"type":"symbol","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/logboard\/lblogger\/data\/description","type":"property","title":"var description: String"}],"path":"\/documentation\/logboard\/lblogger\/data\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations"}],"title":"LBLogger.Data"},{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/logboard\/lblogger\/init(_:)","type":"init","title":"init(String)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var appender: any LBLoggerAppender","path":"\/documentation\/logboard\/lblogger\/appender","type":"property"},{"title":"let identifier: String","type":"property","path":"\/documentation\/logboard\/lblogger\/identifier"},{"type":"property","path":"\/documentation\/logboard\/lblogger\/level-swift.property","title":"var level: LBLogger.Level"},{"type":"groupMarker","title":"Instance Methods"},{"title":"func debug(Any..., file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/lblogger\/debug(_:file:function:line:)","type":"method"},{"title":"func debug(format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/lblogger\/debug(format:arguments:file:function:line:)","type":"method"},{"title":"func error(Any..., file: StaticString, function: StaticString, line: Int)","type":"method","path":"\/documentation\/logboard\/lblogger\/error(_:file:function:line:)"},{"type":"method","path":"\/documentation\/logboard\/lblogger\/error(format:arguments:file:function:line:)","title":"func error(format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)"},{"type":"method","path":"\/documentation\/logboard\/lblogger\/info(_:file:function:line:)","title":"func info(Any..., file: StaticString, function: StaticString, line: Int)"},{"type":"method","title":"func info(format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/lblogger\/info(format:arguments:file:function:line:)"},{"title":"func isEnabledFor(level: LBLogger.Level) -> Bool","type":"method","path":"\/documentation\/logboard\/lblogger\/isenabledfor(level:)"},{"title":"func trace(Any..., file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/lblogger\/trace(_:file:function:line:)","type":"method"},{"path":"\/documentation\/logboard\/lblogger\/trace(format:arguments:file:function:line:)","type":"method","title":"func trace(format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)"},{"path":"\/documentation\/logboard\/lblogger\/warn(_:file:function:line:)","type":"method","title":"func warn(Any..., file: StaticString, function: StaticString, line: Int)"},{"path":"\/documentation\/logboard\/lblogger\/warn(format:arguments:file:function:line:)","title":"func warn(format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"title":"static var dateFormatter: DateFormatter","path":"\/documentation\/logboard\/lblogger\/dateformatter","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"title":"static func with(String) -> LBLogger","path":"\/documentation\/logboard\/lblogger\/with(_:)","type":"method"},{"type":"groupMarker","title":"Enumerations"},{"path":"\/documentation\/logboard\/lblogger\/level-swift.enum","type":"enum","title":"LBLogger.Level","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"type":"case","title":"case debug","path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/debug"},{"path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/error","type":"case","title":"case error"},{"path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/info","title":"case info","type":"case"},{"type":"case","title":"case trace","path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/trace"},{"type":"case","path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/warn","title":"case warn"},{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init?(rawValue: Int)","path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/init(rawvalue:)"},{"path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/init(string:)","type":"init","title":"init?(string: String)"},{"title":"Instance Properties","type":"groupMarker"},{"type":"property","path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/description","title":"var description: String"},{"type":"groupMarker","title":"Default Implementations"},{"title":"Equatable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"type":"symbol","path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/equatable-implementations"},{"type":"symbol","title":"RawRepresentable Implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/hashvalue","title":"var hashValue: Int"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/hash(into:)","type":"method","title":"func hash(into: inout Hasher)"}],"path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/rawrepresentable-implementations"}]}]},{"title":"MultiAppender","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/logboard\/multiappender\/init()","title":"init()","type":"init"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var appenders: [any LBLoggerAppender]","path":"\/documentation\/logboard\/multiappender\/appenders"},{"title":"Instance Methods","type":"groupMarker"},{"type":"method","path":"\/documentation\/logboard\/multiappender\/append(_:level:format:arguments:file:function:line:)","title":"func append(LBLogger, level: LBLogger.Level, format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)"},{"path":"\/documentation\/logboard\/multiappender\/append(_:level:message:file:function:line:)","type":"method","title":"func append(LBLogger, level: LBLogger.Level, message: [Any], file: StaticString, function: StaticString, line: Int)"}],"path":"\/documentation\/logboard\/multiappender","type":"class"},{"path":"\/documentation\/logboard\/nullappender","title":"NullAppender","children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/logboard\/nullappender\/append(_:level:format:arguments:file:function:line:)","type":"method","title":"func append(LBLogger, level: LBLogger.Level, format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)"},{"type":"method","path":"\/documentation\/logboard\/nullappender\/append(_:level:message:file:function:line:)","title":"func append(LBLogger, level: LBLogger.Level, message: [Any], file: StaticString, function: StaticString, line: Int)"},{"title":"Type Properties","type":"groupMarker"},{"type":"property","title":"static let shared: NullAppender","path":"\/documentation\/logboard\/nullappender\/shared"}],"type":"class"},{"path":"\/documentation\/logboard\/osloggerappender","type":"class","children":[{"type":"groupMarker","title":"Initializers"},{"title":"init(sybsystem: String, category: String)","path":"\/documentation\/logboard\/osloggerappender\/init(sybsystem:category:)","type":"init"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/logboard\/osloggerappender\/append(_:level:format:arguments:file:function:line:)","type":"method","title":"func append(LBLogger, level: LBLogger.Level, format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)"},{"path":"\/documentation\/logboard\/osloggerappender\/append(_:level:message:file:function:line:)","type":"method","title":"func append(LBLogger, level: LBLogger.Level, message: [Any], file: StaticString, function: StaticString, line: Int)"}],"title":"OSLoggerAppender"},{"children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init()","path":"\/documentation\/logboard\/socketappender\/init()"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/logboard\/socketappender\/append(_:level:format:arguments:file:function:line:)","title":"func append(LBLogger, level: LBLogger.Level, format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)","type":"method"},{"path":"\/documentation\/logboard\/socketappender\/append(_:level:message:file:function:line:)","type":"method","title":"func append(LBLogger, level: LBLogger.Level, message: [Any], file: StaticString, function: StaticString, line: Int)"},{"title":"func close()","path":"\/documentation\/logboard\/socketappender\/close()","type":"method"},{"path":"\/documentation\/logboard\/socketappender\/connect(_:port:)","title":"func connect(String, port: Int)","type":"method"}],"title":"SocketAppender","path":"\/documentation\/logboard\/socketappender","type":"class"},{"type":"groupMarker","title":"Protocols"},{"path":"\/documentation\/logboard\/lbloggerappender","title":"LBLoggerAppender","type":"protocol","children":[{"title":"Instance Methods","type":"groupMarker"},{"type":"method","title":"func append(LBLogger, level: LBLogger.Level, format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/lbloggerappender\/append(_:level:format:arguments:file:function:line:)"},{"path":"\/documentation\/logboard\/lbloggerappender\/append(_:level:message:file:function:line:)","title":"func append(LBLogger, level: LBLogger.Level, message: [Any], file: StaticString, function: StaticString, line: Int)","type":"method"}]}],"title":"Logboard","type":"module","path":"\/documentation\/logboard"},{"children":[{"title":"Articles","type":"groupMarker"},{"type":"article","title":"Enhanced RTMP","path":"\/documentation\/haishinkit\/e-rtmp"},{"title":"Classes","type":"groupMarker"},{"type":"class","path":"\/documentation\/haishinkit\/assetscreenobject","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var chromaKeyColor: CGColor?","path":"\/documentation\/haishinkit\/assetscreenobject\/chromakeycolor","type":"property"},{"type":"property","path":"\/documentation\/haishinkit\/assetscreenobject\/isreading","title":"var isReading: Bool"},{"path":"\/documentation\/haishinkit\/assetscreenobject\/videogravity","type":"property","title":"var videoGravity: AVLayerVideoGravity"},{"type":"groupMarker","title":"Instance Methods"},{"title":"func cancelReading()","path":"\/documentation\/haishinkit\/assetscreenobject\/cancelreading()","type":"method"},{"path":"\/documentation\/haishinkit\/assetscreenobject\/makebounds(_:)","title":"func makeBounds(CGSize) -> CGRect","type":"method"},{"type":"method","path":"\/documentation\/haishinkit\/assetscreenobject\/makeimage(_:)","title":"func makeImage(some ScreenRenderer) -> CGImage?"},{"path":"\/documentation\/haishinkit\/assetscreenobject\/startreading(_:)","type":"method","title":"func startReading(AVAsset) throws"}],"title":"AssetScreenObject"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var connection: AVCaptureConnection?","path":"\/documentation\/haishinkit\/audiodeviceunit\/connection"},{"title":"var device: AVCaptureDevice?","path":"\/documentation\/haishinkit\/audiodeviceunit\/device","type":"property"},{"path":"\/documentation\/haishinkit\/audiodeviceunit\/input","title":"var input: AVCaptureInput?","type":"property"},{"title":"var output: AudioDeviceUnit.Output?","path":"\/documentation\/haishinkit\/audiodeviceunit\/output-swift.property","type":"property"},{"title":"let track: UInt8","path":"\/documentation\/haishinkit\/audiodeviceunit\/track","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/audiodeviceunit\/output-swift.typealias","title":"AudioDeviceUnit.Output","type":"typealias"}],"title":"AudioDeviceUnit","path":"\/documentation\/haishinkit\/audiodeviceunit","type":"class"},{"type":"class","path":"\/documentation\/haishinkit\/audioplayer","title":"AudioPlayer","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(audioEngine: AVAudioEngine)","path":"\/documentation\/haishinkit\/audioplayer\/init(audioengine:)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"type":"symbol","path":"\/documentation\/haishinkit\/audioplayer\/actor-implementations","children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/audioplayer\/assertisolated(_:file:line:)","type":"method","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)"},{"title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","path":"\/documentation\/haishinkit\/audioplayer\/assumeisolated(_:file:line:)","type":"method"},{"title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/haishinkit\/audioplayer\/preconditionisolated(_:file:line:)","type":"method"}],"title":"Actor Implementations"}]},{"title":"HKIncomingStream","type":"class","children":[{"type":"groupMarker","title":"Initializers"},{"title":"init(some HKStream)","path":"\/documentation\/haishinkit\/hkincomingstream\/init(_:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var isRunning: Bool","path":"\/documentation\/haishinkit\/hkincomingstream\/isrunning","type":"property"},{"type":"property","path":"\/documentation\/haishinkit\/hkincomingstream\/soundtransfrom","title":"var soundTransfrom: SoundTransform?"},{"type":"groupMarker","title":"Instance Methods"},{"title":"func append(CMSampleBuffer)","path":"\/documentation\/haishinkit\/hkincomingstream\/append(_:)","type":"method"},{"path":"\/documentation\/haishinkit\/hkincomingstream\/append(_:when:)","type":"method","title":"func append(AVAudioBuffer, when: AVAudioTime)"},{"title":"func attachAudioPlayer(AudioPlayer?) async","type":"method","path":"\/documentation\/haishinkit\/hkincomingstream\/attachaudioplayer(_:)"},{"title":"func setSoundTransform(SoundTransform) async","path":"\/documentation\/haishinkit\/hkincomingstream\/setsoundtransform(_:)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/hkincomingstream\/actor-implementations","children":[{"type":"groupMarker","title":"Instance Methods"},{"title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/haishinkit\/hkincomingstream\/assertisolated(_:file:line:)","type":"method"},{"type":"method","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","path":"\/documentation\/haishinkit\/hkincomingstream\/assumeisolated(_:file:line:)"},{"type":"method","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/haishinkit\/hkincomingstream\/preconditionisolated(_:file:line:)"}],"title":"Actor Implementations","type":"symbol"},{"path":"\/documentation\/haishinkit\/hkincomingstream\/asyncrunner-implementations","title":"AsyncRunner Implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func startRunning()","path":"\/documentation\/haishinkit\/hkincomingstream\/startrunning()","type":"method"},{"title":"func stopRunning()","type":"method","path":"\/documentation\/haishinkit\/hkincomingstream\/stoprunning()"}],"type":"symbol"}],"path":"\/documentation\/haishinkit\/hkincomingstream"},{"type":"class","path":"\/documentation\/haishinkit\/hkoutgoingstream","title":"HKOutgoingStream","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/haishinkit\/hkoutgoingstream\/init()","title":"init()","type":"init"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var audioInputFormat: CMFormatDescription?","path":"\/documentation\/haishinkit\/hkoutgoingstream\/audioinputformat"},{"type":"property","path":"\/documentation\/haishinkit\/hkoutgoingstream\/audiooutputstream","title":"var audioOutputStream: AsyncStream<(AVAudioBuffer, AVAudioTime)>"},{"path":"\/documentation\/haishinkit\/hkoutgoingstream\/audiosettings","title":"var audioSettings: AudioCodecSettings","type":"property"},{"path":"\/documentation\/haishinkit\/hkoutgoingstream\/isrunning","type":"property","title":"var isRunning: Bool"},{"title":"var videoInputBufferCounts: Int","path":"\/documentation\/haishinkit\/hkoutgoingstream\/videoinputbuffercounts","type":"property"},{"title":"var videoInputFormat: CMFormatDescription?","path":"\/documentation\/haishinkit\/hkoutgoingstream\/videoinputformat","type":"property"},{"type":"property","title":"var videoInputStream: AsyncStream<CMSampleBuffer>","path":"\/documentation\/haishinkit\/hkoutgoingstream\/videoinputstream"},{"type":"property","path":"\/documentation\/haishinkit\/hkoutgoingstream\/videooutputstream","title":"var videoOutputStream: AsyncStream<CMSampleBuffer>"},{"type":"property","path":"\/documentation\/haishinkit\/hkoutgoingstream\/videosettings","title":"var videoSettings: VideoCodecSettings"},{"type":"groupMarker","title":"Instance Methods"},{"title":"func append(CMSampleBuffer)","type":"method","path":"\/documentation\/haishinkit\/hkoutgoingstream\/append(_:)"},{"type":"method","title":"func append(AVAudioBuffer, when: AVAudioTime)","path":"\/documentation\/haishinkit\/hkoutgoingstream\/append(_:when:)"},{"type":"method","title":"func append(video: CMSampleBuffer)","path":"\/documentation\/haishinkit\/hkoutgoingstream\/append(video:)"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func startRunning()","type":"method","path":"\/documentation\/haishinkit\/hkoutgoingstream\/startrunning()"},{"title":"func stopRunning()","path":"\/documentation\/haishinkit\/hkoutgoingstream\/stoprunning()","type":"method"}],"type":"symbol","path":"\/documentation\/haishinkit\/hkoutgoingstream\/runner-implementations","title":"Runner Implementations"}]},{"type":"class","path":"\/documentation\/haishinkit\/hkstreamrecorder","children":[{"type":"groupMarker","title":"Initializers"},{"title":"init()","path":"\/documentation\/haishinkit\/hkstreamrecorder\/init()","type":"init"},{"type":"groupMarker","title":"Instance Properties"},{"title":"var audioTrackId: UInt8?","path":"\/documentation\/haishinkit\/hkstreamrecorder\/audiotrackid","type":"property"},{"title":"var isRecording: Bool","type":"property","path":"\/documentation\/haishinkit\/hkstreamrecorder\/isrecording"},{"type":"property","title":"var movieFragmentInterval: Double?","path":"\/documentation\/haishinkit\/hkstreamrecorder\/moviefragmentinterval"},{"type":"property","title":"var moviesDirectory: URL","path":"\/documentation\/haishinkit\/hkstreamrecorder\/moviesdirectory"},{"type":"property","title":"var outputURL: URL?","path":"\/documentation\/haishinkit\/hkstreamrecorder\/outputurl"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/settings","title":"var settings: [AVMediaType : [String : any Sendable]]","type":"property"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/videotrackid","title":"var videoTrackId: UInt8?","type":"property"},{"type":"groupMarker","title":"Instance Methods"},{"title":"func selectTrack(UInt8?, mediaType: CMFormatDescription.MediaType)","type":"method","path":"\/documentation\/haishinkit\/hkstreamrecorder\/selecttrack(_:mediatype:)"},{"type":"method","title":"func setMovieFragmentInterval(Double?)","path":"\/documentation\/haishinkit\/hkstreamrecorder\/setmoviefragmentinterval(_:)"},{"title":"func setMovieFragmentInterval(movieFragmentInterval: Double?)","path":"\/documentation\/haishinkit\/hkstreamrecorder\/setmoviefragmentinterval(moviefragmentinterval:)","type":"method"},{"title":"func startRecording(URL?, settings: [AVMediaType : [String : any Sendable]]) async throws","path":"\/documentation\/haishinkit\/hkstreamrecorder\/startrecording(_:settings:)","type":"method"},{"title":"func stopRecording() async throws -> URL","path":"\/documentation\/haishinkit\/hkstreamrecorder\/stoprecording()","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/defaultsettings","type":"property","title":"static let defaultSettings: [AVMediaType : [String : any Sendable]]"},{"title":"Enumerations","type":"groupMarker"},{"type":"enum","title":"HKStreamRecorder.Error","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"title":"case failedToAppend(error: (any Error)?)","path":"\/documentation\/haishinkit\/hkstreamrecorder\/error\/failedtoappend(error:)","type":"case"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/error\/failedtocreateassetwriter(error:)","type":"case","title":"case failedToCreateAssetWriter(error: any Error)"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/error\/failedtocreateassetwriterinput(error:)","type":"case","title":"case failedToCreateAssetWriterInput(error: any Error)"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/error\/failedtofinishwriting(error:)","title":"case failedToFinishWriting(error: (any Error)?)","type":"case"},{"title":"case fileAlreadyExists(outputURL: URL)","path":"\/documentation\/haishinkit\/hkstreamrecorder\/error\/filealreadyexists(outputurl:)","type":"case"},{"type":"case","path":"\/documentation\/haishinkit\/hkstreamrecorder\/error\/invalidstate","title":"case invalidState"},{"title":"case notSupportedFileType(pathExtension: String)","path":"\/documentation\/haishinkit\/hkstreamrecorder\/error\/notsupportedfiletype(pathextension:)","type":"case"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/error\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/haishinkit\/hkstreamrecorder\/error\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/haishinkit\/hkstreamrecorder\/error"},{"type":"groupMarker","title":"Default Implementations"},{"title":"Actor Implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Methods"},{"title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method","path":"\/documentation\/haishinkit\/hkstreamrecorder\/assertisolated(_:file:line:)"},{"title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","path":"\/documentation\/haishinkit\/hkstreamrecorder\/assumeisolated(_:file:line:)","type":"method"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/preconditionisolated(_:file:line:)","type":"method","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)"}],"path":"\/documentation\/haishinkit\/hkstreamrecorder\/actor-implementations"},{"type":"symbol","path":"\/documentation\/haishinkit\/hkstreamrecorder\/hkstreamoutput-implementations","title":"HKStreamOutput Implementations","children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/stream(_:didoutput:)","type":"method","title":"func stream(some HKStream, didOutput: CMSampleBuffer)"},{"type":"method","title":"func stream(some HKStream, didOutput: AVAudioBuffer, when: AVAudioTime)","path":"\/documentation\/haishinkit\/hkstreamrecorder\/stream(_:didoutput:when:)"}]},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/mediamixeroutput-implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func mixer(MediaMixer, didOutput: CMSampleBuffer)","path":"\/documentation\/haishinkit\/hkstreamrecorder\/mixer(_:didoutput:)","type":"method"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/mixer(_:didoutput:when:)","title":"func mixer(MediaMixer, didOutput: AVAudioPCMBuffer, when: AVAudioTime)","type":"method"}],"title":"MediaMixerOutput Implementations","type":"symbol"}],"title":"HKStreamRecorder"},{"path":"\/documentation\/haishinkit\/hkstreamvideoadaptivebitratestrategy","title":"HKStreamVideoAdaptiveBitRateStrategy","type":"class","children":[{"title":"Initializers","type":"groupMarker"},{"type":"init","path":"\/documentation\/haishinkit\/hkstreamvideoadaptivebitratestrategy\/init(mamimumvideobitrate:)","title":"init(mamimumVideoBitrate: Int)"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/hkstreamvideoadaptivebitratestrategy\/mamimumaudiobitrate","type":"property","title":"let mamimumAudioBitRate: Int"},{"type":"property","title":"let mamimumVideoBitRate: Int","path":"\/documentation\/haishinkit\/hkstreamvideoadaptivebitratestrategy\/mamimumvideobitrate"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func adjustBitrate(NetworkMonitorEvent, stream: some HKStream) async","type":"method","path":"\/documentation\/haishinkit\/hkstreamvideoadaptivebitratestrategy\/adjustbitrate(_:stream:)"},{"type":"groupMarker","title":"Type Properties"},{"type":"property","path":"\/documentation\/haishinkit\/hkstreamvideoadaptivebitratestrategy\/statuscountsthreshold","title":"static let statusCountsThreshold: Int"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/haishinkit\/hkstreamvideoadaptivebitratestrategy\/actor-implementations","title":"Actor Implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/haishinkit\/hkstreamvideoadaptivebitratestrategy\/assertisolated(_:file:line:)","type":"method"},{"type":"method","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","path":"\/documentation\/haishinkit\/hkstreamvideoadaptivebitratestrategy\/assumeisolated(_:file:line:)"},{"title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/haishinkit\/hkstreamvideoadaptivebitratestrategy\/preconditionisolated(_:file:line:)","type":"method"}],"type":"symbol"}]},{"title":"ImageScreenObject","type":"class","path":"\/documentation\/haishinkit\/imagescreenobject","children":[{"type":"groupMarker","title":"Instance Properties"},{"title":"var cgImage: CGImage?","path":"\/documentation\/haishinkit\/imagescreenobject\/cgimage","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func makeBounds(CGSize) -> CGRect","path":"\/documentation\/haishinkit\/imagescreenobject\/makebounds(_:)","type":"method"},{"title":"func makeImage(some ScreenRenderer) -> CGImage?","path":"\/documentation\/haishinkit\/imagescreenobject\/makeimage(_:)","type":"method"}]},{"type":"class","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/haishinkit\/mthkview\/init(coder:)","type":"init","title":"init(coder: NSCoder)"},{"path":"\/documentation\/haishinkit\/mthkview\/init(frame:)","title":"init(frame: CGRect)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var audioTrackId: UInt8?","path":"\/documentation\/haishinkit\/mthkview\/audiotrackid","type":"property"},{"path":"\/documentation\/haishinkit\/mthkview\/videogravity","title":"var videoGravity: AVLayerVideoGravity","type":"property"},{"title":"var videoTrackId: UInt8?","type":"property","path":"\/documentation\/haishinkit\/mthkview\/videotrackid"},{"title":"Instance Methods","type":"groupMarker"},{"type":"method","path":"\/documentation\/haishinkit\/mthkview\/awakefromnib()","title":"func awakeFromNib()"},{"path":"\/documentation\/haishinkit\/mthkview\/draw(_:)","type":"method","title":"func draw(CGRect)"},{"title":"func registerVideoEffect(some VideoEffect) -> Bool","path":"\/documentation\/haishinkit\/mthkview\/registervideoeffect(_:)","type":"method"},{"path":"\/documentation\/haishinkit\/mthkview\/unregistervideoeffect(_:)","title":"func unregisterVideoEffect(some VideoEffect) -> Bool","type":"method"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/mthkview\/stream(_:didoutput:)","title":"func stream(some HKStream, didOutput: CMSampleBuffer)","type":"method"},{"path":"\/documentation\/haishinkit\/mthkview\/stream(_:didoutput:when:)","title":"func stream(some HKStream, didOutput: AVAudioBuffer, when: AVAudioTime)","type":"method"}],"title":"HKStreamOutput Implementations","path":"\/documentation\/haishinkit\/mthkview\/hkstreamoutput-implementations"},{"type":"symbol","children":[{"type":"groupMarker","title":"Instance Methods"},{"title":"func mixer(MediaMixer, didOutput: CMSampleBuffer)","path":"\/documentation\/haishinkit\/mthkview\/mixer(_:didoutput:)","type":"method"},{"path":"\/documentation\/haishinkit\/mthkview\/mixer(_:didoutput:when:)","type":"method","title":"func mixer(MediaMixer, didOutput: AVAudioPCMBuffer, when: AVAudioTime)"},{"type":"method","path":"\/documentation\/haishinkit\/mthkview\/selecttrack(_:mediatype:)","title":"func selectTrack(UInt8?, mediaType: CMFormatDescription.MediaType) async"}],"title":"MediaMixerOutput Implementations","path":"\/documentation\/haishinkit\/mthkview\/mediamixeroutput-implementations"}],"title":"MTHKView","path":"\/documentation\/haishinkit\/mthkview"},{"type":"class","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/mediamixer\/init(multitrackaudiomixingenabled:usemanualcapture:)","type":"init","title":"init(multiTrackAudioMixingEnabled: Bool, useManualCapture: Bool)"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/mediamixer\/audioinputformats","title":"var audioInputFormats: [UInt8 : AVAudioFormat]","type":"property"},{"type":"property","path":"\/documentation\/haishinkit\/mediamixer\/audiomixersettings","title":"var audioMixerSettings: AudioMixerSettings"},{"path":"\/documentation\/haishinkit\/mediamixer\/framerate","title":"var frameRate: Float64","type":"property"},{"title":"var isCapturing: Bool","type":"property","path":"\/documentation\/haishinkit\/mediamixer\/iscapturing"},{"type":"property","title":"var isInterputted: AsyncStream<Bool>","path":"\/documentation\/haishinkit\/mediamixer\/isinterputted"},{"path":"\/documentation\/haishinkit\/mediamixer\/ismonitoringenabled","title":"var isMonitoringEnabled: Bool","type":"property"},{"type":"property","path":"\/documentation\/haishinkit\/mediamixer\/ismultitrackaudiomixingenabled","title":"var isMultiTrackAudioMixingEnabled: Bool"},{"type":"property","path":"\/documentation\/haishinkit\/mediamixer\/isrunning","title":"var isRunning: Bool"},{"path":"\/documentation\/haishinkit\/mediamixer\/istorchenabled","type":"property","title":"var isTorchEnabled: Bool"},{"title":"var screen: Screen","type":"property","path":"\/documentation\/haishinkit\/mediamixer\/screen"},{"type":"property","title":"var sessionPreset: AVCaptureSession.Preset","path":"\/documentation\/haishinkit\/mediamixer\/sessionpreset"},{"title":"var videoInputFormats: [UInt8 : CMFormatDescription]","path":"\/documentation\/haishinkit\/mediamixer\/videoinputformats","type":"property"},{"path":"\/documentation\/haishinkit\/mediamixer\/videomixersettings","title":"var videoMixerSettings: VideoMixerSettings","type":"property"},{"type":"property","title":"var videoOrientation: AVCaptureVideoOrientation","path":"\/documentation\/haishinkit\/mediamixer\/videoorientation"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func addOutput(some MediaMixerOutput)","path":"\/documentation\/haishinkit\/mediamixer\/addoutput(_:)","type":"method"},{"path":"\/documentation\/haishinkit\/mediamixer\/append(_:track:)","type":"method","title":"func append(CMSampleBuffer, track: UInt8)"},{"title":"func append(AVAudioBuffer, when: AVAudioTime, track: UInt8)","path":"\/documentation\/haishinkit\/mediamixer\/append(_:when:track:)","type":"method"},{"type":"method","path":"\/documentation\/haishinkit\/mediamixer\/attachaudio(_:track:configuration:)","title":"func attachAudio(AVCaptureDevice?, track: UInt8, configuration: AudioDeviceConfigurationBlock?) async throws"},{"type":"method","title":"func attachVideo(AVCaptureDevice?, track: UInt8, configuration: VideoDeviceConfigurationBlock?) async throws","path":"\/documentation\/haishinkit\/mediamixer\/attachvideo(_:track:configuration:)"},{"path":"\/documentation\/haishinkit\/mediamixer\/configuration(_:)","title":"func configuration((AVCaptureSession) throws -> Void) rethrows","type":"method"},{"type":"method","path":"\/documentation\/haishinkit\/mediamixer\/configuration(audio:configuration:)","title":"func configuration(audio: UInt8, configuration: (AudioDeviceUnit) throws -> Void) throws"},{"path":"\/documentation\/haishinkit\/mediamixer\/configuration(video:configuration:)","type":"method","title":"func configuration(video: UInt8, configuration: (VideoDeviceUnit) throws -> Void) throws"},{"type":"method","path":"\/documentation\/haishinkit\/mediamixer\/removeoutput(_:)","title":"func removeOutput(some MediaMixerOutput)"},{"path":"\/documentation\/haishinkit\/mediamixer\/setaudiomixersettings(_:)","title":"func setAudioMixerSettings(AudioMixerSettings)","type":"method"},{"title":"func setFrameRate(Float64)","path":"\/documentation\/haishinkit\/mediamixer\/setframerate(_:)","type":"method"},{"path":"\/documentation\/haishinkit\/mediamixer\/setmonitoringenabled(_:)","title":"func setMonitoringEnabled(Bool)","type":"method"},{"title":"func setSessionPreset(AVCaptureSession.Preset)","path":"\/documentation\/haishinkit\/mediamixer\/setsessionpreset(_:)","type":"method"},{"path":"\/documentation\/haishinkit\/mediamixer\/settorchenabled(_:)","title":"func setTorchEnabled(Bool)","type":"method"},{"path":"\/documentation\/haishinkit\/mediamixer\/setvideomixersettings(_:)","type":"method","title":"func setVideoMixerSettings(VideoMixerSettings)"},{"path":"\/documentation\/haishinkit\/mediamixer\/setvideoorientation(_:)","type":"method","title":"func setVideoOrientation(AVCaptureVideoOrientation)"},{"title":"func startCapturing()","type":"method","path":"\/documentation\/haishinkit\/mediamixer\/startcapturing()"},{"title":"func stopCapturing()","path":"\/documentation\/haishinkit\/mediamixer\/stopcapturing()","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case deviceNotFound","type":"case","path":"\/documentation\/haishinkit\/mediamixer\/error\/devicenotfound"},{"type":"case","title":"case failedToAttach(any Error)","path":"\/documentation\/haishinkit\/mediamixer\/error\/failedtoattach(_:)"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Error Implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var localizedDescription: String","path":"\/documentation\/haishinkit\/mediamixer\/error\/localizeddescription","type":"property"}],"path":"\/documentation\/haishinkit\/mediamixer\/error\/error-implementations","type":"symbol"}],"type":"enum","title":"MediaMixer.Error","path":"\/documentation\/haishinkit\/mediamixer\/error"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/haishinkit\/mediamixer\/actor-implementations","children":[{"type":"groupMarker","title":"Instance Methods"},{"title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/haishinkit\/mediamixer\/assertisolated(_:file:line:)","type":"method"},{"type":"method","path":"\/documentation\/haishinkit\/mediamixer\/assumeisolated(_:file:line:)","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T"},{"type":"method","path":"\/documentation\/haishinkit\/mediamixer\/preconditionisolated(_:file:line:)","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)"}],"title":"Actor Implementations","type":"symbol"},{"type":"symbol","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func startRunning()","path":"\/documentation\/haishinkit\/mediamixer\/startrunning()","type":"method"},{"type":"method","title":"func stopRunning()","path":"\/documentation\/haishinkit\/mediamixer\/stoprunning()"}],"title":"AsyncRunner Implementations","path":"\/documentation\/haishinkit\/mediamixer\/asyncrunner-implementations"}],"title":"MediaMixer","path":"\/documentation\/haishinkit\/mediamixer"},{"title":"NetworkMonitor","path":"\/documentation\/haishinkit\/networkmonitor","type":"class","children":[{"type":"groupMarker","title":"Initializers"},{"title":"init(some NetworkTransportReporter)","path":"\/documentation\/haishinkit\/networkmonitor\/init(_:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/networkmonitor\/event","title":"var event: AsyncStream<NetworkMonitorEvent>","type":"property"},{"type":"property","title":"var isRunning: Bool","path":"\/documentation\/haishinkit\/networkmonitor\/isrunning"},{"title":"Enumerations","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/networkmonitor\/error","type":"enum","title":"NetworkMonitor.Error","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case invalidState","path":"\/documentation\/haishinkit\/networkmonitor\/error\/invalidstate","type":"case"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/haishinkit\/networkmonitor\/error\/equatable-implementations","type":"symbol","title":"Equatable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/networkmonitor\/error\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}]},{"title":"Error Implementations","path":"\/documentation\/haishinkit\/networkmonitor\/error\/error-implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"type":"property","title":"var localizedDescription: String","path":"\/documentation\/haishinkit\/networkmonitor\/error\/localizeddescription"}],"type":"symbol"}]},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/haishinkit\/networkmonitor\/actor-implementations","type":"symbol","title":"Actor Implementations","children":[{"type":"groupMarker","title":"Instance Methods"},{"title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/haishinkit\/networkmonitor\/assertisolated(_:file:line:)","type":"method"},{"title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","path":"\/documentation\/haishinkit\/networkmonitor\/assumeisolated(_:file:line:)","type":"method"},{"type":"method","path":"\/documentation\/haishinkit\/networkmonitor\/preconditionisolated(_:file:line:)","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)"}]},{"type":"symbol","title":"AsyncRunner Implementations","path":"\/documentation\/haishinkit\/networkmonitor\/asyncrunner-implementations","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/haishinkit\/networkmonitor\/startrunning()","title":"func startRunning()"},{"type":"method","path":"\/documentation\/haishinkit\/networkmonitor\/stoprunning()","title":"func stopRunning()"}]}]},{"title":"PiPHKView","path":"\/documentation\/haishinkit\/piphkview","type":"class","children":[{"type":"groupMarker","title":"Initializers"},{"title":"init?(coder: NSCoder)","type":"init","path":"\/documentation\/haishinkit\/piphkview\/init(coder:)"},{"path":"\/documentation\/haishinkit\/piphkview\/init(frame:)","title":"init(frame: CGRect)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"type":"property","title":"var audioTrackId: UInt8?","path":"\/documentation\/haishinkit\/piphkview\/audiotrackid"},{"path":"\/documentation\/haishinkit\/piphkview\/videogravity","title":"var videoGravity: AVLayerVideoGravity","type":"property"},{"type":"property","path":"\/documentation\/haishinkit\/piphkview\/videotrackid","title":"var videoTrackId: UInt8?"},{"title":"Instance Methods","type":"groupMarker"},{"type":"method","title":"func awakeFromNib()","path":"\/documentation\/haishinkit\/piphkview\/awakefromnib()"},{"title":"Type Properties","type":"groupMarker"},{"title":"static var defaultBackgroundColor: NSColor","path":"\/documentation\/haishinkit\/piphkview\/defaultbackgroundcolor","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/piphkview\/hkstreamoutput-implementations","title":"HKStreamOutput Implementations","type":"symbol","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func stream(some HKStream, didOutput: CMSampleBuffer)","type":"method","path":"\/documentation\/haishinkit\/piphkview\/stream(_:didoutput:)"},{"type":"method","title":"func stream(some HKStream, didOutput: AVAudioBuffer, when: AVAudioTime)","path":"\/documentation\/haishinkit\/piphkview\/stream(_:didoutput:when:)"}]},{"title":"MediaMixerOutput Implementations","path":"\/documentation\/haishinkit\/piphkview\/mediamixeroutput-implementations","type":"symbol","children":[{"title":"Instance Methods","type":"groupMarker"},{"type":"method","title":"func mixer(MediaMixer, didOutput: CMSampleBuffer)","path":"\/documentation\/haishinkit\/piphkview\/mixer(_:didoutput:)"},{"title":"func mixer(MediaMixer, didOutput: AVAudioPCMBuffer, when: AVAudioTime)","path":"\/documentation\/haishinkit\/piphkview\/mixer(_:didoutput:when:)","type":"method"},{"title":"func selectTrack(UInt8?, mediaType: CMFormatDescription.MediaType) async","type":"method","path":"\/documentation\/haishinkit\/piphkview\/selecttrack(_:mediatype:)"}]}]},{"title":"RTMPConnection","type":"class","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(swfUrl: String?, pageUrl: String?, flashVer: String, timeout: Int, requestTimeout: UInt64, chunkSize: Int, qualityOfService: DispatchQoS)","type":"init","path":"\/documentation\/haishinkit\/rtmpconnection\/init(swfurl:pageurl:flashver:timeout:requesttimeout:chunksize:qualityofservice:)"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/chunksize","title":"let chunkSize: Int","type":"property"},{"title":"var connected: Bool","type":"property","path":"\/documentation\/haishinkit\/rtmpconnection\/connected"},{"title":"let flashVer: String","type":"property","path":"\/documentation\/haishinkit\/rtmpconnection\/flashver"},{"type":"property","title":"let objectEncoding: RTMPObjectEncoding","path":"\/documentation\/haishinkit\/rtmpconnection\/objectencoding"},{"type":"property","path":"\/documentation\/haishinkit\/rtmpconnection\/pageurl","title":"let pageUrl: String?"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/qualityofservice","title":"let qualityOfService: DispatchQoS","type":"property"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/requesttimeout","title":"let requestTimeout: UInt64","type":"property"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/status","type":"property","title":"var status: AsyncStream<RTMPStatus>"},{"title":"let swfUrl: String?","type":"property","path":"\/documentation\/haishinkit\/rtmpconnection\/swfurl"},{"title":"let timeout: Int","type":"property","path":"\/documentation\/haishinkit\/rtmpconnection\/timeout"},{"title":"var uri: URL?","type":"property","path":"\/documentation\/haishinkit\/rtmpconnection\/uri"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/call(_:arguments:)","type":"method","title":"func call(String, arguments: (any Sendable)?...) async throws -> RTMPResponse"},{"title":"func close() async throws","path":"\/documentation\/haishinkit\/rtmpconnection\/close()","type":"method"},{"title":"func connect(String, arguments: (any Sendable)?...) async throws -> RTMPResponse","path":"\/documentation\/haishinkit\/rtmpconnection\/connect(_:arguments:)","type":"method"},{"type":"groupMarker","title":"Type Properties"},{"title":"static let defaultCapabilities: Int","path":"\/documentation\/haishinkit\/rtmpconnection\/defaultcapabilities","type":"property"},{"type":"property","title":"static let defaultChunkSizeS: Int","path":"\/documentation\/haishinkit\/rtmpconnection\/defaultchunksizes"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/defaultflashver","type":"property","title":"static let defaultFlashVer: String"},{"type":"property","path":"\/documentation\/haishinkit\/rtmpconnection\/defaultobjectencoding","title":"static let defaultObjectEncoding: RTMPObjectEncoding"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/defaultport","type":"property","title":"static let defaultPort: Int"},{"type":"property","path":"\/documentation\/haishinkit\/rtmpconnection\/defaultrequesttimeout","title":"static let defaultRequestTimeout: UInt64"},{"type":"property","title":"static let defaultSecurePort: Int","path":"\/documentation\/haishinkit\/rtmpconnection\/defaultsecureport"},{"title":"static let defaultTimeout: Int","path":"\/documentation\/haishinkit\/rtmpconnection\/defaulttimeout","type":"property"},{"type":"property","title":"static let defaultWindowSizeS: Int64","path":"\/documentation\/haishinkit\/rtmpconnection\/defaultwindowsizes"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/supportedfourcclist","type":"property","title":"static let supportedFourCcList: [String]"},{"type":"property","title":"static let supportedProtocols: Set<String>","path":"\/documentation\/haishinkit\/rtmpconnection\/supportedprotocols"},{"type":"groupMarker","title":"Enumerations"},{"title":"RTMPConnection.Code","type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/code\/callbadversion","title":"case callBadVersion","type":"case"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/code\/callfailed","type":"case","title":"case callFailed"},{"title":"case callProhibited","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/callprohibited","type":"case"},{"type":"case","title":"case connectAppshutdown","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/connectappshutdown"},{"title":"case connectClosed","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/connectclosed","type":"case"},{"type":"case","title":"case connectFailed","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/connectfailed"},{"title":"case connectIdleTimeOut","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/connectidletimeout","type":"case"},{"type":"case","title":"case connectInvalidApp","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/connectinvalidapp"},{"title":"case connectNetworkChange","type":"case","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/connectnetworkchange"},{"title":"case connectRejected","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/connectrejected","type":"case"},{"type":"case","title":"case connectSuccess","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/connectsuccess"},{"type":"groupMarker","title":"Initializers"},{"title":"init?(rawValue: String)","type":"init","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/init(rawvalue:)"},{"type":"groupMarker","title":"Instance Properties"},{"title":"var level: String","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/level","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"type":"op","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"}],"title":"Equatable Implementations","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/equatable-implementations","type":"symbol"},{"title":"RawRepresentable Implementations","type":"symbol","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/rawrepresentable-implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var hashValue: Int","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/hashvalue"},{"title":"Instance Methods","type":"groupMarker"},{"type":"method","title":"func hash(into: inout Hasher)","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/hash(into:)"}]}],"path":"\/documentation\/haishinkit\/rtmpconnection\/code"},{"title":"RTMPConnection.Error","type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/error\/connectiontimedout","type":"case","title":"case connectionTimedOut"},{"type":"case","title":"case invalidState","path":"\/documentation\/haishinkit\/rtmpconnection\/error\/invalidstate"},{"title":"case requestFailed(response: RTMPResponse)","type":"case","path":"\/documentation\/haishinkit\/rtmpconnection\/error\/requestfailed(response:)"},{"type":"case","title":"case requestTimedOut","path":"\/documentation\/haishinkit\/rtmpconnection\/error\/requesttimedout"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/error\/socketerroroccurred(_:)","title":"case socketErrorOccurred(any Error)","type":"case"},{"title":"case unsupportedCommand(String)","path":"\/documentation\/haishinkit\/rtmpconnection\/error\/unsupportedcommand(_:)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Error Implementations","path":"\/documentation\/haishinkit\/rtmpconnection\/error\/error-implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"type":"property","title":"var localizedDescription: String","path":"\/documentation\/haishinkit\/rtmpconnection\/error\/localizeddescription"}],"type":"symbol"}],"path":"\/documentation\/haishinkit\/rtmpconnection\/error"},{"title":"Default Implementations","type":"groupMarker"},{"type":"symbol","path":"\/documentation\/haishinkit\/rtmpconnection\/actor-implementations","title":"Actor Implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/haishinkit\/rtmpconnection\/assertisolated(_:file:line:)","type":"method"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/assumeisolated(_:file:line:)","type":"method","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T"},{"title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method","path":"\/documentation\/haishinkit\/rtmpconnection\/preconditionisolated(_:file:line:)"}]}],"path":"\/documentation\/haishinkit\/rtmpconnection"},{"title":"RTMPSharedObject","path":"\/documentation\/haishinkit\/rtmpsharedobject","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var data: AMFObject","path":"\/documentation\/haishinkit\/rtmpsharedobject\/data","type":"property"},{"type":"property","title":"let objectEncoding: RTMPObjectEncoding","path":"\/documentation\/haishinkit\/rtmpsharedobject\/objectencoding"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/rtmpsharedobject\/clear()","title":"func clear() async","type":"method"},{"type":"method","path":"\/documentation\/haishinkit\/rtmpsharedobject\/close()","title":"func close() async"},{"type":"method","title":"func connect(RTMPConnection) async","path":"\/documentation\/haishinkit\/rtmpsharedobject\/connect(_:)"},{"title":"func setProperty(String, (any Sendable)?) async","path":"\/documentation\/haishinkit\/rtmpsharedobject\/setproperty(_:_:)","type":"method"},{"type":"groupMarker","title":"Type Methods"},{"type":"method","path":"\/documentation\/haishinkit\/rtmpsharedobject\/getremote(withname:remotepath:persistence:)","title":"static func getRemote(withName: String, remotePath: String, persistence: Bool) -> RTMPSharedObject"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"type":"method","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/haishinkit\/rtmpsharedobject\/assertisolated(_:file:line:)"},{"type":"method","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","path":"\/documentation\/haishinkit\/rtmpsharedobject\/assumeisolated(_:file:line:)"},{"title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/haishinkit\/rtmpsharedobject\/preconditionisolated(_:file:line:)","type":"method"}],"type":"symbol","path":"\/documentation\/haishinkit\/rtmpsharedobject\/actor-implementations","title":"Actor Implementations"}],"type":"class"},{"children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/haishinkit\/rtmpstream\/init(connection:fcpublishname:)","title":"init(connection: RTMPConnection, fcPublishName: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var audioSampleAccess: Bool","path":"\/documentation\/haishinkit\/rtmpstream\/audiosampleaccess","type":"property"},{"path":"\/documentation\/haishinkit\/rtmpstream\/audiotrackid","type":"property","title":"var audioTrackId: UInt8?"},{"path":"\/documentation\/haishinkit\/rtmpstream\/currentfps","type":"property","title":"var currentFPS: UInt16"},{"path":"\/documentation\/haishinkit\/rtmpstream\/fcpublishname","title":"var fcPublishName: String?","type":"property"},{"title":"var info: RTMPStreamInfo","type":"property","path":"\/documentation\/haishinkit\/rtmpstream\/info"},{"type":"property","title":"var metadata: AMFArray","path":"\/documentation\/haishinkit\/rtmpstream\/metadata"},{"title":"var objectEncoding: RTMPObjectEncoding","path":"\/documentation\/haishinkit\/rtmpstream\/objectencoding","type":"property"},{"title":"var readyState: HKStreamReadyState","type":"property","path":"\/documentation\/haishinkit\/rtmpstream\/readystate"},{"title":"var status: AsyncStream<RTMPStatus>","path":"\/documentation\/haishinkit\/rtmpstream\/status","type":"property"},{"path":"\/documentation\/haishinkit\/rtmpstream\/videosampleaccess","title":"var videoSampleAccess: Bool","type":"property"},{"type":"property","title":"var videoTrackId: UInt8?","path":"\/documentation\/haishinkit\/rtmpstream\/videotrackid"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/rtmpstream\/close()","type":"method","title":"func close() async throws -> RTMPResponse"},{"title":"func pause(Bool) async throws -> RTMPResponse","path":"\/documentation\/haishinkit\/rtmpstream\/pause(_:)","type":"method"},{"type":"method","title":"func play((any Sendable)?...) async throws -> RTMPResponse","path":"\/documentation\/haishinkit\/rtmpstream\/play(_:)"},{"path":"\/documentation\/haishinkit\/rtmpstream\/publish(_:type:)","title":"func publish(String?, type: RTMPStream.HowToPublish) async throws -> RTMPResponse","type":"method"},{"title":"func receiveAudio(Bool) async throws","path":"\/documentation\/haishinkit\/rtmpstream\/receiveaudio(_:)","type":"method"},{"path":"\/documentation\/haishinkit\/rtmpstream\/receivevideo(_:)","title":"func receiveVideo(Bool) async throws","type":"method"},{"title":"func seek(Double) async throws","path":"\/documentation\/haishinkit\/rtmpstream\/seek(_:)","type":"method"},{"title":"func send(String, arguments: (any Sendable)?..., isResetTimestamp: Bool) throws","path":"\/documentation\/haishinkit\/rtmpstream\/send(_:arguments:isresettimestamp:)","type":"method"},{"path":"\/documentation\/haishinkit\/rtmpstream\/togglepause()","type":"method","title":"func togglePause() async throws -> RTMPResponse"},{"type":"groupMarker","title":"Enumerations"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code","title":"RTMPStream.Code","type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/code\/bufferempty","title":"case bufferEmpty"},{"type":"case","title":"case bufferFlush","path":"\/documentation\/haishinkit\/rtmpstream\/code\/bufferflush"},{"title":"case bufferFull","type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/code\/bufferfull"},{"title":"case connectClosed","type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/code\/connectclosed"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/connectfailed","type":"case","title":"case connectFailed"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/connectrejected","title":"case connectRejected","type":"case"},{"type":"case","title":"case connectSuccess","path":"\/documentation\/haishinkit\/rtmpstream\/code\/connectsuccess"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/drmupdateneeded","type":"case","title":"case drmUpdateNeeded"},{"title":"case failed","path":"\/documentation\/haishinkit\/rtmpstream\/code\/failed","type":"case"},{"title":"case multicastStreamReset","type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/code\/multicaststreamreset"},{"type":"case","title":"case pauseNotify","path":"\/documentation\/haishinkit\/rtmpstream\/code\/pausenotify"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/playfailed","title":"case playFailed","type":"case"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/playfilestructureinvalid","type":"case","title":"case playFileStructureInvalid"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/playinsufficientbw","type":"case","title":"case playInsufficientBW"},{"type":"case","title":"case playNoSupportedTrackFound","path":"\/documentation\/haishinkit\/rtmpstream\/code\/playnosupportedtrackfound"},{"type":"case","title":"case playReset","path":"\/documentation\/haishinkit\/rtmpstream\/code\/playreset"},{"title":"case playStart","path":"\/documentation\/haishinkit\/rtmpstream\/code\/playstart","type":"case"},{"title":"case playStop","type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/code\/playstop"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/playstreamnotfound","title":"case playStreamNotFound","type":"case"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/playtransition","type":"case","title":"case playTransition"},{"type":"case","title":"case playUnpublishNotify","path":"\/documentation\/haishinkit\/rtmpstream\/code\/playunpublishnotify"},{"title":"case publishBadName","type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/code\/publishbadname"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/publishidle","title":"case publishIdle","type":"case"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/publishstart","type":"case","title":"case publishStart"},{"type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/code\/recordalreadyexists","title":"case recordAlreadyExists"},{"type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/code\/recorddiskquotaexceeded","title":"case recordDiskQuotaExceeded"},{"title":"case recordFailed","path":"\/documentation\/haishinkit\/rtmpstream\/code\/recordfailed","type":"case"},{"title":"case recordNoAccess","type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/code\/recordnoaccess"},{"title":"case recordStart","path":"\/documentation\/haishinkit\/rtmpstream\/code\/recordstart","type":"case"},{"title":"case recordStop","type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/code\/recordstop"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/secondscreenstart","type":"case","title":"case secondScreenStart"},{"type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/code\/secondscreenstop","title":"case secondScreenStop"},{"title":"case seekFailed","path":"\/documentation\/haishinkit\/rtmpstream\/code\/seekfailed","type":"case"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/seekinvalidtime","title":"case seekInvalidTime","type":"case"},{"title":"case seekNotify","path":"\/documentation\/haishinkit\/rtmpstream\/code\/seeknotify","type":"case"},{"type":"case","title":"case stepNotify","path":"\/documentation\/haishinkit\/rtmpstream\/code\/stepnotify"},{"title":"case unpauseNotify","type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/code\/unpausenotify"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/unpublishsuccess","type":"case","title":"case unpublishSuccess"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/videodimensionchange","title":"case videoDimensionChange","type":"case"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: String)","path":"\/documentation\/haishinkit\/rtmpstream\/code\/init(rawvalue:)","type":"init"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/level","title":"var level: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","type":"symbol","path":"\/documentation\/haishinkit\/rtmpstream\/code\/equatable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}]},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","type":"property","path":"\/documentation\/haishinkit\/rtmpstream\/code\/hashvalue"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/haishinkit\/rtmpstream\/code\/hash(into:)","title":"func hash(into: inout Hasher)"}]}]},{"path":"\/documentation\/haishinkit\/rtmpstream\/error","title":"RTMPStream.Error","type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"title":"case invalidState","path":"\/documentation\/haishinkit\/rtmpstream\/error\/invalidstate","type":"case"},{"title":"case requestFailed(response: RTMPResponse)","path":"\/documentation\/haishinkit\/rtmpstream\/error\/requestfailed(response:)","type":"case"},{"type":"case","title":"case requestTimedOut","path":"\/documentation\/haishinkit\/rtmpstream\/error\/requesttimedout"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"title":"var localizedDescription: String","type":"property","path":"\/documentation\/haishinkit\/rtmpstream\/error\/localizeddescription"}],"path":"\/documentation\/haishinkit\/rtmpstream\/error\/error-implementations","title":"Error Implementations","type":"symbol"}]},{"title":"RTMPStream.HowToPublish","type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"type":"case","title":"case append","path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish\/append"},{"path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish\/appendwithgap","type":"case","title":"case appendWithGap"},{"path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish\/live","title":"case live","type":"case"},{"path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish\/record","type":"case","title":"case record"},{"title":"Initializers","type":"groupMarker"},{"type":"init","title":"init?(rawValue: String)","path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish\/init(rawvalue:)"},{"title":"Default Implementations","type":"groupMarker"},{"type":"symbol","title":"Equatable Implementations","path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish\/equatable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}]},{"type":"symbol","path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish\/rawrepresentable-implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"title":"RawRepresentable Implementations"}],"path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish"},{"title":"Default Implementations","type":"groupMarker"},{"type":"symbol","title":"Actor Implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/rtmpstream\/assertisolated(_:file:line:)","type":"method","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)"},{"type":"method","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","path":"\/documentation\/haishinkit\/rtmpstream\/assumeisolated(_:file:line:)"},{"title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method","path":"\/documentation\/haishinkit\/rtmpstream\/preconditionisolated(_:file:line:)"}],"path":"\/documentation\/haishinkit\/rtmpstream\/actor-implementations"},{"type":"symbol","title":"HKStream Implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"type":"property","title":"var audioSettings: AudioCodecSettings","path":"\/documentation\/haishinkit\/rtmpstream\/audiosettings"},{"type":"property","title":"var soundTransform: SoundTransform?","path":"\/documentation\/haishinkit\/rtmpstream\/soundtransform"},{"title":"var videoSettings: VideoCodecSettings","type":"property","path":"\/documentation\/haishinkit\/rtmpstream\/videosettings"},{"title":"Instance Methods","type":"groupMarker"},{"type":"method","title":"func addOutput(some HKStreamOutput)","path":"\/documentation\/haishinkit\/rtmpstream\/addoutput(_:)"},{"type":"method","title":"func append(CMSampleBuffer)","path":"\/documentation\/haishinkit\/rtmpstream\/append(_:)"},{"path":"\/documentation\/haishinkit\/rtmpstream\/append(_:when:)","type":"method","title":"func append(AVAudioBuffer, when: AVAudioTime)"},{"title":"func attachAudioPlayer(AudioPlayer?) async","path":"\/documentation\/haishinkit\/rtmpstream\/attachaudioplayer(_:)","type":"method"},{"type":"method","title":"func dispatch(NetworkMonitorEvent) async","path":"\/documentation\/haishinkit\/rtmpstream\/dispatch(_:)"},{"type":"method","title":"func removeOutput(some HKStreamOutput)","path":"\/documentation\/haishinkit\/rtmpstream\/removeoutput(_:)"},{"path":"\/documentation\/haishinkit\/rtmpstream\/setaudiosettings(_:)","title":"func setAudioSettings(AudioCodecSettings)","type":"method"},{"path":"\/documentation\/haishinkit\/rtmpstream\/setbitratestorategy(_:)","type":"method","title":"func setBitrateStorategy((some HKStreamBitRateStrategy)?)"},{"type":"method","title":"func setSoundTransform(SoundTransform) async","path":"\/documentation\/haishinkit\/rtmpstream\/setsoundtransform(_:)"},{"path":"\/documentation\/haishinkit\/rtmpstream\/setvideoinputbuffercounts(_:)","title":"func setVideoInputBufferCounts(Int)","type":"method"},{"type":"method","path":"\/documentation\/haishinkit\/rtmpstream\/setvideosettings(_:)","title":"func setVideoSettings(VideoCodecSettings)"}],"path":"\/documentation\/haishinkit\/rtmpstream\/hkstream-implementations"},{"title":"MediaMixerOutput Implementations","children":[{"type":"groupMarker","title":"Instance Methods"},{"title":"func mixer(MediaMixer, didOutput: CMSampleBuffer)","type":"method","path":"\/documentation\/haishinkit\/rtmpstream\/mixer(_:didoutput:)"},{"path":"\/documentation\/haishinkit\/rtmpstream\/mixer(_:didoutput:when:)","title":"func mixer(MediaMixer, didOutput: AVAudioPCMBuffer, when: AVAudioTime)","type":"method"},{"type":"method","path":"\/documentation\/haishinkit\/rtmpstream\/selecttrack(_:mediatype:)","title":"func selectTrack(UInt8?, mediaType: CMFormatDescription.MediaType)"}],"type":"symbol","path":"\/documentation\/haishinkit\/rtmpstream\/mediamixeroutput-implementations"}],"title":"RTMPStream","type":"class","path":"\/documentation\/haishinkit\/rtmpstream"},{"type":"class","title":"Screen","path":"\/documentation\/haishinkit\/screen","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init()","path":"\/documentation\/haishinkit\/screen\/init()"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/screen\/backgroundcolor","title":"var backgroundColor: CGColor","type":"property"},{"title":"var childCounts: Int","path":"\/documentation\/haishinkit\/screen\/childcounts","type":"property"},{"path":"\/documentation\/haishinkit\/screen\/delegate","type":"property","title":"var delegate: (any ScreenDelegate)?"},{"title":"var size: CGSize","path":"\/documentation\/haishinkit\/screen\/size-swift.property","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"type":"method","path":"\/documentation\/haishinkit\/screen\/addchild(_:)","title":"func addChild(ScreenObject?) throws"},{"title":"func registerVideoEffect(some VideoEffect) -> Bool","path":"\/documentation\/haishinkit\/screen\/registervideoeffect(_:)","type":"method"},{"path":"\/documentation\/haishinkit\/screen\/removechild(_:)","title":"func removeChild(ScreenObject?)","type":"method"},{"title":"func unregisterVideoEffect(some VideoEffect) -> Bool","path":"\/documentation\/haishinkit\/screen\/unregistervideoeffect(_:)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"type":"property","title":"static let size: CGSize","path":"\/documentation\/haishinkit\/screen\/size-swift.type.property"}]},{"path":"\/documentation\/haishinkit\/screenactor","title":"ScreenActor","children":[{"type":"groupMarker","title":"Type Properties"},{"path":"\/documentation\/haishinkit\/screenactor\/shared","title":"static let shared: ScreenActor","type":"property"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","path":"\/documentation\/haishinkit\/screenactor\/actor-implementations","children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/screenactor\/assertisolated(_:file:line:)","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method"},{"type":"method","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","path":"\/documentation\/haishinkit\/screenactor\/assumeisolated(_:file:line:)"},{"title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method","path":"\/documentation\/haishinkit\/screenactor\/preconditionisolated(_:file:line:)"}],"title":"Actor Implementations"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"title":"static var sharedUnownedExecutor: UnownedSerialExecutor","path":"\/documentation\/haishinkit\/screenactor\/sharedunownedexecutor","type":"property"}],"path":"\/documentation\/haishinkit\/screenactor\/globalactor-implementations","title":"GlobalActor Implementations","type":"symbol"}],"type":"class"},{"type":"class","path":"\/documentation\/haishinkit\/screenobject","children":[{"type":"groupMarker","title":"Initializers"},{"title":"init()","type":"init","path":"\/documentation\/haishinkit\/screenobject\/init()"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/screenobject\/bounds","type":"property","title":"var bounds: CGRect"},{"path":"\/documentation\/haishinkit\/screenobject\/cornerradius","title":"var cornerRadius: CGFloat","type":"property"},{"title":"var horizontalAlignment: ScreenObject.HorizontalAlignment","path":"\/documentation\/haishinkit\/screenobject\/horizontalalignment-swift.property","type":"property"},{"type":"property","title":"var isVisible: Bool","path":"\/documentation\/haishinkit\/screenobject\/isvisible"},{"path":"\/documentation\/haishinkit\/screenobject\/layoutmargin","type":"property","title":"var layoutMargin: NSEdgeInsets"},{"title":"var parent: ScreenObjectContainer?","type":"property","path":"\/documentation\/haishinkit\/screenobject\/parent"},{"title":"var size: CGSize","type":"property","path":"\/documentation\/haishinkit\/screenobject\/size"},{"path":"\/documentation\/haishinkit\/screenobject\/verticalalignment-swift.property","title":"var verticalAlignment: ScreenObject.VerticalAlignment","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/screenobject\/invalidatelayout()","type":"method","title":"func invalidateLayout()"},{"path":"\/documentation\/haishinkit\/screenobject\/makebounds(_:)","title":"func makeBounds(CGSize) -> CGRect","type":"method"},{"path":"\/documentation\/haishinkit\/screenobject\/makeimage(_:)","type":"method","title":"func makeImage(some ScreenRenderer) -> CGImage?"},{"type":"groupMarker","title":"Enumerations"},{"path":"\/documentation\/haishinkit\/screenobject\/horizontalalignment-swift.enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case center","type":"case","path":"\/documentation\/haishinkit\/screenobject\/horizontalalignment-swift.enum\/center"},{"title":"case left","type":"case","path":"\/documentation\/haishinkit\/screenobject\/horizontalalignment-swift.enum\/left"},{"title":"case right","path":"\/documentation\/haishinkit\/screenobject\/horizontalalignment-swift.enum\/right","type":"case"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/haishinkit\/screenobject\/horizontalalignment-swift.enum\/equatable-implementations","type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/screenobject\/horizontalalignment-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"title":"Equatable Implementations"}],"title":"ScreenObject.HorizontalAlignment","type":"enum"},{"title":"ScreenObject.VerticalAlignment","path":"\/documentation\/haishinkit\/screenobject\/verticalalignment-swift.enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/screenobject\/verticalalignment-swift.enum\/bottom","title":"case bottom","type":"case"},{"path":"\/documentation\/haishinkit\/screenobject\/verticalalignment-swift.enum\/middle","type":"case","title":"case middle"},{"type":"case","path":"\/documentation\/haishinkit\/screenobject\/verticalalignment-swift.enum\/top","title":"case top"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/haishinkit\/screenobject\/verticalalignment-swift.enum\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}],"title":"Equatable Implementations","type":"symbol","path":"\/documentation\/haishinkit\/screenobject\/verticalalignment-swift.enum\/equatable-implementations"}],"type":"enum"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"title":"Operators","type":"groupMarker"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/haishinkit\/screenobject\/!=(_:_:)"},{"title":"static func == (ScreenObject, ScreenObject) -> Bool","path":"\/documentation\/haishinkit\/screenobject\/==(_:_:)","type":"op"}],"path":"\/documentation\/haishinkit\/screenobject\/equatable-implementations","type":"symbol","title":"Equatable Implementations"},{"type":"symbol","title":"Hashable Implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"type":"method","path":"\/documentation\/haishinkit\/screenobject\/hash(into:)","title":"func hash(into: inout Hasher)"}],"path":"\/documentation\/haishinkit\/screenobject\/hashable-implementations"}],"title":"ScreenObject"},{"type":"class","path":"\/documentation\/haishinkit\/screenobjectcontainer","title":"ScreenObjectContainer","children":[{"type":"groupMarker","title":"Instance Properties"},{"title":"var childCounts: Int","type":"property","path":"\/documentation\/haishinkit\/screenobjectcontainer\/childcounts"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/screenobjectcontainer\/addchild(_:)","title":"func addChild(ScreenObject?) throws","type":"method"},{"title":"func removeChild(ScreenObject?)","type":"method","path":"\/documentation\/haishinkit\/screenobjectcontainer\/removechild(_:)"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Enumeration Cases"},{"title":"case alreadyExists","path":"\/documentation\/haishinkit\/screenobjectcontainer\/error\/alreadyexists","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/screenobjectcontainer\/error\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}],"path":"\/documentation\/haishinkit\/screenobjectcontainer\/error\/equatable-implementations","type":"symbol"},{"path":"\/documentation\/haishinkit\/screenobjectcontainer\/error\/error-implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/screenobjectcontainer\/error\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"type":"symbol","title":"Error Implementations"}],"path":"\/documentation\/haishinkit\/screenobjectcontainer\/error","title":"ScreenObjectContainer.Error","type":"enum"}]},{"type":"class","title":"StreamScreenObject","path":"\/documentation\/haishinkit\/streamscreenobject","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var chromaKeyColor: CGColor?","path":"\/documentation\/haishinkit\/streamscreenobject\/chromakeycolor"},{"path":"\/documentation\/haishinkit\/streamscreenobject\/videogravity","title":"var videoGravity: AVLayerVideoGravity","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/streamscreenobject\/makebounds(_:)","title":"func makeBounds(CGSize) -> CGRect","type":"method"},{"path":"\/documentation\/haishinkit\/streamscreenobject\/makeimage(_:)","title":"func makeImage(some ScreenRenderer) -> CGImage?","type":"method"},{"type":"groupMarker","title":"Default Implementations"},{"title":"HKStreamOutput Implementations","path":"\/documentation\/haishinkit\/streamscreenobject\/hkstreamoutput-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/streamscreenobject\/stream(_:didoutput:)","title":"func stream(some HKStream, didOutput: CMSampleBuffer)","type":"method"},{"title":"func stream(some HKStream, didOutput: AVAudioBuffer, when: AVAudioTime)","type":"method","path":"\/documentation\/haishinkit\/streamscreenobject\/stream(_:didoutput:when:)"}]}]},{"title":"TSReader","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/haishinkit\/tsreader\/init()","title":"init()","type":"init"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/haishinkit\/tsreader\/output","title":"var output: AsyncStream<(UInt16, CMSampleBuffer)>"},{"title":"Instance Methods","type":"groupMarker"},{"type":"method","title":"func clear()","path":"\/documentation\/haishinkit\/tsreader\/clear()"},{"path":"\/documentation\/haishinkit\/tsreader\/read(_:)","type":"method","title":"func read(Data) -> Int"}],"path":"\/documentation\/haishinkit\/tsreader","type":"class"},{"path":"\/documentation\/haishinkit\/tswriter","children":[{"type":"groupMarker","title":"Initializers"},{"title":"init(segmentDuration: Double)","path":"\/documentation\/haishinkit\/tswriter\/init(segmentduration:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"type":"property","title":"var audioFormat: AVAudioFormat?","path":"\/documentation\/haishinkit\/tswriter\/audioformat"},{"path":"\/documentation\/haishinkit\/tswriter\/expectedmedias","type":"property","title":"var expectedMedias: Set<AVMediaType>"},{"title":"var output: AsyncStream<Data>","type":"property","path":"\/documentation\/haishinkit\/tswriter\/output"},{"path":"\/documentation\/haishinkit\/tswriter\/videoformat","type":"property","title":"var videoFormat: CMFormatDescription?"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/tswriter\/append(_:)","title":"func append(CMSampleBuffer)","type":"method"},{"path":"\/documentation\/haishinkit\/tswriter\/append(_:when:)","title":"func append(AVAudioBuffer, when: AVAudioTime)","type":"method"},{"type":"method","title":"func clear()","path":"\/documentation\/haishinkit\/tswriter\/clear()"}],"title":"TSWriter","type":"class"},{"title":"TextScreenObject","path":"\/documentation\/haishinkit\/textscreenobject","type":"class","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/textscreenobject\/attributes","type":"property","title":"var attributes: [NSAttributedString.Key : Any]?"},{"title":"var bounds: CGRect","type":"property","path":"\/documentation\/haishinkit\/textscreenobject\/bounds"},{"path":"\/documentation\/haishinkit\/textscreenobject\/string","type":"property","title":"var string: String"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func makeBounds(CGSize) -> CGRect","path":"\/documentation\/haishinkit\/textscreenobject\/makebounds(_:)","type":"method"},{"title":"func makeImage(some ScreenRenderer) -> CGImage?","path":"\/documentation\/haishinkit\/textscreenobject\/makeimage(_:)","type":"method"}]},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"type":"property","path":"\/documentation\/haishinkit\/videodeviceunit\/colorformat-swift.property","title":"var colorFormat: OSType"},{"title":"var connection: AVCaptureConnection?","path":"\/documentation\/haishinkit\/videodeviceunit\/connection","type":"property"},{"path":"\/documentation\/haishinkit\/videodeviceunit\/device","title":"var device: AVCaptureDevice?","type":"property"},{"type":"property","title":"var input: AVCaptureInput?","path":"\/documentation\/haishinkit\/videodeviceunit\/input"},{"title":"var isVideoMirrored: Bool","type":"property","path":"\/documentation\/haishinkit\/videodeviceunit\/isvideomirrored"},{"title":"var output: VideoDeviceUnit.Output?","path":"\/documentation\/haishinkit\/videodeviceunit\/output-swift.property","type":"property"},{"title":"let track: UInt8","path":"\/documentation\/haishinkit\/videodeviceunit\/track","type":"property"},{"type":"property","title":"var videoOrientation: AVCaptureVideoOrientation","path":"\/documentation\/haishinkit\/videodeviceunit\/videoorientation"},{"title":"Type Aliases","type":"groupMarker"},{"type":"typealias","path":"\/documentation\/haishinkit\/videodeviceunit\/output-swift.typealias","title":"VideoDeviceUnit.Output"},{"title":"Type Properties","type":"groupMarker"},{"title":"static let colorFormat: OSType","path":"\/documentation\/haishinkit\/videodeviceunit\/colorformat-swift.type.property","type":"property"}],"title":"VideoDeviceUnit","path":"\/documentation\/haishinkit\/videodeviceunit","type":"class"},{"children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/haishinkit\/videorotator\/init()","title":"init?()","type":"init"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/videorotator\/rotate(buffer:)","title":"func rotate(buffer: CMSampleBuffer) -> Result<CMSampleBuffer, VideoRotator.Error>","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"title":"VideoRotator.Error","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"title":"case cannotAllocatePixelBuffer(CVReturn)","path":"\/documentation\/haishinkit\/videorotator\/error\/cannotallocatepixelbuffer(_:)","type":"case"},{"type":"case","title":"case noImageBuffer","path":"\/documentation\/haishinkit\/videorotator\/error\/noimagebuffer"},{"title":"case noOrientationInfo","path":"\/documentation\/haishinkit\/videorotator\/error\/noorientationinfo","type":"case"},{"title":"case rotationFailure(OSStatus)","type":"case","path":"\/documentation\/haishinkit\/videorotator\/error\/rotationfailure(_:)"},{"title":"case unsupportedOrientation","type":"case","path":"\/documentation\/haishinkit\/videorotator\/error\/unsupportedorientation"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","title":"Error Implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var localizedDescription: String","path":"\/documentation\/haishinkit\/videorotator\/error\/localizeddescription"}],"path":"\/documentation\/haishinkit\/videorotator\/error\/error-implementations"}],"type":"enum","path":"\/documentation\/haishinkit\/videorotator\/error"}],"type":"class","title":"VideoRotator","path":"\/documentation\/haishinkit\/videorotator"},{"children":[{"title":"Initializers","type":"groupMarker"},{"type":"init","path":"\/documentation\/haishinkit\/videotrackscreenobject\/init()","title":"init()"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/videotrackscreenobject\/chromakeycolor","type":"property","title":"var chromaKeyColor: CGColor?"},{"title":"var frameRate: Int","type":"property","path":"\/documentation\/haishinkit\/videotrackscreenobject\/framerate"},{"title":"var track: UInt8","path":"\/documentation\/haishinkit\/videotrackscreenobject\/track","type":"property"},{"type":"property","title":"var videoGravity: AVLayerVideoGravity","path":"\/documentation\/haishinkit\/videotrackscreenobject\/videogravity"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videotrackscreenobject\/draw(_:)","type":"method","title":"func draw(some ScreenRenderer)"},{"title":"func makeBounds(CGSize) -> CGRect","type":"method","path":"\/documentation\/haishinkit\/videotrackscreenobject\/makebounds(_:)"},{"title":"func makeImage(some ScreenRenderer) -> CGImage?","path":"\/documentation\/haishinkit\/videotrackscreenobject\/makeimage(_:)","type":"method"},{"type":"method","path":"\/documentation\/haishinkit\/videotrackscreenobject\/registervideoeffect(_:)","title":"func registerVideoEffect(some VideoEffect) -> Bool"},{"title":"func unregisterVideoEffect(some VideoEffect) -> Bool","path":"\/documentation\/haishinkit\/videotrackscreenobject\/unregistervideoeffect(_:)","type":"method"}],"path":"\/documentation\/haishinkit\/videotrackscreenobject","type":"class","title":"VideoTrackScreenObject"},{"type":"groupMarker","title":"Protocols"},{"type":"protocol","path":"\/documentation\/haishinkit\/asyncrunner","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var isRunning: Bool","path":"\/documentation\/haishinkit\/asyncrunner\/isrunning"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/asyncrunner\/startrunning()","title":"func startRunning() async","type":"method"},{"title":"func stopRunning() async","path":"\/documentation\/haishinkit\/asyncrunner\/stoprunning()","type":"method"}],"title":"AsyncRunner"},{"title":"ChromaKeyProcessable","children":[{"title":"Instance Properties","type":"groupMarker"},{"type":"property","title":"var chromaKeyColor: CGColor?","path":"\/documentation\/haishinkit\/chromakeyprocessable\/chromakeycolor"}],"path":"\/documentation\/haishinkit\/chromakeyprocessable","type":"protocol"},{"path":"\/documentation\/haishinkit\/hkstream","type":"protocol","title":"HKStream","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/hkstream\/audiosettings","type":"property","title":"var audioSettings: AudioCodecSettings"},{"type":"property","title":"var readyState: HKStreamReadyState","path":"\/documentation\/haishinkit\/hkstream\/readystate"},{"title":"var soundTransform: SoundTransform?","path":"\/documentation\/haishinkit\/hkstream\/soundtransform","type":"property"},{"path":"\/documentation\/haishinkit\/hkstream\/videosettings","title":"var videoSettings: VideoCodecSettings","type":"property"},{"type":"groupMarker","title":"Instance Methods"},{"title":"func addOutput(some HKStreamOutput)","path":"\/documentation\/haishinkit\/hkstream\/addoutput(_:)","type":"method"},{"type":"method","path":"\/documentation\/haishinkit\/hkstream\/append(_:)","title":"func append(CMSampleBuffer)"},{"title":"func append(AVAudioBuffer, when: AVAudioTime)","path":"\/documentation\/haishinkit\/hkstream\/append(_:when:)","type":"method"},{"title":"func attachAudioPlayer(AudioPlayer?) async","type":"method","path":"\/documentation\/haishinkit\/hkstream\/attachaudioplayer(_:)"},{"type":"method","title":"func dispatch(NetworkMonitorEvent) async","path":"\/documentation\/haishinkit\/hkstream\/dispatch(_:)"},{"path":"\/documentation\/haishinkit\/hkstream\/removeoutput(_:)","type":"method","title":"func removeOutput(some HKStreamOutput)"},{"type":"method","title":"func setAudioSettings(AudioCodecSettings)","path":"\/documentation\/haishinkit\/hkstream\/setaudiosettings(_:)"},{"type":"method","path":"\/documentation\/haishinkit\/hkstream\/setbitratestorategy(_:)","title":"func setBitrateStorategy((some HKStreamBitRateStrategy)?)"},{"path":"\/documentation\/haishinkit\/hkstream\/setsoundtransform(_:)","type":"method","title":"func setSoundTransform(SoundTransform) async"},{"title":"func setVideoInputBufferCounts(Int)","path":"\/documentation\/haishinkit\/hkstream\/setvideoinputbuffercounts(_:)","type":"method"},{"type":"method","path":"\/documentation\/haishinkit\/hkstream\/setvideosettings(_:)","title":"func setVideoSettings(VideoCodecSettings)"}]},{"type":"protocol","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var mamimumAudioBitRate: Int","path":"\/documentation\/haishinkit\/hkstreambitratestrategy\/mamimumaudiobitrate","type":"property"},{"type":"property","title":"var mamimumVideoBitRate: Int","path":"\/documentation\/haishinkit\/hkstreambitratestrategy\/mamimumvideobitrate"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func adjustBitrate(NetworkMonitorEvent, stream: some HKStream) async","path":"\/documentation\/haishinkit\/hkstreambitratestrategy\/adjustbitrate(_:stream:)"}],"path":"\/documentation\/haishinkit\/hkstreambitratestrategy","title":"HKStreamBitRateStrategy"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"type":"method","path":"\/documentation\/haishinkit\/hkstreamoutput\/stream(_:didoutput:)","title":"func stream(some HKStream, didOutput: CMSampleBuffer)"},{"path":"\/documentation\/haishinkit\/hkstreamoutput\/stream(_:didoutput:when:)","title":"func stream(some HKStream, didOutput: AVAudioBuffer, when: AVAudioTime)","type":"method"}],"title":"HKStreamOutput","path":"\/documentation\/haishinkit\/hkstreamoutput","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/mediamixeroutput\/audiotrackid","type":"property","title":"var audioTrackId: UInt8?"},{"type":"property","title":"var videoTrackId: UInt8?","path":"\/documentation\/haishinkit\/mediamixeroutput\/videotrackid"},{"title":"Instance Methods","type":"groupMarker"},{"type":"method","title":"func mixer(MediaMixer, didOutput: CMSampleBuffer)","path":"\/documentation\/haishinkit\/mediamixeroutput\/mixer(_:didoutput:)"},{"type":"method","title":"func mixer(MediaMixer, didOutput: AVAudioPCMBuffer, when: AVAudioTime)","path":"\/documentation\/haishinkit\/mediamixeroutput\/mixer(_:didoutput:when:)"},{"title":"func selectTrack(UInt8?, mediaType: CMFormatDescription.MediaType) async","type":"method","path":"\/documentation\/haishinkit\/mediamixeroutput\/selecttrack(_:mediatype:)"}],"path":"\/documentation\/haishinkit\/mediamixeroutput","title":"MediaMixerOutput","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"type":"property","title":"var connected: Bool","path":"\/documentation\/haishinkit\/networkconnection\/connected"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/networkconnection\/close()","title":"func close() async throws","type":"method"}],"title":"NetworkConnection","path":"\/documentation\/haishinkit\/networkconnection","type":"protocol"},{"path":"\/documentation\/haishinkit\/networktransportreporter","children":[{"title":"Instance Methods","type":"groupMarker"},{"type":"method","title":"func makeNetworkMonitor() async -> NetworkMonitor","path":"\/documentation\/haishinkit\/networktransportreporter\/makenetworkmonitor()"},{"path":"\/documentation\/haishinkit\/networktransportreporter\/makenetworktransportreport()","title":"func makeNetworkTransportReport() async -> NetworkTransportReport","type":"method"}],"title":"NetworkTransportReporter","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var isRunning: Bool","path":"\/documentation\/haishinkit\/runner\/isrunning","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func startRunning()","path":"\/documentation\/haishinkit\/runner\/startrunning()","type":"method"},{"title":"func stopRunning()","type":"method","path":"\/documentation\/haishinkit\/runner\/stoprunning()"}],"title":"Runner","type":"protocol","path":"\/documentation\/haishinkit\/runner"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func screen(Screen, willLayout: CMTime)","path":"\/documentation\/haishinkit\/screendelegate\/screen(_:willlayout:)","type":"method"}],"type":"protocol","title":"ScreenDelegate","path":"\/documentation\/haishinkit\/screendelegate"},{"type":"protocol","title":"ScreenRenderer","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var backgroundColor: CGColor","path":"\/documentation\/haishinkit\/screenrenderer\/backgroundcolor"},{"type":"property","path":"\/documentation\/haishinkit\/screenrenderer\/bounds","title":"var bounds: CGRect"},{"title":"var context: CIContext","path":"\/documentation\/haishinkit\/screenrenderer\/context","type":"property"},{"path":"\/documentation\/haishinkit\/screenrenderer\/presentationtimestamp","type":"property","title":"var presentationTimeStamp: CMTime"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func draw(ScreenObject)","path":"\/documentation\/haishinkit\/screenrenderer\/draw(_:)","type":"method"},{"path":"\/documentation\/haishinkit\/screenrenderer\/layout(_:)","type":"method","title":"func layout(ScreenObject)"},{"title":"func setTarget(CVPixelBuffer?)","type":"method","path":"\/documentation\/haishinkit\/screenrenderer\/settarget(_:)"}],"path":"\/documentation\/haishinkit\/screenrenderer"},{"title":"VideoEffect","type":"protocol","path":"\/documentation\/haishinkit\/videoeffect","children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/videoeffect\/execute(_:)","type":"method","title":"func execute(CIImage) -> CIImage"}]},{"type":"groupMarker","title":"Structures"},{"type":"struct","title":"AMFArray","path":"\/documentation\/haishinkit\/amfarray","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/amfarray\/init(count:)","type":"init","title":"init(count: Int)"},{"path":"\/documentation\/haishinkit\/amfarray\/init(data:)","title":"init(data: [(any Sendable)?])","type":"init"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/amfarray\/length","type":"property","title":"var length: Int"},{"title":"Subscripts","type":"groupMarker"},{"type":"subscript","path":"\/documentation\/haishinkit\/amfarray\/subscript(_:)","title":"subscript(Any) -> (any Sendable)?"},{"type":"groupMarker","title":"Default Implementations"},{"title":"CustomDebugStringConvertible Implementations","type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/amfarray\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/haishinkit\/amfarray\/customdebugstringconvertible-implementations"},{"type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/haishinkit\/amfarray\/!=(_:_:)","type":"op"},{"path":"\/documentation\/haishinkit\/amfarray\/==(_:_:)","type":"op","title":"static func == (AMFArray, AMFArray) -> Bool"}],"path":"\/documentation\/haishinkit\/amfarray\/equatable-implementations","title":"Equatable Implementations"},{"title":"ExpressibleByArrayLiteral Implementations","type":"symbol","path":"\/documentation\/haishinkit\/amfarray\/expressiblebyarrayliteral-implementations","children":[{"type":"groupMarker","title":"Initializers"},{"title":"init(arrayLiteral: (any Sendable)?...)","path":"\/documentation\/haishinkit\/amfarray\/init(arrayliteral:)","type":"init"}]}]},{"type":"struct","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/amftypedobject\/data","title":"let data: AMFObject","type":"property"},{"path":"\/documentation\/haishinkit\/amftypedobject\/typename","type":"property","title":"let typeName: String"}],"title":"AMFTypedObject","path":"\/documentation\/haishinkit\/amftypedobject"},{"type":"struct","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/amfundefined\/description","type":"property","title":"var description: String"}],"path":"\/documentation\/haishinkit\/amfundefined","title":"AMFUndefined"},{"type":"struct","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/amfxml\/init(data:)","type":"init","title":"init(data: String)"},{"title":"Instance Properties","type":"groupMarker"},{"type":"property","path":"\/documentation\/haishinkit\/amfxml\/description","title":"var description: String"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"title":"Operators","type":"groupMarker"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/haishinkit\/amfxml\/!=(_:_:)"},{"path":"\/documentation\/haishinkit\/amfxml\/==(_:_:)","type":"op","title":"static func == (AMFXML, AMFXML) -> Bool"}],"path":"\/documentation\/haishinkit\/amfxml\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/haishinkit\/amfxml","title":"AMFXML"},{"children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/haishinkit\/amfxmldocument\/init(data:)","type":"init","title":"init(data: String)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var description: String","path":"\/documentation\/haishinkit\/amfxmldocument\/description"},{"title":"Default Implementations","type":"groupMarker"},{"type":"symbol","title":"Equatable Implementations","path":"\/documentation\/haishinkit\/amfxmldocument\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/haishinkit\/amfxmldocument\/!=(_:_:)"},{"type":"op","path":"\/documentation\/haishinkit\/amfxmldocument\/==(_:_:)","title":"static func == (AMFXMLDocument, AMFXMLDocument) -> Bool"}]}],"path":"\/documentation\/haishinkit\/amfxmldocument","type":"struct","title":"AMFXMLDocument"},{"path":"\/documentation\/haishinkit\/audiocodecsettings","type":"struct","children":[{"title":"Initializers","type":"groupMarker"},{"type":"init","title":"init(bitRate: Int, downmix: Bool, channelMap: [Int]?, sampleRate: Float64, format: AudioCodecSettings.Format)","path":"\/documentation\/haishinkit\/audiocodecsettings\/init(bitrate:downmix:channelmap:samplerate:format:)"},{"title":"init(from: any Decoder) throws","type":"init","path":"\/documentation\/haishinkit\/audiocodecsettings\/init(from:)"},{"title":"Instance Properties","type":"groupMarker"},{"type":"property","title":"var bitRate: Int","path":"\/documentation\/haishinkit\/audiocodecsettings\/bitrate"},{"path":"\/documentation\/haishinkit\/audiocodecsettings\/channelmap","type":"property","title":"var channelMap: [Int]?"},{"path":"\/documentation\/haishinkit\/audiocodecsettings\/downmix","type":"property","title":"var downmix: Bool"},{"type":"property","title":"var format: AudioCodecSettings.Format","path":"\/documentation\/haishinkit\/audiocodecsettings\/format-swift.property"},{"type":"property","title":"let sampleRate: Float64","path":"\/documentation\/haishinkit\/audiocodecsettings\/samplerate"},{"type":"groupMarker","title":"Type Properties"},{"path":"\/documentation\/haishinkit\/audiocodecsettings\/default","type":"property","title":"static let `default`: AudioCodecSettings"},{"path":"\/documentation\/haishinkit\/audiocodecsettings\/defaultbitrate","type":"property","title":"static let defaultBitRate: Int"},{"title":"static let maximumNumberOfChannels: UInt32","path":"\/documentation\/haishinkit\/audiocodecsettings\/maximumnumberofchannels","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"type":"enum","path":"\/documentation\/haishinkit\/audiocodecsettings\/format-swift.enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case aac","path":"\/documentation\/haishinkit\/audiocodecsettings\/format-swift.enum\/aac","type":"case"},{"title":"case opus","path":"\/documentation\/haishinkit\/audiocodecsettings\/format-swift.enum\/opus","type":"case"},{"path":"\/documentation\/haishinkit\/audiocodecsettings\/format-swift.enum\/pcm","title":"case pcm","type":"case"},{"type":"groupMarker","title":"Initializers"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/haishinkit\/audiocodecsettings\/format-swift.enum\/init(from:)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/audiocodecsettings\/format-swift.enum\/equatable-implementations","type":"symbol","title":"Equatable Implementations","children":[{"type":"groupMarker","title":"Operators"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/haishinkit\/audiocodecsettings\/format-swift.enum\/!=(_:_:)"}]}],"title":"AudioCodecSettings.Format"}],"title":"AudioCodecSettings"},{"path":"\/documentation\/haishinkit\/audiomixersettings","children":[{"type":"groupMarker","title":"Initializers"},{"title":"init(sampleRate: Float64, channels: UInt32, isMuted: Bool, mainTrack: UInt8, tracks: [UInt8 : AudioMixerTrackSettings])","path":"\/documentation\/haishinkit\/audiomixersettings\/init(samplerate:channels:ismuted:maintrack:tracks:)","type":"init"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/haishinkit\/audiomixersettings\/channels","title":"let channels: UInt32"},{"title":"var isMuted: Bool","type":"property","path":"\/documentation\/haishinkit\/audiomixersettings\/ismuted"},{"type":"property","path":"\/documentation\/haishinkit\/audiomixersettings\/maintrack","title":"var mainTrack: UInt8"},{"path":"\/documentation\/haishinkit\/audiomixersettings\/maximumnumberofchannels","title":"var maximumNumberOfChannels: UInt32","type":"property"},{"title":"let sampleRate: Float64","type":"property","path":"\/documentation\/haishinkit\/audiomixersettings\/samplerate"},{"title":"var tracks: [UInt8 : AudioMixerTrackSettings]","type":"property","path":"\/documentation\/haishinkit\/audiomixersettings\/tracks"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/audiomixersettings\/default","type":"property","title":"static let `default`: AudioMixerSettings"},{"type":"property","title":"static let maximumSampleRate: Float64","path":"\/documentation\/haishinkit\/audiomixersettings\/maximumsamplerate"}],"type":"struct","title":"AudioMixerSettings"},{"path":"\/documentation\/haishinkit\/audiomixertracksettings","title":"AudioMixerTrackSettings","type":"struct","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/audiomixertracksettings\/init(from:)","type":"init","title":"init(from: any Decoder) throws"},{"path":"\/documentation\/haishinkit\/audiomixertracksettings\/init(volume:ismuted:downmix:channelmap:)","title":"init(volume: Float, isMuted: Bool, downmix: Bool, channelMap: [Int]?)","type":"init"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var channelMap: [Int]?","path":"\/documentation\/haishinkit\/audiomixertracksettings\/channelmap"},{"title":"var downmix: Bool","path":"\/documentation\/haishinkit\/audiomixertracksettings\/downmix","type":"property"},{"path":"\/documentation\/haishinkit\/audiomixertracksettings\/ismuted","title":"var isMuted: Bool","type":"property"},{"path":"\/documentation\/haishinkit\/audiomixertracksettings\/volume","type":"property","title":"var volume: Float"},{"type":"groupMarker","title":"Type Properties"},{"path":"\/documentation\/haishinkit\/audiomixertracksettings\/default","type":"property","title":"static let `default`: AudioMixerTrackSettings"}]},{"title":"HKAtomic","type":"struct","path":"\/documentation\/haishinkit\/hkatomic","children":[{"type":"groupMarker","title":"Initializers"},{"title":"init(A)","type":"init","path":"\/documentation\/haishinkit\/hkatomic\/init(_:)"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/hkatomic\/value","title":"var value: A","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"type":"method","title":"func mutate((inout A) -> Void)","path":"\/documentation\/haishinkit\/hkatomic\/mutate(_:)"}]},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"let currentBytesInPerSecond: Int","path":"\/documentation\/haishinkit\/networkmonitorreport\/currentbytesinpersecond","type":"property"},{"type":"property","title":"let currentBytesOutPerSecond: Int","path":"\/documentation\/haishinkit\/networkmonitorreport\/currentbytesoutpersecond"},{"type":"property","title":"let currentQueueBytesOut: Int","path":"\/documentation\/haishinkit\/networkmonitorreport\/currentqueuebytesout"},{"path":"\/documentation\/haishinkit\/networkmonitorreport\/totalbytesin","type":"property","title":"let totalBytesIn: Int"},{"path":"\/documentation\/haishinkit\/networkmonitorreport\/totalbytesout","type":"property","title":"let totalBytesOut: Int"}],"type":"struct","path":"\/documentation\/haishinkit\/networkmonitorreport","title":"NetworkMonitorReport"},{"title":"NetworkTransportReport","path":"\/documentation\/haishinkit\/networktransportreport","children":[{"type":"groupMarker","title":"Initializers"},{"title":"init(queueBytesOut: Int, totalBytesIn: Int, totalBytesOut: Int)","type":"init","path":"\/documentation\/haishinkit\/networktransportreport\/init(queuebytesout:totalbytesin:totalbytesout:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let queueBytesOut: Int","path":"\/documentation\/haishinkit\/networktransportreport\/queuebytesout","type":"property"},{"type":"property","title":"let totalBytesIn: Int","path":"\/documentation\/haishinkit\/networktransportreport\/totalbytesin"},{"title":"let totalBytesOut: Int","path":"\/documentation\/haishinkit\/networktransportreport\/totalbytesout","type":"property"}],"type":"struct"},{"path":"\/documentation\/haishinkit\/rtmpresponse","type":"struct","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"let arguments: [(any Sendable)?]","path":"\/documentation\/haishinkit\/rtmpresponse\/arguments","type":"property"},{"title":"let status: RTMPStatus?","path":"\/documentation\/haishinkit\/rtmpresponse\/status","type":"property"}],"title":"RTMPResponse"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/rtmpstatus\/code","title":"let code: String","type":"property"},{"title":"let description: String","type":"property","path":"\/documentation\/haishinkit\/rtmpstatus\/description"},{"title":"let level: String","path":"\/documentation\/haishinkit\/rtmpstatus\/level","type":"property"},{"type":"groupMarker","title":"Subscripts"},{"path":"\/documentation\/haishinkit\/rtmpstatus\/subscript(dynamicmember:)-7qc0b","type":"subscript","title":"subscript(dynamicMember _: String) -> Double?"},{"title":"subscript(dynamicMember _: String) -> String?","path":"\/documentation\/haishinkit\/rtmpstatus\/subscript(dynamicmember:)-9sprr","type":"subscript"}],"type":"struct","title":"RTMPStatus","path":"\/documentation\/haishinkit\/rtmpstatus"},{"path":"\/documentation\/haishinkit\/rtmpstreaminfo","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var byteCount: Int","path":"\/documentation\/haishinkit\/rtmpstreaminfo\/bytecount","type":"property"},{"title":"var currentBytesPerSecond: Int","path":"\/documentation\/haishinkit\/rtmpstreaminfo\/currentbytespersecond","type":"property"},{"title":"var resourceName: String?","type":"property","path":"\/documentation\/haishinkit\/rtmpstreaminfo\/resourcename"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/haishinkit\/rtmpstreaminfo\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var debugDescription: String","type":"property","path":"\/documentation\/haishinkit\/rtmpstreaminfo\/debugdescription"}],"type":"symbol"}],"title":"RTMPStreamInfo","type":"struct"},{"title":"SoundTransform","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/soundtransform\/init(volume:pan:)","type":"init","title":"init(volume: Float, pan: Float)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var pan: Float","path":"\/documentation\/haishinkit\/soundtransform\/pan"},{"path":"\/documentation\/haishinkit\/soundtransform\/volume","type":"property","title":"var volume: Float"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/soundtransform\/defaultpan","type":"property","title":"static let defaultPan: Float"},{"path":"\/documentation\/haishinkit\/soundtransform\/defaultvolume","title":"static let defaultVolume: Float","type":"property"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/haishinkit\/soundtransform\/customdebugstringconvertible-implementations","type":"symbol","title":"CustomDebugStringConvertible Implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"title":"var debugDescription: String","type":"property","path":"\/documentation\/haishinkit\/soundtransform\/debugdescription"}]},{"title":"Equatable Implementations","type":"symbol","path":"\/documentation\/haishinkit\/soundtransform\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/soundtransform\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}]}],"path":"\/documentation\/haishinkit\/soundtransform","type":"struct"},{"children":[{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/haishinkit\/vtsessionoption\/!=(_:_:)","type":"op"},{"path":"\/documentation\/haishinkit\/vtsessionoption\/==(_:_:)","type":"op","title":"static func == (VTSessionOption, VTSessionOption) -> Bool"}],"title":"Equatable Implementations","path":"\/documentation\/haishinkit\/vtsessionoption\/equatable-implementations"},{"children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/vtsessionoption\/hash(into:)","type":"method","title":"func hash(into: inout Hasher)"}],"type":"symbol","title":"Hashable Implementations","path":"\/documentation\/haishinkit\/vtsessionoption\/hashable-implementations"}],"type":"struct","title":"VTSessionOption","path":"\/documentation\/haishinkit\/vtsessionoption"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/init(from:)","type":"init","title":"init(from: any Decoder) throws"},{"title":"init(videoSize: CGSize, bitRate: Int, profileLevel: String, scalingMode: VideoCodecSettings.ScalingMode, bitRateMode: VideoCodecSettings.BitRateMode, maxKeyFrameIntervalDuration: Int32, allowFrameReordering: Bool?, dataRateLimits: [Double]?, isHardwareEncoderEnabled: Bool)","type":"init","path":"\/documentation\/haishinkit\/videocodecsettings\/init(videosize:bitrate:profilelevel:scalingmode:bitratemode:maxkeyframeintervalduration:allowframereordering:dataratelimits:ishardwareencoderenabled:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var allowFrameReordering: Bool?","type":"property","path":"\/documentation\/haishinkit\/videocodecsettings\/allowframereordering"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/bitrate","type":"property","title":"var bitRate: Int"},{"title":"var bitRateMode: VideoCodecSettings.BitRateMode","path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.property","type":"property"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/dataratelimits","type":"property","title":"var dataRateLimits: [Double]?"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/frameinterval","type":"property","title":"var frameInterval: Double"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/ishardwareencoderenabled","type":"property","title":"var isHardwareEncoderEnabled: Bool"},{"type":"property","title":"var maxKeyFrameIntervalDuration: Int32","path":"\/documentation\/haishinkit\/videocodecsettings\/maxkeyframeintervalduration"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/profilelevel","title":"var profileLevel: String","type":"property"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.property","title":"var scalingMode: VideoCodecSettings.ScalingMode","type":"property"},{"title":"var videoSize: CGSize","path":"\/documentation\/haishinkit\/videocodecsettings\/videosize","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"title":"static let `default`: VideoCodecSettings","path":"\/documentation\/haishinkit\/videocodecsettings\/default","type":"property"},{"title":"static let frameInterval01: Double","path":"\/documentation\/haishinkit\/videocodecsettings\/frameinterval01","type":"property"},{"title":"static let frameInterval05: Double","path":"\/documentation\/haishinkit\/videocodecsettings\/frameinterval05","type":"property"},{"title":"static let frameInterval10: Double","path":"\/documentation\/haishinkit\/videocodecsettings\/frameinterval10","type":"property"},{"title":"static let frameInterval30: Double","path":"\/documentation\/haishinkit\/videocodecsettings\/frameinterval30","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"title":"VideoCodecSettings.BitRateMode","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"title":"case average","type":"case","path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/average"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/constant","type":"case","title":"case constant"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: String)","type":"init","path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/init(rawvalue:)"},{"title":"Default Implementations","type":"groupMarker"},{"type":"symbol","title":"Equatable Implementations","path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"type":"op","path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"}]},{"title":"RawRepresentable Implementations","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","type":"init","path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/init(from:)"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/hashvalue","type":"property","title":"var hashValue: Int"},{"type":"groupMarker","title":"Instance Methods"},{"title":"func encode(to: any Encoder) throws","type":"method","path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/encode(to:)"},{"type":"method","title":"func hash(into: inout Hasher)","path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/hash(into:)"}],"type":"symbol","path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/rawrepresentable-implementations"}],"path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum","type":"enum"},{"type":"enum","title":"VideoCodecSettings.ScalingMode","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"title":"case cropSourceToCleanAperture","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/cropsourcetocleanaperture","type":"case"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/letterbox","type":"case","title":"case letterbox"},{"type":"case","title":"case normal","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/normal"},{"title":"case trim","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/trim","type":"case"},{"type":"groupMarker","title":"Initializers"},{"title":"init?(rawValue: String)","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/init(rawvalue:)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}],"type":"symbol","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/equatable-implementations"},{"title":"RawRepresentable Implementations","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"type":"groupMarker","title":"Instance Properties"},{"title":"var hashValue: Int","type":"property","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/hashvalue"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"type":"method","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)"}],"type":"symbol","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/rawrepresentable-implementations"}],"path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum"}],"path":"\/documentation\/haishinkit\/videocodecsettings","title":"VideoCodecSettings","type":"struct"},{"path":"\/documentation\/haishinkit\/videomixersettings","type":"struct","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/haishinkit\/videomixersettings\/init(from:)","title":"init(from: any Decoder) throws"},{"path":"\/documentation\/haishinkit\/videomixersettings\/init(mode:ismuted:maintrack:)","title":"init(mode: VideoMixerSettings.Mode, isMuted: Bool, mainTrack: UInt8)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"type":"property","path":"\/documentation\/haishinkit\/videomixersettings\/ismuted","title":"var isMuted: Bool"},{"title":"var mainTrack: UInt8","path":"\/documentation\/haishinkit\/videomixersettings\/maintrack","type":"property"},{"type":"property","path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.property","title":"var mode: VideoMixerSettings.Mode"},{"type":"groupMarker","title":"Type Properties"},{"path":"\/documentation\/haishinkit\/videomixersettings\/default","type":"property","title":"static let `default`: VideoMixerSettings"},{"type":"groupMarker","title":"Enumerations"},{"path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum","title":"VideoMixerSettings.Mode","type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"type":"case","title":"case offscreen","path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/offscreen"},{"path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/passthrough","type":"case","title":"case passthrough"},{"title":"Initializers","type":"groupMarker"},{"type":"init","path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/equatable-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/!=(_:_:)"}]},{"path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/rawrepresentable-implementations","type":"symbol","title":"RawRepresentable Implementations","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"type":"property","title":"var hashValue: Int","path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/hashvalue"},{"title":"Instance Methods","type":"groupMarker"},{"type":"method","title":"func encode(to: any Encoder) throws","path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/encode(to:)"},{"title":"func hash(into: inout Hasher)","path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/hash(into:)","type":"method"}]}]}],"title":"VideoMixerSettings"},{"type":"groupMarker","title":"Variables"},{"path":"\/documentation\/haishinkit\/kamfundefined","type":"var","title":"let kAMFUndefined: AMFUndefined"},{"type":"var","path":"\/documentation\/haishinkit\/khaishinkitidentifier","title":"let kHaishinKitIdentifier: String"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/amfobject","type":"typealias","title":"AMFObject"},{"path":"\/documentation\/haishinkit\/audiodeviceconfigurationblock","type":"typealias","title":"AudioDeviceConfigurationBlock"},{"title":"VideoDeviceConfigurationBlock","path":"\/documentation\/haishinkit\/videodeviceconfigurationblock","type":"typealias"},{"title":"Enumerations","type":"groupMarker"},{"type":"enum","path":"\/documentation\/haishinkit\/deviceutil","children":[{"type":"groupMarker","title":"Type Methods"},{"path":"\/documentation\/haishinkit\/deviceutil\/device(withlocalizedname:mediatype:)","title":"static func device(withLocalizedName: String, mediaType: AVMediaType) -> AVCaptureDevice?","type":"method"}],"title":"DeviceUtil"},{"type":"enum","title":"HKStreamReadyState","path":"\/documentation\/haishinkit\/hkstreamreadystate","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"type":"case","title":"case idle","path":"\/documentation\/haishinkit\/hkstreamreadystate\/idle"},{"title":"case play","type":"case","path":"\/documentation\/haishinkit\/hkstreamreadystate\/play"},{"path":"\/documentation\/haishinkit\/hkstreamreadystate\/playing","title":"case playing","type":"case"},{"type":"case","title":"case publish","path":"\/documentation\/haishinkit\/hkstreamreadystate\/publish"},{"path":"\/documentation\/haishinkit\/hkstreamreadystate\/publishing","type":"case","title":"case publishing"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: Int)","path":"\/documentation\/haishinkit\/hkstreamreadystate\/init(rawvalue:)","type":"init"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/haishinkit\/hkstreamreadystate\/equatable-implementations","title":"Equatable Implementations","type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/haishinkit\/hkstreamreadystate\/!=(_:_:)","type":"op"}]},{"title":"RawRepresentable Implementations","path":"\/documentation\/haishinkit\/hkstreamreadystate\/rawrepresentable-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Properties"},{"title":"var hashValue: Int","path":"\/documentation\/haishinkit\/hkstreamreadystate\/hashvalue","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/hkstreamreadystate\/hash(into:)","type":"method","title":"func hash(into: inout Hasher)"}]}]},{"type":"enum","path":"\/documentation\/haishinkit\/networkmonitorevent","title":"NetworkMonitorEvent","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/haishinkit\/networkmonitorevent\/publishinsufficientbwoccured(report:)","title":"case publishInsufficientBWOccured(report: NetworkMonitorReport)","type":"case"},{"type":"case","title":"case reset","path":"\/documentation\/haishinkit\/networkmonitorevent\/reset"},{"type":"case","path":"\/documentation\/haishinkit\/networkmonitorevent\/status(report:)","title":"case status(report: NetworkMonitorReport)"}]},{"type":"enum","title":"RTMPObjectEncoding","path":"\/documentation\/haishinkit\/rtmpobjectencoding","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/rtmpobjectencoding\/amf0","type":"case","title":"case amf0"},{"type":"case","title":"case amf3","path":"\/documentation\/haishinkit\/rtmpobjectencoding\/amf3"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/rtmpobjectencoding\/init(rawvalue:)","type":"init","title":"init?(rawValue: UInt8)"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/haishinkit\/rtmpobjectencoding\/!=(_:_:)"}],"type":"symbol","path":"\/documentation\/haishinkit\/rtmpobjectencoding\/equatable-implementations","title":"Equatable Implementations"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/rtmpobjectencoding\/hashvalue","title":"var hashValue: Int","type":"property"},{"type":"groupMarker","title":"Instance Methods"},{"title":"func hash(into: inout Hasher)","type":"method","path":"\/documentation\/haishinkit\/rtmpobjectencoding\/hash(into:)"}],"type":"symbol","title":"RawRepresentable Implementations","path":"\/documentation\/haishinkit\/rtmpobjectencoding\/rawrepresentable-implementations"}]},{"title":"Extended Modules","type":"groupMarker"},{"type":"extension","children":[{"title":"Extended Classes","type":"groupMarker"},{"type":"extension","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var isCompressed: Bool","path":"\/documentation\/haishinkit\/coremedia\/cmformatdescription\/iscompressed","type":"property"}],"title":"CMFormatDescription","path":"\/documentation\/haishinkit\/coremedia\/cmformatdescription"}],"path":"\/documentation\/haishinkit\/coremedia","title":"CoreMedia"}],"type":"module","path":"\/documentation\/haishinkit","title":"HaishinKit"},{"children":[{"title":"Classes","type":"groupMarker"},{"title":"SRTConnection","type":"class","children":[{"type":"groupMarker","title":"Initializers"},{"title":"init()","path":"\/documentation\/srthaishinkit\/srtconnection\/init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var connected: Bool","path":"\/documentation\/srthaishinkit\/srtconnection\/connected","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtconnection\/performancedata","type":"property","title":"var performanceData: SRTPerformanceData?"},{"type":"property","title":"var uri: URL?","path":"\/documentation\/srthaishinkit\/srtconnection\/uri"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/srthaishinkit\/srtconnection\/close()","title":"func close() async"},{"path":"\/documentation\/srthaishinkit\/srtconnection\/connect(_:)","type":"method","title":"func connect(URL?) async throws"},{"title":"func open(URL?, mode: SRTMode) async throws","path":"\/documentation\/srthaishinkit\/srtconnection\/open(_:mode:)","type":"method"},{"type":"groupMarker","title":"Type Properties"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtconnection\/version","title":"static let version: String"},{"title":"Enumerations","type":"groupMarker"},{"type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case failedToConnect(String, reson: Int32)","type":"case","path":"\/documentation\/srthaishinkit\/srtconnection\/error\/failedtoconnect(_:reson:)"},{"title":"case invalidState","type":"case","path":"\/documentation\/srthaishinkit\/srtconnection\/error\/invalidstate"},{"title":"case unsupportedUri(URL?)","path":"\/documentation\/srthaishinkit\/srtconnection\/error\/unsupporteduri(_:)","type":"case"},{"type":"groupMarker","title":"Default Implementations"},{"title":"Error Implementations","type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var localizedDescription: String","type":"property","path":"\/documentation\/srthaishinkit\/srtconnection\/error\/localizeddescription"}],"path":"\/documentation\/srthaishinkit\/srtconnection\/error\/error-implementations"}],"title":"SRTConnection.Error","path":"\/documentation\/srthaishinkit\/srtconnection\/error"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Actor Implementations","children":[{"type":"groupMarker","title":"Instance Methods"},{"title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method","path":"\/documentation\/srthaishinkit\/srtconnection\/assertisolated(_:file:line:)"},{"path":"\/documentation\/srthaishinkit\/srtconnection\/assumeisolated(_:file:line:)","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","type":"method"},{"path":"\/documentation\/srthaishinkit\/srtconnection\/preconditionisolated(_:file:line:)","type":"method","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)"}],"path":"\/documentation\/srthaishinkit\/srtconnection\/actor-implementations","type":"symbol"}],"path":"\/documentation\/srthaishinkit\/srtconnection"},{"path":"\/documentation\/srthaishinkit\/srtlogger","title":"SRTLogger","type":"class","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var functionalAreas: Set<SRTLogFunctionalArea>","path":"\/documentation\/srthaishinkit\/srtlogger\/functionalareas","type":"property"},{"title":"var level: SRTLogLevel","path":"\/documentation\/srthaishinkit\/srtlogger\/level","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func setFunctionalAreas(Set<SRTLogFunctionalArea>)","path":"\/documentation\/srthaishinkit\/srtlogger\/setfunctionalareas(_:)","type":"method"},{"type":"method","title":"func setLevel(SRTLogLevel)","path":"\/documentation\/srthaishinkit\/srtlogger\/setlevel(_:)"},{"title":"Type Properties","type":"groupMarker"},{"type":"property","title":"static let shared: SRTLogger","path":"\/documentation\/srthaishinkit\/srtlogger\/shared"},{"title":"Default Implementations","type":"groupMarker"},{"type":"symbol","path":"\/documentation\/srthaishinkit\/srtlogger\/actor-implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"type":"method","path":"\/documentation\/srthaishinkit\/srtlogger\/assertisolated(_:file:line:)","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)"},{"title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","type":"method","path":"\/documentation\/srthaishinkit\/srtlogger\/assumeisolated(_:file:line:)"},{"path":"\/documentation\/srthaishinkit\/srtlogger\/preconditionisolated(_:file:line:)","type":"method","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)"}],"title":"Actor Implementations"}]},{"path":"\/documentation\/srthaishinkit\/srtstream","type":"class","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/srthaishinkit\/srtstream\/init(connection:)","title":"init(connection: SRTConnection)","type":"init"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var audioTrackId: UInt8?","path":"\/documentation\/srthaishinkit\/srtstream\/audiotrackid"},{"path":"\/documentation\/srthaishinkit\/srtstream\/readystate","title":"var readyState: HKStreamReadyState","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtstream\/videotrackid","type":"property","title":"var videoTrackId: UInt8?"},{"title":"Instance Methods","type":"groupMarker"},{"type":"method","path":"\/documentation\/srthaishinkit\/srtstream\/close()","title":"func close() async"},{"title":"func play(String?) async","path":"\/documentation\/srthaishinkit\/srtstream\/play(_:)","type":"method"},{"path":"\/documentation\/srthaishinkit\/srtstream\/publish(_:)","type":"method","title":"func publish(String?) async"},{"type":"groupMarker","title":"Default Implementations"},{"title":"Actor Implementations","path":"\/documentation\/srthaishinkit\/srtstream\/actor-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/srthaishinkit\/srtstream\/assertisolated(_:file:line:)","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method"},{"type":"method","path":"\/documentation\/srthaishinkit\/srtstream\/assumeisolated(_:file:line:)","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T"},{"type":"method","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/srthaishinkit\/srtstream\/preconditionisolated(_:file:line:)"}]},{"path":"\/documentation\/srthaishinkit\/srtstream\/hkstream-implementations","title":"HKStream Implementations","type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtstream\/audiosettings","title":"var audioSettings: AudioCodecSettings"},{"title":"var soundTransform: SoundTransform?","path":"\/documentation\/srthaishinkit\/srtstream\/soundtransform","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtstream\/videosettings","type":"property","title":"var videoSettings: VideoCodecSettings"},{"title":"Instance Methods","type":"groupMarker"},{"type":"method","path":"\/documentation\/srthaishinkit\/srtstream\/addoutput(_:)","title":"func addOutput(some HKStreamOutput)"},{"type":"method","path":"\/documentation\/srthaishinkit\/srtstream\/append(_:)","title":"func append(CMSampleBuffer)"},{"path":"\/documentation\/srthaishinkit\/srtstream\/append(_:when:)","type":"method","title":"func append(AVAudioBuffer, when: AVAudioTime)"},{"title":"func attachAudioPlayer(AudioPlayer?) async","path":"\/documentation\/srthaishinkit\/srtstream\/attachaudioplayer(_:)","type":"method"},{"type":"method","path":"\/documentation\/srthaishinkit\/srtstream\/dispatch(_:)","title":"func dispatch(NetworkMonitorEvent) async"},{"type":"method","path":"\/documentation\/srthaishinkit\/srtstream\/removeoutput(_:)","title":"func removeOutput(some HKStreamOutput)"},{"type":"method","title":"func setAudioSettings(AudioCodecSettings)","path":"\/documentation\/srthaishinkit\/srtstream\/setaudiosettings(_:)"},{"title":"func setBitrateStorategy((some HKStreamBitRateStrategy)?)","type":"method","path":"\/documentation\/srthaishinkit\/srtstream\/setbitratestorategy(_:)"},{"type":"method","title":"func setSoundTransform(SoundTransform) async","path":"\/documentation\/srthaishinkit\/srtstream\/setsoundtransform(_:)"},{"path":"\/documentation\/srthaishinkit\/srtstream\/setvideoinputbuffercounts(_:)","type":"method","title":"func setVideoInputBufferCounts(Int)"},{"title":"func setVideoSettings(VideoCodecSettings)","path":"\/documentation\/srthaishinkit\/srtstream\/setvideosettings(_:)","type":"method"}]},{"path":"\/documentation\/srthaishinkit\/srtstream\/mediamixeroutput-implementations","title":"MediaMixerOutput Implementations","children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/srthaishinkit\/srtstream\/mixer(_:didoutput:)","type":"method","title":"func mixer(MediaMixer, didOutput: CMSampleBuffer)"},{"path":"\/documentation\/srthaishinkit\/srtstream\/mixer(_:didoutput:when:)","title":"func mixer(MediaMixer, didOutput: AVAudioPCMBuffer, when: AVAudioTime)","type":"method"},{"type":"method","title":"func selectTrack(UInt8?, mediaType: CMFormatDescription.MediaType)","path":"\/documentation\/srthaishinkit\/srtstream\/selecttrack(_:mediatype:)"}],"type":"symbol"}],"title":"SRTStream"},{"title":"Structures","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"title":"let byteAvailRcvBuf: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/byteavailrcvbuf","type":"property"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/byteavailsndbuf","title":"let byteAvailSndBuf: Int32"},{"type":"property","title":"let byteMSS: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytemss"},{"title":"let byteRcvBuf: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytercvbuf","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytercvdrop","title":"let byteRcvDrop: UInt64","type":"property"},{"type":"property","title":"let byteRcvDropTotal: UInt64","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytercvdroptotal"},{"title":"let byteRcvLoss: UInt64","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytercvloss","type":"property"},{"title":"let byteRcvLossTotal: UInt64","type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytercvlosstotal"},{"title":"let byteRcvUndecrypt: UInt64","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytercvundecrypt","type":"property"},{"type":"property","title":"let byteRcvUndecryptTotal: UInt64","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytercvundecrypttotal"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/byterecv","title":"let byteRecv: UInt64","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/byterecvtotal","title":"let byteRecvTotal: UInt64","type":"property"},{"title":"let byteRetrans: UInt64","type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/byteretrans"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/byteretranstotal","title":"let byteRetransTotal: UInt64","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytesent","type":"property","title":"let byteSent: UInt64"},{"title":"let byteSentTotal: UInt64","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytesenttotal","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytesndbuf","title":"let byteSndBuf: Int32","type":"property"},{"type":"property","title":"let byteSndDrop: UInt64","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytesnddrop"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytesnddroptotal","type":"property","title":"let byteSndDropTotal: UInt64"},{"type":"property","title":"let mbpsBandwidth: Double","path":"\/documentation\/srthaishinkit\/srtperformancedata\/mbpsbandwidth"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/mbpsmaxbw","type":"property","title":"let mbpsMaxBW: Double"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/mbpsrecvrate","title":"let mbpsRecvRate: Double"},{"title":"let mbpsSendRate: Double","type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/mbpssendrate"},{"title":"let msRTT: Double","type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/msrtt"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/msrcvbuf","type":"property","title":"let msRcvBuf: Int32"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/msrcvtsbpddelay","title":"let msRcvTsbPdDelay: Int32","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/mssndbuf","type":"property","title":"let msSndBuf: Int32"},{"title":"let msSndTsbPdDelay: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/mssndtsbpddelay","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/mstimestamp","title":"let msTimeStamp: Int64","type":"property"},{"title":"let pktCongestionWindow: Int32","type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktcongestionwindow"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktflightsize","title":"let pktFlightSize: Int32","type":"property"},{"title":"let pktFlowWindow: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktflowwindow","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvavgbelatedtime","title":"let pktRcvAvgBelatedTime: Double","type":"property"},{"title":"let pktRcvBelated: Int64","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvbelated","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvbuf","title":"let pktRcvBuf: Int32","type":"property"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvdrop","title":"let pktRcvDrop: Int32"},{"type":"property","title":"let pktRcvDropTotal: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvdroptotal"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvfilterextra","title":"let pktRcvFilterExtra: Int32"},{"title":"let pktRcvFilterExtraTotal: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvfilterextratotal","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvfilterloss","title":"let pktRcvFilterLoss: Int32","type":"property"},{"title":"let pktRcvFilterLossTotal: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvfilterlosstotal","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvfiltersupply","title":"let pktRcvFilterSupply: Int32","type":"property"},{"type":"property","title":"let pktRcvFilterSupplyTotal: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvfiltersupplytotal"},{"title":"let pktRcvLoss: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvloss","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvlosstotal","type":"property","title":"let pktRcvLossTotal: Int32"},{"title":"let pktRcvRetrans: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvretrans","type":"property"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvundecrypt","title":"let pktRcvUndecrypt: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvundecrypttotal","title":"let pktRcvUndecryptTotal: Int32"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrecv","type":"property","title":"let pktRecv: Int64"},{"title":"let pktRecvACK: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrecvack","type":"property"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrecvacktotal","title":"let pktRecvACKTotal: Int32"},{"title":"let pktRecvNAK: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrecvnak","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrecvnaktotal","type":"property","title":"let pktRecvNAKTotal: Int32"},{"title":"let pktRecvTotal: Int64","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrecvtotal","type":"property"},{"type":"property","title":"let pktReorderDistance: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktreorderdistance"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktreordertolerance","title":"let pktReorderTolerance: Int32","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktretrans","type":"property","title":"let pktRetrans: Int32"},{"type":"property","title":"let pktRetransTotal: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktretranstotal"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsent","type":"property","title":"let pktSent: Int64"},{"title":"let pktSentACK: Int32","type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsentack"},{"type":"property","title":"let pktSentACKTotal: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsentacktotal"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsentnak","title":"let pktSentNAK: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsentnaktotal","title":"let pktSentNAKTotal: Int32"},{"title":"let pktSentTotal: Int64","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsenttotal","type":"property"},{"title":"let pktSndBuf: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsndbuf","type":"property"},{"type":"property","title":"let pktSndDrop: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsnddrop"},{"title":"let pktSndDropTotal: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsnddroptotal","type":"property"},{"title":"let pktSndFilterExtra: Int32","type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsndfilterextra"},{"title":"let pktSndFilterExtraTotal: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsndfilterextratotal","type":"property"},{"title":"let pktSndLoss: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsndloss","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsndlosstotal","type":"property","title":"let pktSndLossTotal: Int32"},{"title":"let usPktSndPeriod: Double","path":"\/documentation\/srthaishinkit\/srtperformancedata\/uspktsndperiod","type":"property"},{"title":"let usSndDuration: Int64","path":"\/documentation\/srthaishinkit\/srtperformancedata\/ussndduration","type":"property"},{"title":"let usSndDurationTotal: Int64","path":"\/documentation\/srthaishinkit\/srtperformancedata\/ussnddurationtotal","type":"property"}],"type":"struct","title":"SRTPerformanceData","path":"\/documentation\/srthaishinkit\/srtperformancedata"},{"title":"Enumerations","type":"groupMarker"},{"type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/apictrl","title":"case apiCtrl","type":"case"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/apirecv","title":"case apiRecv","type":"case"},{"title":"case apiSend","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/apisend","type":"case"},{"title":"case applog","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/applog","type":"case"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/bstats","type":"case","title":"case bstats"},{"title":"case bufRecv","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/bufrecv","type":"case"},{"title":"case bufSend","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/bufsend","type":"case"},{"title":"case chanRecv","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/chanrecv","type":"case"},{"title":"case chnMgmt","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/chnmgmt","type":"case"},{"type":"case","title":"case chnSend","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/chnsend"},{"type":"case","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/congest","title":"case congest"},{"title":"case control","type":"case","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/control"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/data","title":"case data","type":"case"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/epollapi","title":"case epollApi","type":"case"},{"title":"case epollUpd","type":"case","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/epollupd"},{"title":"case general","type":"case","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/general"},{"title":"case grpMgmt","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/grpmgmt","type":"case"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/grprecv","type":"case","title":"case grpRecv"},{"type":"case","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/grpsend","title":"case grpSend"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/haicrypt","title":"case haicrypt","type":"case"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/internal","title":"case `internal`","type":"case"},{"type":"case","title":"case pfilter","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/pfilter"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/quectrl","title":"case queCtrl","type":"case"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/quemgmt","type":"case","title":"case queMgmt"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/querecv","type":"case","title":"case queRecv"},{"title":"case queSend","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/quesend","type":"case"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/rsrc","type":"case","title":"case rsrc"},{"type":"case","title":"case tsbpd","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/tsbpd"},{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/init(rawvalue:)","type":"init","title":"init?(rawValue: Int32)"},{"title":"Default Implementations","type":"groupMarker"},{"type":"symbol","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/!=(_:_:)"}],"title":"Equatable Implementations"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/rawrepresentable-implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/hashvalue","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func hash(into: inout Hasher)","type":"method","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/hash(into:)"}],"type":"symbol","title":"RawRepresentable Implementations"}],"title":"SRTLogFunctionalArea","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"type":"case","path":"\/documentation\/srthaishinkit\/srtloglevel\/crit","title":"case crit"},{"type":"case","title":"case debug","path":"\/documentation\/srthaishinkit\/srtloglevel\/debug"},{"type":"case","path":"\/documentation\/srthaishinkit\/srtloglevel\/error","title":"case error"},{"type":"case","path":"\/documentation\/srthaishinkit\/srtloglevel\/notice","title":"case notice"},{"type":"case","title":"case warning","path":"\/documentation\/srthaishinkit\/srtloglevel\/warning"},{"title":"Default Implementations","type":"groupMarker"},{"type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/srthaishinkit\/srtloglevel\/!=(_:_:)"}],"path":"\/documentation\/srthaishinkit\/srtloglevel\/equatable-implementations","title":"Equatable Implementations"}],"type":"enum","path":"\/documentation\/srthaishinkit\/srtloglevel","title":"SRTLogLevel"},{"path":"\/documentation\/srthaishinkit\/srtmode","type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"title":"case caller","path":"\/documentation\/srthaishinkit\/srtmode\/caller","type":"case"},{"path":"\/documentation\/srthaishinkit\/srtmode\/listener","type":"case","title":"case listener"},{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/srthaishinkit\/srtmode\/init(rawvalue:)","type":"init","title":"init?(rawValue: String)"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/srthaishinkit\/srtmode\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/srthaishinkit\/srtmode\/equatable-implementations","type":"symbol","title":"Equatable Implementations"},{"path":"\/documentation\/srthaishinkit\/srtmode\/rawrepresentable-implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/srthaishinkit\/srtmode\/hashvalue","type":"property","title":"var hashValue: Int"},{"title":"Instance Methods","type":"groupMarker"},{"type":"method","path":"\/documentation\/srthaishinkit\/srtmode\/hash(into:)","title":"func hash(into: inout Hasher)"}],"type":"symbol","title":"RawRepresentable Implementations"}],"title":"SRTMode"}],"title":"SRTHaishinKit","type":"module","path":"\/documentation\/srthaishinkit"},{"path":"\/documentation\/moqthaishinkit","children":[{"type":"groupMarker","title":"Classes"},{"type":"class","title":"MoQTConnection","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/init(_:requesttimeout:)","type":"init","title":"init(MoQTSetupRole, requestTimeOut: UInt64)"},{"type":"groupMarker","title":"Instance Properties"},{"title":"var objectStream: AsyncStream<MoQTObject>","path":"\/documentation\/moqthaishinkit\/moqtconnection\/objectstream","type":"property"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtconnection\/requesttimeout","title":"let requestTimeout: UInt64"},{"type":"property","title":"let role: MoQTSetupRole","path":"\/documentation\/moqthaishinkit\/moqtconnection\/role"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func annouce([String], authInfo: String?) async throws -> Result<MoQTAnnounceOk, MoQTAnnounceError>","path":"\/documentation\/moqthaishinkit\/moqtconnection\/annouce(_:authinfo:)"},{"type":"method","title":"func close() async","path":"\/documentation\/moqthaishinkit\/moqtconnection\/close()"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/connect(_:)","type":"method","title":"func connect(String) async throws -> MoQTServerSetup"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/send(_:header:)","type":"method","title":"func send([MoQTObject], header: MoQTStreamHeaderSubgroup) async throws"},{"title":"func subscribe([String], name: String, authInfo: String?) async throws -> Result<MoQTSubscribeOk, MoQTSubscribeError>","path":"\/documentation\/moqthaishinkit\/moqtconnection\/subscribe(_:name:authinfo:)","type":"method"},{"type":"method","title":"func subscribeAnnouces([String], authInfo: String?) async throws -> Result<MoQTSubscribeAnnouncesOk, MoQTSubscribeAnnouncesError>","path":"\/documentation\/moqthaishinkit\/moqtconnection\/subscribeannouces(_:authinfo:)"},{"title":"Type Properties","type":"groupMarker"},{"type":"property","title":"static let defaultPort: Int","path":"\/documentation\/moqthaishinkit\/moqtconnection\/defaultport"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtconnection\/defaultrequesttimeout","title":"static let defaultRequestTimeout: UInt64"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/supportedprotocols","type":"property","title":"static let supportedProtocols: [String]"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/supportedversions","title":"static let supportedVersions: [MoQTVersion]","type":"property"},{"type":"groupMarker","title":"Enumerations"},{"children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/error\/connectiontimedout","type":"case","title":"case connectionTimedOut"},{"type":"case","title":"case invalidState","path":"\/documentation\/moqthaishinkit\/moqtconnection\/error\/invalidstate"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/error\/requesttimedout","type":"case","title":"case requestTimedOut"},{"title":"case socketErrorOccurred(any Error)","type":"case","path":"\/documentation\/moqthaishinkit\/moqtconnection\/error\/socketerroroccurred(_:)"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/error\/unknownresponse","title":"case unknownResponse","type":"case"},{"type":"case","title":"case unsupportedCommand(String)","path":"\/documentation\/moqthaishinkit\/moqtconnection\/error\/unsupportedcommand(_:)"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Error Implementations","type":"symbol","path":"\/documentation\/moqthaishinkit\/moqtconnection\/error\/error-implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"title":"var localizedDescription: String","path":"\/documentation\/moqthaishinkit\/moqtconnection\/error\/localizeddescription","type":"property"}]}],"title":"MoQTConnection.Error","type":"enum","path":"\/documentation\/moqthaishinkit\/moqtconnection\/error"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Actor Implementations","path":"\/documentation\/moqthaishinkit\/moqtconnection\/actor-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/assertisolated(_:file:line:)","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method"},{"title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","path":"\/documentation\/moqthaishinkit\/moqtconnection\/assumeisolated(_:file:line:)","type":"method"},{"title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method","path":"\/documentation\/moqthaishinkit\/moqtconnection\/preconditionisolated(_:file:line:)"}]}],"path":"\/documentation\/moqthaishinkit\/moqtconnection"},{"title":"Protocols","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"title":"var payload: Data","path":"\/documentation\/moqthaishinkit\/moqtcontrolmessage\/payload","type":"property"},{"title":"var type: MoQTMessageType","path":"\/documentation\/moqthaishinkit\/moqtcontrolmessage\/type","type":"property"}],"type":"protocol","path":"\/documentation\/moqthaishinkit\/moqtcontrolmessage","title":"MoQTControlMessage"},{"type":"groupMarker","title":"Structures"},{"type":"struct","title":"MoQTAnnounce","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var payload: Data","path":"\/documentation\/moqthaishinkit\/moqtannounce\/payload"},{"title":"let subscribeParameters: [MoQTVersionSpecificParameter]","type":"property","path":"\/documentation\/moqthaishinkit\/moqtannounce\/subscribeparameters"},{"path":"\/documentation\/moqthaishinkit\/moqtannounce\/tracknamespace","type":"property","title":"let trackNamespace: [String]"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtannounce\/type","title":"let type: MoQTMessageType"}],"path":"\/documentation\/moqthaishinkit\/moqtannounce"},{"title":"MoQTAnnounceError","children":[{"title":"Instance Properties","type":"groupMarker"},{"type":"property","title":"let code: Int","path":"\/documentation\/moqthaishinkit\/moqtannounceerror\/code"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtannounceerror\/payload","title":"var payload: Data"},{"path":"\/documentation\/moqthaishinkit\/moqtannounceerror\/reasonphrase","title":"let reasonPhrase: String","type":"property"},{"type":"property","title":"let trackNamespace: [String]","path":"\/documentation\/moqthaishinkit\/moqtannounceerror\/tracknamespace"},{"type":"property","title":"let type: MoQTMessageType","path":"\/documentation\/moqthaishinkit\/moqtannounceerror\/type"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtannounceerror\/localizeddescription","type":"property","title":"var localizedDescription: String"}],"path":"\/documentation\/moqthaishinkit\/moqtannounceerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"type":"struct","path":"\/documentation\/moqthaishinkit\/moqtannounceerror"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"type":"property","title":"var payload: Data","path":"\/documentation\/moqthaishinkit\/moqtannounceok\/payload"},{"path":"\/documentation\/moqthaishinkit\/moqtannounceok\/tracknamespace","title":"let trackNamespace: [String]","type":"property"},{"title":"let type: MoQTMessageType","path":"\/documentation\/moqthaishinkit\/moqtannounceok\/type","type":"property"}],"path":"\/documentation\/moqthaishinkit\/moqtannounceok","title":"MoQTAnnounceOk","type":"struct"},{"path":"\/documentation\/moqthaishinkit\/moqtgoaway","title":"MoQTGoaway","type":"struct","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"let newSessionURI: String","path":"\/documentation\/moqthaishinkit\/moqtgoaway\/newsessionuri"},{"type":"property","title":"var payload: Data","path":"\/documentation\/moqthaishinkit\/moqtgoaway\/payload"},{"type":"property","title":"let type: MoQTMessageType","path":"\/documentation\/moqthaishinkit\/moqtgoaway\/type"}]},{"path":"\/documentation\/moqthaishinkit\/moqtobject","title":"MoQTObject","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(id: Int, status: Int?, data: Data)","path":"\/documentation\/moqthaishinkit\/moqtobject\/init(id:status:data:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtobject\/data","title":"let data: Data","type":"property"},{"title":"let id: Int","path":"\/documentation\/moqthaishinkit\/moqtobject\/id","type":"property"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtobject\/status","title":"let status: Int?"}],"type":"struct"},{"title":"MoQTServerSetup","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var payload: Data","path":"\/documentation\/moqthaishinkit\/moqtserversetup\/payload"},{"path":"\/documentation\/moqthaishinkit\/moqtserversetup\/selectedversion","title":"let selectedVersion: Int","type":"property"},{"path":"\/documentation\/moqthaishinkit\/moqtserversetup\/setupparameters","title":"let setupParameters: [MoQTSetupParameter]","type":"property"},{"title":"let type: MoQTMessageType","path":"\/documentation\/moqthaishinkit\/moqtserversetup\/type","type":"property"}],"path":"\/documentation\/moqthaishinkit\/moqtserversetup","type":"struct"},{"type":"struct","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/moqthaishinkit\/moqtsetupparameter\/key","title":"let key: MoQTSetupParameterType","type":"property"},{"path":"\/documentation\/moqthaishinkit\/moqtsetupparameter\/value","type":"property","title":"let value: (any Sendable)"}],"title":"MoQTSetupParameter","path":"\/documentation\/moqthaishinkit\/moqtsetupparameter"},{"path":"\/documentation\/moqthaishinkit\/moqtstreamheadersubgroup","title":"MoQTStreamHeaderSubgroup","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/moqthaishinkit\/moqtstreamheadersubgroup\/init(trackalias:groupid:subgroupid:publisherpriority:)","type":"init","title":"init(trackAlias: Int, groupId: Int, subgroupId: Int, publisherPriority: Int)"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtstreamheadersubgroup\/groupid","type":"property","title":"let groupId: Int"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtstreamheadersubgroup\/payload","title":"var payload: Data"},{"title":"let publisherPriority: Int","path":"\/documentation\/moqthaishinkit\/moqtstreamheadersubgroup\/publisherpriority","type":"property"},{"title":"let subgroupId: Int","path":"\/documentation\/moqthaishinkit\/moqtstreamheadersubgroup\/subgroupid","type":"property"},{"path":"\/documentation\/moqthaishinkit\/moqtstreamheadersubgroup\/trackalias","type":"property","title":"let trackAlias: Int"},{"path":"\/documentation\/moqthaishinkit\/moqtstreamheadersubgroup\/type","type":"property","title":"let type: MoQTDataStreamType"}],"type":"struct"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/endgroup","type":"property","title":"let endGroup: Int?"},{"type":"property","title":"let endObject: Int?","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/endobject"},{"title":"let filterType: MoQTSubscribe.FilterType","type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.property"},{"title":"let groupOrder: MoQTSubscribe.GroupOrder","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.property","type":"property"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/payload","title":"var payload: Data","type":"property"},{"title":"let startGroup: Int?","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/startgroup","type":"property"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/startobject","title":"let startObject: Int?","type":"property"},{"title":"let subscribeId: Int","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/subscribeid","type":"property"},{"title":"let subscribeParameters: [MoQTVersionSpecificParameter]","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/subscribeparameters","type":"property"},{"title":"let subscribePriority: Int","type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/subscribepriority"},{"title":"let trackAlias: Int","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/trackalias","type":"property"},{"title":"let trackName: String","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/trackname","type":"property"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/tracknamespace","type":"property","title":"let trackNamespace: [String]"},{"title":"let type: MoQTMessageType","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/type","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/absoluterange","type":"case","title":"case absoluteRange"},{"type":"case","title":"case absoluteStart","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/absolutestart"},{"type":"case","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/latestgroup","title":"case latestGroup"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/latestobject","title":"case latestObject","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"type":"groupMarker","title":"Default Implementations"},{"title":"Equatable Implementations","type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}],"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/equatable-implementations"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/rawrepresentable-implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/hashvalue","type":"property","title":"var hashValue: Int"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"type":"symbol","title":"RawRepresentable Implementations"}],"title":"MoQTSubscribe.FilterType","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum","type":"enum"},{"title":"MoQTSubscribe.GroupOrder","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","title":"case ascending","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/ascending"},{"title":"case descending","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/descending","type":"case"},{"title":"case original","type":"case","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/original"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"type":"op","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"}],"type":"symbol","title":"Equatable Implementations","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/equatable-implementations"},{"type":"symbol","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/hashvalue","type":"property","title":"var hashValue: Int"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/hash(into:)","type":"method","title":"func hash(into: inout Hasher)"}]}],"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum","type":"enum"}],"type":"struct","title":"MoQTSubscribe"},{"title":"MoQTSubscribeAnnounces","type":"struct","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounces","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"let parameters: [MoQTVersionSpecificParameter]","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounces\/parameters","type":"property"},{"title":"var payload: Data","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounces\/payload","type":"property"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounces\/tracknamespaceprefix","type":"property","title":"let trackNamespacePrefix: [String]"},{"type":"property","title":"let type: MoQTMessageType","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounces\/type"}]},{"title":"MoQTSubscribeAnnouncesError","type":"struct","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounceserror\/errorcode","title":"let errorCode: Int","type":"property"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounceserror\/payload","title":"var payload: Data","type":"property"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounceserror\/reasonphrase","type":"property","title":"let reasonPhrase: String"},{"title":"let trackNamespacePrefix: [String]","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounceserror\/tracknamespaceprefix","type":"property"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounceserror\/type","title":"let type: MoQTMessageType"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounceserror\/localizeddescription","type":"property","title":"var localizedDescription: String"}],"title":"Error Implementations","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounceserror\/error-implementations","type":"symbol"}],"path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounceserror"},{"type":"struct","children":[{"title":"Instance Properties","type":"groupMarker"},{"type":"property","title":"var payload: Data","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannouncesok\/payload"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeannouncesok\/tracknamespaceprefix","title":"let trackNamespacePrefix: [String]","type":"property"},{"type":"property","title":"let type: MoQTMessageType","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannouncesok\/type"}],"path":"\/documentation\/moqthaishinkit\/moqtsubscribeannouncesok","title":"MoQTSubscribeAnnouncesOk"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror\/code","title":"let code: Int"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror\/payload","title":"var payload: Data","type":"property"},{"title":"let reasonPhrase: String","path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror\/reasonphrase","type":"property"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror\/subscribeid","title":"let subscribeId: Int","type":"property"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror\/trackalias","type":"property","title":"let trackAlias: Int"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror\/type","title":"let type: MoQTMessageType","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror\/error-implementations","type":"symbol","title":"Error Implementations"}],"type":"struct","path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror","title":"MoQTSubscribeError"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeok","title":"MoQTSubscribeOk","type":"struct","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"let contentExists: Bool","type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/contentexists"},{"title":"let expires: Int","path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/expires","type":"property"},{"title":"let groupOrder: MoQTSubscribe.GroupOrder","path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/grouporder","type":"property"},{"title":"let largestGroupId: Int?","path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/largestgroupid","type":"property"},{"type":"property","title":"let largestObjectId: Int?","path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/largestobjectid"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/payload","type":"property","title":"var payload: Data"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/subscribeid","type":"property","title":"let subscribeId: Int"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/subscribeparameters","title":"let subscribeParameters: [MoQTVersionSpecificParameter]","type":"property"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/type","title":"let type: MoQTMessageType","type":"property"}]},{"title":"MoQTVersionSpecificParameter","children":[{"title":"Instance Properties","type":"groupMarker"},{"type":"property","title":"let key: MoQTVersionSpecificType","path":"\/documentation\/moqthaishinkit\/moqtversionspecificparameter\/key"},{"path":"\/documentation\/moqthaishinkit\/moqtversionspecificparameter\/value","title":"let value: (any Sendable)","type":"property"}],"type":"struct","path":"\/documentation\/moqthaishinkit\/moqtversionspecificparameter"},{"title":"Enumerations","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype","type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"title":"case fetchHeader","type":"case","path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/fetchheader"},{"type":"case","title":"case objectDatagram","path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/objectdatagram"},{"title":"case streamHeaderSubgroup","path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/streamheadersubgroup","type":"case"},{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/init(rawvalue:)","title":"init?(rawValue: Int)"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/!=(_:_:)","type":"op"}],"type":"symbol","path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/equatable-implementations"},{"path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/rawrepresentable-implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/hashvalue","title":"var hashValue: Int"},{"type":"groupMarker","title":"Instance Methods"},{"title":"func hash(into: inout Hasher)","type":"method","path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/hash(into:)"}],"type":"symbol","title":"RawRepresentable Implementations"}],"title":"MoQTDataStreamType"},{"type":"enum","title":"MoQTMessageType","path":"\/documentation\/moqthaishinkit\/moqtmessagetype","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case announce","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/announce","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/announcecancel","title":"case announceCancel","type":"case"},{"title":"case announceError","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/announceerror","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/announceok","type":"case","title":"case announceOk"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/clientsetup","type":"case","title":"case clientSetup"},{"title":"case goaway","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/goaway","type":"case"},{"type":"case","title":"case serverSetup","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/serversetup"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/subscribe","type":"case","title":"case subscribe"},{"type":"case","title":"case subscribeAnnounuces","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/subscribeannounuces"},{"type":"case","title":"case subscribeAnnounucesError","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/subscribeannounuceserror"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/subscribeannounucesok","title":"case subscribeAnnounucesOk","type":"case"},{"type":"case","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/subscribedone","title":"case subscribeDone"},{"title":"case subscribeError","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/subscribeerror","type":"case"},{"title":"case subscribeOk","type":"case","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/subscribeok"},{"title":"case subscribeUpdate","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/subscribeupdate","type":"case"},{"title":"case trackStatus","type":"case","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/trackstatus"},{"type":"case","title":"case trackStatusRequest","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/trackstatusrequest"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/unannounce","title":"case unannounce","type":"case"},{"title":"case unsubscribe","type":"case","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/unsubscribe"},{"title":"Initializers","type":"groupMarker"},{"type":"init","title":"init?(rawValue: Int)","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/init(rawvalue:)"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Operators"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/!=(_:_:)","type":"op"}],"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/equatable-implementations","type":"symbol","title":"Equatable Implementations"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","type":"property","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/hashvalue"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func hash(into: inout Hasher)","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/hash(into:)","type":"method"}],"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}]},{"children":[{"type":"groupMarker","title":"Enumeration Cases"},{"title":"case maxSubscribeId","type":"case","path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/maxsubscribeid"},{"title":"case path","path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/path","type":"case"},{"title":"case role","path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/role","type":"case"},{"type":"groupMarker","title":"Initializers"},{"title":"init?(rawValue: Int)","path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/init(rawvalue:)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"type":"symbol","title":"Equatable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/!=(_:_:)"}],"path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/equatable-implementations"},{"title":"RawRepresentable Implementations","path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/rawrepresentable-implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func hash(into: inout Hasher)","path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/hash(into:)","type":"method"}],"type":"symbol"}],"type":"enum","path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype","title":"MoQTSetupParameterType"},{"path":"\/documentation\/moqthaishinkit\/moqtsetuprole","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case pubSub","type":"case","path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/pubsub"},{"path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/publisher","type":"case","title":"case publisher"},{"title":"case subscriber","path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/subscriber","type":"case"},{"type":"groupMarker","title":"Initializers"},{"title":"init?(rawValue: Int)","path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/init(rawvalue:)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}],"type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","type":"property","path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/hashvalue"},{"title":"Instance Methods","type":"groupMarker"},{"type":"method","path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/hash(into:)","title":"func hash(into: inout Hasher)"}],"title":"RawRepresentable Implementations","path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/rawrepresentable-implementations","type":"symbol"}],"type":"enum","title":"MoQTSetupRole"},{"type":"enum","title":"MoQTVersion","path":"\/documentation\/moqthaishinkit\/moqtversion","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case draft01","path":"\/documentation\/moqthaishinkit\/moqtversion\/draft01","type":"case"},{"title":"case draft02","path":"\/documentation\/moqthaishinkit\/moqtversion\/draft02","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtversion\/draft03","title":"case draft03","type":"case"},{"title":"case draft04","path":"\/documentation\/moqthaishinkit\/moqtversion\/draft04","type":"case"},{"type":"case","path":"\/documentation\/moqthaishinkit\/moqtversion\/draft05","title":"case draft05"},{"path":"\/documentation\/moqthaishinkit\/moqtversion\/draft06","type":"case","title":"case draft06"},{"path":"\/documentation\/moqthaishinkit\/moqtversion\/draft07","title":"case draft07","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtversion\/draft07exp","type":"case","title":"case draft07Exp"},{"type":"case","path":"\/documentation\/moqthaishinkit\/moqtversion\/draft07exp2","title":"case draft07Exp2"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: Int)","type":"init","path":"\/documentation\/moqthaishinkit\/moqtversion\/init(rawvalue:)"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/moqthaishinkit\/moqtversion\/!=(_:_:)"}],"type":"symbol","title":"Equatable Implementations","path":"\/documentation\/moqthaishinkit\/moqtversion\/equatable-implementations"},{"type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","type":"property","path":"\/documentation\/moqthaishinkit\/moqtversion\/hashvalue"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtversion\/hash(into:)","type":"method","title":"func hash(into: inout Hasher)"}],"title":"RawRepresentable Implementations","path":"\/documentation\/moqthaishinkit\/moqtversion\/rawrepresentable-implementations"}]},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"type":"case","title":"case authorizationInfo","path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/authorizationinfo"},{"type":"case","title":"case deliveryTimeout","path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/deliverytimeout"},{"path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/maxcacheduration","title":"case maxCacheDuration","type":"case"},{"title":"Initializers","type":"groupMarker"},{"type":"init","title":"init?(rawValue: Int)","path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/init(rawvalue:)"},{"type":"groupMarker","title":"Default Implementations"},{"title":"Equatable Implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/!=(_:_:)"}],"path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/equatable-implementations","type":"symbol"},{"path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Properties"},{"title":"var hashValue: Int","path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/hashvalue","type":"property"},{"type":"groupMarker","title":"Instance Methods"},{"title":"func hash(into: inout Hasher)","path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/hash(into:)","type":"method"}]}],"path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype","title":"MoQTVersionSpecificType","type":"enum"}],"title":"MoQTHaishinKit","type":"module"}]},"includedArchiveIdentifiers":["Logboard","HaishinKit","SRTHaishinKit","MoQTHaishinKit"]}