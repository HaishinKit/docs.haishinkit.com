{"schemaVersion":{"minor":3,"patch":0,"major":0},"identifier":{"url":"doc:\/\/SRTHaishinKit\/documentation\/SRTHaishinKit","interfaceLanguage":"swift"},"kind":"symbol","primaryContentSections":[{"kind":"content","content":[{"type":"heading","anchor":"Overview","level":2,"text":"Overview"},{"inlineContent":[{"text":"This is a module that supports SRT protocol. It internally uses a library that is built from ","type":"text"},{"identifier":"https:\/\/github.com\/Haivision\/srt","isActive":true,"type":"reference"},{"type":"text","text":" and converted into an xcframework."}],"type":"paragraph"},{"level":2,"anchor":"%F0%9F%8E%A8-Features","text":"ðŸŽ¨ Features","type":"heading"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Ingest"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"H264, HEVC and AAC support."}],"type":"paragraph"}]}],"type":"unorderedList"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Playback"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"H264, HEVC and AAC support."}]}]}],"type":"unorderedList"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"SRT Mode"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"caller","type":"text"}]}],"checked":true},{"checked":true,"content":[{"inlineContent":[{"type":"text","text":"listener"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"rendezvous","type":"text"}],"type":"paragraph"}],"checked":false}]}]}]},{"level":2,"text":"ðŸ““ Usage","anchor":"%F0%9F%93%93-Usage","type":"heading"},{"text":"SRT Logging","type":"heading","level":3,"anchor":"SRT-Logging"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Defining a Swift wrapper method for "},{"code":"srt_setloglevel","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"}]}]},{"type":"codeListing","code":["await SRTLogger.shared.setLevel(.debug)"],"syntax":"swift"},{"anchor":"Ingest","type":"heading","level":3,"text":"Ingest"},{"type":"codeListing","syntax":"swift","code":["let mixer = MediaMixer()","let connection = SRTConnection()","let stream = SRTStream(connection: connection)","let hkView = MTHKView(frame: view.bounds)","","Task {","  do {","    try await mixer.attachAudio(AVCaptureDevice.default(for: .audio))","  } catch {","    print(error)","  }","","  do {","    try await mixer.attachVideo(AVCaptureDevice.default(.builtInWideAngleCamera, for: .video, position: .back))","  } catch {","    print(error)","  }","","  await mixer.addOutput(stream)","}","","Task { MainActor in","  await stream.addOutput(hkView)","  \/\/ add ViewController#view","  view.addSubview(hkView)","}","","Task {","  stream.attachAudioPlayer(audioPlayer)","  do {","    try await connection.connect(\"srt:\/\/host:port\")","    try await stream.publish()","  } catch {","    print(error)","  }","}"]},{"text":"Playback","type":"heading","level":3,"anchor":"Playback"},{"code":["let connection = SRTConnection()","let stream = SRTStream(connection: connection)","let hkView = MTHKView(frame: view.bounds)","let audioPlayer = AudioPlayer(AVAudioEngine())","","Task { MainActor in","  await stream.addOutput(hkView)","  \/\/ add ViewController#view","  view.addSubview(hkView)","}","","Task {","  \/\/ requires attachAudioPlayer","  await stream.attachAudioPlayer(audioPlayer)","","  do {","    try await connection.connect(\"srt:\/\/host:port\")","    try await stream.play()","  } catch {","    print(error)","  }","}"],"syntax":"swift","type":"codeListing"},{"type":"heading","text":"Specify socket options.","anchor":"Specify-socket-options","level":3},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"On the HaishinKit side, the default settings of libsrt are used.","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Please check ","type":"text"},{"type":"reference","identifier":"https:\/\/github.com\/shogo4405\/HaishinKit.swift\/blob\/main\/SRTHaishinKit\/Sources\/SRT\/SRTSocketOption.swift","isActive":true},{"type":"text","text":" for the support status."}]}]}],"type":"unorderedList"}]},{"content":[{"inlineContent":[{"text":"Many SRT options can be defined as query parameters in the connection URL as follows.","type":"text"}],"type":"paragraph"}]}]},{"syntax":"swift","type":"codeListing","code":["try await connection.connect(\"srt:\/\/host:port?key=value\")"]},{"anchor":"%F0%9F%94%A7-Test","type":"heading","text":"ðŸ”§ Test","level":2},{"text":"ffplay as a SRT service for ingest HaishinKit.","anchor":"ffplay-as-a-SRT-service-for-ingest-HaishinKit","type":"heading","level":3},{"code":["$ ffplay -i 'srt:\/\/${YOUR_IP_ADDRESS}?mode=listener'"],"syntax":"sh","type":"codeListing"},{"type":"heading","text":"ffmpeg as a SRT service for playback HaishinKit.","anchor":"ffmpeg-as-a-SRT-service-for-playback-HaishinKit","level":3},{"code":["$ ffmpeg -stream_loop -1 -re -i input.mp4 -c copy -f mpegts 'srt:\/\/0.0.0.0:9998?mode=listener'"],"type":"codeListing","syntax":"sh"},{"type":"heading","text":"ðŸ“œ License","anchor":"%F0%9F%93%9C-License","level":2},{"text":"SRTHaishinKit","level":3,"anchor":"SRTHaishinKit","type":"heading"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"SRTHaishinKit is licensed under the BSD-3-Clause.","type":"text"}]}]}]},{"level":3,"type":"heading","text":"libsrt.xcframework","anchor":"libsrtxcframework"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"libsrt.xcframework is licensed under MPLv2.0.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"This is a build of https:\/\/github.com\/Haivision\/srt as an xcframework.","type":"text"}]}]}],"type":"unorderedList"}]}],"sections":[],"abstract":[{"text":"This module supports the SRT protocol.","type":"text"}],"topicSections":[{"identifiers":["doc:\/\/SRTHaishinKit\/documentation\/SRTHaishinKit\/SRTConnection","doc:\/\/SRTHaishinKit\/documentation\/SRTHaishinKit\/SRTLogger","doc:\/\/SRTHaishinKit\/documentation\/SRTHaishinKit\/SRTStream"],"title":"Classes","generated":true,"anchor":"Classes"},{"identifiers":["doc:\/\/SRTHaishinKit\/documentation\/SRTHaishinKit\/SRTPerformanceData"],"generated":true,"anchor":"Structures","title":"Structures"},{"title":"Enumerations","generated":true,"anchor":"Enumerations","identifiers":["doc:\/\/SRTHaishinKit\/documentation\/SRTHaishinKit\/SRTLogFunctionalArea","doc:\/\/SRTHaishinKit\/documentation\/SRTHaishinKit\/SRTLogLevel","doc:\/\/SRTHaishinKit\/documentation\/SRTHaishinKit\/SRTMode"]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/srthaishinkit"]}],"metadata":{"roleHeading":"Framework","modules":[{"name":"SRTHaishinKit"}],"externalID":"SRTHaishinKit","symbolKind":"module","role":"collection","title":"SRTHaishinKit"},"hierarchy":{"paths":[[]]},"references":{"doc://SRTHaishinKit/documentation/SRTHaishinKit/SRTStream":{"url":"\/documentation\/srthaishinkit\/srtstream","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SRTStream"}],"abstract":[{"type":"text","text":"An actor that provides the interface to control a one-way channel over a SRTConnection."}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"SRTStream"}],"title":"SRTStream","kind":"symbol","identifier":"doc:\/\/SRTHaishinKit\/documentation\/SRTHaishinKit\/SRTStream"},"doc://SRTHaishinKit/documentation/SRTHaishinKit/SRTConnection":{"title":"SRTConnection","type":"topic","navigatorTitle":[{"text":"SRTConnection","kind":"identifier"}],"abstract":[{"type":"text","text":"An actor that provides the interface to control a SRT connection."},{"text":" ","type":"text"},{"type":"text","text":"Supports a one-to-one connection. Multiple connections cannot be established."}],"url":"\/documentation\/srthaishinkit\/srtconnection","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SRTConnection"}],"kind":"symbol","identifier":"doc:\/\/SRTHaishinKit\/documentation\/SRTHaishinKit\/SRTConnection"},"doc://SRTHaishinKit/documentation/SRTHaishinKit/SRTLogLevel":{"kind":"symbol","identifier":"doc:\/\/SRTHaishinKit\/documentation\/SRTHaishinKit\/SRTLogLevel","navigatorTitle":[{"text":"SRTLogLevel","kind":"identifier"}],"type":"topic","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"SRTLogLevel"}],"abstract":[],"title":"SRTLogLevel","role":"symbol","url":"\/documentation\/srthaishinkit\/srtloglevel"},"https://github.com/shogo4405/HaishinKit.swift/blob/main/SRTHaishinKit/Sources/SRT/SRTSocketOption.swift":{"type":"link","url":"https:\/\/github.com\/shogo4405\/HaishinKit.swift\/blob\/main\/SRTHaishinKit\/Sources\/SRT\/SRTSocketOption.swift","title":"the following code","titleInlineContent":[{"type":"text","text":"the following code"}],"identifier":"https:\/\/github.com\/shogo4405\/HaishinKit.swift\/blob\/main\/SRTHaishinKit\/Sources\/SRT\/SRTSocketOption.swift"},"doc://SRTHaishinKit/documentation/SRTHaishinKit/SRTMode":{"abstract":[{"text":"The type of SRTHaishinKit supports srt modes.","type":"text"}],"role":"symbol","type":"topic","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SRTMode"}],"navigatorTitle":[{"text":"SRTMode","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/srthaishinkit\/srtmode","identifier":"doc:\/\/SRTHaishinKit\/documentation\/SRTHaishinKit\/SRTMode","title":"SRTMode"},"doc://SRTHaishinKit/documentation/SRTHaishinKit/SRTLogFunctionalArea":{"role":"symbol","identifier":"doc:\/\/SRTHaishinKit\/documentation\/SRTHaishinKit\/SRTLogFunctionalArea","abstract":[{"type":"text","text":"Constants that indicate the addition to levels the logging system has functional areas ."}],"type":"topic","url":"\/documentation\/srthaishinkit\/srtlogfunctionalarea","title":"SRTLogFunctionalArea","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"SRTLogFunctionalArea","kind":"identifier"}],"navigatorTitle":[{"text":"SRTLogFunctionalArea","kind":"identifier"}],"kind":"symbol"},"doc://SRTHaishinKit/documentation/SRTHaishinKit":{"type":"topic","title":"SRTHaishinKit","abstract":[{"type":"text","text":"This module supports the SRT protocol."}],"identifier":"doc:\/\/SRTHaishinKit\/documentation\/SRTHaishinKit","url":"\/documentation\/srthaishinkit","kind":"symbol","role":"collection"},"doc://SRTHaishinKit/documentation/SRTHaishinKit/SRTLogger":{"abstract":[{"type":"text","text":"An actor for writing interpolated string messages to srt logging system."}],"url":"\/documentation\/srthaishinkit\/srtlogger","kind":"symbol","type":"topic","title":"SRTLogger","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SRTLogger"}],"navigatorTitle":[{"kind":"identifier","text":"SRTLogger"}],"identifier":"doc:\/\/SRTHaishinKit\/documentation\/SRTHaishinKit\/SRTLogger"},"https://github.com/Haivision/srt":{"type":"link","url":"https:\/\/github.com\/Haivision\/srt","title":"libsrt","titleInlineContent":[{"text":"libsrt","type":"text"}],"identifier":"https:\/\/github.com\/Haivision\/srt"},"doc://SRTHaishinKit/documentation/SRTHaishinKit/SRTPerformanceData":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SRTPerformanceData"}],"kind":"symbol","title":"SRTPerformanceData","navigatorTitle":[{"text":"SRTPerformanceData","kind":"identifier"}],"type":"topic","url":"\/documentation\/srthaishinkit\/srtperformancedata","identifier":"doc:\/\/SRTHaishinKit\/documentation\/SRTHaishinKit\/SRTPerformanceData","abstract":[{"type":"text","text":"The SRTPerformanceData represents the SRTâ€™s performance statistics. This struct is wrapper for an CBytePerfMon."}],"role":"symbol"}}}