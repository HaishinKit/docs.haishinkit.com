{"schemaVersion":{"major":0,"patch":2,"minor":1},"interfaceLanguages":{"swift":[{"children":[{"title":"Logboard","children":[{"type":"groupMarker","title":"Classes"},{"type":"class","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init()","path":"\/documentation\/logboard\/consoleappender\/init()"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func append(LBLogger, level: LBLogger.Level, format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/consoleappender\/append(_:level:format:arguments:file:function:line:)"},{"type":"method","title":"func append(LBLogger, level: LBLogger.Level, message: [Any], file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/consoleappender\/append(_:level:message:file:function:line:)"}],"title":"ConsoleAppender","path":"\/documentation\/logboard\/consoleappender"},{"type":"class","children":[{"type":"groupMarker","title":"Structures"},{"path":"\/documentation\/logboard\/lblogger\/data","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/logboard\/lblogger\/data\/init(_:)","title":"init?(Data)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/logboard\/lblogger\/data\/date","title":"let date: Date","type":"property"},{"path":"\/documentation\/logboard\/lblogger\/data\/file","title":"let file: String","type":"property"},{"path":"\/documentation\/logboard\/lblogger\/data\/function","title":"let function: String","type":"property"},{"path":"\/documentation\/logboard\/lblogger\/data\/identifier","title":"let identifier: String","type":"property"},{"path":"\/documentation\/logboard\/lblogger\/data\/level","title":"let level: LBLogger.Level","type":"property"},{"path":"\/documentation\/logboard\/lblogger\/data\/line","title":"let line: Int","type":"property"},{"path":"\/documentation\/logboard\/lblogger\/data\/message","title":"let message: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"title":"CustomStringConvertible Implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var description: String","path":"\/documentation\/logboard\/lblogger\/data\/description","type":"property"}],"path":"\/documentation\/logboard\/lblogger\/data\/customstringconvertible-implementations","type":"symbol"}],"type":"struct","title":"LBLogger.Data"},{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/logboard\/lblogger\/init(_:)","type":"init","title":"init(String)"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/logboard\/lblogger\/appender","type":"property","title":"var appender: any LBLoggerAppender"},{"path":"\/documentation\/logboard\/lblogger\/identifier","type":"property","title":"let identifier: String"},{"path":"\/documentation\/logboard\/lblogger\/level-swift.property","type":"property","title":"var level: LBLogger.Level"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/logboard\/lblogger\/debug(_:file:function:line:)","type":"method","title":"func debug(Any..., file: StaticString, function: StaticString, line: Int)"},{"path":"\/documentation\/logboard\/lblogger\/debug(format:arguments:file:function:line:)","type":"method","title":"func debug(format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)"},{"path":"\/documentation\/logboard\/lblogger\/error(_:file:function:line:)","type":"method","title":"func error(Any..., file: StaticString, function: StaticString, line: Int)"},{"path":"\/documentation\/logboard\/lblogger\/error(format:arguments:file:function:line:)","type":"method","title":"func error(format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)"},{"path":"\/documentation\/logboard\/lblogger\/info(_:file:function:line:)","type":"method","title":"func info(Any..., file: StaticString, function: StaticString, line: Int)"},{"path":"\/documentation\/logboard\/lblogger\/info(format:arguments:file:function:line:)","type":"method","title":"func info(format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)"},{"path":"\/documentation\/logboard\/lblogger\/isenabledfor(level:)","type":"method","title":"func isEnabledFor(level: LBLogger.Level) -> Bool"},{"path":"\/documentation\/logboard\/lblogger\/trace(_:file:function:line:)","type":"method","title":"func trace(Any..., file: StaticString, function: StaticString, line: Int)"},{"path":"\/documentation\/logboard\/lblogger\/trace(format:arguments:file:function:line:)","type":"method","title":"func trace(format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)"},{"path":"\/documentation\/logboard\/lblogger\/warn(_:file:function:line:)","type":"method","title":"func warn(Any..., file: StaticString, function: StaticString, line: Int)"},{"path":"\/documentation\/logboard\/lblogger\/warn(format:arguments:file:function:line:)","type":"method","title":"func warn(format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)"},{"type":"groupMarker","title":"Type Properties"},{"path":"\/documentation\/logboard\/lblogger\/dateformatter","type":"property","title":"static var dateFormatter: DateFormatter"},{"type":"groupMarker","title":"Type Methods"},{"path":"\/documentation\/logboard\/lblogger\/with(_:)","type":"method","title":"static func with(String) -> LBLogger"},{"type":"groupMarker","title":"Enumerations"},{"path":"\/documentation\/logboard\/lblogger\/level-swift.enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case debug","type":"case","path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/debug"},{"title":"case error","type":"case","path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/error"},{"title":"case info","type":"case","path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/info"},{"title":"case trace","type":"case","path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/trace"},{"title":"case warn","type":"case","path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/warn"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: Int)","type":"init","path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/init(rawvalue:)"},{"title":"init?(string: String)","type":"init","path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/init(string:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var description: String","type":"property","path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/description"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/!=(_:_:)"}],"path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/equatable-implementations"},{"title":"RawRepresentable Implementations","type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/rawrepresentable-implementations"}],"type":"enum","title":"LBLogger.Level"}],"title":"LBLogger","path":"\/documentation\/logboard\/lblogger"},{"type":"class","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/logboard\/multiappender\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/logboard\/multiappender\/appenders","title":"var appenders: [any LBLoggerAppender]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/logboard\/multiappender\/append(_:level:format:arguments:file:function:line:)","title":"func append(LBLogger, level: LBLogger.Level, format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)","type":"method"},{"path":"\/documentation\/logboard\/multiappender\/append(_:level:message:file:function:line:)","title":"func append(LBLogger, level: LBLogger.Level, message: [Any], file: StaticString, function: StaticString, line: Int)","type":"method"}],"title":"MultiAppender","path":"\/documentation\/logboard\/multiappender"},{"type":"class","children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/logboard\/nullappender\/append(_:level:format:arguments:file:function:line:)","title":"func append(LBLogger, level: LBLogger.Level, format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)","type":"method"},{"path":"\/documentation\/logboard\/nullappender\/append(_:level:message:file:function:line:)","title":"func append(LBLogger, level: LBLogger.Level, message: [Any], file: StaticString, function: StaticString, line: Int)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/logboard\/nullappender\/shared","title":"static let shared: NullAppender","type":"property"}],"title":"NullAppender","path":"\/documentation\/logboard\/nullappender"},{"type":"class","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(sybsystem: String, category: String)","type":"init","path":"\/documentation\/logboard\/osloggerappender\/init(sybsystem:category:)"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func append(LBLogger, level: LBLogger.Level, format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)","type":"method","path":"\/documentation\/logboard\/osloggerappender\/append(_:level:format:arguments:file:function:line:)"},{"title":"func append(LBLogger, level: LBLogger.Level, message: [Any], file: StaticString, function: StaticString, line: Int)","type":"method","path":"\/documentation\/logboard\/osloggerappender\/append(_:level:message:file:function:line:)"}],"title":"OSLoggerAppender","path":"\/documentation\/logboard\/osloggerappender"},{"type":"class","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init()","path":"\/documentation\/logboard\/socketappender\/init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func append(LBLogger, level: LBLogger.Level, format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/socketappender\/append(_:level:format:arguments:file:function:line:)","type":"method"},{"title":"func append(LBLogger, level: LBLogger.Level, message: [Any], file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/socketappender\/append(_:level:message:file:function:line:)","type":"method"},{"title":"func close()","path":"\/documentation\/logboard\/socketappender\/close()","type":"method"},{"title":"func connect(String, port: Int)","path":"\/documentation\/logboard\/socketappender\/connect(_:port:)","type":"method"}],"title":"SocketAppender","path":"\/documentation\/logboard\/socketappender"},{"type":"groupMarker","title":"Protocols"},{"type":"protocol","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func append(LBLogger, level: LBLogger.Level, format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/lbloggerappender\/append(_:level:format:arguments:file:function:line:)","type":"method"},{"title":"func append(LBLogger, level: LBLogger.Level, message: [Any], file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/lbloggerappender\/append(_:level:message:file:function:line:)","type":"method"}],"title":"LBLoggerAppender","path":"\/documentation\/logboard\/lbloggerappender"}],"path":"\/documentation\/logboard","type":"module"},{"title":"HaishinKit","children":[{"type":"groupMarker","title":"Articles"},{"path":"\/documentation\/haishinkit\/e-rtmp","type":"article","title":"Enhanced RTMP"},{"path":"\/documentation\/haishinkit\/faq","type":"article","title":"FAQ"},{"path":"\/documentation\/haishinkit\/offscreen","type":"article","title":"Offscreen rendering api."},{"type":"groupMarker","title":"Classes"},{"path":"\/documentation\/haishinkit\/assetscreenobject","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var chromaKeyColor: CGColor?","path":"\/documentation\/haishinkit\/assetscreenobject\/chromakeycolor"},{"type":"property","title":"var isReading: Bool","path":"\/documentation\/haishinkit\/assetscreenobject\/isreading"},{"type":"property","title":"var videoGravity: AVLayerVideoGravity","path":"\/documentation\/haishinkit\/assetscreenobject\/videogravity"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func cancelReading()","path":"\/documentation\/haishinkit\/assetscreenobject\/cancelreading()"},{"type":"method","title":"func makeBounds(CGSize) -> CGRect","path":"\/documentation\/haishinkit\/assetscreenobject\/makebounds(_:)"},{"type":"method","title":"func makeImage(some ScreenRenderer) -> CGImage?","path":"\/documentation\/haishinkit\/assetscreenobject\/makeimage(_:)"},{"type":"method","title":"func startReading(AVAsset) throws","path":"\/documentation\/haishinkit\/assetscreenobject\/startreading(_:)"}],"type":"class","title":"AssetScreenObject"},{"path":"\/documentation\/haishinkit\/audiodeviceunit","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var connection: AVCaptureConnection?","path":"\/documentation\/haishinkit\/audiodeviceunit\/connection","type":"property"},{"title":"var device: AVCaptureDevice?","path":"\/documentation\/haishinkit\/audiodeviceunit\/device","type":"property"},{"title":"var input: AVCaptureInput?","path":"\/documentation\/haishinkit\/audiodeviceunit\/input","type":"property"},{"title":"var output: AudioDeviceUnit.Output?","path":"\/documentation\/haishinkit\/audiodeviceunit\/output-swift.property","type":"property"},{"title":"let track: UInt8","path":"\/documentation\/haishinkit\/audiodeviceunit\/track","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"title":"AudioDeviceUnit.Output","path":"\/documentation\/haishinkit\/audiodeviceunit\/output-swift.typealias","type":"typealias"}],"type":"class","title":"AudioDeviceUnit"},{"path":"\/documentation\/haishinkit\/audioplayer","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(audioEngine: AVAudioEngine)","type":"init","path":"\/documentation\/haishinkit\/audioplayer\/init(audioengine:)"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Actor Implementations","type":"symbol","path":"\/documentation\/haishinkit\/audioplayer\/actor-implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"type":"method","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/haishinkit\/audioplayer\/assertisolated(_:file:line:)"},{"type":"method","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","path":"\/documentation\/haishinkit\/audioplayer\/assumeisolated(_:file:line:)"},{"type":"method","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/haishinkit\/audioplayer\/preconditionisolated(_:file:line:)"}]}],"type":"class","title":"AudioPlayer"},{"path":"\/documentation\/haishinkit\/hkincomingstream","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init(some HKStream)","path":"\/documentation\/haishinkit\/hkincomingstream\/init(_:)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var isRunning: Bool","path":"\/documentation\/haishinkit\/hkincomingstream\/isrunning"},{"type":"property","title":"var soundTransfrom: SoundTransform?","path":"\/documentation\/haishinkit\/hkincomingstream\/soundtransfrom"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func append(CMSampleBuffer)","path":"\/documentation\/haishinkit\/hkincomingstream\/append(_:)"},{"type":"method","title":"func append(AVAudioBuffer, when: AVAudioTime)","path":"\/documentation\/haishinkit\/hkincomingstream\/append(_:when:)"},{"type":"method","title":"func attachAudioPlayer(AudioPlayer?) async","path":"\/documentation\/haishinkit\/hkincomingstream\/attachaudioplayer(_:)"},{"type":"method","title":"func setSoundTransform(SoundTransform) async","path":"\/documentation\/haishinkit\/hkincomingstream\/setsoundtransform(_:)"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/haishinkit\/hkincomingstream\/assertisolated(_:file:line:)"},{"type":"method","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","path":"\/documentation\/haishinkit\/hkincomingstream\/assumeisolated(_:file:line:)"},{"type":"method","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/haishinkit\/hkincomingstream\/preconditionisolated(_:file:line:)"}],"type":"symbol","title":"Actor Implementations","path":"\/documentation\/haishinkit\/hkincomingstream\/actor-implementations"},{"children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/hkincomingstream\/startrunning()","type":"method","title":"func startRunning()"},{"path":"\/documentation\/haishinkit\/hkincomingstream\/stoprunning()","type":"method","title":"func stopRunning()"}],"type":"symbol","title":"AsyncRunner Implementations","path":"\/documentation\/haishinkit\/hkincomingstream\/asyncrunner-implementations"}],"type":"class","title":"HKIncomingStream"},{"path":"\/documentation\/haishinkit\/hkoutgoingstream","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init()","type":"init","path":"\/documentation\/haishinkit\/hkoutgoingstream\/init()"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var audioInputFormat: CMFormatDescription?","type":"property","path":"\/documentation\/haishinkit\/hkoutgoingstream\/audioinputformat"},{"title":"var audioOutputStream: AsyncStream<(AVAudioBuffer, AVAudioTime)>","type":"property","path":"\/documentation\/haishinkit\/hkoutgoingstream\/audiooutputstream"},{"title":"var audioSettings: AudioCodecSettings","type":"property","path":"\/documentation\/haishinkit\/hkoutgoingstream\/audiosettings"},{"title":"var isRunning: Bool","type":"property","path":"\/documentation\/haishinkit\/hkoutgoingstream\/isrunning"},{"title":"var videoInputBufferCounts: Int","type":"property","path":"\/documentation\/haishinkit\/hkoutgoingstream\/videoinputbuffercounts"},{"title":"var videoInputFormat: CMFormatDescription?","type":"property","path":"\/documentation\/haishinkit\/hkoutgoingstream\/videoinputformat"},{"title":"var videoInputStream: AsyncStream<CMSampleBuffer>","type":"property","path":"\/documentation\/haishinkit\/hkoutgoingstream\/videoinputstream"},{"title":"var videoOutputStream: AsyncStream<CMSampleBuffer>","type":"property","path":"\/documentation\/haishinkit\/hkoutgoingstream\/videooutputstream"},{"title":"var videoSettings: VideoCodecSettings","type":"property","path":"\/documentation\/haishinkit\/hkoutgoingstream\/videosettings"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func append(CMSampleBuffer)","type":"method","path":"\/documentation\/haishinkit\/hkoutgoingstream\/append(_:)"},{"title":"func append(AVAudioBuffer, when: AVAudioTime)","type":"method","path":"\/documentation\/haishinkit\/hkoutgoingstream\/append(_:when:)"},{"title":"func append(video: CMSampleBuffer)","type":"method","path":"\/documentation\/haishinkit\/hkoutgoingstream\/append(video:)"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Runner Implementations","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/haishinkit\/hkoutgoingstream\/startrunning()","title":"func startRunning()"},{"type":"method","path":"\/documentation\/haishinkit\/hkoutgoingstream\/stoprunning()","title":"func stopRunning()"}],"type":"symbol","path":"\/documentation\/haishinkit\/hkoutgoingstream\/runner-implementations"}],"type":"class","title":"HKOutgoingStream"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init()","type":"init","path":"\/documentation\/haishinkit\/hkstreamrecorder\/init()"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var audioTrackId: UInt8?","type":"property","path":"\/documentation\/haishinkit\/hkstreamrecorder\/audiotrackid"},{"title":"var isRecording: Bool","type":"property","path":"\/documentation\/haishinkit\/hkstreamrecorder\/isrecording"},{"title":"var movieFragmentInterval: Double?","type":"property","path":"\/documentation\/haishinkit\/hkstreamrecorder\/moviefragmentinterval"},{"title":"var moviesDirectory: URL","type":"property","path":"\/documentation\/haishinkit\/hkstreamrecorder\/moviesdirectory"},{"title":"var outputURL: URL?","type":"property","path":"\/documentation\/haishinkit\/hkstreamrecorder\/outputurl"},{"title":"var settings: [AVMediaType : [String : any Sendable]]","type":"property","path":"\/documentation\/haishinkit\/hkstreamrecorder\/settings"},{"title":"var videoTrackId: UInt8?","type":"property","path":"\/documentation\/haishinkit\/hkstreamrecorder\/videotrackid"},{"title":"Instance Methods","type":"groupMarker"},{"type":"method","title":"func selectTrack(UInt8?, mediaType: CMFormatDescription.MediaType)","path":"\/documentation\/haishinkit\/hkstreamrecorder\/selecttrack(_:mediatype:)"},{"type":"method","title":"func setMovieFragmentInterval(Double?)","path":"\/documentation\/haishinkit\/hkstreamrecorder\/setmoviefragmentinterval(_:)"},{"type":"method","title":"func setMovieFragmentInterval(movieFragmentInterval: Double?)","path":"\/documentation\/haishinkit\/hkstreamrecorder\/setmoviefragmentinterval(moviefragmentinterval:)"},{"type":"method","title":"func startRecording(URL?, settings: [AVMediaType : [String : any Sendable]]) async throws","path":"\/documentation\/haishinkit\/hkstreamrecorder\/startrecording(_:settings:)"},{"type":"method","title":"func stopRecording() async throws -> URL","path":"\/documentation\/haishinkit\/hkstreamrecorder\/stoprecording()"},{"type":"groupMarker","title":"Type Properties"},{"type":"property","title":"static let defaultSettings: [AVMediaType : [String : any Sendable]]","path":"\/documentation\/haishinkit\/hkstreamrecorder\/defaultsettings"},{"type":"groupMarker","title":"Enumerations"},{"type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case failedToAppend(error: (any Error)?)","path":"\/documentation\/haishinkit\/hkstreamrecorder\/error\/failedtoappend(error:)","type":"case"},{"title":"case failedToCreateAssetWriter(error: any Error)","path":"\/documentation\/haishinkit\/hkstreamrecorder\/error\/failedtocreateassetwriter(error:)","type":"case"},{"title":"case failedToCreateAssetWriterInput(error: any Error)","path":"\/documentation\/haishinkit\/hkstreamrecorder\/error\/failedtocreateassetwriterinput(error:)","type":"case"},{"title":"case failedToFinishWriting(error: (any Error)?)","path":"\/documentation\/haishinkit\/hkstreamrecorder\/error\/failedtofinishwriting(error:)","type":"case"},{"title":"case fileAlreadyExists(outputURL: URL)","path":"\/documentation\/haishinkit\/hkstreamrecorder\/error\/filealreadyexists(outputurl:)","type":"case"},{"title":"case invalidState","path":"\/documentation\/haishinkit\/hkstreamrecorder\/error\/invalidstate","type":"case"},{"title":"case notSupportedFileType(pathExtension: String)","path":"\/documentation\/haishinkit\/hkstreamrecorder\/error\/notsupportedfiletype(pathextension:)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Error Implementations","path":"\/documentation\/haishinkit\/hkstreamrecorder\/error\/error-implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var localizedDescription: String","type":"property","path":"\/documentation\/haishinkit\/hkstreamrecorder\/error\/localizeddescription"}],"type":"symbol"}],"title":"HKStreamRecorder.Error","path":"\/documentation\/haishinkit\/hkstreamrecorder\/error"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method","path":"\/documentation\/haishinkit\/hkstreamrecorder\/assertisolated(_:file:line:)"},{"title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","type":"method","path":"\/documentation\/haishinkit\/hkstreamrecorder\/assumeisolated(_:file:line:)"},{"title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method","path":"\/documentation\/haishinkit\/hkstreamrecorder\/preconditionisolated(_:file:line:)"}],"title":"Actor Implementations","path":"\/documentation\/haishinkit\/hkstreamrecorder\/actor-implementations"},{"type":"symbol","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func stream(some HKStream, didOutput: CMSampleBuffer)","path":"\/documentation\/haishinkit\/hkstreamrecorder\/stream(_:didoutput:)","type":"method"},{"title":"func stream(some HKStream, didOutput: AVAudioBuffer, when: AVAudioTime)","path":"\/documentation\/haishinkit\/hkstreamrecorder\/stream(_:didoutput:when:)","type":"method"}],"title":"HKStreamOutput Implementations","path":"\/documentation\/haishinkit\/hkstreamrecorder\/hkstreamoutput-implementations"},{"type":"symbol","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func mixer(MediaMixer, didOutput: CMSampleBuffer)","path":"\/documentation\/haishinkit\/hkstreamrecorder\/mixer(_:didoutput:)","type":"method"},{"title":"func mixer(MediaMixer, didOutput: AVAudioPCMBuffer, when: AVAudioTime)","path":"\/documentation\/haishinkit\/hkstreamrecorder\/mixer(_:didoutput:when:)","type":"method"}],"title":"MediaMixerOutput Implementations","path":"\/documentation\/haishinkit\/hkstreamrecorder\/mediamixeroutput-implementations"}],"type":"class","title":"HKStreamRecorder"},{"path":"\/documentation\/haishinkit\/hkstreamvideoadaptivebitratestrategy","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/haishinkit\/hkstreamvideoadaptivebitratestrategy\/init(mamimumvideobitrate:)","title":"init(mamimumVideoBitrate: Int)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/haishinkit\/hkstreamvideoadaptivebitratestrategy\/mamimumaudiobitrate","title":"let mamimumAudioBitRate: Int"},{"type":"property","path":"\/documentation\/haishinkit\/hkstreamvideoadaptivebitratestrategy\/mamimumvideobitrate","title":"let mamimumVideoBitRate: Int"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/haishinkit\/hkstreamvideoadaptivebitratestrategy\/adjustbitrate(_:stream:)","title":"func adjustBitrate(NetworkMonitorEvent, stream: some HKStream) async"},{"type":"groupMarker","title":"Type Properties"},{"type":"property","path":"\/documentation\/haishinkit\/hkstreamvideoadaptivebitratestrategy\/statuscountsthreshold","title":"static let statusCountsThreshold: Int"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","path":"\/documentation\/haishinkit\/hkstreamvideoadaptivebitratestrategy\/actor-implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method","path":"\/documentation\/haishinkit\/hkstreamvideoadaptivebitratestrategy\/assertisolated(_:file:line:)"},{"title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","type":"method","path":"\/documentation\/haishinkit\/hkstreamvideoadaptivebitratestrategy\/assumeisolated(_:file:line:)"},{"title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method","path":"\/documentation\/haishinkit\/hkstreamvideoadaptivebitratestrategy\/preconditionisolated(_:file:line:)"}],"title":"Actor Implementations"}],"type":"class","title":"HKStreamVideoAdaptiveBitRateStrategy"},{"path":"\/documentation\/haishinkit\/imagescreenobject","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/imagescreenobject\/cgimage","type":"property","title":"var cgImage: CGImage?"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/imagescreenobject\/makebounds(_:)","type":"method","title":"func makeBounds(CGSize) -> CGRect"},{"path":"\/documentation\/haishinkit\/imagescreenobject\/makeimage(_:)","type":"method","title":"func makeImage(some ScreenRenderer) -> CGImage?"}],"type":"class","title":"ImageScreenObject"},{"path":"\/documentation\/haishinkit\/mthkview","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/haishinkit\/mthkview\/init(coder:)","title":"init(coder: NSCoder)"},{"type":"init","path":"\/documentation\/haishinkit\/mthkview\/init(frame:)","title":"init(frame: CGRect)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/haishinkit\/mthkview\/audiotrackid","title":"var audioTrackId: UInt8?"},{"type":"property","path":"\/documentation\/haishinkit\/mthkview\/videogravity","title":"var videoGravity: AVLayerVideoGravity"},{"type":"property","path":"\/documentation\/haishinkit\/mthkview\/videotrackid","title":"var videoTrackId: UInt8?"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/haishinkit\/mthkview\/awakefromnib()","title":"func awakeFromNib()"},{"type":"method","path":"\/documentation\/haishinkit\/mthkview\/draw(_:)","title":"func draw(CGRect)"},{"type":"method","path":"\/documentation\/haishinkit\/mthkview\/registervideoeffect(_:)","title":"func registerVideoEffect(some VideoEffect) -> Bool"},{"type":"method","path":"\/documentation\/haishinkit\/mthkview\/unregistervideoeffect(_:)","title":"func unregisterVideoEffect(some VideoEffect) -> Bool"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","path":"\/documentation\/haishinkit\/mthkview\/hkstreamoutput-implementations","title":"HKStreamOutput Implementations","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/haishinkit\/mthkview\/stream(_:didoutput:)","title":"func stream(some HKStream, didOutput: CMSampleBuffer)"},{"type":"method","path":"\/documentation\/haishinkit\/mthkview\/stream(_:didoutput:when:)","title":"func stream(some HKStream, didOutput: AVAudioBuffer, when: AVAudioTime)"}]},{"type":"symbol","path":"\/documentation\/haishinkit\/mthkview\/mediamixeroutput-implementations","title":"MediaMixerOutput Implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func mixer(MediaMixer, didOutput: CMSampleBuffer)","path":"\/documentation\/haishinkit\/mthkview\/mixer(_:didoutput:)","type":"method"},{"title":"func mixer(MediaMixer, didOutput: AVAudioPCMBuffer, when: AVAudioTime)","path":"\/documentation\/haishinkit\/mthkview\/mixer(_:didoutput:when:)","type":"method"},{"title":"func selectTrack(UInt8?, mediaType: CMFormatDescription.MediaType) async","path":"\/documentation\/haishinkit\/mthkview\/selecttrack(_:mediatype:)","type":"method"}]}],"type":"class","title":"MTHKView"},{"path":"\/documentation\/haishinkit\/mediamixer","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(multiTrackAudioMixingEnabled: Bool, useManualCapture: Bool)","path":"\/documentation\/haishinkit\/mediamixer\/init(multitrackaudiomixingenabled:usemanualcapture:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var audioInputFormats: [UInt8 : AVAudioFormat]","path":"\/documentation\/haishinkit\/mediamixer\/audioinputformats","type":"property"},{"title":"var audioMixerSettings: AudioMixerSettings","path":"\/documentation\/haishinkit\/mediamixer\/audiomixersettings","type":"property"},{"title":"var frameRate: Float64","path":"\/documentation\/haishinkit\/mediamixer\/framerate","type":"property"},{"title":"var isCapturing: Bool","path":"\/documentation\/haishinkit\/mediamixer\/iscapturing","type":"property"},{"title":"var isInterputted: AsyncStream<Bool>","path":"\/documentation\/haishinkit\/mediamixer\/isinterputted","type":"property"},{"title":"var isMonitoringEnabled: Bool","path":"\/documentation\/haishinkit\/mediamixer\/ismonitoringenabled","type":"property"},{"title":"var isMultiTrackAudioMixingEnabled: Bool","path":"\/documentation\/haishinkit\/mediamixer\/ismultitrackaudiomixingenabled","type":"property"},{"title":"var isRunning: Bool","path":"\/documentation\/haishinkit\/mediamixer\/isrunning","type":"property"},{"title":"var isTorchEnabled: Bool","path":"\/documentation\/haishinkit\/mediamixer\/istorchenabled","type":"property"},{"title":"var screen: Screen","path":"\/documentation\/haishinkit\/mediamixer\/screen","type":"property"},{"title":"var sessionPreset: AVCaptureSession.Preset","path":"\/documentation\/haishinkit\/mediamixer\/sessionpreset","type":"property"},{"title":"var videoInputFormats: [UInt8 : CMFormatDescription]","path":"\/documentation\/haishinkit\/mediamixer\/videoinputformats","type":"property"},{"title":"var videoMixerSettings: VideoMixerSettings","path":"\/documentation\/haishinkit\/mediamixer\/videomixersettings","type":"property"},{"title":"var videoOrientation: AVCaptureVideoOrientation","path":"\/documentation\/haishinkit\/mediamixer\/videoorientation","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func addOutput(some MediaMixerOutput)","path":"\/documentation\/haishinkit\/mediamixer\/addoutput(_:)","type":"method"},{"title":"func append(CMSampleBuffer, track: UInt8)","path":"\/documentation\/haishinkit\/mediamixer\/append(_:track:)","type":"method"},{"title":"func append(AVAudioBuffer, when: AVAudioTime, track: UInt8)","path":"\/documentation\/haishinkit\/mediamixer\/append(_:when:track:)","type":"method"},{"title":"func attachAudio(AVCaptureDevice?, track: UInt8, configuration: AudioDeviceConfigurationBlock?) async throws","path":"\/documentation\/haishinkit\/mediamixer\/attachaudio(_:track:configuration:)","type":"method"},{"title":"func attachVideo(AVCaptureDevice?, track: UInt8, configuration: VideoDeviceConfigurationBlock?) async throws","path":"\/documentation\/haishinkit\/mediamixer\/attachvideo(_:track:configuration:)","type":"method"},{"title":"func configuration((AVCaptureSession) throws -> Void) rethrows","path":"\/documentation\/haishinkit\/mediamixer\/configuration(_:)","type":"method"},{"title":"func configuration(audio: UInt8, configuration: (AudioDeviceUnit) throws -> Void) throws","path":"\/documentation\/haishinkit\/mediamixer\/configuration(audio:configuration:)","type":"method"},{"title":"func configuration(video: UInt8, configuration: (VideoDeviceUnit) throws -> Void) throws","path":"\/documentation\/haishinkit\/mediamixer\/configuration(video:configuration:)","type":"method"},{"title":"func removeOutput(some MediaMixerOutput)","path":"\/documentation\/haishinkit\/mediamixer\/removeoutput(_:)","type":"method"},{"title":"func setAudioMixerSettings(AudioMixerSettings)","path":"\/documentation\/haishinkit\/mediamixer\/setaudiomixersettings(_:)","type":"method"},{"title":"func setFrameRate(Float64)","path":"\/documentation\/haishinkit\/mediamixer\/setframerate(_:)","type":"method"},{"title":"func setMonitoringEnabled(Bool)","path":"\/documentation\/haishinkit\/mediamixer\/setmonitoringenabled(_:)","type":"method"},{"title":"func setSessionPreset(AVCaptureSession.Preset)","path":"\/documentation\/haishinkit\/mediamixer\/setsessionpreset(_:)","type":"method"},{"title":"func setTorchEnabled(Bool)","path":"\/documentation\/haishinkit\/mediamixer\/settorchenabled(_:)","type":"method"},{"title":"func setVideoMixerSettings(VideoMixerSettings)","path":"\/documentation\/haishinkit\/mediamixer\/setvideomixersettings(_:)","type":"method"},{"title":"func setVideoOrientation(AVCaptureVideoOrientation)","path":"\/documentation\/haishinkit\/mediamixer\/setvideoorientation(_:)","type":"method"},{"title":"func startCapturing()","path":"\/documentation\/haishinkit\/mediamixer\/startcapturing()","type":"method"},{"title":"func stopCapturing()","path":"\/documentation\/haishinkit\/mediamixer\/stopcapturing()","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/haishinkit\/mediamixer\/error\/devicenotfound","type":"case","title":"case deviceNotFound"},{"path":"\/documentation\/haishinkit\/mediamixer\/error\/failedtoattach(_:)","type":"case","title":"case failedToAttach(any Error)"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/haishinkit\/mediamixer\/error\/error-implementations","type":"symbol","title":"Error Implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var localizedDescription: String","path":"\/documentation\/haishinkit\/mediamixer\/error\/localizeddescription"}]}],"title":"MediaMixer.Error","path":"\/documentation\/haishinkit\/mediamixer\/error","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/haishinkit\/mediamixer\/assertisolated(_:file:line:)"},{"type":"method","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","path":"\/documentation\/haishinkit\/mediamixer\/assumeisolated(_:file:line:)"},{"type":"method","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/haishinkit\/mediamixer\/preconditionisolated(_:file:line:)"}],"title":"Actor Implementations","path":"\/documentation\/haishinkit\/mediamixer\/actor-implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/mediamixer\/startrunning()","title":"func startRunning()","type":"method"},{"path":"\/documentation\/haishinkit\/mediamixer\/stoprunning()","title":"func stopRunning()","type":"method"}],"title":"AsyncRunner Implementations","path":"\/documentation\/haishinkit\/mediamixer\/asyncrunner-implementations","type":"symbol"}],"type":"class","title":"MediaMixer"},{"path":"\/documentation\/haishinkit\/networkmonitor","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(some NetworkTransportReporter)","type":"init","path":"\/documentation\/haishinkit\/networkmonitor\/init(_:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var event: AsyncStream<NetworkMonitorEvent>","type":"property","path":"\/documentation\/haishinkit\/networkmonitor\/event"},{"title":"var isRunning: Bool","type":"property","path":"\/documentation\/haishinkit\/networkmonitor\/isrunning"},{"title":"Enumerations","type":"groupMarker"},{"title":"NetworkMonitor.Error","type":"enum","path":"\/documentation\/haishinkit\/networkmonitor\/error","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","title":"case invalidState","path":"\/documentation\/haishinkit\/networkmonitor\/error\/invalidstate"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","title":"Equatable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/haishinkit\/networkmonitor\/error\/!=(_:_:)"}],"path":"\/documentation\/haishinkit\/networkmonitor\/error\/equatable-implementations"},{"type":"symbol","title":"Error Implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var localizedDescription: String","path":"\/documentation\/haishinkit\/networkmonitor\/error\/localizeddescription","type":"property"}],"path":"\/documentation\/haishinkit\/networkmonitor\/error\/error-implementations"}]},{"title":"Default Implementations","type":"groupMarker"},{"title":"Actor Implementations","type":"symbol","path":"\/documentation\/haishinkit\/networkmonitor\/actor-implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/networkmonitor\/assertisolated(_:file:line:)","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method"},{"path":"\/documentation\/haishinkit\/networkmonitor\/assumeisolated(_:file:line:)","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","type":"method"},{"path":"\/documentation\/haishinkit\/networkmonitor\/preconditionisolated(_:file:line:)","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method"}]},{"title":"AsyncRunner Implementations","type":"symbol","path":"\/documentation\/haishinkit\/networkmonitor\/asyncrunner-implementations","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func startRunning()","path":"\/documentation\/haishinkit\/networkmonitor\/startrunning()"},{"type":"method","title":"func stopRunning()","path":"\/documentation\/haishinkit\/networkmonitor\/stoprunning()"}]}],"type":"class","title":"NetworkMonitor"},{"path":"\/documentation\/haishinkit\/piphkview","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init?(coder: NSCoder)","path":"\/documentation\/haishinkit\/piphkview\/init(coder:)","type":"init"},{"title":"init(frame: CGRect)","path":"\/documentation\/haishinkit\/piphkview\/init(frame:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var audioTrackId: UInt8?","path":"\/documentation\/haishinkit\/piphkview\/audiotrackid","type":"property"},{"title":"var videoGravity: AVLayerVideoGravity","path":"\/documentation\/haishinkit\/piphkview\/videogravity","type":"property"},{"title":"var videoTrackId: UInt8?","path":"\/documentation\/haishinkit\/piphkview\/videotrackid","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func awakeFromNib()","path":"\/documentation\/haishinkit\/piphkview\/awakefromnib()","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"title":"static var defaultBackgroundColor: NSColor","path":"\/documentation\/haishinkit\/piphkview\/defaultbackgroundcolor","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/haishinkit\/piphkview\/stream(_:didoutput:)","title":"func stream(some HKStream, didOutput: CMSampleBuffer)"},{"type":"method","path":"\/documentation\/haishinkit\/piphkview\/stream(_:didoutput:when:)","title":"func stream(some HKStream, didOutput: AVAudioBuffer, when: AVAudioTime)"}],"title":"HKStreamOutput Implementations","path":"\/documentation\/haishinkit\/piphkview\/hkstreamoutput-implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/piphkview\/mixer(_:didoutput:)","title":"func mixer(MediaMixer, didOutput: CMSampleBuffer)","type":"method"},{"path":"\/documentation\/haishinkit\/piphkview\/mixer(_:didoutput:when:)","title":"func mixer(MediaMixer, didOutput: AVAudioPCMBuffer, when: AVAudioTime)","type":"method"},{"path":"\/documentation\/haishinkit\/piphkview\/selecttrack(_:mediatype:)","title":"func selectTrack(UInt8?, mediaType: CMFormatDescription.MediaType) async","type":"method"}],"title":"MediaMixerOutput Implementations","path":"\/documentation\/haishinkit\/piphkview\/mediamixeroutput-implementations","type":"symbol"}],"type":"class","title":"PiPHKView"},{"path":"\/documentation\/haishinkit\/rtmpconnection","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/init(swfurl:pageurl:flashver:fourcclist:videofourccinfomap:audiofourccinfomap:capsex:timeout:requesttimeout:chunksize:qualityofservice:)","type":"init","title":"init(swfUrl: String?, pageUrl: String?, flashVer: String, fourCcList: [String]?, videoFourCcInfoMap: AMFObject?, audioFourCcInfoMap: AMFObject?, capsEx: Int, timeout: Int, requestTimeout: UInt64, chunkSize: Int, qualityOfService: DispatchQoS)"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/audiofourccinfomap","type":"property","title":"let audioFourCcInfoMap: AMFObject?"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/capsex","type":"property","title":"let capsEx: Int"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/chunksize","type":"property","title":"let chunkSize: Int"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/connected","type":"property","title":"var connected: Bool"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/flashver","type":"property","title":"let flashVer: String"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/fourcclist","type":"property","title":"let fourCcList: [String]?"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/objectencoding","type":"property","title":"let objectEncoding: RTMPObjectEncoding"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/pageurl","type":"property","title":"let pageUrl: String?"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/qualityofservice","type":"property","title":"let qualityOfService: DispatchQoS"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/requesttimeout","type":"property","title":"let requestTimeout: UInt64"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/status","type":"property","title":"var status: AsyncStream<RTMPStatus>"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/swfurl","type":"property","title":"let swfUrl: String?"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/timeout","type":"property","title":"let timeout: Int"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/uri","type":"property","title":"var uri: URL?"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/videofourccinfomap","type":"property","title":"let videoFourCcInfoMap: AMFObject?"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/call(_:arguments:)","type":"method","title":"func call(String, arguments: (any Sendable)?...) async throws -> RTMPResponse"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/close()","type":"method","title":"func close() async throws"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/connect(_:arguments:)","type":"method","title":"func connect(String, arguments: (any Sendable)?...) async throws -> RTMPResponse"},{"type":"groupMarker","title":"Type Properties"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/defaultcapabilities","type":"property","title":"static let defaultCapabilities: Int"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/defaultchunksizes","type":"property","title":"static let defaultChunkSizeS: Int"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/defaultflashver","type":"property","title":"static let defaultFlashVer: String"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/defaultobjectencoding","type":"property","title":"static let defaultObjectEncoding: RTMPObjectEncoding"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/defaultport","type":"property","title":"static let defaultPort: Int"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/defaultrequesttimeout","type":"property","title":"static let defaultRequestTimeout: UInt64"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/defaultsecureport","type":"property","title":"static let defaultSecurePort: Int"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/defaulttimeout","type":"property","title":"static let defaultTimeout: Int"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/defaultwindowsizes","type":"property","title":"static let defaultWindowSizeS: Int64"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/supportedaudiofourccinfomap","type":"property","title":"static let supportedAudioFourCcInfoMap: AMFObject"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/supportedfourcclist","type":"property","title":"static let supportedFourCcList: [String]"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/supportedprotocols","type":"property","title":"static let supportedProtocols: Set<String>"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/supportedvideofourccinfomap","type":"property","title":"static let supportedVideoFourCcInfoMap: AMFObject"},{"type":"groupMarker","title":"Enumerations"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/code","type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","title":"case callBadVersion","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/callbadversion"},{"type":"case","title":"case callFailed","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/callfailed"},{"type":"case","title":"case callProhibited","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/callprohibited"},{"type":"case","title":"case connectAppshutdown","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/connectappshutdown"},{"type":"case","title":"case connectClosed","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/connectclosed"},{"type":"case","title":"case connectFailed","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/connectfailed"},{"type":"case","title":"case connectIdleTimeOut","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/connectidletimeout"},{"type":"case","title":"case connectInvalidApp","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/connectinvalidapp"},{"type":"case","title":"case connectNetworkChange","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/connectnetworkchange"},{"type":"case","title":"case connectRejected","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/connectrejected"},{"type":"case","title":"case connectSuccess","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/connectsuccess"},{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init?(rawValue: String)","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/init(rawvalue:)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var level: String","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/level"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/code\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"title":"Equatable Implementations","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/equatable-implementations"},{"type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/hashvalue","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func hash(into: inout Hasher)","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/hash(into:)","type":"method"}],"title":"RawRepresentable Implementations","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/rawrepresentable-implementations"}],"title":"RTMPConnection.Code"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/error","type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","title":"case connectionTimedOut","path":"\/documentation\/haishinkit\/rtmpconnection\/error\/connectiontimedout"},{"type":"case","title":"case invalidState","path":"\/documentation\/haishinkit\/rtmpconnection\/error\/invalidstate"},{"type":"case","title":"case requestFailed(response: RTMPResponse)","path":"\/documentation\/haishinkit\/rtmpconnection\/error\/requestfailed(response:)"},{"type":"case","title":"case requestTimedOut","path":"\/documentation\/haishinkit\/rtmpconnection\/error\/requesttimedout"},{"type":"case","title":"case socketErrorOccurred(any Error)","path":"\/documentation\/haishinkit\/rtmpconnection\/error\/socketerroroccurred(_:)"},{"type":"case","title":"case unsupportedCommand(String)","path":"\/documentation\/haishinkit\/rtmpconnection\/error\/unsupportedcommand(_:)"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","title":"Error Implementations","path":"\/documentation\/haishinkit\/rtmpconnection\/error\/error-implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var localizedDescription: String","type":"property","path":"\/documentation\/haishinkit\/rtmpconnection\/error\/localizeddescription"}]}],"title":"RTMPConnection.Error"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/actor-implementations","type":"symbol","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method","path":"\/documentation\/haishinkit\/rtmpconnection\/assertisolated(_:file:line:)"},{"title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","type":"method","path":"\/documentation\/haishinkit\/rtmpconnection\/assumeisolated(_:file:line:)"},{"title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method","path":"\/documentation\/haishinkit\/rtmpconnection\/preconditionisolated(_:file:line:)"}],"title":"Actor Implementations"}],"type":"class","title":"RTMPConnection"},{"path":"\/documentation\/haishinkit\/rtmpsharedobject","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var data: AMFObject","path":"\/documentation\/haishinkit\/rtmpsharedobject\/data"},{"type":"property","title":"let objectEncoding: RTMPObjectEncoding","path":"\/documentation\/haishinkit\/rtmpsharedobject\/objectencoding"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func clear() async","path":"\/documentation\/haishinkit\/rtmpsharedobject\/clear()"},{"type":"method","title":"func close() async","path":"\/documentation\/haishinkit\/rtmpsharedobject\/close()"},{"type":"method","title":"func connect(RTMPConnection) async","path":"\/documentation\/haishinkit\/rtmpsharedobject\/connect(_:)"},{"type":"method","title":"func setProperty(String, (any Sendable)?) async","path":"\/documentation\/haishinkit\/rtmpsharedobject\/setproperty(_:_:)"},{"type":"groupMarker","title":"Type Methods"},{"type":"method","title":"static func getRemote(withName: String, remotePath: String, persistence: Bool) -> RTMPSharedObject","path":"\/documentation\/haishinkit\/rtmpsharedobject\/getremote(withname:remotepath:persistence:)"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/haishinkit\/rtmpsharedobject\/assertisolated(_:file:line:)","type":"method"},{"title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","path":"\/documentation\/haishinkit\/rtmpsharedobject\/assumeisolated(_:file:line:)","type":"method"},{"title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/haishinkit\/rtmpsharedobject\/preconditionisolated(_:file:line:)","type":"method"}],"type":"symbol","title":"Actor Implementations","path":"\/documentation\/haishinkit\/rtmpsharedobject\/actor-implementations"}],"type":"class","title":"RTMPSharedObject"},{"path":"\/documentation\/haishinkit\/rtmpstream","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(connection: RTMPConnection, fcPublishName: String?)","type":"init","path":"\/documentation\/haishinkit\/rtmpstream\/init(connection:fcpublishname:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var audioSampleAccess: Bool","type":"property","path":"\/documentation\/haishinkit\/rtmpstream\/audiosampleaccess"},{"title":"var audioTrackId: UInt8?","type":"property","path":"\/documentation\/haishinkit\/rtmpstream\/audiotrackid"},{"title":"var currentFPS: UInt16","type":"property","path":"\/documentation\/haishinkit\/rtmpstream\/currentfps"},{"title":"var fcPublishName: String?","type":"property","path":"\/documentation\/haishinkit\/rtmpstream\/fcpublishname"},{"title":"var info: RTMPStreamInfo","type":"property","path":"\/documentation\/haishinkit\/rtmpstream\/info"},{"title":"var metadata: AMFArray","type":"property","path":"\/documentation\/haishinkit\/rtmpstream\/metadata"},{"title":"var objectEncoding: RTMPObjectEncoding","type":"property","path":"\/documentation\/haishinkit\/rtmpstream\/objectencoding"},{"title":"var readyState: HKStreamReadyState","type":"property","path":"\/documentation\/haishinkit\/rtmpstream\/readystate"},{"title":"var status: AsyncStream<RTMPStatus>","type":"property","path":"\/documentation\/haishinkit\/rtmpstream\/status"},{"title":"var videoSampleAccess: Bool","type":"property","path":"\/documentation\/haishinkit\/rtmpstream\/videosampleaccess"},{"title":"var videoTrackId: UInt8?","type":"property","path":"\/documentation\/haishinkit\/rtmpstream\/videotrackid"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func close() async throws -> RTMPResponse","type":"method","path":"\/documentation\/haishinkit\/rtmpstream\/close()"},{"title":"func pause(Bool) async throws -> RTMPResponse","type":"method","path":"\/documentation\/haishinkit\/rtmpstream\/pause(_:)"},{"title":"func play((any Sendable)?...) async throws -> RTMPResponse","type":"method","path":"\/documentation\/haishinkit\/rtmpstream\/play(_:)"},{"title":"func publish(String?, type: RTMPStream.HowToPublish) async throws -> RTMPResponse","type":"method","path":"\/documentation\/haishinkit\/rtmpstream\/publish(_:type:)"},{"title":"func receiveAudio(Bool) async throws","type":"method","path":"\/documentation\/haishinkit\/rtmpstream\/receiveaudio(_:)"},{"title":"func receiveVideo(Bool) async throws","type":"method","path":"\/documentation\/haishinkit\/rtmpstream\/receivevideo(_:)"},{"title":"func seek(Double) async throws","type":"method","path":"\/documentation\/haishinkit\/rtmpstream\/seek(_:)"},{"title":"func send(String, arguments: (any Sendable)?..., isResetTimestamp: Bool) throws","type":"method","path":"\/documentation\/haishinkit\/rtmpstream\/send(_:arguments:isresettimestamp:)"},{"title":"func togglePause() async throws -> RTMPResponse","type":"method","path":"\/documentation\/haishinkit\/rtmpstream\/togglepause()"},{"title":"Enumerations","type":"groupMarker"},{"title":"RTMPStream.Code","type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case bufferEmpty","type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/code\/bufferempty"},{"title":"case bufferFlush","type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/code\/bufferflush"},{"title":"case bufferFull","type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/code\/bufferfull"},{"title":"case connectClosed","type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/code\/connectclosed"},{"title":"case connectFailed","type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/code\/connectfailed"},{"title":"case connectRejected","type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/code\/connectrejected"},{"title":"case connectSuccess","type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/code\/connectsuccess"},{"title":"case drmUpdateNeeded","type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/code\/drmupdateneeded"},{"title":"case failed","type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/code\/failed"},{"title":"case multicastStreamReset","type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/code\/multicaststreamreset"},{"title":"case pauseNotify","type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/code\/pausenotify"},{"title":"case playFailed","type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/code\/playfailed"},{"title":"case playFileStructureInvalid","type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/code\/playfilestructureinvalid"},{"title":"case playInsufficientBW","type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/code\/playinsufficientbw"},{"title":"case playNoSupportedTrackFound","type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/code\/playnosupportedtrackfound"},{"title":"case playReset","type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/code\/playreset"},{"title":"case playStart","type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/code\/playstart"},{"title":"case playStop","type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/code\/playstop"},{"title":"case playStreamNotFound","type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/code\/playstreamnotfound"},{"title":"case playTransition","type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/code\/playtransition"},{"title":"case playUnpublishNotify","type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/code\/playunpublishnotify"},{"title":"case publishBadName","type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/code\/publishbadname"},{"title":"case publishIdle","type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/code\/publishidle"},{"title":"case publishStart","type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/code\/publishstart"},{"title":"case recordAlreadyExists","type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/code\/recordalreadyexists"},{"title":"case recordDiskQuotaExceeded","type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/code\/recorddiskquotaexceeded"},{"title":"case recordFailed","type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/code\/recordfailed"},{"title":"case recordNoAccess","type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/code\/recordnoaccess"},{"title":"case recordStart","type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/code\/recordstart"},{"title":"case recordStop","type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/code\/recordstop"},{"title":"case secondScreenStart","type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/code\/secondscreenstart"},{"title":"case secondScreenStop","type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/code\/secondscreenstop"},{"title":"case seekFailed","type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/code\/seekfailed"},{"title":"case seekInvalidTime","type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/code\/seekinvalidtime"},{"title":"case seekNotify","type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/code\/seeknotify"},{"title":"case stepNotify","type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/code\/stepnotify"},{"title":"case unpauseNotify","type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/code\/unpausenotify"},{"title":"case unpublishSuccess","type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/code\/unpublishsuccess"},{"title":"case videoDimensionChange","type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/code\/videodimensionchange"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: String)","type":"init","path":"\/documentation\/haishinkit\/rtmpstream\/code\/init(rawvalue:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var level: String","type":"property","path":"\/documentation\/haishinkit\/rtmpstream\/code\/level"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","type":"symbol","path":"\/documentation\/haishinkit\/rtmpstream\/code\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/haishinkit\/rtmpstream\/code\/!=(_:_:)"}]},{"title":"RawRepresentable Implementations","type":"symbol","path":"\/documentation\/haishinkit\/rtmpstream\/code\/rawrepresentable-implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var hashValue: Int","path":"\/documentation\/haishinkit\/rtmpstream\/code\/hashvalue"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func hash(into: inout Hasher)","path":"\/documentation\/haishinkit\/rtmpstream\/code\/hash(into:)"}]}],"path":"\/documentation\/haishinkit\/rtmpstream\/code"},{"title":"RTMPStream.Error","type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/rtmpstream\/error\/invalidstate","title":"case invalidState","type":"case"},{"path":"\/documentation\/haishinkit\/rtmpstream\/error\/requestfailed(response:)","title":"case requestFailed(response: RTMPResponse)","type":"case"},{"path":"\/documentation\/haishinkit\/rtmpstream\/error\/requesttimedout","title":"case requestTimedOut","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/rtmpstream\/error\/error-implementations","title":"Error Implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var localizedDescription: String","path":"\/documentation\/haishinkit\/rtmpstream\/error\/localizeddescription","type":"property"}],"type":"symbol"}],"path":"\/documentation\/haishinkit\/rtmpstream\/error"},{"title":"RTMPStream.HowToPublish","type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case append","type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish\/append"},{"title":"case appendWithGap","type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish\/appendwithgap"},{"title":"case live","type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish\/live"},{"title":"case record","type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish\/record"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: String)","type":"init","path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish\/init(rawvalue:)"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","type":"symbol","path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish\/equatable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"}]},{"title":"RawRepresentable Implementations","type":"symbol","path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish\/rawrepresentable-implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish\/hashvalue","type":"property","title":"var hashValue: Int"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish\/hash(into:)","type":"method","title":"func hash(into: inout Hasher)"}]}],"path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Actor Implementations","type":"symbol","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method","path":"\/documentation\/haishinkit\/rtmpstream\/assertisolated(_:file:line:)"},{"title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","type":"method","path":"\/documentation\/haishinkit\/rtmpstream\/assumeisolated(_:file:line:)"},{"title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method","path":"\/documentation\/haishinkit\/rtmpstream\/preconditionisolated(_:file:line:)"}],"path":"\/documentation\/haishinkit\/rtmpstream\/actor-implementations"},{"title":"HKStream Implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/haishinkit\/rtmpstream\/audiosettings","title":"var audioSettings: AudioCodecSettings"},{"type":"property","path":"\/documentation\/haishinkit\/rtmpstream\/soundtransform","title":"var soundTransform: SoundTransform?"},{"type":"property","path":"\/documentation\/haishinkit\/rtmpstream\/videosettings","title":"var videoSettings: VideoCodecSettings"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/haishinkit\/rtmpstream\/addoutput(_:)","title":"func addOutput(some HKStreamOutput)"},{"type":"method","path":"\/documentation\/haishinkit\/rtmpstream\/append(_:)","title":"func append(CMSampleBuffer)"},{"type":"method","path":"\/documentation\/haishinkit\/rtmpstream\/append(_:when:)","title":"func append(AVAudioBuffer, when: AVAudioTime)"},{"type":"method","path":"\/documentation\/haishinkit\/rtmpstream\/attachaudioplayer(_:)","title":"func attachAudioPlayer(AudioPlayer?) async"},{"type":"method","path":"\/documentation\/haishinkit\/rtmpstream\/dispatch(_:)","title":"func dispatch(NetworkMonitorEvent) async"},{"type":"method","path":"\/documentation\/haishinkit\/rtmpstream\/removeoutput(_:)","title":"func removeOutput(some HKStreamOutput)"},{"type":"method","path":"\/documentation\/haishinkit\/rtmpstream\/setaudiosettings(_:)","title":"func setAudioSettings(AudioCodecSettings)"},{"type":"method","path":"\/documentation\/haishinkit\/rtmpstream\/setbitratestorategy(_:)","title":"func setBitrateStorategy((some HKStreamBitRateStrategy)?)"},{"type":"method","path":"\/documentation\/haishinkit\/rtmpstream\/setsoundtransform(_:)","title":"func setSoundTransform(SoundTransform) async"},{"type":"method","path":"\/documentation\/haishinkit\/rtmpstream\/setvideoinputbuffercounts(_:)","title":"func setVideoInputBufferCounts(Int)"},{"type":"method","path":"\/documentation\/haishinkit\/rtmpstream\/setvideosettings(_:)","title":"func setVideoSettings(VideoCodecSettings)"}],"path":"\/documentation\/haishinkit\/rtmpstream\/hkstream-implementations"},{"title":"MediaMixerOutput Implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/rtmpstream\/mixer(_:didoutput:)","title":"func mixer(MediaMixer, didOutput: CMSampleBuffer)","type":"method"},{"path":"\/documentation\/haishinkit\/rtmpstream\/mixer(_:didoutput:when:)","title":"func mixer(MediaMixer, didOutput: AVAudioPCMBuffer, when: AVAudioTime)","type":"method"},{"path":"\/documentation\/haishinkit\/rtmpstream\/selecttrack(_:mediatype:)","title":"func selectTrack(UInt8?, mediaType: CMFormatDescription.MediaType)","type":"method"}],"path":"\/documentation\/haishinkit\/rtmpstream\/mediamixeroutput-implementations"}],"type":"class","title":"RTMPStream"},{"path":"\/documentation\/haishinkit\/screen","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init()","path":"\/documentation\/haishinkit\/screen\/init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var backgroundColor: CGColor","path":"\/documentation\/haishinkit\/screen\/backgroundcolor","type":"property"},{"title":"var childCounts: Int","path":"\/documentation\/haishinkit\/screen\/childcounts","type":"property"},{"title":"var delegate: (any ScreenDelegate)?","path":"\/documentation\/haishinkit\/screen\/delegate","type":"property"},{"title":"var size: CGSize","path":"\/documentation\/haishinkit\/screen\/size-swift.property","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func addChild(ScreenObject?) throws","path":"\/documentation\/haishinkit\/screen\/addchild(_:)","type":"method"},{"title":"func registerVideoEffect(some VideoEffect) -> Bool","path":"\/documentation\/haishinkit\/screen\/registervideoeffect(_:)","type":"method"},{"title":"func removeChild(ScreenObject?)","path":"\/documentation\/haishinkit\/screen\/removechild(_:)","type":"method"},{"title":"func unregisterVideoEffect(some VideoEffect) -> Bool","path":"\/documentation\/haishinkit\/screen\/unregistervideoeffect(_:)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"title":"static let size: CGSize","path":"\/documentation\/haishinkit\/screen\/size-swift.type.property","type":"property"}],"type":"class","title":"Screen"},{"path":"\/documentation\/haishinkit\/screenactor","children":[{"type":"groupMarker","title":"Type Properties"},{"type":"property","title":"static let shared: ScreenActor","path":"\/documentation\/haishinkit\/screenactor\/shared"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","title":"Actor Implementations","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/haishinkit\/screenactor\/assertisolated(_:file:line:)"},{"type":"method","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","path":"\/documentation\/haishinkit\/screenactor\/assumeisolated(_:file:line:)"},{"type":"method","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/haishinkit\/screenactor\/preconditionisolated(_:file:line:)"}],"path":"\/documentation\/haishinkit\/screenactor\/actor-implementations"},{"type":"symbol","title":"GlobalActor Implementations","children":[{"type":"groupMarker","title":"Type Properties"},{"path":"\/documentation\/haishinkit\/screenactor\/sharedunownedexecutor","type":"property","title":"static var sharedUnownedExecutor: UnownedSerialExecutor"}],"path":"\/documentation\/haishinkit\/screenactor\/globalactor-implementations"}],"type":"class","title":"ScreenActor"},{"path":"\/documentation\/haishinkit\/screenobject","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init()","path":"\/documentation\/haishinkit\/screenobject\/init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var bounds: CGRect","path":"\/documentation\/haishinkit\/screenobject\/bounds","type":"property"},{"title":"var cornerRadius: CGFloat","path":"\/documentation\/haishinkit\/screenobject\/cornerradius","type":"property"},{"title":"var horizontalAlignment: ScreenObject.HorizontalAlignment","path":"\/documentation\/haishinkit\/screenobject\/horizontalalignment-swift.property","type":"property"},{"title":"var isVisible: Bool","path":"\/documentation\/haishinkit\/screenobject\/isvisible","type":"property"},{"title":"var layoutMargin: NSEdgeInsets","path":"\/documentation\/haishinkit\/screenobject\/layoutmargin","type":"property"},{"title":"var parent: ScreenObjectContainer?","path":"\/documentation\/haishinkit\/screenobject\/parent","type":"property"},{"title":"var size: CGSize","path":"\/documentation\/haishinkit\/screenobject\/size","type":"property"},{"title":"var verticalAlignment: ScreenObject.VerticalAlignment","path":"\/documentation\/haishinkit\/screenobject\/verticalalignment-swift.property","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func invalidateLayout()","path":"\/documentation\/haishinkit\/screenobject\/invalidatelayout()","type":"method"},{"title":"func makeBounds(CGSize) -> CGRect","path":"\/documentation\/haishinkit\/screenobject\/makebounds(_:)","type":"method"},{"title":"func makeImage(some ScreenRenderer) -> CGImage?","path":"\/documentation\/haishinkit\/screenobject\/makeimage(_:)","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"title":"ScreenObject.HorizontalAlignment","path":"\/documentation\/haishinkit\/screenobject\/horizontalalignment-swift.enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","path":"\/documentation\/haishinkit\/screenobject\/horizontalalignment-swift.enum\/center","title":"case center"},{"type":"case","path":"\/documentation\/haishinkit\/screenobject\/horizontalalignment-swift.enum\/left","title":"case left"},{"type":"case","path":"\/documentation\/haishinkit\/screenobject\/horizontalalignment-swift.enum\/right","title":"case right"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","path":"\/documentation\/haishinkit\/screenobject\/horizontalalignment-swift.enum\/equatable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","path":"\/documentation\/haishinkit\/screenobject\/horizontalalignment-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"}],"title":"Equatable Implementations"}],"type":"enum"},{"title":"ScreenObject.VerticalAlignment","path":"\/documentation\/haishinkit\/screenobject\/verticalalignment-swift.enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/haishinkit\/screenobject\/verticalalignment-swift.enum\/bottom","type":"case","title":"case bottom"},{"path":"\/documentation\/haishinkit\/screenobject\/verticalalignment-swift.enum\/middle","type":"case","title":"case middle"},{"path":"\/documentation\/haishinkit\/screenobject\/verticalalignment-swift.enum\/top","type":"case","title":"case top"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/haishinkit\/screenobject\/verticalalignment-swift.enum\/equatable-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/haishinkit\/screenobject\/verticalalignment-swift.enum\/!=(_:_:)"}],"title":"Equatable Implementations"}],"type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","path":"\/documentation\/haishinkit\/screenobject\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/haishinkit\/screenobject\/!=(_:_:)"},{"title":"static func == (ScreenObject, ScreenObject) -> Bool","type":"op","path":"\/documentation\/haishinkit\/screenobject\/==(_:_:)"}],"type":"symbol"},{"title":"Hashable Implementations","path":"\/documentation\/haishinkit\/screenobject\/hashable-implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func hash(into: inout Hasher)","path":"\/documentation\/haishinkit\/screenobject\/hash(into:)","type":"method"}],"type":"symbol"}],"type":"class","title":"ScreenObject"},{"path":"\/documentation\/haishinkit\/screenobjectcontainer","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/screenobjectcontainer\/childcounts","type":"property","title":"var childCounts: Int"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/screenobjectcontainer\/addchild(_:)","type":"method","title":"func addChild(ScreenObject?) throws"},{"path":"\/documentation\/haishinkit\/screenobjectcontainer\/removechild(_:)","type":"method","title":"func removeChild(ScreenObject?)"},{"type":"groupMarker","title":"Enumerations"},{"path":"\/documentation\/haishinkit\/screenobjectcontainer\/error","type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case alreadyExists","path":"\/documentation\/haishinkit\/screenobjectcontainer\/error\/alreadyexists","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/haishinkit\/screenobjectcontainer\/error\/!=(_:_:)","type":"op"}],"path":"\/documentation\/haishinkit\/screenobjectcontainer\/error\/equatable-implementations","type":"symbol"},{"title":"Error Implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var localizedDescription: String","path":"\/documentation\/haishinkit\/screenobjectcontainer\/error\/localizeddescription"}],"path":"\/documentation\/haishinkit\/screenobjectcontainer\/error\/error-implementations","type":"symbol"}],"title":"ScreenObjectContainer.Error"}],"type":"class","title":"ScreenObjectContainer"},{"path":"\/documentation\/haishinkit\/sessionbuilderfactory","children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/sessionbuilderfactory\/make(_:)","title":"func make(URL?) throws -> SessionBuilder","type":"method"},{"path":"\/documentation\/haishinkit\/sessionbuilderfactory\/register(_:)","title":"func register(some SessionFactory)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/sessionbuilderfactory\/shared","title":"static let shared: SessionBuilderFactory","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/sessionbuilderfactory\/error","title":"SessionBuilderFactory.Error","type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case illegalArgument","path":"\/documentation\/haishinkit\/sessionbuilderfactory\/error\/illegalargument","type":"case"},{"title":"case notFound","path":"\/documentation\/haishinkit\/sessionbuilderfactory\/error\/notfound","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","path":"\/documentation\/haishinkit\/sessionbuilderfactory\/error\/equatable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/haishinkit\/sessionbuilderfactory\/error\/!=(_:_:)"}],"type":"symbol"},{"title":"Error Implementations","path":"\/documentation\/haishinkit\/sessionbuilderfactory\/error\/error-implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var localizedDescription: String","type":"property","path":"\/documentation\/haishinkit\/sessionbuilderfactory\/error\/localizeddescription"}],"type":"symbol"}]},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/sessionbuilderfactory\/actor-implementations","title":"Actor Implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/haishinkit\/sessionbuilderfactory\/assertisolated(_:file:line:)"},{"type":"method","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","path":"\/documentation\/haishinkit\/sessionbuilderfactory\/assumeisolated(_:file:line:)"},{"type":"method","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/haishinkit\/sessionbuilderfactory\/preconditionisolated(_:file:line:)"}]}],"type":"class","title":"SessionBuilderFactory"},{"path":"\/documentation\/haishinkit\/streamscreenobject","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/streamscreenobject\/chromakeycolor","title":"var chromaKeyColor: CGColor?","type":"property"},{"path":"\/documentation\/haishinkit\/streamscreenobject\/videogravity","title":"var videoGravity: AVLayerVideoGravity","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/streamscreenobject\/makebounds(_:)","title":"func makeBounds(CGSize) -> CGRect","type":"method"},{"path":"\/documentation\/haishinkit\/streamscreenobject\/makeimage(_:)","title":"func makeImage(some ScreenRenderer) -> CGImage?","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/streamscreenobject\/hkstreamoutput-implementations","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/haishinkit\/streamscreenobject\/stream(_:didoutput:)","title":"func stream(some HKStream, didOutput: CMSampleBuffer)"},{"type":"method","path":"\/documentation\/haishinkit\/streamscreenobject\/stream(_:didoutput:when:)","title":"func stream(some HKStream, didOutput: AVAudioBuffer, when: AVAudioTime)"}],"title":"HKStreamOutput Implementations","type":"symbol"}],"type":"class","title":"StreamScreenObject"},{"path":"\/documentation\/haishinkit\/tsreader","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init()","path":"\/documentation\/haishinkit\/tsreader\/init()"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var output: AsyncStream<(UInt16, CMSampleBuffer)>","path":"\/documentation\/haishinkit\/tsreader\/output"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func clear()","path":"\/documentation\/haishinkit\/tsreader\/clear()"},{"type":"method","title":"func read(Data) -> Int","path":"\/documentation\/haishinkit\/tsreader\/read(_:)"}],"type":"class","title":"TSReader"},{"path":"\/documentation\/haishinkit\/tswriter","children":[{"title":"Initializers","type":"groupMarker"},{"type":"init","title":"init(segmentDuration: Double)","path":"\/documentation\/haishinkit\/tswriter\/init(segmentduration:)"},{"title":"Instance Properties","type":"groupMarker"},{"type":"property","title":"var audioFormat: AVAudioFormat?","path":"\/documentation\/haishinkit\/tswriter\/audioformat"},{"type":"property","title":"var expectedMedias: Set<AVMediaType>","path":"\/documentation\/haishinkit\/tswriter\/expectedmedias"},{"type":"property","title":"var output: AsyncStream<Data>","path":"\/documentation\/haishinkit\/tswriter\/output"},{"type":"property","title":"var videoFormat: CMFormatDescription?","path":"\/documentation\/haishinkit\/tswriter\/videoformat"},{"title":"Instance Methods","type":"groupMarker"},{"type":"method","title":"func append(CMSampleBuffer)","path":"\/documentation\/haishinkit\/tswriter\/append(_:)"},{"type":"method","title":"func append(AVAudioBuffer, when: AVAudioTime)","path":"\/documentation\/haishinkit\/tswriter\/append(_:when:)"},{"type":"method","title":"func clear()","path":"\/documentation\/haishinkit\/tswriter\/clear()"}],"type":"class","title":"TSWriter"},{"path":"\/documentation\/haishinkit\/textscreenobject","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/textscreenobject\/attributes","title":"var attributes: [NSAttributedString.Key : Any]?","type":"property"},{"path":"\/documentation\/haishinkit\/textscreenobject\/bounds","title":"var bounds: CGRect","type":"property"},{"path":"\/documentation\/haishinkit\/textscreenobject\/string","title":"var string: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/textscreenobject\/makebounds(_:)","title":"func makeBounds(CGSize) -> CGRect","type":"method"},{"path":"\/documentation\/haishinkit\/textscreenobject\/makeimage(_:)","title":"func makeImage(some ScreenRenderer) -> CGImage?","type":"method"}],"type":"class","title":"TextScreenObject"},{"path":"\/documentation\/haishinkit\/videodeviceunit","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var colorFormat: OSType","path":"\/documentation\/haishinkit\/videodeviceunit\/colorformat-swift.property"},{"type":"property","title":"var connection: AVCaptureConnection?","path":"\/documentation\/haishinkit\/videodeviceunit\/connection"},{"type":"property","title":"var device: AVCaptureDevice?","path":"\/documentation\/haishinkit\/videodeviceunit\/device"},{"type":"property","title":"var input: AVCaptureInput?","path":"\/documentation\/haishinkit\/videodeviceunit\/input"},{"type":"property","title":"var isVideoMirrored: Bool","path":"\/documentation\/haishinkit\/videodeviceunit\/isvideomirrored"},{"type":"property","title":"var output: VideoDeviceUnit.Output?","path":"\/documentation\/haishinkit\/videodeviceunit\/output-swift.property"},{"type":"property","title":"let track: UInt8","path":"\/documentation\/haishinkit\/videodeviceunit\/track"},{"type":"property","title":"var videoOrientation: AVCaptureVideoOrientation","path":"\/documentation\/haishinkit\/videodeviceunit\/videoorientation"},{"type":"groupMarker","title":"Type Aliases"},{"type":"typealias","title":"VideoDeviceUnit.Output","path":"\/documentation\/haishinkit\/videodeviceunit\/output-swift.typealias"},{"type":"groupMarker","title":"Type Properties"},{"type":"property","title":"static let colorFormat: OSType","path":"\/documentation\/haishinkit\/videodeviceunit\/colorformat-swift.type.property"}],"type":"class","title":"VideoDeviceUnit"},{"path":"\/documentation\/haishinkit\/videorotator","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/haishinkit\/videorotator\/init()","title":"init?()"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/haishinkit\/videorotator\/rotate(buffer:)","title":"func rotate(buffer: CMSampleBuffer) -> Result<CMSampleBuffer, VideoRotator.Error>"},{"type":"groupMarker","title":"Enumerations"},{"type":"enum","path":"\/documentation\/haishinkit\/videorotator\/error","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case cannotAllocatePixelBuffer(CVReturn)","path":"\/documentation\/haishinkit\/videorotator\/error\/cannotallocatepixelbuffer(_:)","type":"case"},{"title":"case noImageBuffer","path":"\/documentation\/haishinkit\/videorotator\/error\/noimagebuffer","type":"case"},{"title":"case noOrientationInfo","path":"\/documentation\/haishinkit\/videorotator\/error\/noorientationinfo","type":"case"},{"title":"case rotationFailure(OSStatus)","path":"\/documentation\/haishinkit\/videorotator\/error\/rotationfailure(_:)","type":"case"},{"title":"case unsupportedOrientation","path":"\/documentation\/haishinkit\/videorotator\/error\/unsupportedorientation","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Error Implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var localizedDescription: String","type":"property","path":"\/documentation\/haishinkit\/videorotator\/error\/localizeddescription"}],"path":"\/documentation\/haishinkit\/videorotator\/error\/error-implementations","type":"symbol"}],"title":"VideoRotator.Error"}],"type":"class","title":"VideoRotator"},{"path":"\/documentation\/haishinkit\/videotrackscreenobject","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/haishinkit\/videotrackscreenobject\/init()","type":"init","title":"init()"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/videotrackscreenobject\/chromakeycolor","type":"property","title":"var chromaKeyColor: CGColor?"},{"path":"\/documentation\/haishinkit\/videotrackscreenobject\/framerate","type":"property","title":"var frameRate: Int"},{"path":"\/documentation\/haishinkit\/videotrackscreenobject\/track","type":"property","title":"var track: UInt8"},{"path":"\/documentation\/haishinkit\/videotrackscreenobject\/videogravity","type":"property","title":"var videoGravity: AVLayerVideoGravity"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/videotrackscreenobject\/draw(_:)","type":"method","title":"func draw(some ScreenRenderer)"},{"path":"\/documentation\/haishinkit\/videotrackscreenobject\/makebounds(_:)","type":"method","title":"func makeBounds(CGSize) -> CGRect"},{"path":"\/documentation\/haishinkit\/videotrackscreenobject\/makeimage(_:)","type":"method","title":"func makeImage(some ScreenRenderer) -> CGImage?"},{"path":"\/documentation\/haishinkit\/videotrackscreenobject\/registervideoeffect(_:)","type":"method","title":"func registerVideoEffect(some VideoEffect) -> Bool"},{"path":"\/documentation\/haishinkit\/videotrackscreenobject\/unregistervideoeffect(_:)","type":"method","title":"func unregisterVideoEffect(some VideoEffect) -> Bool"}],"type":"class","title":"VideoTrackScreenObject"},{"type":"groupMarker","title":"Protocols"},{"path":"\/documentation\/haishinkit\/asyncrunner","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/haishinkit\/asyncrunner\/isrunning","title":"var isRunning: Bool"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/haishinkit\/asyncrunner\/startrunning()","title":"func startRunning() async"},{"type":"method","path":"\/documentation\/haishinkit\/asyncrunner\/stoprunning()","title":"func stopRunning() async"}],"type":"protocol","title":"AsyncRunner"},{"path":"\/documentation\/haishinkit\/chromakeyprocessable","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/chromakeyprocessable\/chromakeycolor","type":"property","title":"var chromaKeyColor: CGColor?"}],"type":"protocol","title":"ChromaKeyProcessable"},{"path":"\/documentation\/haishinkit\/hkstream","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var audioSettings: AudioCodecSettings","path":"\/documentation\/haishinkit\/hkstream\/audiosettings"},{"type":"property","title":"var readyState: HKStreamReadyState","path":"\/documentation\/haishinkit\/hkstream\/readystate"},{"type":"property","title":"var soundTransform: SoundTransform?","path":"\/documentation\/haishinkit\/hkstream\/soundtransform"},{"type":"property","title":"var videoSettings: VideoCodecSettings","path":"\/documentation\/haishinkit\/hkstream\/videosettings"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func addOutput(some HKStreamOutput)","path":"\/documentation\/haishinkit\/hkstream\/addoutput(_:)"},{"type":"method","title":"func append(CMSampleBuffer)","path":"\/documentation\/haishinkit\/hkstream\/append(_:)"},{"type":"method","title":"func append(AVAudioBuffer, when: AVAudioTime)","path":"\/documentation\/haishinkit\/hkstream\/append(_:when:)"},{"type":"method","title":"func attachAudioPlayer(AudioPlayer?) async","path":"\/documentation\/haishinkit\/hkstream\/attachaudioplayer(_:)"},{"type":"method","title":"func dispatch(NetworkMonitorEvent) async","path":"\/documentation\/haishinkit\/hkstream\/dispatch(_:)"},{"type":"method","title":"func removeOutput(some HKStreamOutput)","path":"\/documentation\/haishinkit\/hkstream\/removeoutput(_:)"},{"type":"method","title":"func setAudioSettings(AudioCodecSettings)","path":"\/documentation\/haishinkit\/hkstream\/setaudiosettings(_:)"},{"type":"method","title":"func setBitrateStorategy((some HKStreamBitRateStrategy)?)","path":"\/documentation\/haishinkit\/hkstream\/setbitratestorategy(_:)"},{"type":"method","title":"func setSoundTransform(SoundTransform) async","path":"\/documentation\/haishinkit\/hkstream\/setsoundtransform(_:)"},{"type":"method","title":"func setVideoInputBufferCounts(Int)","path":"\/documentation\/haishinkit\/hkstream\/setvideoinputbuffercounts(_:)"},{"type":"method","title":"func setVideoSettings(VideoCodecSettings)","path":"\/documentation\/haishinkit\/hkstream\/setvideosettings(_:)"}],"type":"protocol","title":"HKStream"},{"path":"\/documentation\/haishinkit\/hkstreambitratestrategy","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var mamimumAudioBitRate: Int","path":"\/documentation\/haishinkit\/hkstreambitratestrategy\/mamimumaudiobitrate","type":"property"},{"title":"var mamimumVideoBitRate: Int","path":"\/documentation\/haishinkit\/hkstreambitratestrategy\/mamimumvideobitrate","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func adjustBitrate(NetworkMonitorEvent, stream: some HKStream) async","path":"\/documentation\/haishinkit\/hkstreambitratestrategy\/adjustbitrate(_:stream:)","type":"method"}],"type":"protocol","title":"HKStreamBitRateStrategy"},{"path":"\/documentation\/haishinkit\/hkstreamoutput","children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/hkstreamoutput\/stream(_:didoutput:)","type":"method","title":"func stream(some HKStream, didOutput: CMSampleBuffer)"},{"path":"\/documentation\/haishinkit\/hkstreamoutput\/stream(_:didoutput:when:)","type":"method","title":"func stream(some HKStream, didOutput: AVAudioBuffer, when: AVAudioTime)"}],"type":"protocol","title":"HKStreamOutput"},{"path":"\/documentation\/haishinkit\/mediamixeroutput","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/mediamixeroutput\/audiotrackid","type":"property","title":"var audioTrackId: UInt8?"},{"path":"\/documentation\/haishinkit\/mediamixeroutput\/videotrackid","type":"property","title":"var videoTrackId: UInt8?"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/mediamixeroutput\/mixer(_:didoutput:)","type":"method","title":"func mixer(MediaMixer, didOutput: CMSampleBuffer)"},{"path":"\/documentation\/haishinkit\/mediamixeroutput\/mixer(_:didoutput:when:)","type":"method","title":"func mixer(MediaMixer, didOutput: AVAudioPCMBuffer, when: AVAudioTime)"},{"path":"\/documentation\/haishinkit\/mediamixeroutput\/selecttrack(_:mediatype:)","type":"method","title":"func selectTrack(UInt8?, mediaType: CMFormatDescription.MediaType) async"}],"type":"protocol","title":"MediaMixerOutput"},{"path":"\/documentation\/haishinkit\/networkconnection","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/networkconnection\/connected","type":"property","title":"var connected: Bool"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/networkconnection\/close()","type":"method","title":"func close() async throws"}],"type":"protocol","title":"NetworkConnection"},{"path":"\/documentation\/haishinkit\/networktransportreporter","children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/networktransportreporter\/makenetworkmonitor()","title":"func makeNetworkMonitor() async -> NetworkMonitor","type":"method"},{"path":"\/documentation\/haishinkit\/networktransportreporter\/makenetworktransportreport()","title":"func makeNetworkTransportReport() async -> NetworkTransportReport","type":"method"}],"type":"protocol","title":"NetworkTransportReporter"},{"path":"\/documentation\/haishinkit\/runner","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var isRunning: Bool","type":"property","path":"\/documentation\/haishinkit\/runner\/isrunning"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func startRunning()","type":"method","path":"\/documentation\/haishinkit\/runner\/startrunning()"},{"title":"func stopRunning()","type":"method","path":"\/documentation\/haishinkit\/runner\/stoprunning()"}],"type":"protocol","title":"Runner"},{"path":"\/documentation\/haishinkit\/screendelegate","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/haishinkit\/screendelegate\/screen(_:willlayout:)","title":"func screen(Screen, willLayout: CMTime)"}],"type":"protocol","title":"ScreenDelegate"},{"path":"\/documentation\/haishinkit\/screenrenderer","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var backgroundColor: CGColor","path":"\/documentation\/haishinkit\/screenrenderer\/backgroundcolor","type":"property"},{"title":"var bounds: CGRect","path":"\/documentation\/haishinkit\/screenrenderer\/bounds","type":"property"},{"title":"var context: CIContext","path":"\/documentation\/haishinkit\/screenrenderer\/context","type":"property"},{"title":"var presentationTimeStamp: CMTime","path":"\/documentation\/haishinkit\/screenrenderer\/presentationtimestamp","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func draw(ScreenObject)","path":"\/documentation\/haishinkit\/screenrenderer\/draw(_:)","type":"method"},{"title":"func layout(ScreenObject)","path":"\/documentation\/haishinkit\/screenrenderer\/layout(_:)","type":"method"},{"title":"func setTarget(CVPixelBuffer?)","path":"\/documentation\/haishinkit\/screenrenderer\/settarget(_:)","type":"method"}],"type":"protocol","title":"ScreenRenderer"},{"path":"\/documentation\/haishinkit\/session","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(uri: URL)","type":"init","path":"\/documentation\/haishinkit\/session\/init(uri:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var isConnected: Bool","type":"property","path":"\/documentation\/haishinkit\/session\/isconnected"},{"title":"var stream: any HKStream","type":"property","path":"\/documentation\/haishinkit\/session\/stream"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func close() async throws","type":"method","path":"\/documentation\/haishinkit\/session\/close()"},{"title":"func connect(SessionMethod) async throws","type":"method","path":"\/documentation\/haishinkit\/session\/connect(_:)"}],"type":"protocol","title":"Session"},{"path":"\/documentation\/haishinkit\/sessionfactory","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/haishinkit\/sessionfactory\/supportedprotocols","title":"var supportedProtocols: Set<String>"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/haishinkit\/sessionfactory\/make(uri:)","title":"func make(uri: URL) -> any Session"}],"type":"protocol","title":"SessionFactory"},{"path":"\/documentation\/haishinkit\/videoeffect","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func execute(CIImage) -> CIImage","type":"method","path":"\/documentation\/haishinkit\/videoeffect\/execute(_:)"}],"type":"protocol","title":"VideoEffect"},{"type":"groupMarker","title":"Structures"},{"path":"\/documentation\/haishinkit\/amfarray","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init(count: Int)","path":"\/documentation\/haishinkit\/amfarray\/init(count:)"},{"type":"init","title":"init(data: [(any Sendable)?])","path":"\/documentation\/haishinkit\/amfarray\/init(data:)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var length: Int","path":"\/documentation\/haishinkit\/amfarray\/length"},{"type":"groupMarker","title":"Subscripts"},{"type":"subscript","title":"subscript(Any) -> (any Sendable)?","path":"\/documentation\/haishinkit\/amfarray\/subscript(_:)"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","title":"CustomDebugStringConvertible Implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var debugDescription: String","path":"\/documentation\/haishinkit\/amfarray\/debugdescription","type":"property"}],"path":"\/documentation\/haishinkit\/amfarray\/customdebugstringconvertible-implementations"},{"type":"symbol","title":"Equatable Implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","path":"\/documentation\/haishinkit\/amfarray\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"},{"type":"op","path":"\/documentation\/haishinkit\/amfarray\/==(_:_:)","title":"static func == (AMFArray, AMFArray) -> Bool"}],"path":"\/documentation\/haishinkit\/amfarray\/equatable-implementations"},{"type":"symbol","title":"ExpressibleByArrayLiteral Implementations","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/haishinkit\/amfarray\/init(arrayliteral:)","title":"init(arrayLiteral: (any Sendable)?...)"}],"path":"\/documentation\/haishinkit\/amfarray\/expressiblebyarrayliteral-implementations"}],"type":"struct","title":"AMFArray"},{"path":"\/documentation\/haishinkit\/amftypedobject","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"let data: AMFObject","path":"\/documentation\/haishinkit\/amftypedobject\/data","type":"property"},{"title":"let typeName: String","path":"\/documentation\/haishinkit\/amftypedobject\/typename","type":"property"}],"type":"struct","title":"AMFTypedObject"},{"path":"\/documentation\/haishinkit\/amfundefined","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var description: String","type":"property","path":"\/documentation\/haishinkit\/amfundefined\/description"}],"type":"struct","title":"AMFUndefined"},{"path":"\/documentation\/haishinkit\/amfxml","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(data: String)","path":"\/documentation\/haishinkit\/amfxml\/init(data:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var description: String","path":"\/documentation\/haishinkit\/amfxml\/description","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/haishinkit\/amfxml\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"},{"path":"\/documentation\/haishinkit\/amfxml\/==(_:_:)","type":"op","title":"static func == (AMFXML, AMFXML) -> Bool"}],"title":"Equatable Implementations","path":"\/documentation\/haishinkit\/amfxml\/equatable-implementations","type":"symbol"}],"type":"struct","title":"AMFXML"},{"path":"\/documentation\/haishinkit\/amfxmldocument","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init(data: String)","path":"\/documentation\/haishinkit\/amfxmldocument\/init(data:)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var description: String","path":"\/documentation\/haishinkit\/amfxmldocument\/description"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/haishinkit\/amfxmldocument\/!=(_:_:)"},{"title":"static func == (AMFXMLDocument, AMFXMLDocument) -> Bool","type":"op","path":"\/documentation\/haishinkit\/amfxmldocument\/==(_:_:)"}],"type":"symbol","title":"Equatable Implementations","path":"\/documentation\/haishinkit\/amfxmldocument\/equatable-implementations"}],"type":"struct","title":"AMFXMLDocument"},{"path":"\/documentation\/haishinkit\/audiocodecsettings","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/haishinkit\/audiocodecsettings\/init(bitrate:downmix:channelmap:samplerate:format:)","title":"init(bitRate: Int, downmix: Bool, channelMap: [Int]?, sampleRate: Float64, format: AudioCodecSettings.Format)"},{"type":"init","path":"\/documentation\/haishinkit\/audiocodecsettings\/init(from:)","title":"init(from: any Decoder) throws"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/haishinkit\/audiocodecsettings\/bitrate","title":"var bitRate: Int"},{"type":"property","path":"\/documentation\/haishinkit\/audiocodecsettings\/channelmap","title":"var channelMap: [Int]?"},{"type":"property","path":"\/documentation\/haishinkit\/audiocodecsettings\/downmix","title":"var downmix: Bool"},{"type":"property","path":"\/documentation\/haishinkit\/audiocodecsettings\/format-swift.property","title":"var format: AudioCodecSettings.Format"},{"type":"property","path":"\/documentation\/haishinkit\/audiocodecsettings\/samplerate","title":"let sampleRate: Float64"},{"type":"groupMarker","title":"Type Properties"},{"type":"property","path":"\/documentation\/haishinkit\/audiocodecsettings\/default","title":"static let `default`: AudioCodecSettings"},{"type":"property","path":"\/documentation\/haishinkit\/audiocodecsettings\/defaultbitrate","title":"static let defaultBitRate: Int"},{"type":"property","path":"\/documentation\/haishinkit\/audiocodecsettings\/maximumnumberofchannels","title":"static let maximumNumberOfChannels: UInt32"},{"type":"groupMarker","title":"Enumerations"},{"type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case aac","type":"case","path":"\/documentation\/haishinkit\/audiocodecsettings\/format-swift.enum\/aac"},{"title":"case opus","type":"case","path":"\/documentation\/haishinkit\/audiocodecsettings\/format-swift.enum\/opus"},{"title":"case pcm","type":"case","path":"\/documentation\/haishinkit\/audiocodecsettings\/format-swift.enum\/pcm"},{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","type":"init","path":"\/documentation\/haishinkit\/audiocodecsettings\/format-swift.enum\/init(from:)"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","path":"\/documentation\/haishinkit\/audiocodecsettings\/format-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"}],"path":"\/documentation\/haishinkit\/audiocodecsettings\/format-swift.enum\/equatable-implementations"}],"path":"\/documentation\/haishinkit\/audiocodecsettings\/format-swift.enum","title":"AudioCodecSettings.Format"}],"type":"struct","title":"AudioCodecSettings"},{"path":"\/documentation\/haishinkit\/audiomixersettings","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/haishinkit\/audiomixersettings\/init(samplerate:channels:ismuted:maintrack:tracks:)","type":"init","title":"init(sampleRate: Float64, channels: UInt32, isMuted: Bool, mainTrack: UInt8, tracks: [UInt8 : AudioMixerTrackSettings])"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/audiomixersettings\/channels","type":"property","title":"let channels: UInt32"},{"path":"\/documentation\/haishinkit\/audiomixersettings\/ismuted","type":"property","title":"var isMuted: Bool"},{"path":"\/documentation\/haishinkit\/audiomixersettings\/maintrack","type":"property","title":"var mainTrack: UInt8"},{"path":"\/documentation\/haishinkit\/audiomixersettings\/maximumnumberofchannels","type":"property","title":"var maximumNumberOfChannels: UInt32"},{"path":"\/documentation\/haishinkit\/audiomixersettings\/samplerate","type":"property","title":"let sampleRate: Float64"},{"path":"\/documentation\/haishinkit\/audiomixersettings\/tracks","type":"property","title":"var tracks: [UInt8 : AudioMixerTrackSettings]"},{"type":"groupMarker","title":"Type Properties"},{"path":"\/documentation\/haishinkit\/audiomixersettings\/default","type":"property","title":"static let `default`: AudioMixerSettings"},{"path":"\/documentation\/haishinkit\/audiomixersettings\/maximumsamplerate","type":"property","title":"static let maximumSampleRate: Float64"}],"type":"struct","title":"AudioMixerSettings"},{"path":"\/documentation\/haishinkit\/audiomixertracksettings","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/audiomixertracksettings\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/haishinkit\/audiomixertracksettings\/init(volume:ismuted:downmix:channelmap:)","title":"init(volume: Float, isMuted: Bool, downmix: Bool, channelMap: [Int]?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/audiomixertracksettings\/channelmap","title":"var channelMap: [Int]?","type":"property"},{"path":"\/documentation\/haishinkit\/audiomixertracksettings\/downmix","title":"var downmix: Bool","type":"property"},{"path":"\/documentation\/haishinkit\/audiomixertracksettings\/ismuted","title":"var isMuted: Bool","type":"property"},{"path":"\/documentation\/haishinkit\/audiomixertracksettings\/volume","title":"var volume: Float","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/audiomixertracksettings\/default","title":"static let `default`: AudioMixerTrackSettings","type":"property"}],"type":"struct","title":"AudioMixerTrackSettings"},{"path":"\/documentation\/haishinkit\/hkatomic","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(A)","type":"init","path":"\/documentation\/haishinkit\/hkatomic\/init(_:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var value: A","type":"property","path":"\/documentation\/haishinkit\/hkatomic\/value"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func mutate((inout A) -> Void)","type":"method","path":"\/documentation\/haishinkit\/hkatomic\/mutate(_:)"}],"type":"struct","title":"HKAtomic"},{"path":"\/documentation\/haishinkit\/networkmonitorreport","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/haishinkit\/networkmonitorreport\/currentbytesinpersecond","title":"let currentBytesInPerSecond: Int"},{"type":"property","path":"\/documentation\/haishinkit\/networkmonitorreport\/currentbytesoutpersecond","title":"let currentBytesOutPerSecond: Int"},{"type":"property","path":"\/documentation\/haishinkit\/networkmonitorreport\/currentqueuebytesout","title":"let currentQueueBytesOut: Int"},{"type":"property","path":"\/documentation\/haishinkit\/networkmonitorreport\/totalbytesin","title":"let totalBytesIn: Int"},{"type":"property","path":"\/documentation\/haishinkit\/networkmonitorreport\/totalbytesout","title":"let totalBytesOut: Int"}],"type":"struct","title":"NetworkMonitorReport"},{"path":"\/documentation\/haishinkit\/networktransportreport","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(queueBytesOut: Int, totalBytesIn: Int, totalBytesOut: Int)","path":"\/documentation\/haishinkit\/networktransportreport\/init(queuebytesout:totalbytesin:totalbytesout:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let queueBytesOut: Int","path":"\/documentation\/haishinkit\/networktransportreport\/queuebytesout","type":"property"},{"title":"let totalBytesIn: Int","path":"\/documentation\/haishinkit\/networktransportreport\/totalbytesin","type":"property"},{"title":"let totalBytesOut: Int","path":"\/documentation\/haishinkit\/networktransportreport\/totalbytesout","type":"property"}],"type":"struct","title":"NetworkTransportReport"},{"path":"\/documentation\/haishinkit\/rtmpresponse","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"let arguments: [(any Sendable)?]","type":"property","path":"\/documentation\/haishinkit\/rtmpresponse\/arguments"},{"title":"let status: RTMPStatus?","type":"property","path":"\/documentation\/haishinkit\/rtmpresponse\/status"}],"type":"struct","title":"RTMPResponse"},{"path":"\/documentation\/haishinkit\/rtmpsessionfactory","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/haishinkit\/rtmpsessionfactory\/init()","type":"init","title":"init()"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/rtmpsessionfactory\/supportedprotocols","type":"property","title":"let supportedProtocols: Set<String>"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/rtmpsessionfactory\/make(uri:)","type":"method","title":"func make(uri: URL) -> any Session"}],"type":"struct","title":"RTMPSessionFactory"},{"path":"\/documentation\/haishinkit\/rtmpstatus","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/rtmpstatus\/code","type":"property","title":"let code: String"},{"path":"\/documentation\/haishinkit\/rtmpstatus\/description","type":"property","title":"let description: String"},{"path":"\/documentation\/haishinkit\/rtmpstatus\/level","type":"property","title":"let level: String"},{"type":"groupMarker","title":"Subscripts"},{"path":"\/documentation\/haishinkit\/rtmpstatus\/subscript(dynamicmember:)-7qc0b","type":"subscript","title":"subscript(dynamicMember _: String) -> Double?"},{"path":"\/documentation\/haishinkit\/rtmpstatus\/subscript(dynamicmember:)-9sprr","type":"subscript","title":"subscript(dynamicMember _: String) -> String?"}],"type":"struct","title":"RTMPStatus"},{"path":"\/documentation\/haishinkit\/rtmpstreaminfo","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var byteCount: Int","path":"\/documentation\/haishinkit\/rtmpstreaminfo\/bytecount"},{"type":"property","title":"var currentBytesPerSecond: Int","path":"\/documentation\/haishinkit\/rtmpstreaminfo\/currentbytespersecond"},{"type":"property","title":"var resourceName: String?","path":"\/documentation\/haishinkit\/rtmpstreaminfo\/resourcename"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","title":"CustomDebugStringConvertible Implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var debugDescription: String","type":"property","path":"\/documentation\/haishinkit\/rtmpstreaminfo\/debugdescription"}],"path":"\/documentation\/haishinkit\/rtmpstreaminfo\/customdebugstringconvertible-implementations"}],"type":"struct","title":"RTMPStreamInfo"},{"path":"\/documentation\/haishinkit\/sessionbuilder","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func build() async throws -> (any Session)?","path":"\/documentation\/haishinkit\/sessionbuilder\/build()","type":"method"}],"type":"struct","title":"SessionBuilder"},{"path":"\/documentation\/haishinkit\/soundtransform","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/haishinkit\/soundtransform\/init(volume:pan:)","type":"init","title":"init(volume: Float, pan: Float)"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/soundtransform\/pan","type":"property","title":"var pan: Float"},{"path":"\/documentation\/haishinkit\/soundtransform\/volume","type":"property","title":"var volume: Float"},{"type":"groupMarker","title":"Type Properties"},{"path":"\/documentation\/haishinkit\/soundtransform\/defaultpan","type":"property","title":"static let defaultPan: Float"},{"path":"\/documentation\/haishinkit\/soundtransform\/defaultvolume","type":"property","title":"static let defaultVolume: Float"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/haishinkit\/soundtransform\/customdebugstringconvertible-implementations","type":"symbol","title":"CustomDebugStringConvertible Implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var debugDescription: String","type":"property","path":"\/documentation\/haishinkit\/soundtransform\/debugdescription"}]},{"path":"\/documentation\/haishinkit\/soundtransform\/equatable-implementations","type":"symbol","title":"Equatable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/haishinkit\/soundtransform\/!=(_:_:)","type":"op"}]}],"type":"struct","title":"SoundTransform"},{"path":"\/documentation\/haishinkit\/vtsessionoption","children":[{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/vtsessionoption\/equatable-implementations","type":"symbol","title":"Equatable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/haishinkit\/vtsessionoption\/!=(_:_:)","type":"op"},{"title":"static func == (VTSessionOption, VTSessionOption) -> Bool","path":"\/documentation\/haishinkit\/vtsessionoption\/==(_:_:)","type":"op"}]},{"path":"\/documentation\/haishinkit\/vtsessionoption\/hashable-implementations","type":"symbol","title":"Hashable Implementations","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func hash(into: inout Hasher)","path":"\/documentation\/haishinkit\/vtsessionoption\/hash(into:)"}]}],"type":"struct","title":"VTSessionOption"},{"path":"\/documentation\/haishinkit\/videocodecsettings","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/haishinkit\/videocodecsettings\/init(from:)","type":"init"},{"title":"init(videoSize: CGSize, bitRate: Int, profileLevel: String, scalingMode: VideoCodecSettings.ScalingMode, bitRateMode: VideoCodecSettings.BitRateMode, maxKeyFrameIntervalDuration: Int32, allowFrameReordering: Bool?, dataRateLimits: [Double]?, isHardwareEncoderEnabled: Bool)","path":"\/documentation\/haishinkit\/videocodecsettings\/init(videosize:bitrate:profilelevel:scalingmode:bitratemode:maxkeyframeintervalduration:allowframereordering:dataratelimits:ishardwareencoderenabled:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var allowFrameReordering: Bool?","path":"\/documentation\/haishinkit\/videocodecsettings\/allowframereordering","type":"property"},{"title":"var bitRate: Int","path":"\/documentation\/haishinkit\/videocodecsettings\/bitrate","type":"property"},{"title":"var bitRateMode: VideoCodecSettings.BitRateMode","path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.property","type":"property"},{"title":"var dataRateLimits: [Double]?","path":"\/documentation\/haishinkit\/videocodecsettings\/dataratelimits","type":"property"},{"title":"var frameInterval: Double","path":"\/documentation\/haishinkit\/videocodecsettings\/frameinterval","type":"property"},{"title":"var isHardwareEncoderEnabled: Bool","path":"\/documentation\/haishinkit\/videocodecsettings\/ishardwareencoderenabled","type":"property"},{"title":"var maxKeyFrameIntervalDuration: Int32","path":"\/documentation\/haishinkit\/videocodecsettings\/maxkeyframeintervalduration","type":"property"},{"title":"var profileLevel: String","path":"\/documentation\/haishinkit\/videocodecsettings\/profilelevel","type":"property"},{"title":"var scalingMode: VideoCodecSettings.ScalingMode","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.property","type":"property"},{"title":"var videoSize: CGSize","path":"\/documentation\/haishinkit\/videocodecsettings\/videosize","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"title":"static let `default`: VideoCodecSettings","path":"\/documentation\/haishinkit\/videocodecsettings\/default","type":"property"},{"title":"static let frameInterval01: Double","path":"\/documentation\/haishinkit\/videocodecsettings\/frameinterval01","type":"property"},{"title":"static let frameInterval05: Double","path":"\/documentation\/haishinkit\/videocodecsettings\/frameinterval05","type":"property"},{"title":"static let frameInterval10: Double","path":"\/documentation\/haishinkit\/videocodecsettings\/frameinterval10","type":"property"},{"title":"static let frameInterval30: Double","path":"\/documentation\/haishinkit\/videocodecsettings\/frameinterval30","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"title":"VideoCodecSettings.BitRateMode","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/average","title":"case average","type":"case"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/constant","title":"case constant","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/equatable-implementations","title":"Equatable Implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"}],"type":"symbol"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/init(from:)","type":"init","title":"init(from: any Decoder) throws"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/hashvalue","type":"property","title":"var hashValue: Int"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/encode(to:)","type":"method","title":"func encode(to: any Encoder) throws"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/hash(into:)","type":"method","title":"func hash(into: inout Hasher)"}],"type":"symbol"}],"path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum","type":"enum"},{"title":"VideoCodecSettings.ScalingMode","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/cropsourcetocleanaperture","title":"case cropSourceToCleanAperture"},{"type":"case","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/letterbox","title":"case letterbox"},{"type":"case","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/normal","title":"case normal"},{"type":"case","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/trim","title":"case trim"},{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"}],"path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/equatable-implementations","title":"Equatable Implementations"},{"type":"symbol","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init(from: any Decoder) throws","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/init(from:)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var hashValue: Int","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/hashvalue"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func encode(to: any Encoder) throws","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/encode(to:)"},{"type":"method","title":"func hash(into: inout Hasher)","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/hash(into:)"}],"path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations"}],"path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum","type":"enum"}],"type":"struct","title":"VideoCodecSettings"},{"path":"\/documentation\/haishinkit\/videomixersettings","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","type":"init","path":"\/documentation\/haishinkit\/videomixersettings\/init(from:)"},{"title":"init(mode: VideoMixerSettings.Mode, isMuted: Bool, mainTrack: UInt8)","type":"init","path":"\/documentation\/haishinkit\/videomixersettings\/init(mode:ismuted:maintrack:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var isMuted: Bool","type":"property","path":"\/documentation\/haishinkit\/videomixersettings\/ismuted"},{"title":"var mainTrack: UInt8","type":"property","path":"\/documentation\/haishinkit\/videomixersettings\/maintrack"},{"title":"var mode: VideoMixerSettings.Mode","type":"property","path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.property"},{"title":"Type Properties","type":"groupMarker"},{"title":"static let `default`: VideoMixerSettings","type":"property","path":"\/documentation\/haishinkit\/videomixersettings\/default"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/offscreen","title":"case offscreen","type":"case"},{"path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/passthrough","title":"case passthrough","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}],"path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"title":"VideoMixerSettings.Mode","type":"enum","path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum"}],"type":"struct","title":"VideoMixerSettings"},{"type":"groupMarker","title":"Variables"},{"path":"\/documentation\/haishinkit\/kamfundefined","type":"var","title":"let kAMFUndefined: AMFUndefined"},{"path":"\/documentation\/haishinkit\/khaishinkitidentifier","type":"var","title":"let kHaishinKitIdentifier: String"},{"type":"groupMarker","title":"Type Aliases"},{"path":"\/documentation\/haishinkit\/amfobject","type":"typealias","title":"AMFObject"},{"path":"\/documentation\/haishinkit\/audiodeviceconfigurationblock","type":"typealias","title":"AudioDeviceConfigurationBlock"},{"path":"\/documentation\/haishinkit\/videodeviceconfigurationblock","type":"typealias","title":"VideoDeviceConfigurationBlock"},{"type":"groupMarker","title":"Enumerations"},{"path":"\/documentation\/haishinkit\/deviceutil","children":[{"title":"Type Methods","type":"groupMarker"},{"title":"static func device(withLocalizedName: String, mediaType: AVMediaType) -> AVCaptureDevice?","path":"\/documentation\/haishinkit\/deviceutil\/device(withlocalizedname:mediatype:)","type":"method"}],"type":"enum","title":"DeviceUtil"},{"path":"\/documentation\/haishinkit\/hkstreamreadystate","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","path":"\/documentation\/haishinkit\/hkstreamreadystate\/idle","title":"case idle"},{"type":"case","path":"\/documentation\/haishinkit\/hkstreamreadystate\/play","title":"case play"},{"type":"case","path":"\/documentation\/haishinkit\/hkstreamreadystate\/playing","title":"case playing"},{"type":"case","path":"\/documentation\/haishinkit\/hkstreamreadystate\/publish","title":"case publish"},{"type":"case","path":"\/documentation\/haishinkit\/hkstreamreadystate\/publishing","title":"case publishing"},{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/haishinkit\/hkstreamreadystate\/init(rawvalue:)","title":"init?(rawValue: Int)"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/haishinkit\/hkstreamreadystate\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}],"type":"symbol","path":"\/documentation\/haishinkit\/hkstreamreadystate\/equatable-implementations","title":"Equatable Implementations"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","path":"\/documentation\/haishinkit\/hkstreamreadystate\/hashvalue","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func hash(into: inout Hasher)","path":"\/documentation\/haishinkit\/hkstreamreadystate\/hash(into:)","type":"method"}],"type":"symbol","path":"\/documentation\/haishinkit\/hkstreamreadystate\/rawrepresentable-implementations","title":"RawRepresentable Implementations"}],"type":"enum","title":"HKStreamReadyState"},{"path":"\/documentation\/haishinkit\/networkmonitorevent","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"title":"case publishInsufficientBWOccured(report: NetworkMonitorReport)","type":"case","path":"\/documentation\/haishinkit\/networkmonitorevent\/publishinsufficientbwoccured(report:)"},{"title":"case reset","type":"case","path":"\/documentation\/haishinkit\/networkmonitorevent\/reset"},{"title":"case status(report: NetworkMonitorReport)","type":"case","path":"\/documentation\/haishinkit\/networkmonitorevent\/status(report:)"}],"type":"enum","title":"NetworkMonitorEvent"},{"path":"\/documentation\/haishinkit\/rtmpobjectencoding","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","path":"\/documentation\/haishinkit\/rtmpobjectencoding\/amf0","title":"case amf0"},{"type":"case","path":"\/documentation\/haishinkit\/rtmpobjectencoding\/amf3","title":"case amf3"},{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/haishinkit\/rtmpobjectencoding\/init(rawvalue:)","title":"init?(rawValue: UInt8)"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","path":"\/documentation\/haishinkit\/rtmpobjectencoding\/equatable-implementations","title":"Equatable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/rtmpobjectencoding\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}]},{"type":"symbol","path":"\/documentation\/haishinkit\/rtmpobjectencoding\/rawrepresentable-implementations","title":"RawRepresentable Implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var hashValue: Int","path":"\/documentation\/haishinkit\/rtmpobjectencoding\/hashvalue"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func hash(into: inout Hasher)","path":"\/documentation\/haishinkit\/rtmpobjectencoding\/hash(into:)"}]}],"type":"enum","title":"RTMPObjectEncoding"},{"path":"\/documentation\/haishinkit\/sessionmethod","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case ingest","type":"case","path":"\/documentation\/haishinkit\/sessionmethod\/ingest"},{"title":"case playback","type":"case","path":"\/documentation\/haishinkit\/sessionmethod\/playback"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/haishinkit\/sessionmethod\/!=(_:_:)","type":"op"}],"type":"symbol","path":"\/documentation\/haishinkit\/sessionmethod\/equatable-implementations"}],"type":"enum","title":"SessionMethod"},{"type":"groupMarker","title":"Extended Modules"},{"path":"\/documentation\/haishinkit\/coremedia","children":[{"type":"groupMarker","title":"Extended Classes"},{"type":"extension","title":"CMFormatDescription","path":"\/documentation\/haishinkit\/coremedia\/cmformatdescription","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var isCompressed: Bool","path":"\/documentation\/haishinkit\/coremedia\/cmformatdescription\/iscompressed"}]}],"type":"extension","title":"CoreMedia"}],"path":"\/documentation\/haishinkit","type":"module"},{"title":"MoQTHaishinKit","children":[{"title":"Classes","type":"groupMarker"},{"title":"MoQTConnection","path":"\/documentation\/moqthaishinkit\/moqtconnection","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init(MoQTSetupRole, requestTimeOut: UInt64)","path":"\/documentation\/moqthaishinkit\/moqtconnection\/init(_:requesttimeout:)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var objectStream: AsyncStream<MoQTObject>","path":"\/documentation\/moqthaishinkit\/moqtconnection\/objectstream"},{"type":"property","title":"let requestTimeout: UInt64","path":"\/documentation\/moqthaishinkit\/moqtconnection\/requesttimeout"},{"type":"property","title":"let role: MoQTSetupRole","path":"\/documentation\/moqthaishinkit\/moqtconnection\/role"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func annouce([String], authInfo: String?) async throws -> Result<MoQTAnnounceOk, MoQTAnnounceError>","path":"\/documentation\/moqthaishinkit\/moqtconnection\/annouce(_:authinfo:)"},{"type":"method","title":"func close() async","path":"\/documentation\/moqthaishinkit\/moqtconnection\/close()"},{"type":"method","title":"func connect(String) async throws -> MoQTServerSetup","path":"\/documentation\/moqthaishinkit\/moqtconnection\/connect(_:)"},{"type":"method","title":"func send([MoQTObject], header: MoQTStreamHeaderSubgroup) async throws","path":"\/documentation\/moqthaishinkit\/moqtconnection\/send(_:header:)"},{"type":"method","title":"func subscribe([String], name: String, authInfo: String?) async throws -> Result<MoQTSubscribeOk, MoQTSubscribeError>","path":"\/documentation\/moqthaishinkit\/moqtconnection\/subscribe(_:name:authinfo:)"},{"type":"method","title":"func subscribeAnnouces([String], authInfo: String?) async throws -> Result<MoQTSubscribeAnnouncesOk, MoQTSubscribeAnnouncesError>","path":"\/documentation\/moqthaishinkit\/moqtconnection\/subscribeannouces(_:authinfo:)"},{"type":"groupMarker","title":"Type Properties"},{"type":"property","title":"static let defaultPort: Int","path":"\/documentation\/moqthaishinkit\/moqtconnection\/defaultport"},{"type":"property","title":"static let defaultRequestTimeout: UInt64","path":"\/documentation\/moqthaishinkit\/moqtconnection\/defaultrequesttimeout"},{"type":"property","title":"static let supportedProtocols: [String]","path":"\/documentation\/moqthaishinkit\/moqtconnection\/supportedprotocols"},{"type":"property","title":"static let supportedVersions: [MoQTVersion]","path":"\/documentation\/moqthaishinkit\/moqtconnection\/supportedversions"},{"type":"groupMarker","title":"Enumerations"},{"type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case connectionTimedOut","path":"\/documentation\/moqthaishinkit\/moqtconnection\/error\/connectiontimedout","type":"case"},{"title":"case invalidState","path":"\/documentation\/moqthaishinkit\/moqtconnection\/error\/invalidstate","type":"case"},{"title":"case requestTimedOut","path":"\/documentation\/moqthaishinkit\/moqtconnection\/error\/requesttimedout","type":"case"},{"title":"case socketErrorOccurred(any Error)","path":"\/documentation\/moqthaishinkit\/moqtconnection\/error\/socketerroroccurred(_:)","type":"case"},{"title":"case unknownResponse","path":"\/documentation\/moqthaishinkit\/moqtconnection\/error\/unknownresponse","type":"case"},{"title":"case unsupportedCommand(String)","path":"\/documentation\/moqthaishinkit\/moqtconnection\/error\/unsupportedcommand(_:)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Error Implementations","path":"\/documentation\/moqthaishinkit\/moqtconnection\/error\/error-implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/error\/localizeddescription","type":"property","title":"var localizedDescription: String"}],"type":"symbol"}],"title":"MoQTConnection.Error","path":"\/documentation\/moqthaishinkit\/moqtconnection\/error"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/moqthaishinkit\/moqtconnection\/assertisolated(_:file:line:)","type":"method"},{"title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","path":"\/documentation\/moqthaishinkit\/moqtconnection\/assumeisolated(_:file:line:)","type":"method"},{"title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/moqthaishinkit\/moqtconnection\/preconditionisolated(_:file:line:)","type":"method"}],"title":"Actor Implementations","path":"\/documentation\/moqthaishinkit\/moqtconnection\/actor-implementations"}],"type":"class"},{"title":"Protocols","type":"groupMarker"},{"title":"MoQTControlMessage","path":"\/documentation\/moqthaishinkit\/moqtcontrolmessage","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/moqthaishinkit\/moqtcontrolmessage\/payload","type":"property","title":"var payload: Data"},{"path":"\/documentation\/moqthaishinkit\/moqtcontrolmessage\/type","type":"property","title":"var type: MoQTMessageType"}],"type":"protocol"},{"title":"Structures","type":"groupMarker"},{"title":"MoQTAnnounce","path":"\/documentation\/moqthaishinkit\/moqtannounce","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtannounce\/payload","title":"var payload: Data"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtannounce\/subscribeparameters","title":"let subscribeParameters: [MoQTVersionSpecificParameter]"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtannounce\/tracknamespace","title":"let trackNamespace: [String]"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtannounce\/type","title":"let type: MoQTMessageType"}],"type":"struct"},{"title":"MoQTAnnounceError","path":"\/documentation\/moqthaishinkit\/moqtannounceerror","children":[{"title":"Instance Properties","type":"groupMarker"},{"type":"property","title":"let code: Int","path":"\/documentation\/moqthaishinkit\/moqtannounceerror\/code"},{"type":"property","title":"var payload: Data","path":"\/documentation\/moqthaishinkit\/moqtannounceerror\/payload"},{"type":"property","title":"let reasonPhrase: String","path":"\/documentation\/moqthaishinkit\/moqtannounceerror\/reasonphrase"},{"type":"property","title":"let trackNamespace: [String]","path":"\/documentation\/moqthaishinkit\/moqtannounceerror\/tracknamespace"},{"type":"property","title":"let type: MoQTMessageType","path":"\/documentation\/moqthaishinkit\/moqtannounceerror\/type"},{"title":"Default Implementations","type":"groupMarker"},{"type":"symbol","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtannounceerror\/localizeddescription","title":"var localizedDescription: String"}],"title":"Error Implementations","path":"\/documentation\/moqthaishinkit\/moqtannounceerror\/error-implementations"}],"type":"struct"},{"title":"MoQTAnnounceOk","path":"\/documentation\/moqthaishinkit\/moqtannounceok","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var payload: Data","path":"\/documentation\/moqthaishinkit\/moqtannounceok\/payload"},{"type":"property","title":"let trackNamespace: [String]","path":"\/documentation\/moqthaishinkit\/moqtannounceok\/tracknamespace"},{"type":"property","title":"let type: MoQTMessageType","path":"\/documentation\/moqthaishinkit\/moqtannounceok\/type"}],"type":"struct"},{"title":"MoQTGoaway","path":"\/documentation\/moqthaishinkit\/moqtgoaway","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/moqthaishinkit\/moqtgoaway\/newsessionuri","type":"property","title":"let newSessionURI: String"},{"path":"\/documentation\/moqthaishinkit\/moqtgoaway\/payload","type":"property","title":"var payload: Data"},{"path":"\/documentation\/moqthaishinkit\/moqtgoaway\/type","type":"property","title":"let type: MoQTMessageType"}],"type":"struct"},{"title":"MoQTObject","path":"\/documentation\/moqthaishinkit\/moqtobject","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init(id: Int, status: Int?, data: Data)","path":"\/documentation\/moqthaishinkit\/moqtobject\/init(id:status:data:)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"let data: Data","path":"\/documentation\/moqthaishinkit\/moqtobject\/data"},{"type":"property","title":"let id: Int","path":"\/documentation\/moqthaishinkit\/moqtobject\/id"},{"type":"property","title":"let status: Int?","path":"\/documentation\/moqthaishinkit\/moqtobject\/status"}],"type":"struct"},{"title":"MoQTServerSetup","path":"\/documentation\/moqthaishinkit\/moqtserversetup","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtserversetup\/payload","title":"var payload: Data"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtserversetup\/selectedversion","title":"let selectedVersion: Int"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtserversetup\/setupparameters","title":"let setupParameters: [MoQTSetupParameter]"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtserversetup\/type","title":"let type: MoQTMessageType"}],"type":"struct"},{"title":"MoQTSetupParameter","path":"\/documentation\/moqthaishinkit\/moqtsetupparameter","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"let key: MoQTSetupParameterType","path":"\/documentation\/moqthaishinkit\/moqtsetupparameter\/key","type":"property"},{"title":"let value: any Sendable","path":"\/documentation\/moqthaishinkit\/moqtsetupparameter\/value","type":"property"}],"type":"struct"},{"title":"MoQTStreamHeaderSubgroup","path":"\/documentation\/moqthaishinkit\/moqtstreamheadersubgroup","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/moqthaishinkit\/moqtstreamheadersubgroup\/init(trackalias:groupid:subgroupid:publisherpriority:)","type":"init","title":"init(trackAlias: Int, groupId: Int, subgroupId: Int, publisherPriority: Int)"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/moqthaishinkit\/moqtstreamheadersubgroup\/groupid","type":"property","title":"let groupId: Int"},{"path":"\/documentation\/moqthaishinkit\/moqtstreamheadersubgroup\/payload","type":"property","title":"var payload: Data"},{"path":"\/documentation\/moqthaishinkit\/moqtstreamheadersubgroup\/publisherpriority","type":"property","title":"let publisherPriority: Int"},{"path":"\/documentation\/moqthaishinkit\/moqtstreamheadersubgroup\/subgroupid","type":"property","title":"let subgroupId: Int"},{"path":"\/documentation\/moqthaishinkit\/moqtstreamheadersubgroup\/trackalias","type":"property","title":"let trackAlias: Int"},{"path":"\/documentation\/moqthaishinkit\/moqtstreamheadersubgroup\/type","type":"property","title":"let type: MoQTDataStreamType"}],"type":"struct"},{"title":"MoQTSubscribe","path":"\/documentation\/moqthaishinkit\/moqtsubscribe","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/endgroup","title":"let endGroup: Int?"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/endobject","title":"let endObject: Int?"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.property","title":"let filterType: MoQTSubscribe.FilterType"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.property","title":"let groupOrder: MoQTSubscribe.GroupOrder"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/payload","title":"var payload: Data"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/startgroup","title":"let startGroup: Int?"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/startobject","title":"let startObject: Int?"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/subscribeid","title":"let subscribeId: Int"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/subscribeparameters","title":"let subscribeParameters: [MoQTVersionSpecificParameter]"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/subscribepriority","title":"let subscribePriority: Int"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/trackalias","title":"let trackAlias: Int"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/trackname","title":"let trackName: String"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/tracknamespace","title":"let trackNamespace: [String]"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/type","title":"let type: MoQTMessageType"},{"type":"groupMarker","title":"Enumerations"},{"type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/absoluterange","title":"case absoluteRange","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/absolutestart","title":"case absoluteStart","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/latestgroup","title":"case latestGroup","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/latestobject","title":"case latestObject","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"}]},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/hashvalue","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func hash(into: inout Hasher)","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/hash(into:)","type":"method"}]}],"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum","title":"MoQTSubscribe.FilterType"},{"type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","title":"case ascending","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/ascending"},{"type":"case","title":"case descending","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/descending"},{"type":"case","title":"case original","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/original"},{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init?(rawValue: Int)","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/init(rawvalue:)"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/!=(_:_:)"}],"title":"Equatable Implementations","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/equatable-implementations"},{"type":"symbol","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var hashValue: Int","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/hashvalue"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func hash(into: inout Hasher)","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/hash(into:)"}],"title":"RawRepresentable Implementations","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/rawrepresentable-implementations"}],"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum","title":"MoQTSubscribe.GroupOrder"}],"type":"struct"},{"title":"MoQTSubscribeAnnounces","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounces","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounces\/parameters","title":"let parameters: [MoQTVersionSpecificParameter]","type":"property"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounces\/payload","title":"var payload: Data","type":"property"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounces\/tracknamespaceprefix","title":"let trackNamespacePrefix: [String]","type":"property"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounces\/type","title":"let type: MoQTMessageType","type":"property"}],"type":"struct"},{"title":"MoQTSubscribeAnnouncesError","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounceserror","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"let errorCode: Int","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounceserror\/errorcode","type":"property"},{"title":"var payload: Data","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounceserror\/payload","type":"property"},{"title":"let reasonPhrase: String","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounceserror\/reasonphrase","type":"property"},{"title":"let trackNamespacePrefix: [String]","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounceserror\/tracknamespaceprefix","type":"property"},{"title":"let type: MoQTMessageType","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounceserror\/type","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Error Implementations","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounceserror\/error-implementations","type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var localizedDescription: String","type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounceserror\/localizeddescription"}]}],"type":"struct"},{"title":"MoQTSubscribeAnnouncesOk","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannouncesok","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var payload: Data","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannouncesok\/payload"},{"type":"property","title":"let trackNamespacePrefix: [String]","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannouncesok\/tracknamespaceprefix"},{"type":"property","title":"let type: MoQTMessageType","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannouncesok\/type"}],"type":"struct"},{"title":"MoQTSubscribeError","path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror\/code","title":"let code: Int"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror\/payload","title":"var payload: Data"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror\/reasonphrase","title":"let reasonPhrase: String"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror\/subscribeid","title":"let subscribeId: Int"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror\/trackalias","title":"let trackAlias: Int"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror\/type","title":"let type: MoQTMessageType"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror\/error-implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var localizedDescription: String","path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror\/localizeddescription","type":"property"}],"title":"Error Implementations"}],"type":"struct"},{"title":"MoQTSubscribeOk","path":"\/documentation\/moqthaishinkit\/moqtsubscribeok","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/contentexists","title":"let contentExists: Bool"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/expires","title":"let expires: Int"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/grouporder","title":"let groupOrder: MoQTSubscribe.GroupOrder"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/largestgroupid","title":"let largestGroupId: Int?"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/largestobjectid","title":"let largestObjectId: Int?"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/payload","title":"var payload: Data"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/subscribeid","title":"let subscribeId: Int"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/subscribeparameters","title":"let subscribeParameters: [MoQTVersionSpecificParameter]"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/type","title":"let type: MoQTMessageType"}],"type":"struct"},{"title":"MoQTVersionSpecificParameter","path":"\/documentation\/moqthaishinkit\/moqtversionspecificparameter","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"let key: MoQTVersionSpecificType","path":"\/documentation\/moqthaishinkit\/moqtversionspecificparameter\/key"},{"type":"property","title":"let value: any Sendable","path":"\/documentation\/moqthaishinkit\/moqtversionspecificparameter\/value"}],"type":"struct"},{"title":"Enumerations","type":"groupMarker"},{"title":"MoQTDataStreamType","path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","title":"case fetchHeader","path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/fetchheader"},{"type":"case","title":"case objectDatagram","path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/objectdatagram"},{"type":"case","title":"case streamHeaderSubgroup","path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/streamheadersubgroup"},{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init?(rawValue: Int)","path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/init(rawvalue:)"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","title":"Equatable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/!=(_:_:)","type":"op"}],"path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/equatable-implementations"},{"type":"symbol","title":"RawRepresentable Implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/hashvalue","title":"var hashValue: Int"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/hash(into:)","title":"func hash(into: inout Hasher)"}],"path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/rawrepresentable-implementations"}],"type":"enum"},{"title":"MoQTMessageType","path":"\/documentation\/moqthaishinkit\/moqtmessagetype","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/announce","title":"case announce","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/announcecancel","title":"case announceCancel","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/announceerror","title":"case announceError","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/announceok","title":"case announceOk","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/clientsetup","title":"case clientSetup","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/goaway","title":"case goaway","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/serversetup","title":"case serverSetup","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/subscribe","title":"case subscribe","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/subscribeannounuces","title":"case subscribeAnnounuces","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/subscribeannounuceserror","title":"case subscribeAnnounucesError","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/subscribeannounucesok","title":"case subscribeAnnounucesOk","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/subscribedone","title":"case subscribeDone","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/subscribeerror","title":"case subscribeError","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/subscribeok","title":"case subscribeOk","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/subscribeupdate","title":"case subscribeUpdate","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/trackstatus","title":"case trackStatus","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/trackstatusrequest","title":"case trackStatusRequest","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/unannounce","title":"case unannounce","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/unsubscribe","title":"case unsubscribe","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/equatable-implementations","title":"Equatable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/!=(_:_:)"}],"type":"symbol"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","type":"property","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/hashvalue"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func hash(into: inout Hasher)","type":"method","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/hash(into:)"}],"type":"symbol"}],"type":"enum"},{"title":"MoQTSetupParameterType","path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","title":"case maxSubscribeId","path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/maxsubscribeid"},{"type":"case","title":"case path","path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/path"},{"type":"case","title":"case role","path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/role"},{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init?(rawValue: Int)","path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/init(rawvalue:)"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"type":"symbol","title":"Equatable Implementations","path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/equatable-implementations"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/hashvalue","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func hash(into: inout Hasher)","path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/hash(into:)","type":"method"}],"type":"symbol","title":"RawRepresentable Implementations","path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/rawrepresentable-implementations"}],"type":"enum"},{"title":"MoQTSetupRole","path":"\/documentation\/moqthaishinkit\/moqtsetuprole","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/pubsub","type":"case","title":"case pubSub"},{"path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/publisher","type":"case","title":"case publisher"},{"path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/subscriber","type":"case","title":"case subscriber"},{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/init(rawvalue:)","type":"init","title":"init?(rawValue: Int)"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/equatable-implementations","type":"symbol","title":"Equatable Implementations","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}]},{"path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/rawrepresentable-implementations","type":"symbol","title":"RawRepresentable Implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/hashvalue","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func hash(into: inout Hasher)","path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/hash(into:)","type":"method"}]}],"type":"enum"},{"title":"MoQTVersion","path":"\/documentation\/moqthaishinkit\/moqtversion","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case draft01","path":"\/documentation\/moqthaishinkit\/moqtversion\/draft01","type":"case"},{"title":"case draft02","path":"\/documentation\/moqthaishinkit\/moqtversion\/draft02","type":"case"},{"title":"case draft03","path":"\/documentation\/moqthaishinkit\/moqtversion\/draft03","type":"case"},{"title":"case draft04","path":"\/documentation\/moqthaishinkit\/moqtversion\/draft04","type":"case"},{"title":"case draft05","path":"\/documentation\/moqthaishinkit\/moqtversion\/draft05","type":"case"},{"title":"case draft06","path":"\/documentation\/moqthaishinkit\/moqtversion\/draft06","type":"case"},{"title":"case draft07","path":"\/documentation\/moqthaishinkit\/moqtversion\/draft07","type":"case"},{"title":"case draft07Exp","path":"\/documentation\/moqthaishinkit\/moqtversion\/draft07exp","type":"case"},{"title":"case draft07Exp2","path":"\/documentation\/moqthaishinkit\/moqtversion\/draft07exp2","type":"case"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: Int)","path":"\/documentation\/moqthaishinkit\/moqtversion\/init(rawvalue:)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","path":"\/documentation\/moqthaishinkit\/moqtversion\/equatable-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/moqthaishinkit\/moqtversion\/!=(_:_:)"}]},{"title":"RawRepresentable Implementations","path":"\/documentation\/moqthaishinkit\/moqtversion\/rawrepresentable-implementations","type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtversion\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtversion\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}]}],"type":"enum"},{"title":"MoQTVersionSpecificType","path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","title":"case authorizationInfo","path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/authorizationinfo"},{"type":"case","title":"case deliveryTimeout","path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/deliverytimeout"},{"type":"case","title":"case maxCacheDuration","path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/maxcacheduration"},{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init?(rawValue: Int)","path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/init(rawvalue:)"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","title":"Equatable Implementations","path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/equatable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/!=(_:_:)"}]},{"type":"symbol","title":"RawRepresentable Implementations","path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/rawrepresentable-implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var hashValue: Int","path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/hashvalue"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func hash(into: inout Hasher)","path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/hash(into:)"}]}],"type":"enum"}],"path":"\/documentation\/moqthaishinkit","type":"module"},{"title":"SRTHaishinKit","children":[{"title":"Classes","type":"groupMarker"},{"title":"SRTConnection","path":"\/documentation\/srthaishinkit\/srtconnection","type":"class","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init()","path":"\/documentation\/srthaishinkit\/srtconnection\/init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var connected: Bool","path":"\/documentation\/srthaishinkit\/srtconnection\/connected","type":"property"},{"title":"var performanceData: SRTPerformanceData?","path":"\/documentation\/srthaishinkit\/srtconnection\/performancedata","type":"property"},{"title":"var uri: URL?","path":"\/documentation\/srthaishinkit\/srtconnection\/uri","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func close() async","path":"\/documentation\/srthaishinkit\/srtconnection\/close()","type":"method"},{"title":"func connect(URL?) async throws","path":"\/documentation\/srthaishinkit\/srtconnection\/connect(_:)","type":"method"},{"title":"func getSocketOption(SRTSocketOption.Name) async throws -> SRTSocketOption?","path":"\/documentation\/srthaishinkit\/srtconnection\/getsocketoption(_:)","type":"method"},{"title":"func open(URL?, mode: SRTMode) async throws","path":"\/documentation\/srthaishinkit\/srtconnection\/open(_:mode:)","type":"method"},{"title":"func setSocketOption(SRTSocketOption) async throws","path":"\/documentation\/srthaishinkit\/srtconnection\/setsocketoption(_:)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"title":"static let version: String","path":"\/documentation\/srthaishinkit\/srtconnection\/version","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"title":"SRTConnection.Error","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","title":"case failedToConnect(String, reson: Int32)","path":"\/documentation\/srthaishinkit\/srtconnection\/error\/failedtoconnect(_:reson:)"},{"type":"case","title":"case invalidState","path":"\/documentation\/srthaishinkit\/srtconnection\/error\/invalidstate"},{"type":"case","title":"case unsupportedUri(URL?)","path":"\/documentation\/srthaishinkit\/srtconnection\/error\/unsupporteduri(_:)"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","title":"Error Implementations","path":"\/documentation\/srthaishinkit\/srtconnection\/error\/error-implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var localizedDescription: String","type":"property","path":"\/documentation\/srthaishinkit\/srtconnection\/error\/localizeddescription"}]}],"path":"\/documentation\/srthaishinkit\/srtconnection\/error","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Actor Implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/srthaishinkit\/srtconnection\/assertisolated(_:file:line:)","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method"},{"path":"\/documentation\/srthaishinkit\/srtconnection\/assumeisolated(_:file:line:)","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","type":"method"},{"path":"\/documentation\/srthaishinkit\/srtconnection\/preconditionisolated(_:file:line:)","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method"}],"path":"\/documentation\/srthaishinkit\/srtconnection\/actor-implementations","type":"symbol"}]},{"title":"SRTLogger","path":"\/documentation\/srthaishinkit\/srtlogger","type":"class","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/srthaishinkit\/srtlogger\/functionalareas","title":"var functionalAreas: Set<SRTLogFunctionalArea>","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtlogger\/level","title":"var level: SRTLogLevel","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/srthaishinkit\/srtlogger\/setfunctionalareas(_:)","title":"func setFunctionalAreas(Set<SRTLogFunctionalArea>)","type":"method"},{"path":"\/documentation\/srthaishinkit\/srtlogger\/setlevel(_:)","title":"func setLevel(SRTLogLevel)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/srthaishinkit\/srtlogger\/shared","title":"static let shared: SRTLogger","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/srthaishinkit\/srtlogger\/actor-implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/srthaishinkit\/srtlogger\/assertisolated(_:file:line:)","type":"method"},{"title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","path":"\/documentation\/srthaishinkit\/srtlogger\/assumeisolated(_:file:line:)","type":"method"},{"title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/srthaishinkit\/srtlogger\/preconditionisolated(_:file:line:)","type":"method"}],"title":"Actor Implementations","type":"symbol"}]},{"title":"SRTStream","path":"\/documentation\/srthaishinkit\/srtstream","type":"class","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init(connection: SRTConnection)","path":"\/documentation\/srthaishinkit\/srtstream\/init(connection:)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var audioTrackId: UInt8?","path":"\/documentation\/srthaishinkit\/srtstream\/audiotrackid"},{"type":"property","title":"var readyState: HKStreamReadyState","path":"\/documentation\/srthaishinkit\/srtstream\/readystate"},{"type":"property","title":"var videoTrackId: UInt8?","path":"\/documentation\/srthaishinkit\/srtstream\/videotrackid"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func close() async","path":"\/documentation\/srthaishinkit\/srtstream\/close()"},{"type":"method","title":"func play(String?) async","path":"\/documentation\/srthaishinkit\/srtstream\/play(_:)"},{"type":"method","title":"func publish(String?) async","path":"\/documentation\/srthaishinkit\/srtstream\/publish(_:)"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","title":"Actor Implementations","path":"\/documentation\/srthaishinkit\/srtstream\/actor-implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/srthaishinkit\/srtstream\/assertisolated(_:file:line:)","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method"},{"path":"\/documentation\/srthaishinkit\/srtstream\/assumeisolated(_:file:line:)","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","type":"method"},{"path":"\/documentation\/srthaishinkit\/srtstream\/preconditionisolated(_:file:line:)","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method"}]},{"type":"symbol","title":"HKStream Implementations","path":"\/documentation\/srthaishinkit\/srtstream\/hkstream-implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var audioSettings: AudioCodecSettings","path":"\/documentation\/srthaishinkit\/srtstream\/audiosettings"},{"type":"property","title":"var soundTransform: SoundTransform?","path":"\/documentation\/srthaishinkit\/srtstream\/soundtransform"},{"type":"property","title":"var videoSettings: VideoCodecSettings","path":"\/documentation\/srthaishinkit\/srtstream\/videosettings"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func addOutput(some HKStreamOutput)","path":"\/documentation\/srthaishinkit\/srtstream\/addoutput(_:)"},{"type":"method","title":"func append(CMSampleBuffer)","path":"\/documentation\/srthaishinkit\/srtstream\/append(_:)"},{"type":"method","title":"func append(AVAudioBuffer, when: AVAudioTime)","path":"\/documentation\/srthaishinkit\/srtstream\/append(_:when:)"},{"type":"method","title":"func attachAudioPlayer(AudioPlayer?) async","path":"\/documentation\/srthaishinkit\/srtstream\/attachaudioplayer(_:)"},{"type":"method","title":"func dispatch(NetworkMonitorEvent) async","path":"\/documentation\/srthaishinkit\/srtstream\/dispatch(_:)"},{"type":"method","title":"func removeOutput(some HKStreamOutput)","path":"\/documentation\/srthaishinkit\/srtstream\/removeoutput(_:)"},{"type":"method","title":"func setAudioSettings(AudioCodecSettings)","path":"\/documentation\/srthaishinkit\/srtstream\/setaudiosettings(_:)"},{"type":"method","title":"func setBitrateStorategy((some HKStreamBitRateStrategy)?)","path":"\/documentation\/srthaishinkit\/srtstream\/setbitratestorategy(_:)"},{"type":"method","title":"func setSoundTransform(SoundTransform) async","path":"\/documentation\/srthaishinkit\/srtstream\/setsoundtransform(_:)"},{"type":"method","title":"func setVideoInputBufferCounts(Int)","path":"\/documentation\/srthaishinkit\/srtstream\/setvideoinputbuffercounts(_:)"},{"type":"method","title":"func setVideoSettings(VideoCodecSettings)","path":"\/documentation\/srthaishinkit\/srtstream\/setvideosettings(_:)"}]},{"type":"symbol","title":"MediaMixerOutput Implementations","path":"\/documentation\/srthaishinkit\/srtstream\/mediamixeroutput-implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func mixer(MediaMixer, didOutput: CMSampleBuffer)","path":"\/documentation\/srthaishinkit\/srtstream\/mixer(_:didoutput:)","type":"method"},{"title":"func mixer(MediaMixer, didOutput: AVAudioPCMBuffer, when: AVAudioTime)","path":"\/documentation\/srthaishinkit\/srtstream\/mixer(_:didoutput:when:)","type":"method"},{"title":"func selectTrack(UInt8?, mediaType: CMFormatDescription.MediaType)","path":"\/documentation\/srthaishinkit\/srtstream\/selecttrack(_:mediatype:)","type":"method"}]}]},{"title":"Structures","type":"groupMarker"},{"title":"SRTPerformanceData","path":"\/documentation\/srthaishinkit\/srtperformancedata","type":"struct","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"let byteAvailRcvBuf: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/byteavailrcvbuf"},{"type":"property","title":"let byteAvailSndBuf: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/byteavailsndbuf"},{"type":"property","title":"let byteMSS: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytemss"},{"type":"property","title":"let byteRcvBuf: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytercvbuf"},{"type":"property","title":"let byteRcvDrop: UInt64","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytercvdrop"},{"type":"property","title":"let byteRcvDropTotal: UInt64","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytercvdroptotal"},{"type":"property","title":"let byteRcvLoss: UInt64","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytercvloss"},{"type":"property","title":"let byteRcvLossTotal: UInt64","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytercvlosstotal"},{"type":"property","title":"let byteRcvUndecrypt: UInt64","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytercvundecrypt"},{"type":"property","title":"let byteRcvUndecryptTotal: UInt64","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytercvundecrypttotal"},{"type":"property","title":"let byteRecv: UInt64","path":"\/documentation\/srthaishinkit\/srtperformancedata\/byterecv"},{"type":"property","title":"let byteRecvTotal: UInt64","path":"\/documentation\/srthaishinkit\/srtperformancedata\/byterecvtotal"},{"type":"property","title":"let byteRetrans: UInt64","path":"\/documentation\/srthaishinkit\/srtperformancedata\/byteretrans"},{"type":"property","title":"let byteRetransTotal: UInt64","path":"\/documentation\/srthaishinkit\/srtperformancedata\/byteretranstotal"},{"type":"property","title":"let byteSent: UInt64","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytesent"},{"type":"property","title":"let byteSentTotal: UInt64","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytesenttotal"},{"type":"property","title":"let byteSndBuf: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytesndbuf"},{"type":"property","title":"let byteSndDrop: UInt64","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytesnddrop"},{"type":"property","title":"let byteSndDropTotal: UInt64","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytesnddroptotal"},{"type":"property","title":"let mbpsBandwidth: Double","path":"\/documentation\/srthaishinkit\/srtperformancedata\/mbpsbandwidth"},{"type":"property","title":"let mbpsMaxBW: Double","path":"\/documentation\/srthaishinkit\/srtperformancedata\/mbpsmaxbw"},{"type":"property","title":"let mbpsRecvRate: Double","path":"\/documentation\/srthaishinkit\/srtperformancedata\/mbpsrecvrate"},{"type":"property","title":"let mbpsSendRate: Double","path":"\/documentation\/srthaishinkit\/srtperformancedata\/mbpssendrate"},{"type":"property","title":"let msRTT: Double","path":"\/documentation\/srthaishinkit\/srtperformancedata\/msrtt"},{"type":"property","title":"let msRcvBuf: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/msrcvbuf"},{"type":"property","title":"let msRcvTsbPdDelay: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/msrcvtsbpddelay"},{"type":"property","title":"let msSndBuf: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/mssndbuf"},{"type":"property","title":"let msSndTsbPdDelay: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/mssndtsbpddelay"},{"type":"property","title":"let msTimeStamp: Int64","path":"\/documentation\/srthaishinkit\/srtperformancedata\/mstimestamp"},{"type":"property","title":"let pktCongestionWindow: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktcongestionwindow"},{"type":"property","title":"let pktFlightSize: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktflightsize"},{"type":"property","title":"let pktFlowWindow: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktflowwindow"},{"type":"property","title":"let pktRcvAvgBelatedTime: Double","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvavgbelatedtime"},{"type":"property","title":"let pktRcvBelated: Int64","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvbelated"},{"type":"property","title":"let pktRcvBuf: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvbuf"},{"type":"property","title":"let pktRcvDrop: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvdrop"},{"type":"property","title":"let pktRcvDropTotal: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvdroptotal"},{"type":"property","title":"let pktRcvFilterExtra: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvfilterextra"},{"type":"property","title":"let pktRcvFilterExtraTotal: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvfilterextratotal"},{"type":"property","title":"let pktRcvFilterLoss: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvfilterloss"},{"type":"property","title":"let pktRcvFilterLossTotal: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvfilterlosstotal"},{"type":"property","title":"let pktRcvFilterSupply: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvfiltersupply"},{"type":"property","title":"let pktRcvFilterSupplyTotal: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvfiltersupplytotal"},{"type":"property","title":"let pktRcvLoss: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvloss"},{"type":"property","title":"let pktRcvLossTotal: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvlosstotal"},{"type":"property","title":"let pktRcvRetrans: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvretrans"},{"type":"property","title":"let pktRcvUndecrypt: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvundecrypt"},{"type":"property","title":"let pktRcvUndecryptTotal: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvundecrypttotal"},{"type":"property","title":"let pktRecv: Int64","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrecv"},{"type":"property","title":"let pktRecvACK: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrecvack"},{"type":"property","title":"let pktRecvACKTotal: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrecvacktotal"},{"type":"property","title":"let pktRecvNAK: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrecvnak"},{"type":"property","title":"let pktRecvNAKTotal: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrecvnaktotal"},{"type":"property","title":"let pktRecvTotal: Int64","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrecvtotal"},{"type":"property","title":"let pktReorderDistance: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktreorderdistance"},{"type":"property","title":"let pktReorderTolerance: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktreordertolerance"},{"type":"property","title":"let pktRetrans: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktretrans"},{"type":"property","title":"let pktRetransTotal: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktretranstotal"},{"type":"property","title":"let pktSent: Int64","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsent"},{"type":"property","title":"let pktSentACK: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsentack"},{"type":"property","title":"let pktSentACKTotal: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsentacktotal"},{"type":"property","title":"let pktSentNAK: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsentnak"},{"type":"property","title":"let pktSentNAKTotal: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsentnaktotal"},{"type":"property","title":"let pktSentTotal: Int64","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsenttotal"},{"type":"property","title":"let pktSndBuf: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsndbuf"},{"type":"property","title":"let pktSndDrop: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsnddrop"},{"type":"property","title":"let pktSndDropTotal: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsnddroptotal"},{"type":"property","title":"let pktSndFilterExtra: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsndfilterextra"},{"type":"property","title":"let pktSndFilterExtraTotal: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsndfilterextratotal"},{"type":"property","title":"let pktSndLoss: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsndloss"},{"type":"property","title":"let pktSndLossTotal: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsndlosstotal"},{"type":"property","title":"let usPktSndPeriod: Double","path":"\/documentation\/srthaishinkit\/srtperformancedata\/uspktsndperiod"},{"type":"property","title":"let usSndDuration: Int64","path":"\/documentation\/srthaishinkit\/srtperformancedata\/ussndduration"},{"type":"property","title":"let usSndDurationTotal: Int64","path":"\/documentation\/srthaishinkit\/srtperformancedata\/ussnddurationtotal"}]},{"title":"SRTSessionFactory","path":"\/documentation\/srthaishinkit\/srtsessionfactory","type":"struct","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/srthaishinkit\/srtsessionfactory\/init()","title":"init()"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtsessionfactory\/supportedprotocols","title":"let supportedProtocols: Set<String>"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/srthaishinkit\/srtsessionfactory\/make(uri:)","title":"func make(uri: URL) -> any Session"}]},{"title":"SRTSocketOption","path":"\/documentation\/srthaishinkit\/srtsocketoption","type":"struct","children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(rawValue: String, symbol: SRT_SOCKOPT, restriction: SRTSocketOption.Restriction?, type: SRTSocketOption.CType)","type":"init","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/init(rawvalue:symbol:restriction:type:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let rawValue: String","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/rawvalue-swift.property"},{"title":"Type Aliases","type":"groupMarker"},{"title":"SRTSocketOption.Name.RawValue","type":"typealias","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/rawvalue-swift.typealias"},{"title":"Type Properties","type":"groupMarker"},{"title":"static let bindtodevice: SRTSocketOption.Name","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/bindtodevice"},{"title":"static let congestion: SRTSocketOption.Name","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/congestion"},{"title":"static let conntimeo: SRTSocketOption.Name","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/conntimeo"},{"title":"static let drifttracer: SRTSocketOption.Name","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/drifttracer"},{"title":"static let enforcedencryption: SRTSocketOption.Name","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/enforcedencryption","type":"property"},{"title":"static let event: SRTSocketOption.Name","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/event","type":"property"},{"title":"static let fc: SRTSocketOption.Name","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/fc","type":"property"},{"title":"static let groupconnect: SRTSocketOption.Name","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/groupconnect","type":"property"},{"title":"static let groupminstabletimeo: SRTSocketOption.Name","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/groupminstabletimeo","type":"property"},{"title":"static let grouptype: SRTSocketOption.Name","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/grouptype","type":"property"},{"title":"static let inputbw: SRTSocketOption.Name","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/inputbw","type":"property"},{"title":"static let iptos: SRTSocketOption.Name","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/iptos","type":"property"},{"title":"static let ipttl: SRTSocketOption.Name","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/ipttl","type":"property"},{"title":"static let ipv6only: SRTSocketOption.Name","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/ipv6only","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/isn","title":"static let isn: SRTSocketOption.Name","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/kmpreannounce","title":"static let kmpreannounce: SRTSocketOption.Name","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/kmrefreshrate","title":"static let kmrefreshrate: SRTSocketOption.Name","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/kmstate","title":"static let kmstate: SRTSocketOption.Name","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/latency","title":"static let latency: SRTSocketOption.Name","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/lossmaxttl","title":"static let lossmaxttl: SRTSocketOption.Name","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/maxbw","title":"static let maxbw: SRTSocketOption.Name","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/messageapi","title":"static let messageapi: SRTSocketOption.Name","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/mininputbw","title":"static let mininputbw: SRTSocketOption.Name","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/minversion","title":"static let minversion: SRTSocketOption.Name","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/mss","title":"static let mss: SRTSocketOption.Name","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/nakreport","title":"static let nakreport: SRTSocketOption.Name","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/oheadbw","title":"static let oheadbw: SRTSocketOption.Name","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/packetfilter","title":"static let packetfilter: SRTSocketOption.Name","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/passphrase","title":"static let passphrase: SRTSocketOption.Name","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/pbkeylen","title":"static let pbkeylen: SRTSocketOption.Name","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/peeridletimeo","title":"static let peeridletimeo: SRTSocketOption.Name","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/peerlatency","title":"static let peerlatency: SRTSocketOption.Name","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/peerversion","title":"static let peerversion: SRTSocketOption.Name","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/rcvbuf","title":"static let rcvbuf: SRTSocketOption.Name","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/rcvdata","title":"static let rcvdata: SRTSocketOption.Name","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/rcvlatency","title":"static let rcvlatency: SRTSocketOption.Name","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/rcvsyn","title":"static let rcvsyn: SRTSocketOption.Name","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/rcvtimeo","title":"static let rcvtimeo: SRTSocketOption.Name","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/rendezvous","title":"static let rendezvous: SRTSocketOption.Name","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/retransmitalgo","title":"static let retransmitalgo: SRTSocketOption.Name","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/reuseaddr","title":"static let reuseaddr: SRTSocketOption.Name","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/sender","title":"static let sender: SRTSocketOption.Name","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/sndbuf","title":"static let sndbuf: SRTSocketOption.Name","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/snddata","title":"static let snddata: SRTSocketOption.Name","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/snddropdelay","title":"static let snddropdelay: SRTSocketOption.Name","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/sndkmstate","title":"static let sndkmstate: SRTSocketOption.Name","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/sndsyn","title":"static let sndsyn: SRTSocketOption.Name","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/sndtimeo","title":"static let sndtimeo: SRTSocketOption.Name","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/state","title":"static let state: SRTSocketOption.Name","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/streamid","title":"static let streamid: SRTSocketOption.Name","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/tlpktdrop","title":"static let tlpktdrop: SRTSocketOption.Name","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/transtype","title":"static let transtype: SRTSocketOption.Name","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/tsbpdmode","title":"static let tsbpdmode: SRTSocketOption.Name","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/udprcvbuf","title":"static let udpRcvbuf: SRTSocketOption.Name","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/udpsndbuf","title":"static let udpSndbuf: SRTSocketOption.Name","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/version","title":"static let version: SRTSocketOption.Name","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: String)","type":"init","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/init(rawvalue:)"}],"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct","title":"SRTSocketOption.Name","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/init(name:value:)-3uyvp","title":"init(name: SRTSocketOption.Name, value: String) throws","type":"init"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/init(name:value:)-66kiu","title":"init(name: SRTSocketOption.Name, value: Int) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/boolvalue","title":"var boolValue: Bool","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/intvalue","title":"var intValue: Int","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.property","title":"let name: SRTSocketOption.Name","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/stringvalue","title":"var stringValue: String","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","title":"case bool","path":"\/documentation\/srthaishinkit\/srtsocketoption\/ctype\/bool"},{"type":"case","title":"case int32","path":"\/documentation\/srthaishinkit\/srtsocketoption\/ctype\/int32"},{"type":"case","title":"case int64","path":"\/documentation\/srthaishinkit\/srtsocketoption\/ctype\/int64"},{"type":"case","title":"case string","path":"\/documentation\/srthaishinkit\/srtsocketoption\/ctype\/string"},{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init?(rawValue: Int)","path":"\/documentation\/srthaishinkit\/srtsocketoption\/ctype\/init(rawvalue:)"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/srthaishinkit\/srtsocketoption\/ctype\/!=(_:_:)","type":"op"}],"type":"symbol","title":"Equatable Implementations","path":"\/documentation\/srthaishinkit\/srtsocketoption\/ctype\/equatable-implementations"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/ctype\/hashvalue","title":"var hashValue: Int"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/srthaishinkit\/srtsocketoption\/ctype\/hash(into:)","title":"func hash(into: inout Hasher)"}],"type":"symbol","title":"RawRepresentable Implementations","path":"\/documentation\/srthaishinkit\/srtsocketoption\/ctype\/rawrepresentable-implementations"}],"path":"\/documentation\/srthaishinkit\/srtsocketoption\/ctype","title":"SRTSocketOption.CType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case post","type":"case","path":"\/documentation\/srthaishinkit\/srtsocketoption\/restriction\/post"},{"title":"case pre","type":"case","path":"\/documentation\/srthaishinkit\/srtsocketoption\/restriction\/pre"},{"title":"case preBind","type":"case","path":"\/documentation\/srthaishinkit\/srtsocketoption\/restriction\/prebind"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: Int)","type":"init","path":"\/documentation\/srthaishinkit\/srtsocketoption\/restriction\/init(rawvalue:)"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","type":"symbol","path":"\/documentation\/srthaishinkit\/srtsocketoption\/restriction\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/srthaishinkit\/srtsocketoption\/restriction\/!=(_:_:)","type":"op"}]},{"title":"RawRepresentable Implementations","type":"symbol","path":"\/documentation\/srthaishinkit\/srtsocketoption\/restriction\/rawrepresentable-implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/restriction\/hashvalue"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func hash(into: inout Hasher)","type":"method","path":"\/documentation\/srthaishinkit\/srtsocketoption\/restriction\/hash(into:)"}]}],"path":"\/documentation\/srthaishinkit\/srtsocketoption\/restriction","title":"SRTSocketOption.Restriction","type":"enum"}]},{"title":"Enumerations","type":"groupMarker"},{"title":"SRTLogFunctionalArea","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea","type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/apictrl","title":"case apiCtrl","type":"case"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/apirecv","title":"case apiRecv","type":"case"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/apisend","title":"case apiSend","type":"case"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/applog","title":"case applog","type":"case"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/bstats","title":"case bstats","type":"case"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/bufrecv","title":"case bufRecv","type":"case"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/bufsend","title":"case bufSend","type":"case"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/chanrecv","title":"case chanRecv","type":"case"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/chnmgmt","title":"case chnMgmt","type":"case"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/chnsend","title":"case chnSend","type":"case"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/congest","title":"case congest","type":"case"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/control","title":"case control","type":"case"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/data","title":"case data","type":"case"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/epollapi","title":"case epollApi","type":"case"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/epollupd","title":"case epollUpd","type":"case"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/general","title":"case general","type":"case"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/grpmgmt","title":"case grpMgmt","type":"case"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/grprecv","title":"case grpRecv","type":"case"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/grpsend","title":"case grpSend","type":"case"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/haicrypt","title":"case haicrypt","type":"case"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/internal","title":"case `internal`","type":"case"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/pfilter","title":"case pfilter","type":"case"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/quectrl","title":"case queCtrl","type":"case"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/quemgmt","title":"case queMgmt","type":"case"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/querecv","title":"case queRecv","type":"case"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/quesend","title":"case queSend","type":"case"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/rsrc","title":"case rsrc","type":"case"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/tsbpd","title":"case tsbpd","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/init(rawvalue:)","title":"init?(rawValue: Int32)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/equatable-implementations","title":"Equatable Implementations","type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}]},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","type":"property","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/hashvalue"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func hash(into: inout Hasher)","type":"method","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/hash(into:)"}]}]},{"title":"SRTLogLevel","path":"\/documentation\/srthaishinkit\/srtloglevel","type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/srthaishinkit\/srtloglevel\/crit","type":"case","title":"case crit"},{"path":"\/documentation\/srthaishinkit\/srtloglevel\/debug","type":"case","title":"case debug"},{"path":"\/documentation\/srthaishinkit\/srtloglevel\/error","type":"case","title":"case error"},{"path":"\/documentation\/srthaishinkit\/srtloglevel\/notice","type":"case","title":"case notice"},{"path":"\/documentation\/srthaishinkit\/srtloglevel\/warning","type":"case","title":"case warning"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/srthaishinkit\/srtloglevel\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}],"path":"\/documentation\/srthaishinkit\/srtloglevel\/equatable-implementations","type":"symbol","title":"Equatable Implementations"}]},{"title":"SRTMode","path":"\/documentation\/srthaishinkit\/srtmode","type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case caller","path":"\/documentation\/srthaishinkit\/srtmode\/caller","type":"case"},{"title":"case listener","path":"\/documentation\/srthaishinkit\/srtmode\/listener","type":"case"},{"title":"case rendezvous","path":"\/documentation\/srthaishinkit\/srtmode\/rendezvous","type":"case"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: String)","path":"\/documentation\/srthaishinkit\/srtmode\/init(rawvalue:)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/srthaishinkit\/srtmode\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}],"path":"\/documentation\/srthaishinkit\/srtmode\/equatable-implementations","type":"symbol"},{"title":"RawRepresentable Implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","path":"\/documentation\/srthaishinkit\/srtmode\/hashvalue","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func hash(into: inout Hasher)","path":"\/documentation\/srthaishinkit\/srtmode\/hash(into:)","type":"method"}],"path":"\/documentation\/srthaishinkit\/srtmode\/rawrepresentable-implementations","type":"symbol"}]}],"path":"\/documentation\/srthaishinkit","type":"module"}],"type":"module","path":"\/documentation","title":"HaishinKit"}]},"includedArchiveIdentifiers":["Logboard","HaishinKit","MoQTHaishinKit","SRTHaishinKit"]}