{"schemaVersion":{"minor":3,"major":0,"patch":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/srthaishinkit"]}],"metadata":{"modules":[{"name":"SRTHaishinKit"}],"symbolKind":"module","roleHeading":"Framework","role":"collection","title":"SRTHaishinKit","externalID":"SRTHaishinKit"},"kind":"symbol","identifier":{"url":"doc:\/\/SRTHaishinKit\/documentation\/SRTHaishinKit","interfaceLanguage":"swift"},"sections":[],"topicSections":[{"generated":true,"identifiers":["doc:\/\/SRTHaishinKit\/documentation\/SRTHaishinKit\/SRTConnection","doc:\/\/SRTHaishinKit\/documentation\/SRTHaishinKit\/SRTStream"],"anchor":"Classes","title":"Classes"},{"anchor":"Structures","identifiers":["doc:\/\/SRTHaishinKit\/documentation\/SRTHaishinKit\/SRTLogger","doc:\/\/SRTHaishinKit\/documentation\/SRTHaishinKit\/SRTPerformanceData"],"generated":true,"title":"Structures"},{"generated":true,"identifiers":["doc:\/\/SRTHaishinKit\/documentation\/SRTHaishinKit\/SRTLogFunctionalArea","doc:\/\/SRTHaishinKit\/documentation\/SRTHaishinKit\/SRTLogLevel","doc:\/\/SRTHaishinKit\/documentation\/SRTHaishinKit\/SRTMode"],"title":"Enumerations","anchor":"Enumerations"}],"hierarchy":{"paths":[[]]},"primaryContentSections":[{"content":[{"text":"Overview","type":"heading","anchor":"Overview","level":2},{"inlineContent":[{"text":"This module supports the SRT protocol. It is separated into its own module due to the large size of the wrapper library for libsrt.","type":"text"}],"type":"paragraph"},{"type":"heading","anchor":"libsrtxcframework","text":"libsrt.xcframework","level":2},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"This is a build of https:\/\/github.com\/Haivision\/srt as an xcframework."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"The license under the MPLv2.0."}],"type":"paragraph"}]}]},{"anchor":"%F0%9F%93%93-Usage","text":"ðŸ““ Usage","level":2,"type":"heading"},{"level":3,"text":"Ingest","anchor":"Ingest","type":"heading"},{"syntax":"swift","type":"codeListing","code":["let mixer = MediaMixer()","let connection = SRTConnection()","let stream = SRTStream(connection: connection)","let hkView = MTHKView(frame: view.bounds)","","Task {","  do {","    try await mixer.attachAudio(AVCaptureDevice.default(for: .audio))","  } catch {","    print(error)","  }","","  do {","    try await mixer.attachVideo(AVCaptureDevice.default(.builtInWideAngleCamera, for: .video, position: .back))","  } catch {","    print(error)","  }","","  await mixer.addOutput(stream)","}","","Task { MainActor in","  await stream.addOutput(hkView)","  \/\/ add ViewController#view","  view.addSubview(hkView)","}","","Task {","  stream.attachAudioPlayer(audioPlayer)","  do {","    try await connection.connect(\"srt:\/\/host:port?option=foo\")","    try await stream.publish()","  } catch {","    print(error)","  }","}"]},{"level":3,"text":"Playback","type":"heading","anchor":"Playback"},{"type":"codeListing","code":["let connection = SRTConnection()","let stream = SRTStream(connection: connection)","let hkView = MTHKView(frame: view.bounds)","let audioPlayer = AudioPlayer(AVAudioEngine())","","Task { MainActor in","  await stream.addOutput(hkView)","  \/\/ add ViewController#view","  view.addSubview(hkView)","}","","Task {","  \/\/ requires attachAudioPlayer","  await stream.attachAudioPlayer(audioPlayer)","","  do {","    try await connection.connect(\"srt:\/\/host:port?option=foo\")","    try await stream.play()","  } catch {","    print(error)","  }","}"],"syntax":"swift"},{"level":2,"type":"heading","text":"Test","anchor":"Test"},{"level":3,"text":"ffplay as a SRT service for ingest HaishinKit.","anchor":"ffplay-as-a-SRT-service-for-ingest-HaishinKit","type":"heading"},{"syntax":"sh","code":["$ ffplay -i 'srt:\/\/${YOUR_IP_ADDRESS}?mode=listener'"],"type":"codeListing"},{"level":3,"anchor":"ffmpeg-as-a-SRT-service-for-playback-HaishinKit","text":"ffmpeg as a SRT service for playback HaishinKit.","type":"heading"},{"syntax":"sh","code":["$ ffmpeg -stream_loop -1 -re -i input.mp4 -c copy -f mpegts 'srt:\/\/0.0.0.0:9998?mode=listener'"],"type":"codeListing"}],"kind":"content"}],"references":{"doc://SRTHaishinKit/documentation/SRTHaishinKit/SRTPerformanceData":{"type":"topic","navigatorTitle":[{"text":"SRTPerformanceData","kind":"identifier"}],"url":"\/documentation\/srthaishinkit\/srtperformancedata","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"The SRTPerformanceData represents the SRTâ€™s performance statistics. This struct is wrapper for an CBytePerfMon."}],"identifier":"doc:\/\/SRTHaishinKit\/documentation\/SRTHaishinKit\/SRTPerformanceData","title":"SRTPerformanceData","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"SRTPerformanceData","kind":"identifier"}]},"doc://SRTHaishinKit/documentation/SRTHaishinKit/SRTConnection":{"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SRTConnection"}],"type":"topic","url":"\/documentation\/srthaishinkit\/srtconnection","abstract":[{"type":"text","text":"An actor that provides the interface to control a two-way SRT connection."}],"kind":"symbol","identifier":"doc:\/\/SRTHaishinKit\/documentation\/SRTHaishinKit\/SRTConnection","navigatorTitle":[{"kind":"identifier","text":"SRTConnection"}],"title":"SRTConnection","role":"symbol"},"doc://SRTHaishinKit/documentation/SRTHaishinKit/SRTMode":{"identifier":"doc:\/\/SRTHaishinKit\/documentation\/SRTHaishinKit\/SRTMode","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"SRTMode","kind":"identifier"}],"title":"SRTMode","kind":"symbol","navigatorTitle":[{"text":"SRTMode","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"The type of SRTHaishinKit supports srt modes."}],"role":"symbol","url":"\/documentation\/srthaishinkit\/srtmode"},"doc://SRTHaishinKit/documentation/SRTHaishinKit/SRTStream":{"identifier":"doc:\/\/SRTHaishinKit\/documentation\/SRTHaishinKit\/SRTStream","url":"\/documentation\/srthaishinkit\/srtstream","kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SRTStream"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"SRTStream"}],"abstract":[{"type":"text","text":"An actor that provides the interface to control a one-way channel over a SRTConnection."}],"title":"SRTStream","role":"symbol"},"doc://SRTHaishinKit/documentation/SRTHaishinKit/SRTLogLevel":{"title":"SRTLogLevel","identifier":"doc:\/\/SRTHaishinKit\/documentation\/SRTHaishinKit\/SRTLogLevel","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"SRTLogLevel"}],"url":"\/documentation\/srthaishinkit\/srtloglevel","type":"topic","kind":"symbol","abstract":[],"navigatorTitle":[{"text":"SRTLogLevel","kind":"identifier"}],"role":"symbol"},"doc://SRTHaishinKit/documentation/SRTHaishinKit":{"identifier":"doc:\/\/SRTHaishinKit\/documentation\/SRTHaishinKit","kind":"symbol","role":"collection","abstract":[],"url":"\/documentation\/srthaishinkit","type":"topic","title":"SRTHaishinKit"},"doc://SRTHaishinKit/documentation/SRTHaishinKit/SRTLogFunctionalArea":{"type":"topic","title":"SRTLogFunctionalArea","url":"\/documentation\/srthaishinkit\/srtlogfunctionalarea","abstract":[],"kind":"symbol","role":"symbol","identifier":"doc:\/\/SRTHaishinKit\/documentation\/SRTHaishinKit\/SRTLogFunctionalArea","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SRTLogFunctionalArea","kind":"identifier"}],"navigatorTitle":[{"text":"SRTLogFunctionalArea","kind":"identifier"}]},"doc://SRTHaishinKit/documentation/SRTHaishinKit/SRTLogger":{"identifier":"doc:\/\/SRTHaishinKit\/documentation\/SRTHaishinKit\/SRTLogger","abstract":[{"type":"text","text":"An object for writing interpolated string messages to srt logging system."}],"kind":"symbol","title":"SRTLogger","role":"symbol","url":"\/documentation\/srthaishinkit\/srtlogger","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"SRTLogger","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"SRTLogger"}],"type":"topic"}}}