{"schemaVersion":{"minor":3,"patch":0,"major":0},"primaryContentSections":[{"kind":"content","content":[{"type":"heading","text":"Overview","level":2,"anchor":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This module supports the SRT protocol. It is separated into its own module due to the large size of the wrapper library for libsrt."}]},{"text":"libsrt.xcframework","level":2,"anchor":"libsrtxcframework","type":"heading"},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"This is a build of https:\/\/github.com\/Haivision\/srt as an xcframework."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"The license under the MPLv2.0.","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"},{"anchor":"%F0%9F%93%93-Usage","level":2,"text":"ðŸ““ Usage","type":"heading"},{"anchor":"Ingest","level":3,"text":"Ingest","type":"heading"},{"type":"codeListing","syntax":"swift","code":["let mixer = MediaMixer()","let connection = SRTConnection()","let stream = SRTStream(connection: connection)","let hkView = MTHKView(frame: view.bounds)","","Task {","  do {","    try await mixer.attachAudio(AVCaptureDevice.default(for: .audio))","  } catch {","    print(error)","  }","","  do {","    try await mixer.attachVideo(AVCaptureDevice.default(.builtInWideAngleCamera, for: .video, position: .back))","  } catch {","    print(error)","  }","","  await mixer.addOutput(stream)","}","","Task { MainActor in","  await stream.addOutput(hkView)","  \/\/ add ViewController#view","  view.addSubview(hkView)","}","","Task {","  stream.attachAudioPlayer(audioPlayer)","  do {","    try await connection.connect(\"srt:\/\/host:port?option=foo\")","    try await stream.publish()","  } catch {","    print(error)","  }","}"]},{"level":3,"type":"heading","anchor":"Playback","text":"Playback"},{"type":"codeListing","syntax":"swift","code":["let connection = SRTConnection()","let stream = SRTStream(connection: connection)","let hkView = MTHKView(frame: view.bounds)","let audioPlayer = AudioPlayer(AVAudioEngine())","","Task { MainActor in","  await stream.addOutput(hkView)","  \/\/ add ViewController#view","  view.addSubview(hkView)","}","","Task {","  \/\/ requires attachAudioPlayer","  await stream.attachAudioPlayer(audioPlayer)","","  do {","    try await connection.connect(\"srt:\/\/host:port?option=foo\")","    try await stream.play()","  } catch {","    print(error)","  }","}"]},{"type":"heading","anchor":"Test","level":2,"text":"Test"},{"level":3,"anchor":"ffplay-as-a-SRT-service-for-ingest-HaishinKit","type":"heading","text":"ffplay as a SRT service for ingest HaishinKit."},{"syntax":"sh","code":["$ ffplay -i 'srt:\/\/${YOUR_IP_ADDRESS}?mode=listener'"],"type":"codeListing"},{"text":"ffmpeg as a SRT service for playback HaishinKit.","level":3,"type":"heading","anchor":"ffmpeg-as-a-SRT-service-for-playback-HaishinKit"},{"code":["$ ffmpeg -stream_loop -1 -re -i input.mp4 -c copy -f mpegts 'srt:\/\/0.0.0.0:9998?mode=listener'"],"syntax":"sh","type":"codeListing"}]}],"variants":[{"paths":["\/documentation\/srthaishinkit"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","hierarchy":{"paths":[[]]},"sections":[],"metadata":{"symbolKind":"module","role":"collection","modules":[{"name":"SRTHaishinKit"}],"externalID":"SRTHaishinKit","roleHeading":"Framework","title":"SRTHaishinKit"},"identifier":{"url":"doc:\/\/SRTHaishinKit\/documentation\/SRTHaishinKit","interfaceLanguage":"swift"},"topicSections":[{"generated":true,"title":"Classes","identifiers":["doc:\/\/SRTHaishinKit\/documentation\/SRTHaishinKit\/SRTConnection","doc:\/\/SRTHaishinKit\/documentation\/SRTHaishinKit\/SRTStream"],"anchor":"Classes"},{"identifiers":["doc:\/\/SRTHaishinKit\/documentation\/SRTHaishinKit\/SRTLogger","doc:\/\/SRTHaishinKit\/documentation\/SRTHaishinKit\/SRTPerformanceData"],"anchor":"Structures","title":"Structures","generated":true},{"anchor":"Enumerations","identifiers":["doc:\/\/SRTHaishinKit\/documentation\/SRTHaishinKit\/SRTLogFunctionalArea","doc:\/\/SRTHaishinKit\/documentation\/SRTHaishinKit\/SRTLogLevel","doc:\/\/SRTHaishinKit\/documentation\/SRTHaishinKit\/SRTMode"],"generated":true,"title":"Enumerations"}],"references":{"doc://SRTHaishinKit/documentation/SRTHaishinKit/SRTPerformanceData":{"type":"topic","url":"\/documentation\/srthaishinkit\/srtperformancedata","identifier":"doc:\/\/SRTHaishinKit\/documentation\/SRTHaishinKit\/SRTPerformanceData","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"SRTPerformanceData","kind":"identifier"}],"navigatorTitle":[{"text":"SRTPerformanceData","kind":"identifier"}],"role":"symbol","abstract":[{"text":"The SRTPerformanceData represents the SRTâ€™s performance statistics. This struct is wrapper for an CBytePerfMon.","type":"text"}],"kind":"symbol","title":"SRTPerformanceData"},"doc://SRTHaishinKit/documentation/SRTHaishinKit/SRTLogFunctionalArea":{"abstract":[],"navigatorTitle":[{"kind":"identifier","text":"SRTLogFunctionalArea"}],"fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"SRTLogFunctionalArea","kind":"identifier"}],"title":"SRTLogFunctionalArea","kind":"symbol","url":"\/documentation\/srthaishinkit\/srtlogfunctionalarea","identifier":"doc:\/\/SRTHaishinKit\/documentation\/SRTHaishinKit\/SRTLogFunctionalArea","type":"topic","role":"symbol"},"doc://SRTHaishinKit/documentation/SRTHaishinKit/SRTLogger":{"identifier":"doc:\/\/SRTHaishinKit\/documentation\/SRTHaishinKit\/SRTLogger","kind":"symbol","type":"topic","title":"SRTLogger","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SRTLogger"}],"navigatorTitle":[{"text":"SRTLogger","kind":"identifier"}],"abstract":[{"text":"An object for writing interpolated string messages to srt logging system.","type":"text"}],"url":"\/documentation\/srthaishinkit\/srtlogger"},"doc://SRTHaishinKit/documentation/SRTHaishinKit/SRTLogLevel":{"abstract":[],"kind":"symbol","role":"symbol","identifier":"doc:\/\/SRTHaishinKit\/documentation\/SRTHaishinKit\/SRTLogLevel","type":"topic","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"SRTLogLevel"}],"navigatorTitle":[{"text":"SRTLogLevel","kind":"identifier"}],"title":"SRTLogLevel","url":"\/documentation\/srthaishinkit\/srtloglevel"},"doc://SRTHaishinKit/documentation/SRTHaishinKit/SRTStream":{"kind":"symbol","abstract":[{"type":"text","text":"An actor that provides the interface to control a one-way channel over a SRTConnection."}],"identifier":"doc:\/\/SRTHaishinKit\/documentation\/SRTHaishinKit\/SRTStream","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"SRTStream","kind":"identifier"}],"url":"\/documentation\/srthaishinkit\/srtstream","title":"SRTStream","navigatorTitle":[{"kind":"identifier","text":"SRTStream"}],"role":"symbol","type":"topic"},"doc://SRTHaishinKit/documentation/SRTHaishinKit":{"role":"collection","kind":"symbol","type":"topic","abstract":[],"url":"\/documentation\/srthaishinkit","title":"SRTHaishinKit","identifier":"doc:\/\/SRTHaishinKit\/documentation\/SRTHaishinKit"},"doc://SRTHaishinKit/documentation/SRTHaishinKit/SRTMode":{"kind":"symbol","title":"SRTMode","identifier":"doc:\/\/SRTHaishinKit\/documentation\/SRTHaishinKit\/SRTMode","role":"symbol","navigatorTitle":[{"text":"SRTMode","kind":"identifier"}],"url":"\/documentation\/srthaishinkit\/srtmode","abstract":[{"type":"text","text":"The type of SRTHaishinKit supports srt modes."}],"type":"topic","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SRTMode","kind":"identifier"}]},"doc://SRTHaishinKit/documentation/SRTHaishinKit/SRTConnection":{"title":"SRTConnection","navigatorTitle":[{"kind":"identifier","text":"SRTConnection"}],"role":"symbol","abstract":[{"type":"text","text":"An actor that provides the interface to control a two-way SRT connection."}],"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"SRTConnection","kind":"identifier"}],"url":"\/documentation\/srthaishinkit\/srtconnection","identifier":"doc:\/\/SRTHaishinKit\/documentation\/SRTHaishinKit\/SRTConnection","type":"topic","kind":"symbol"}}}