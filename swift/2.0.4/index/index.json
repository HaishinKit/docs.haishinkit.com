{"interfaceLanguages":{"swift":[{"title":"Logboard","type":"module","children":[{"type":"groupMarker","title":"Classes"},{"path":"\/documentation\/logboard\/consoleappender","type":"class","title":"ConsoleAppender","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/logboard\/consoleappender\/init()","title":"init()","type":"init"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/logboard\/consoleappender\/append(_:level:format:arguments:file:function:line:)","title":"func append(LBLogger, level: LBLogger.Level, format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)"},{"type":"method","path":"\/documentation\/logboard\/consoleappender\/append(_:level:message:file:function:line:)","title":"func append(LBLogger, level: LBLogger.Level, message: [Any], file: StaticString, function: StaticString, line: Int)"}]},{"children":[{"type":"groupMarker","title":"Structures"},{"type":"struct","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/logboard\/lblogger\/data\/init(_:)","type":"init","title":"init?(Data)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"let date: Date","path":"\/documentation\/logboard\/lblogger\/data\/date"},{"title":"let file: String","type":"property","path":"\/documentation\/logboard\/lblogger\/data\/file"},{"title":"let function: String","path":"\/documentation\/logboard\/lblogger\/data\/function","type":"property"},{"path":"\/documentation\/logboard\/lblogger\/data\/identifier","type":"property","title":"let identifier: String"},{"title":"let level: LBLogger.Level","type":"property","path":"\/documentation\/logboard\/lblogger\/data\/level"},{"path":"\/documentation\/logboard\/lblogger\/data\/line","title":"let line: Int","type":"property"},{"title":"let message: String","type":"property","path":"\/documentation\/logboard\/lblogger\/data\/message"},{"type":"groupMarker","title":"Default Implementations"},{"title":"CustomStringConvertible Implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var description: String","path":"\/documentation\/logboard\/lblogger\/data\/description","type":"property"}],"type":"symbol","path":"\/documentation\/logboard\/lblogger\/data\/customstringconvertible-implementations"}],"title":"LBLogger.Data","path":"\/documentation\/logboard\/lblogger\/data"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/logboard\/lblogger\/init(_:)","type":"init","title":"init(String)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/logboard\/lblogger\/appender","title":"var appender: any LBLoggerAppender"},{"title":"let identifier: String","path":"\/documentation\/logboard\/lblogger\/identifier","type":"property"},{"title":"var level: LBLogger.Level","path":"\/documentation\/logboard\/lblogger\/level-swift.property","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func debug(Any..., file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/lblogger\/debug(_:file:function:line:)","type":"method"},{"title":"func debug(format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/lblogger\/debug(format:arguments:file:function:line:)","type":"method"},{"path":"\/documentation\/logboard\/lblogger\/error(_:file:function:line:)","type":"method","title":"func error(Any..., file: StaticString, function: StaticString, line: Int)"},{"title":"func error(format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/lblogger\/error(format:arguments:file:function:line:)","type":"method"},{"title":"func info(Any..., file: StaticString, function: StaticString, line: Int)","type":"method","path":"\/documentation\/logboard\/lblogger\/info(_:file:function:line:)"},{"path":"\/documentation\/logboard\/lblogger\/info(format:arguments:file:function:line:)","type":"method","title":"func info(format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)"},{"path":"\/documentation\/logboard\/lblogger\/isenabledfor(level:)","type":"method","title":"func isEnabledFor(level: LBLogger.Level) -> Bool"},{"path":"\/documentation\/logboard\/lblogger\/trace(_:file:function:line:)","type":"method","title":"func trace(Any..., file: StaticString, function: StaticString, line: Int)"},{"type":"method","path":"\/documentation\/logboard\/lblogger\/trace(format:arguments:file:function:line:)","title":"func trace(format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)"},{"type":"method","title":"func warn(Any..., file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/lblogger\/warn(_:file:function:line:)"},{"title":"func warn(format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/lblogger\/warn(format:arguments:file:function:line:)","type":"method"},{"type":"groupMarker","title":"Type Properties"},{"type":"property","title":"static var dateFormatter: DateFormatter","path":"\/documentation\/logboard\/lblogger\/dateformatter"},{"type":"groupMarker","title":"Type Methods"},{"title":"static func with(String) -> LBLogger","path":"\/documentation\/logboard\/lblogger\/with(_:)","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"type":"enum","path":"\/documentation\/logboard\/lblogger\/level-swift.enum","title":"LBLogger.Level","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/debug","title":"case debug","type":"case"},{"path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/error","type":"case","title":"case error"},{"path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/info","title":"case info","type":"case"},{"path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/trace","type":"case","title":"case trace"},{"title":"case warn","path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/warn","type":"case"},{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/init(rawvalue:)","type":"init","title":"init?(rawValue: Int)"},{"type":"init","path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/init(string:)","title":"init?(string: String)"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/description","title":"var description: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"type":"symbol","path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/equatable-implementations","title":"Equatable Implementations","children":[{"type":"groupMarker","title":"Operators"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/!=(_:_:)"}]},{"type":"symbol","title":"RawRepresentable Implementations","path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/rawrepresentable-implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","type":"property","path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/hashvalue"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}]}]}],"type":"class","path":"\/documentation\/logboard\/lblogger","title":"LBLogger"},{"type":"class","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/logboard\/multiappender\/init()","type":"init","title":"init()"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/logboard\/multiappender\/appenders","title":"var appenders: [any LBLoggerAppender]","type":"property"},{"type":"groupMarker","title":"Instance Methods"},{"title":"func append(LBLogger, level: LBLogger.Level, format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/multiappender\/append(_:level:format:arguments:file:function:line:)","type":"method"},{"path":"\/documentation\/logboard\/multiappender\/append(_:level:message:file:function:line:)","type":"method","title":"func append(LBLogger, level: LBLogger.Level, message: [Any], file: StaticString, function: StaticString, line: Int)"}],"path":"\/documentation\/logboard\/multiappender","title":"MultiAppender"},{"type":"class","title":"NullAppender","path":"\/documentation\/logboard\/nullappender","children":[{"type":"groupMarker","title":"Instance Methods"},{"title":"func append(LBLogger, level: LBLogger.Level, format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)","type":"method","path":"\/documentation\/logboard\/nullappender\/append(_:level:format:arguments:file:function:line:)"},{"title":"func append(LBLogger, level: LBLogger.Level, message: [Any], file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/nullappender\/append(_:level:message:file:function:line:)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"type":"property","path":"\/documentation\/logboard\/nullappender\/shared","title":"static let shared: NullAppender"}]},{"children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/logboard\/osloggerappender\/init(sybsystem:category:)","type":"init","title":"init(sybsystem: String, category: String)"},{"type":"groupMarker","title":"Instance Methods"},{"title":"func append(LBLogger, level: LBLogger.Level, format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/osloggerappender\/append(_:level:format:arguments:file:function:line:)","type":"method"},{"title":"func append(LBLogger, level: LBLogger.Level, message: [Any], file: StaticString, function: StaticString, line: Int)","type":"method","path":"\/documentation\/logboard\/osloggerappender\/append(_:level:message:file:function:line:)"}],"path":"\/documentation\/logboard\/osloggerappender","title":"OSLoggerAppender","type":"class"},{"title":"SocketAppender","path":"\/documentation\/logboard\/socketappender","type":"class","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init()","path":"\/documentation\/logboard\/socketappender\/init()","type":"init"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/logboard\/socketappender\/append(_:level:format:arguments:file:function:line:)","title":"func append(LBLogger, level: LBLogger.Level, format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)","type":"method"},{"path":"\/documentation\/logboard\/socketappender\/append(_:level:message:file:function:line:)","title":"func append(LBLogger, level: LBLogger.Level, message: [Any], file: StaticString, function: StaticString, line: Int)","type":"method"},{"title":"func close()","path":"\/documentation\/logboard\/socketappender\/close()","type":"method"},{"path":"\/documentation\/logboard\/socketappender\/connect(_:port:)","type":"method","title":"func connect(String, port: Int)"}]},{"type":"groupMarker","title":"Protocols"},{"type":"protocol","path":"\/documentation\/logboard\/lbloggerappender","title":"LBLoggerAppender","children":[{"title":"Instance Methods","type":"groupMarker"},{"type":"method","title":"func append(LBLogger, level: LBLogger.Level, format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/lbloggerappender\/append(_:level:format:arguments:file:function:line:)"},{"title":"func append(LBLogger, level: LBLogger.Level, message: [Any], file: StaticString, function: StaticString, line: Int)","type":"method","path":"\/documentation\/logboard\/lbloggerappender\/append(_:level:message:file:function:line:)"}]}],"path":"\/documentation\/logboard"},{"type":"module","children":[{"title":"Articles","type":"groupMarker"},{"title":"Enhanced RTMP","type":"article","path":"\/documentation\/haishinkit\/e-rtmp"},{"type":"groupMarker","title":"Classes"},{"title":"AssetScreenObject","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var chromaKeyColor: CGColor?","path":"\/documentation\/haishinkit\/assetscreenobject\/chromakeycolor","type":"property"},{"type":"property","title":"var isReading: Bool","path":"\/documentation\/haishinkit\/assetscreenobject\/isreading"},{"path":"\/documentation\/haishinkit\/assetscreenobject\/videogravity","title":"var videoGravity: AVLayerVideoGravity","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func cancelReading()","path":"\/documentation\/haishinkit\/assetscreenobject\/cancelreading()","type":"method"},{"title":"func makeBounds(CGSize) -> CGRect","path":"\/documentation\/haishinkit\/assetscreenobject\/makebounds(_:)","type":"method"},{"title":"func makeImage(some ScreenRenderer) -> CGImage?","path":"\/documentation\/haishinkit\/assetscreenobject\/makeimage(_:)","type":"method"},{"type":"method","title":"func startReading(AVAsset) throws","path":"\/documentation\/haishinkit\/assetscreenobject\/startreading(_:)"}],"path":"\/documentation\/haishinkit\/assetscreenobject","type":"class"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"title":"var connection: AVCaptureConnection?","path":"\/documentation\/haishinkit\/audiodeviceunit\/connection","type":"property"},{"type":"property","title":"var device: AVCaptureDevice?","path":"\/documentation\/haishinkit\/audiodeviceunit\/device"},{"title":"var input: AVCaptureInput?","path":"\/documentation\/haishinkit\/audiodeviceunit\/input","type":"property"},{"title":"var output: AudioDeviceUnit.Output?","path":"\/documentation\/haishinkit\/audiodeviceunit\/output-swift.property","type":"property"},{"title":"let track: UInt8","path":"\/documentation\/haishinkit\/audiodeviceunit\/track","type":"property"},{"type":"groupMarker","title":"Type Aliases"},{"path":"\/documentation\/haishinkit\/audiodeviceunit\/output-swift.typealias","title":"AudioDeviceUnit.Output","type":"typealias"}],"type":"class","path":"\/documentation\/haishinkit\/audiodeviceunit","title":"AudioDeviceUnit"},{"title":"AudioPlayer","type":"class","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/haishinkit\/audioplayer\/init(audioengine:)","title":"init(audioEngine: AVAudioEngine)"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/audioplayer\/assertisolated(_:file:line:)","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method"},{"type":"method","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","path":"\/documentation\/haishinkit\/audioplayer\/assumeisolated(_:file:line:)"},{"type":"method","path":"\/documentation\/haishinkit\/audioplayer\/preconditionisolated(_:file:line:)","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)"}],"path":"\/documentation\/haishinkit\/audioplayer\/actor-implementations","title":"Actor Implementations","type":"symbol"}],"path":"\/documentation\/haishinkit\/audioplayer"},{"title":"HKIncomingStream","path":"\/documentation\/haishinkit\/hkincomingstream","children":[{"type":"groupMarker","title":"Initializers"},{"title":"init(some HKStream)","type":"init","path":"\/documentation\/haishinkit\/hkincomingstream\/init(_:)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var isRunning: Bool","path":"\/documentation\/haishinkit\/hkincomingstream\/isrunning"},{"type":"property","path":"\/documentation\/haishinkit\/hkincomingstream\/soundtransfrom","title":"var soundTransfrom: SoundTransform?"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/hkincomingstream\/append(_:)","title":"func append(CMSampleBuffer)","type":"method"},{"type":"method","title":"func append(AVAudioBuffer, when: AVAudioTime)","path":"\/documentation\/haishinkit\/hkincomingstream\/append(_:when:)"},{"path":"\/documentation\/haishinkit\/hkincomingstream\/attachaudioplayer(_:)","type":"method","title":"func attachAudioPlayer(AudioPlayer?) async"},{"title":"func setSoundTransform(SoundTransform) async","path":"\/documentation\/haishinkit\/hkincomingstream\/setsoundtransform(_:)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Actor Implementations","path":"\/documentation\/haishinkit\/hkincomingstream\/actor-implementations","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/haishinkit\/hkincomingstream\/assertisolated(_:file:line:)"},{"type":"method","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","path":"\/documentation\/haishinkit\/hkincomingstream\/assumeisolated(_:file:line:)"},{"path":"\/documentation\/haishinkit\/hkincomingstream\/preconditionisolated(_:file:line:)","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method"}],"type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func startRunning()","path":"\/documentation\/haishinkit\/hkincomingstream\/startrunning()","type":"method"},{"path":"\/documentation\/haishinkit\/hkincomingstream\/stoprunning()","title":"func stopRunning()","type":"method"}],"type":"symbol","title":"AsyncRunner Implementations","path":"\/documentation\/haishinkit\/hkincomingstream\/asyncrunner-implementations"}],"type":"class"},{"type":"class","title":"HKOutgoingStream","path":"\/documentation\/haishinkit\/hkoutgoingstream","children":[{"title":"Initializers","type":"groupMarker"},{"type":"init","title":"init()","path":"\/documentation\/haishinkit\/hkoutgoingstream\/init()"},{"title":"Instance Properties","type":"groupMarker"},{"type":"property","title":"var audioInputFormat: CMFormatDescription?","path":"\/documentation\/haishinkit\/hkoutgoingstream\/audioinputformat"},{"type":"property","path":"\/documentation\/haishinkit\/hkoutgoingstream\/audiooutputstream","title":"var audioOutputStream: AsyncStream<(AVAudioBuffer, AVAudioTime)>"},{"title":"var audioSettings: AudioCodecSettings","path":"\/documentation\/haishinkit\/hkoutgoingstream\/audiosettings","type":"property"},{"title":"var isRunning: Bool","path":"\/documentation\/haishinkit\/hkoutgoingstream\/isrunning","type":"property"},{"path":"\/documentation\/haishinkit\/hkoutgoingstream\/videoinputbuffercounts","type":"property","title":"var videoInputBufferCounts: Int"},{"path":"\/documentation\/haishinkit\/hkoutgoingstream\/videoinputformat","title":"var videoInputFormat: CMFormatDescription?","type":"property"},{"title":"var videoInputStream: AsyncStream<CMSampleBuffer>","path":"\/documentation\/haishinkit\/hkoutgoingstream\/videoinputstream","type":"property"},{"path":"\/documentation\/haishinkit\/hkoutgoingstream\/videooutputstream","title":"var videoOutputStream: AsyncStream<CMSampleBuffer>","type":"property"},{"type":"property","path":"\/documentation\/haishinkit\/hkoutgoingstream\/videosettings","title":"var videoSettings: VideoCodecSettings"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func append(CMSampleBuffer)","path":"\/documentation\/haishinkit\/hkoutgoingstream\/append(_:)","type":"method"},{"title":"func append(AVAudioBuffer, when: AVAudioTime)","path":"\/documentation\/haishinkit\/hkoutgoingstream\/append(_:when:)","type":"method"},{"path":"\/documentation\/haishinkit\/hkoutgoingstream\/append(video:)","type":"method","title":"func append(video: CMSampleBuffer)"},{"title":"Default Implementations","type":"groupMarker"},{"type":"symbol","title":"Runner Implementations","path":"\/documentation\/haishinkit\/hkoutgoingstream\/runner-implementations","children":[{"type":"groupMarker","title":"Instance Methods"},{"title":"func startRunning()","type":"method","path":"\/documentation\/haishinkit\/hkoutgoingstream\/startrunning()"},{"title":"func stopRunning()","path":"\/documentation\/haishinkit\/hkoutgoingstream\/stoprunning()","type":"method"}]}]},{"type":"class","title":"HKStreamRecorder","path":"\/documentation\/haishinkit\/hkstreamrecorder","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/init()","type":"init","title":"init()"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/haishinkit\/hkstreamrecorder\/audiotrackid","title":"var audioTrackId: UInt8?"},{"type":"property","title":"var isRecording: Bool","path":"\/documentation\/haishinkit\/hkstreamrecorder\/isrecording"},{"type":"property","path":"\/documentation\/haishinkit\/hkstreamrecorder\/moviefragmentinterval","title":"var movieFragmentInterval: Double?"},{"type":"property","path":"\/documentation\/haishinkit\/hkstreamrecorder\/moviesdirectory","title":"var moviesDirectory: URL"},{"title":"var outputURL: URL?","type":"property","path":"\/documentation\/haishinkit\/hkstreamrecorder\/outputurl"},{"type":"property","title":"var settings: [AVMediaType : [String : any Sendable]]","path":"\/documentation\/haishinkit\/hkstreamrecorder\/settings"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/videotrackid","type":"property","title":"var videoTrackId: UInt8?"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/haishinkit\/hkstreamrecorder\/selecttrack(_:mediatype:)","title":"func selectTrack(UInt8?, mediaType: CMFormatDescription.MediaType)"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/setmoviefragmentinterval(_:)","title":"func setMovieFragmentInterval(Double?)","type":"method"},{"type":"method","title":"func setMovieFragmentInterval(movieFragmentInterval: Double?)","path":"\/documentation\/haishinkit\/hkstreamrecorder\/setmoviefragmentinterval(moviefragmentinterval:)"},{"type":"method","path":"\/documentation\/haishinkit\/hkstreamrecorder\/startrecording(_:settings:)","title":"func startRecording(URL?, settings: [AVMediaType : [String : any Sendable]]) async throws"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/stoprecording()","title":"func stopRecording() async throws -> URL","type":"method"},{"type":"groupMarker","title":"Type Properties"},{"type":"property","path":"\/documentation\/haishinkit\/hkstreamrecorder\/defaultsettings","title":"static let defaultSettings: [AVMediaType : [String : any Sendable]]"},{"type":"groupMarker","title":"Enumerations"},{"title":"HKStreamRecorder.Error","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/error\/failedtoappend(error:)","type":"case","title":"case failedToAppend(error: (any Error)?)"},{"type":"case","path":"\/documentation\/haishinkit\/hkstreamrecorder\/error\/failedtocreateassetwriter(error:)","title":"case failedToCreateAssetWriter(error: any Error)"},{"title":"case failedToCreateAssetWriterInput(error: any Error)","path":"\/documentation\/haishinkit\/hkstreamrecorder\/error\/failedtocreateassetwriterinput(error:)","type":"case"},{"title":"case failedToFinishWriting(error: (any Error)?)","path":"\/documentation\/haishinkit\/hkstreamrecorder\/error\/failedtofinishwriting(error:)","type":"case"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/error\/filealreadyexists(outputurl:)","type":"case","title":"case fileAlreadyExists(outputURL: URL)"},{"type":"case","title":"case invalidState","path":"\/documentation\/haishinkit\/hkstreamrecorder\/error\/invalidstate"},{"title":"case notSupportedFileType(pathExtension: String)","path":"\/documentation\/haishinkit\/hkstreamrecorder\/error\/notsupportedfiletype(pathextension:)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Error Implementations","path":"\/documentation\/haishinkit\/hkstreamrecorder\/error\/error-implementations","type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var localizedDescription: String","path":"\/documentation\/haishinkit\/hkstreamrecorder\/error\/localizeddescription","type":"property"}]}],"path":"\/documentation\/haishinkit\/hkstreamrecorder\/error","type":"enum"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/actor-implementations","children":[{"type":"groupMarker","title":"Instance Methods"},{"title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method","path":"\/documentation\/haishinkit\/hkstreamrecorder\/assertisolated(_:file:line:)"},{"type":"method","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","path":"\/documentation\/haishinkit\/hkstreamrecorder\/assumeisolated(_:file:line:)"},{"title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/haishinkit\/hkstreamrecorder\/preconditionisolated(_:file:line:)","type":"method"}],"title":"Actor Implementations","type":"symbol"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/hkstreamoutput-implementations","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func stream(some HKStream, didOutput: CMSampleBuffer)","path":"\/documentation\/haishinkit\/hkstreamrecorder\/stream(_:didoutput:)"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/stream(_:didoutput:when:)","title":"func stream(some HKStream, didOutput: AVAudioBuffer, when: AVAudioTime)","type":"method"}],"title":"HKStreamOutput Implementations","type":"symbol"},{"children":[{"type":"groupMarker","title":"Instance Methods"},{"title":"func mixer(MediaMixer, didOutput: CMSampleBuffer)","path":"\/documentation\/haishinkit\/hkstreamrecorder\/mixer(_:didoutput:)","type":"method"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/mixer(_:didoutput:when:)","type":"method","title":"func mixer(MediaMixer, didOutput: AVAudioPCMBuffer, when: AVAudioTime)"}],"title":"MediaMixerOutput Implementations","path":"\/documentation\/haishinkit\/hkstreamrecorder\/mediamixeroutput-implementations","type":"symbol"}]},{"children":[{"title":"Initializers","type":"groupMarker"},{"type":"init","title":"init(mamimumVideoBitrate: Int)","path":"\/documentation\/haishinkit\/hkstreamvideoadaptivebitratestrategy\/init(mamimumvideobitrate:)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/haishinkit\/hkstreamvideoadaptivebitratestrategy\/mamimumaudiobitrate","title":"let mamimumAudioBitRate: Int"},{"type":"property","title":"let mamimumVideoBitRate: Int","path":"\/documentation\/haishinkit\/hkstreamvideoadaptivebitratestrategy\/mamimumvideobitrate"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/hkstreamvideoadaptivebitratestrategy\/adjustbitrate(_:stream:)","type":"method","title":"func adjustBitrate(NetworkMonitorEvent, stream: some HKStream) async"},{"type":"groupMarker","title":"Type Properties"},{"type":"property","title":"static let statusCountsThreshold: Int","path":"\/documentation\/haishinkit\/hkstreamvideoadaptivebitratestrategy\/statuscountsthreshold"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/haishinkit\/hkstreamvideoadaptivebitratestrategy\/actor-implementations","title":"Actor Implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/haishinkit\/hkstreamvideoadaptivebitratestrategy\/assertisolated(_:file:line:)"},{"title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","type":"method","path":"\/documentation\/haishinkit\/hkstreamvideoadaptivebitratestrategy\/assumeisolated(_:file:line:)"},{"type":"method","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/haishinkit\/hkstreamvideoadaptivebitratestrategy\/preconditionisolated(_:file:line:)"}]}],"title":"HKStreamVideoAdaptiveBitRateStrategy","path":"\/documentation\/haishinkit\/hkstreamvideoadaptivebitratestrategy","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var cgImage: CGImage?","type":"property","path":"\/documentation\/haishinkit\/imagescreenobject\/cgimage"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/imagescreenobject\/makebounds(_:)","title":"func makeBounds(CGSize) -> CGRect","type":"method"},{"title":"func makeImage(some ScreenRenderer) -> CGImage?","path":"\/documentation\/haishinkit\/imagescreenobject\/makeimage(_:)","type":"method"}],"path":"\/documentation\/haishinkit\/imagescreenobject","title":"ImageScreenObject","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/mthkview\/init(coder:)","type":"init","title":"init(coder: NSCoder)"},{"type":"init","title":"init(frame: CGRect)","path":"\/documentation\/haishinkit\/mthkview\/init(frame:)"},{"title":"Instance Properties","type":"groupMarker"},{"type":"property","path":"\/documentation\/haishinkit\/mthkview\/audiotrackid","title":"var audioTrackId: UInt8?"},{"type":"property","title":"var videoGravity: AVLayerVideoGravity","path":"\/documentation\/haishinkit\/mthkview\/videogravity"},{"title":"var videoTrackId: UInt8?","type":"property","path":"\/documentation\/haishinkit\/mthkview\/videotrackid"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func awakeFromNib()","path":"\/documentation\/haishinkit\/mthkview\/awakefromnib()"},{"title":"func draw(CGRect)","type":"method","path":"\/documentation\/haishinkit\/mthkview\/draw(_:)"},{"title":"func registerVideoEffect(some VideoEffect) -> Bool","path":"\/documentation\/haishinkit\/mthkview\/registervideoeffect(_:)","type":"method"},{"path":"\/documentation\/haishinkit\/mthkview\/unregistervideoeffect(_:)","type":"method","title":"func unregisterVideoEffect(some VideoEffect) -> Bool"},{"title":"Default Implementations","type":"groupMarker"},{"title":"HKStreamOutput Implementations","children":[{"type":"groupMarker","title":"Instance Methods"},{"title":"func stream(some HKStream, didOutput: CMSampleBuffer)","path":"\/documentation\/haishinkit\/mthkview\/stream(_:didoutput:)","type":"method"},{"path":"\/documentation\/haishinkit\/mthkview\/stream(_:didoutput:when:)","type":"method","title":"func stream(some HKStream, didOutput: AVAudioBuffer, when: AVAudioTime)"}],"path":"\/documentation\/haishinkit\/mthkview\/hkstreamoutput-implementations","type":"symbol"},{"path":"\/documentation\/haishinkit\/mthkview\/mediamixeroutput-implementations","type":"symbol","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func mixer(MediaMixer, didOutput: CMSampleBuffer)","path":"\/documentation\/haishinkit\/mthkview\/mixer(_:didoutput:)","type":"method"},{"path":"\/documentation\/haishinkit\/mthkview\/mixer(_:didoutput:when:)","type":"method","title":"func mixer(MediaMixer, didOutput: AVAudioPCMBuffer, when: AVAudioTime)"},{"type":"method","path":"\/documentation\/haishinkit\/mthkview\/selecttrack(_:mediatype:)","title":"func selectTrack(UInt8?, mediaType: CMFormatDescription.MediaType) async"}],"title":"MediaMixerOutput Implementations"}],"path":"\/documentation\/haishinkit\/mthkview","title":"MTHKView","type":"class"},{"title":"MediaMixer","path":"\/documentation\/haishinkit\/mediamixer","type":"class","children":[{"title":"Initializers","type":"groupMarker"},{"type":"init","path":"\/documentation\/haishinkit\/mediamixer\/init(multitrackaudiomixingenabled:usemanualcapture:)","title":"init(multiTrackAudioMixingEnabled: Bool, useManualCapture: Bool)"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/mediamixer\/audioinputformats","type":"property","title":"var audioInputFormats: [UInt8 : AVAudioFormat]"},{"path":"\/documentation\/haishinkit\/mediamixer\/audiomixersettings","type":"property","title":"var audioMixerSettings: AudioMixerSettings"},{"title":"var frameRate: Float64","path":"\/documentation\/haishinkit\/mediamixer\/framerate","type":"property"},{"type":"property","title":"var isCapturing: Bool","path":"\/documentation\/haishinkit\/mediamixer\/iscapturing"},{"type":"property","title":"var isInterputted: AsyncStream<Bool>","path":"\/documentation\/haishinkit\/mediamixer\/isinterputted"},{"title":"var isMonitoringEnabled: Bool","path":"\/documentation\/haishinkit\/mediamixer\/ismonitoringenabled","type":"property"},{"title":"var isMultiTrackAudioMixingEnabled: Bool","type":"property","path":"\/documentation\/haishinkit\/mediamixer\/ismultitrackaudiomixingenabled"},{"title":"var isRunning: Bool","path":"\/documentation\/haishinkit\/mediamixer\/isrunning","type":"property"},{"path":"\/documentation\/haishinkit\/mediamixer\/istorchenabled","type":"property","title":"var isTorchEnabled: Bool"},{"title":"var screen: Screen","path":"\/documentation\/haishinkit\/mediamixer\/screen","type":"property"},{"type":"property","path":"\/documentation\/haishinkit\/mediamixer\/sessionpreset","title":"var sessionPreset: AVCaptureSession.Preset"},{"path":"\/documentation\/haishinkit\/mediamixer\/videoinputformats","type":"property","title":"var videoInputFormats: [UInt8 : CMFormatDescription]"},{"path":"\/documentation\/haishinkit\/mediamixer\/videomixersettings","type":"property","title":"var videoMixerSettings: VideoMixerSettings"},{"title":"var videoOrientation: AVCaptureVideoOrientation","path":"\/documentation\/haishinkit\/mediamixer\/videoorientation","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/mediamixer\/addoutput(_:)","type":"method","title":"func addOutput(some MediaMixerOutput)"},{"type":"method","title":"func append(CMSampleBuffer, track: UInt8)","path":"\/documentation\/haishinkit\/mediamixer\/append(_:track:)"},{"title":"func append(AVAudioBuffer, when: AVAudioTime, track: UInt8)","path":"\/documentation\/haishinkit\/mediamixer\/append(_:when:track:)","type":"method"},{"title":"func attachAudio(AVCaptureDevice?, track: UInt8, configuration: AudioDeviceConfigurationBlock?) async throws","path":"\/documentation\/haishinkit\/mediamixer\/attachaudio(_:track:configuration:)","type":"method"},{"title":"func attachVideo(AVCaptureDevice?, track: UInt8, configuration: VideoDeviceConfigurationBlock?) async throws","path":"\/documentation\/haishinkit\/mediamixer\/attachvideo(_:track:configuration:)","type":"method"},{"path":"\/documentation\/haishinkit\/mediamixer\/configuration(_:)","type":"method","title":"func configuration((AVCaptureSession) throws -> Void) rethrows"},{"title":"func configuration(audio: UInt8, configuration: (AudioDeviceUnit) throws -> Void) throws","path":"\/documentation\/haishinkit\/mediamixer\/configuration(audio:configuration:)","type":"method"},{"title":"func configuration(video: UInt8, configuration: (VideoDeviceUnit) throws -> Void) throws","type":"method","path":"\/documentation\/haishinkit\/mediamixer\/configuration(video:configuration:)"},{"path":"\/documentation\/haishinkit\/mediamixer\/removeoutput(_:)","type":"method","title":"func removeOutput(some MediaMixerOutput)"},{"path":"\/documentation\/haishinkit\/mediamixer\/setaudiomixersettings(_:)","title":"func setAudioMixerSettings(AudioMixerSettings)","type":"method"},{"title":"func setFrameRate(Float64)","type":"method","path":"\/documentation\/haishinkit\/mediamixer\/setframerate(_:)"},{"type":"method","path":"\/documentation\/haishinkit\/mediamixer\/setmonitoringenabled(_:)","title":"func setMonitoringEnabled(Bool)"},{"title":"func setSessionPreset(AVCaptureSession.Preset)","type":"method","path":"\/documentation\/haishinkit\/mediamixer\/setsessionpreset(_:)"},{"type":"method","title":"func setTorchEnabled(Bool)","path":"\/documentation\/haishinkit\/mediamixer\/settorchenabled(_:)"},{"type":"method","path":"\/documentation\/haishinkit\/mediamixer\/setvideomixersettings(_:)","title":"func setVideoMixerSettings(VideoMixerSettings)"},{"path":"\/documentation\/haishinkit\/mediamixer\/setvideoorientation(_:)","type":"method","title":"func setVideoOrientation(AVCaptureVideoOrientation)"},{"title":"func startCapturing()","path":"\/documentation\/haishinkit\/mediamixer\/startcapturing()","type":"method"},{"type":"method","title":"func stopCapturing()","path":"\/documentation\/haishinkit\/mediamixer\/stopcapturing()"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/haishinkit\/mediamixer\/error\/devicenotfound","title":"case deviceNotFound","type":"case"},{"type":"case","title":"case failedToAttach(any Error)","path":"\/documentation\/haishinkit\/mediamixer\/error\/failedtoattach(_:)"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"title":"var localizedDescription: String","path":"\/documentation\/haishinkit\/mediamixer\/error\/localizeddescription","type":"property"}],"path":"\/documentation\/haishinkit\/mediamixer\/error\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/haishinkit\/mediamixer\/error","title":"MediaMixer.Error","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"type":"symbol","title":"Actor Implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/mediamixer\/assertisolated(_:file:line:)","type":"method","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)"},{"title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","type":"method","path":"\/documentation\/haishinkit\/mediamixer\/assumeisolated(_:file:line:)"},{"title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/haishinkit\/mediamixer\/preconditionisolated(_:file:line:)","type":"method"}],"path":"\/documentation\/haishinkit\/mediamixer\/actor-implementations"},{"children":[{"type":"groupMarker","title":"Instance Methods"},{"title":"func startRunning()","type":"method","path":"\/documentation\/haishinkit\/mediamixer\/startrunning()"},{"path":"\/documentation\/haishinkit\/mediamixer\/stoprunning()","title":"func stopRunning()","type":"method"}],"title":"AsyncRunner Implementations","path":"\/documentation\/haishinkit\/mediamixer\/asyncrunner-implementations","type":"symbol"}]},{"type":"class","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(some NetworkTransportReporter)","type":"init","path":"\/documentation\/haishinkit\/networkmonitor\/init(_:)"},{"title":"Instance Properties","type":"groupMarker"},{"type":"property","title":"var event: AsyncStream<NetworkMonitorEvent>","path":"\/documentation\/haishinkit\/networkmonitor\/event"},{"title":"var isRunning: Bool","path":"\/documentation\/haishinkit\/networkmonitor\/isrunning","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"title":"NetworkMonitor.Error","path":"\/documentation\/haishinkit\/networkmonitor\/error","type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/haishinkit\/networkmonitor\/error\/invalidstate","title":"case invalidState","type":"case"},{"type":"groupMarker","title":"Default Implementations"},{"title":"Equatable Implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","path":"\/documentation\/haishinkit\/networkmonitor\/error\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"}],"path":"\/documentation\/haishinkit\/networkmonitor\/error\/equatable-implementations","type":"symbol"},{"title":"Error Implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"type":"property","title":"var localizedDescription: String","path":"\/documentation\/haishinkit\/networkmonitor\/error\/localizeddescription"}],"path":"\/documentation\/haishinkit\/networkmonitor\/error\/error-implementations","type":"symbol"}]},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"type":"method","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/haishinkit\/networkmonitor\/assertisolated(_:file:line:)"},{"path":"\/documentation\/haishinkit\/networkmonitor\/assumeisolated(_:file:line:)","type":"method","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T"},{"type":"method","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/haishinkit\/networkmonitor\/preconditionisolated(_:file:line:)"}],"type":"symbol","path":"\/documentation\/haishinkit\/networkmonitor\/actor-implementations","title":"Actor Implementations"},{"title":"AsyncRunner Implementations","type":"symbol","children":[{"title":"Instance Methods","type":"groupMarker"},{"type":"method","path":"\/documentation\/haishinkit\/networkmonitor\/startrunning()","title":"func startRunning()"},{"path":"\/documentation\/haishinkit\/networkmonitor\/stoprunning()","title":"func stopRunning()","type":"method"}],"path":"\/documentation\/haishinkit\/networkmonitor\/asyncrunner-implementations"}],"title":"NetworkMonitor","path":"\/documentation\/haishinkit\/networkmonitor"},{"type":"class","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init?(coder: NSCoder)","path":"\/documentation\/haishinkit\/piphkview\/init(coder:)","type":"init"},{"title":"init(frame: CGRect)","type":"init","path":"\/documentation\/haishinkit\/piphkview\/init(frame:)"},{"type":"groupMarker","title":"Instance Properties"},{"title":"var audioTrackId: UInt8?","path":"\/documentation\/haishinkit\/piphkview\/audiotrackid","type":"property"},{"path":"\/documentation\/haishinkit\/piphkview\/videogravity","type":"property","title":"var videoGravity: AVLayerVideoGravity"},{"title":"var videoTrackId: UInt8?","path":"\/documentation\/haishinkit\/piphkview\/videotrackid","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func awakeFromNib()","type":"method","path":"\/documentation\/haishinkit\/piphkview\/awakefromnib()"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/piphkview\/defaultbackgroundcolor","type":"property","title":"static var defaultBackgroundColor: NSColor"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/piphkview\/hkstreamoutput-implementations","title":"HKStreamOutput Implementations","children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/piphkview\/stream(_:didoutput:)","type":"method","title":"func stream(some HKStream, didOutput: CMSampleBuffer)"},{"title":"func stream(some HKStream, didOutput: AVAudioBuffer, when: AVAudioTime)","type":"method","path":"\/documentation\/haishinkit\/piphkview\/stream(_:didoutput:when:)"}],"type":"symbol"},{"path":"\/documentation\/haishinkit\/piphkview\/mediamixeroutput-implementations","title":"MediaMixerOutput Implementations","type":"symbol","children":[{"title":"Instance Methods","type":"groupMarker"},{"type":"method","path":"\/documentation\/haishinkit\/piphkview\/mixer(_:didoutput:)","title":"func mixer(MediaMixer, didOutput: CMSampleBuffer)"},{"path":"\/documentation\/haishinkit\/piphkview\/mixer(_:didoutput:when:)","type":"method","title":"func mixer(MediaMixer, didOutput: AVAudioPCMBuffer, when: AVAudioTime)"},{"path":"\/documentation\/haishinkit\/piphkview\/selecttrack(_:mediatype:)","title":"func selectTrack(UInt8?, mediaType: CMFormatDescription.MediaType) async","type":"method"}]}],"path":"\/documentation\/haishinkit\/piphkview","title":"PiPHKView"},{"path":"\/documentation\/haishinkit\/rtmpconnection","type":"class","title":"RTMPConnection","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/init(swfurl:pageurl:flashver:timeout:requesttimeout:chunksize:qualityofservice:)","title":"init(swfUrl: String?, pageUrl: String?, flashVer: String, timeout: Int, requestTimeout: UInt64, chunkSize: Int, qualityOfService: DispatchQoS)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/chunksize","type":"property","title":"let chunkSize: Int"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/connected","type":"property","title":"var connected: Bool"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/flashver","type":"property","title":"let flashVer: String"},{"title":"let objectEncoding: RTMPObjectEncoding","path":"\/documentation\/haishinkit\/rtmpconnection\/objectencoding","type":"property"},{"title":"let pageUrl: String?","path":"\/documentation\/haishinkit\/rtmpconnection\/pageurl","type":"property"},{"title":"let qualityOfService: DispatchQoS","path":"\/documentation\/haishinkit\/rtmpconnection\/qualityofservice","type":"property"},{"type":"property","path":"\/documentation\/haishinkit\/rtmpconnection\/requesttimeout","title":"let requestTimeout: UInt64"},{"title":"var status: AsyncStream<RTMPStatus>","type":"property","path":"\/documentation\/haishinkit\/rtmpconnection\/status"},{"title":"let swfUrl: String?","path":"\/documentation\/haishinkit\/rtmpconnection\/swfurl","type":"property"},{"title":"let timeout: Int","type":"property","path":"\/documentation\/haishinkit\/rtmpconnection\/timeout"},{"type":"property","title":"var uri: URL?","path":"\/documentation\/haishinkit\/rtmpconnection\/uri"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/call(_:arguments:)","type":"method","title":"func call(String, arguments: (any Sendable)?...) async throws -> RTMPResponse"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/close()","type":"method","title":"func close() async throws"},{"type":"method","path":"\/documentation\/haishinkit\/rtmpconnection\/connect(_:arguments:)","title":"func connect(String, arguments: (any Sendable)?...) async throws -> RTMPResponse"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/defaultcapabilities","type":"property","title":"static let defaultCapabilities: Int"},{"title":"static let defaultChunkSizeS: Int","path":"\/documentation\/haishinkit\/rtmpconnection\/defaultchunksizes","type":"property"},{"type":"property","path":"\/documentation\/haishinkit\/rtmpconnection\/defaultflashver","title":"static let defaultFlashVer: String"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/defaultobjectencoding","title":"static let defaultObjectEncoding: RTMPObjectEncoding","type":"property"},{"type":"property","path":"\/documentation\/haishinkit\/rtmpconnection\/defaultport","title":"static let defaultPort: Int"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/defaultrequesttimeout","title":"static let defaultRequestTimeout: UInt64","type":"property"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/defaultsecureport","title":"static let defaultSecurePort: Int","type":"property"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/defaulttimeout","type":"property","title":"static let defaultTimeout: Int"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/defaultwindowsizes","title":"static let defaultWindowSizeS: Int64","type":"property"},{"title":"static let supportedFourCcList: [String]","path":"\/documentation\/haishinkit\/rtmpconnection\/supportedfourcclist","type":"property"},{"title":"static let supportedProtocols: Set<String>","path":"\/documentation\/haishinkit\/rtmpconnection\/supportedprotocols","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"type":"enum","title":"RTMPConnection.Code","path":"\/documentation\/haishinkit\/rtmpconnection\/code","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"title":"case callBadVersion","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/callbadversion","type":"case"},{"title":"case callFailed","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/callfailed","type":"case"},{"type":"case","title":"case callProhibited","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/callprohibited"},{"title":"case connectAppshutdown","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/connectappshutdown","type":"case"},{"title":"case connectClosed","type":"case","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/connectclosed"},{"type":"case","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/connectfailed","title":"case connectFailed"},{"title":"case connectIdleTimeOut","type":"case","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/connectidletimeout"},{"title":"case connectInvalidApp","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/connectinvalidapp","type":"case"},{"title":"case connectNetworkChange","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/connectnetworkchange","type":"case"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/code\/connectrejected","title":"case connectRejected","type":"case"},{"title":"case connectSuccess","type":"case","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/connectsuccess"},{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/init(rawvalue:)","title":"init?(rawValue: String)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var level: String","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/level","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/!=(_:_:)","type":"op"}],"path":"\/documentation\/haishinkit\/rtmpconnection\/code\/equatable-implementations","title":"Equatable Implementations"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"title":"var hashValue: Int","type":"property","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/hashvalue"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func hash(into: inout Hasher)","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/hash(into:)","type":"method"}],"path":"\/documentation\/haishinkit\/rtmpconnection\/code\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}]},{"children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/error\/connectiontimedout","type":"case","title":"case connectionTimedOut"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/error\/invalidstate","title":"case invalidState","type":"case"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/error\/requestfailed(response:)","title":"case requestFailed(response: RTMPResponse)","type":"case"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/error\/requesttimedout","type":"case","title":"case requestTimedOut"},{"type":"case","title":"case socketErrorOccurred(any Error)","path":"\/documentation\/haishinkit\/rtmpconnection\/error\/socketerroroccurred(_:)"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/error\/unsupportedcommand(_:)","type":"case","title":"case unsupportedCommand(String)"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/error\/error-implementations","type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var localizedDescription: String","path":"\/documentation\/haishinkit\/rtmpconnection\/error\/localizeddescription","type":"property"}],"title":"Error Implementations"}],"title":"RTMPConnection.Error","type":"enum","path":"\/documentation\/haishinkit\/rtmpconnection\/error"},{"title":"Default Implementations","type":"groupMarker"},{"type":"symbol","path":"\/documentation\/haishinkit\/rtmpconnection\/actor-implementations","title":"Actor Implementations","children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/assertisolated(_:file:line:)","type":"method","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)"},{"title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","path":"\/documentation\/haishinkit\/rtmpconnection\/assumeisolated(_:file:line:)","type":"method"},{"type":"method","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/haishinkit\/rtmpconnection\/preconditionisolated(_:file:line:)"}]}]},{"path":"\/documentation\/haishinkit\/rtmpsharedobject","type":"class","children":[{"title":"Instance Properties","type":"groupMarker"},{"type":"property","title":"var data: AMFObject","path":"\/documentation\/haishinkit\/rtmpsharedobject\/data"},{"title":"let objectEncoding: RTMPObjectEncoding","path":"\/documentation\/haishinkit\/rtmpsharedobject\/objectencoding","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/rtmpsharedobject\/clear()","type":"method","title":"func clear() async"},{"type":"method","title":"func close() async","path":"\/documentation\/haishinkit\/rtmpsharedobject\/close()"},{"type":"method","path":"\/documentation\/haishinkit\/rtmpsharedobject\/connect(_:)","title":"func connect(RTMPConnection) async"},{"type":"method","title":"func setProperty(String, (any Sendable)?) async","path":"\/documentation\/haishinkit\/rtmpsharedobject\/setproperty(_:_:)"},{"title":"Type Methods","type":"groupMarker"},{"title":"static func getRemote(withName: String, remotePath: String, persistence: Bool) -> RTMPSharedObject","type":"method","path":"\/documentation\/haishinkit\/rtmpsharedobject\/getremote(withname:remotepath:persistence:)"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"type":"method","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/haishinkit\/rtmpsharedobject\/assertisolated(_:file:line:)"},{"type":"method","path":"\/documentation\/haishinkit\/rtmpsharedobject\/assumeisolated(_:file:line:)","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T"},{"title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/haishinkit\/rtmpsharedobject\/preconditionisolated(_:file:line:)","type":"method"}],"path":"\/documentation\/haishinkit\/rtmpsharedobject\/actor-implementations","type":"symbol","title":"Actor Implementations"}],"title":"RTMPSharedObject"},{"title":"RTMPStream","type":"class","children":[{"type":"groupMarker","title":"Initializers"},{"title":"init(connection: RTMPConnection, fcPublishName: String?)","path":"\/documentation\/haishinkit\/rtmpstream\/init(connection:fcpublishname:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"type":"property","title":"var audioSampleAccess: Bool","path":"\/documentation\/haishinkit\/rtmpstream\/audiosampleaccess"},{"path":"\/documentation\/haishinkit\/rtmpstream\/audiotrackid","type":"property","title":"var audioTrackId: UInt8?"},{"title":"var currentFPS: UInt16","path":"\/documentation\/haishinkit\/rtmpstream\/currentfps","type":"property"},{"type":"property","title":"var fcPublishName: String?","path":"\/documentation\/haishinkit\/rtmpstream\/fcpublishname"},{"path":"\/documentation\/haishinkit\/rtmpstream\/info","type":"property","title":"var info: RTMPStreamInfo"},{"path":"\/documentation\/haishinkit\/rtmpstream\/metadata","type":"property","title":"var metadata: AMFArray"},{"path":"\/documentation\/haishinkit\/rtmpstream\/objectencoding","type":"property","title":"var objectEncoding: RTMPObjectEncoding"},{"type":"property","title":"var readyState: HKStreamReadyState","path":"\/documentation\/haishinkit\/rtmpstream\/readystate"},{"type":"property","title":"var status: AsyncStream<RTMPStatus>","path":"\/documentation\/haishinkit\/rtmpstream\/status"},{"title":"var videoSampleAccess: Bool","type":"property","path":"\/documentation\/haishinkit\/rtmpstream\/videosampleaccess"},{"title":"var videoTrackId: UInt8?","path":"\/documentation\/haishinkit\/rtmpstream\/videotrackid","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"type":"method","path":"\/documentation\/haishinkit\/rtmpstream\/close()","title":"func close() async throws -> RTMPResponse"},{"path":"\/documentation\/haishinkit\/rtmpstream\/pause(_:)","title":"func pause(Bool) async throws -> RTMPResponse","type":"method"},{"title":"func play((any Sendable)?...) async throws -> RTMPResponse","path":"\/documentation\/haishinkit\/rtmpstream\/play(_:)","type":"method"},{"type":"method","title":"func publish(String?, type: RTMPStream.HowToPublish) async throws -> RTMPResponse","path":"\/documentation\/haishinkit\/rtmpstream\/publish(_:type:)"},{"path":"\/documentation\/haishinkit\/rtmpstream\/receiveaudio(_:)","type":"method","title":"func receiveAudio(Bool) async throws"},{"path":"\/documentation\/haishinkit\/rtmpstream\/receivevideo(_:)","title":"func receiveVideo(Bool) async throws","type":"method"},{"title":"func seek(Double) async throws","type":"method","path":"\/documentation\/haishinkit\/rtmpstream\/seek(_:)"},{"title":"func send(String, arguments: (any Sendable)?..., isResetTimestamp: Bool) throws","path":"\/documentation\/haishinkit\/rtmpstream\/send(_:arguments:isresettimestamp:)","type":"method"},{"title":"func togglePause() async throws -> RTMPResponse","path":"\/documentation\/haishinkit\/rtmpstream\/togglepause()","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code","type":"enum","title":"RTMPStream.Code","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case bufferEmpty","path":"\/documentation\/haishinkit\/rtmpstream\/code\/bufferempty","type":"case"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/bufferflush","title":"case bufferFlush","type":"case"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/bufferfull","title":"case bufferFull","type":"case"},{"title":"case connectClosed","path":"\/documentation\/haishinkit\/rtmpstream\/code\/connectclosed","type":"case"},{"type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/code\/connectfailed","title":"case connectFailed"},{"type":"case","title":"case connectRejected","path":"\/documentation\/haishinkit\/rtmpstream\/code\/connectrejected"},{"title":"case connectSuccess","path":"\/documentation\/haishinkit\/rtmpstream\/code\/connectsuccess","type":"case"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/drmupdateneeded","type":"case","title":"case drmUpdateNeeded"},{"title":"case failed","path":"\/documentation\/haishinkit\/rtmpstream\/code\/failed","type":"case"},{"title":"case multicastStreamReset","path":"\/documentation\/haishinkit\/rtmpstream\/code\/multicaststreamreset","type":"case"},{"type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/code\/pausenotify","title":"case pauseNotify"},{"title":"case playFailed","path":"\/documentation\/haishinkit\/rtmpstream\/code\/playfailed","type":"case"},{"title":"case playFileStructureInvalid","path":"\/documentation\/haishinkit\/rtmpstream\/code\/playfilestructureinvalid","type":"case"},{"type":"case","title":"case playInsufficientBW","path":"\/documentation\/haishinkit\/rtmpstream\/code\/playinsufficientbw"},{"type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/code\/playnosupportedtrackfound","title":"case playNoSupportedTrackFound"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/playreset","title":"case playReset","type":"case"},{"title":"case playStart","path":"\/documentation\/haishinkit\/rtmpstream\/code\/playstart","type":"case"},{"title":"case playStop","path":"\/documentation\/haishinkit\/rtmpstream\/code\/playstop","type":"case"},{"title":"case playStreamNotFound","path":"\/documentation\/haishinkit\/rtmpstream\/code\/playstreamnotfound","type":"case"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/playtransition","type":"case","title":"case playTransition"},{"type":"case","title":"case playUnpublishNotify","path":"\/documentation\/haishinkit\/rtmpstream\/code\/playunpublishnotify"},{"title":"case publishBadName","path":"\/documentation\/haishinkit\/rtmpstream\/code\/publishbadname","type":"case"},{"type":"case","title":"case publishIdle","path":"\/documentation\/haishinkit\/rtmpstream\/code\/publishidle"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/publishstart","title":"case publishStart","type":"case"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/recordalreadyexists","type":"case","title":"case recordAlreadyExists"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/recorddiskquotaexceeded","type":"case","title":"case recordDiskQuotaExceeded"},{"title":"case recordFailed","path":"\/documentation\/haishinkit\/rtmpstream\/code\/recordfailed","type":"case"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/recordnoaccess","type":"case","title":"case recordNoAccess"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/recordstart","type":"case","title":"case recordStart"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/recordstop","type":"case","title":"case recordStop"},{"type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/code\/secondscreenstart","title":"case secondScreenStart"},{"title":"case secondScreenStop","type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/code\/secondscreenstop"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/seekfailed","title":"case seekFailed","type":"case"},{"title":"case seekInvalidTime","type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/code\/seekinvalidtime"},{"title":"case seekNotify","path":"\/documentation\/haishinkit\/rtmpstream\/code\/seeknotify","type":"case"},{"title":"case stepNotify","path":"\/documentation\/haishinkit\/rtmpstream\/code\/stepnotify","type":"case"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/unpausenotify","type":"case","title":"case unpauseNotify"},{"title":"case unpublishSuccess","path":"\/documentation\/haishinkit\/rtmpstream\/code\/unpublishsuccess","type":"case"},{"type":"case","title":"case videoDimensionChange","path":"\/documentation\/haishinkit\/rtmpstream\/code\/videodimensionchange"},{"title":"Initializers","type":"groupMarker"},{"type":"init","path":"\/documentation\/haishinkit\/rtmpstream\/code\/init(rawvalue:)","title":"init?(rawValue: String)"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/level","type":"property","title":"var level: String"},{"title":"Default Implementations","type":"groupMarker"},{"type":"symbol","path":"\/documentation\/haishinkit\/rtmpstream\/code\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}],"title":"Equatable Implementations"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"title":"var hashValue: Int","type":"property","path":"\/documentation\/haishinkit\/rtmpstream\/code\/hashvalue"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func hash(into: inout Hasher)","path":"\/documentation\/haishinkit\/rtmpstream\/code\/hash(into:)","type":"method"}],"path":"\/documentation\/haishinkit\/rtmpstream\/code\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}]},{"path":"\/documentation\/haishinkit\/rtmpstream\/error","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/rtmpstream\/error\/invalidstate","title":"case invalidState","type":"case"},{"type":"case","title":"case requestFailed(response: RTMPResponse)","path":"\/documentation\/haishinkit\/rtmpstream\/error\/requestfailed(response:)"},{"title":"case requestTimedOut","type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/error\/requesttimedout"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","path":"\/documentation\/haishinkit\/rtmpstream\/error\/error-implementations","title":"Error Implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/rtmpstream\/error\/localizeddescription","type":"property","title":"var localizedDescription: String"}]}],"title":"RTMPStream.Error","type":"enum"},{"type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case append","type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish\/append"},{"title":"case appendWithGap","path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish\/appendwithgap","type":"case"},{"title":"case live","path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish\/live","type":"case"},{"title":"case record","path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish\/record","type":"case"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: String)","type":"init","path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish\/init(rawvalue:)"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish\/!=(_:_:)"}],"type":"symbol","path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish\/equatable-implementations","title":"Equatable Implementations"},{"path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish\/rawrepresentable-implementations","type":"symbol","title":"RawRepresentable Implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish\/hashvalue","title":"var hashValue: Int"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}]}],"title":"RTMPStream.HowToPublish","path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Actor Implementations","type":"symbol","path":"\/documentation\/haishinkit\/rtmpstream\/actor-implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method","path":"\/documentation\/haishinkit\/rtmpstream\/assertisolated(_:file:line:)"},{"path":"\/documentation\/haishinkit\/rtmpstream\/assumeisolated(_:file:line:)","type":"method","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T"},{"path":"\/documentation\/haishinkit\/rtmpstream\/preconditionisolated(_:file:line:)","type":"method","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)"}]},{"type":"symbol","path":"\/documentation\/haishinkit\/rtmpstream\/hkstream-implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"title":"var audioSettings: AudioCodecSettings","path":"\/documentation\/haishinkit\/rtmpstream\/audiosettings","type":"property"},{"path":"\/documentation\/haishinkit\/rtmpstream\/soundtransform","title":"var soundTransform: SoundTransform?","type":"property"},{"type":"property","path":"\/documentation\/haishinkit\/rtmpstream\/videosettings","title":"var videoSettings: VideoCodecSettings"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/rtmpstream\/addoutput(_:)","title":"func addOutput(some HKStreamOutput)","type":"method"},{"path":"\/documentation\/haishinkit\/rtmpstream\/append(_:)","type":"method","title":"func append(CMSampleBuffer)"},{"title":"func append(AVAudioBuffer, when: AVAudioTime)","path":"\/documentation\/haishinkit\/rtmpstream\/append(_:when:)","type":"method"},{"type":"method","title":"func attachAudioPlayer(AudioPlayer?) async","path":"\/documentation\/haishinkit\/rtmpstream\/attachaudioplayer(_:)"},{"path":"\/documentation\/haishinkit\/rtmpstream\/dispatch(_:)","type":"method","title":"func dispatch(NetworkMonitorEvent) async"},{"title":"func removeOutput(some HKStreamOutput)","path":"\/documentation\/haishinkit\/rtmpstream\/removeoutput(_:)","type":"method"},{"type":"method","path":"\/documentation\/haishinkit\/rtmpstream\/setaudiosettings(_:)","title":"func setAudioSettings(AudioCodecSettings)"},{"path":"\/documentation\/haishinkit\/rtmpstream\/setbitratestorategy(_:)","title":"func setBitrateStorategy((some HKStreamBitRateStrategy)?)","type":"method"},{"type":"method","title":"func setSoundTransform(SoundTransform) async","path":"\/documentation\/haishinkit\/rtmpstream\/setsoundtransform(_:)"},{"path":"\/documentation\/haishinkit\/rtmpstream\/setvideoinputbuffercounts(_:)","type":"method","title":"func setVideoInputBufferCounts(Int)"},{"type":"method","path":"\/documentation\/haishinkit\/rtmpstream\/setvideosettings(_:)","title":"func setVideoSettings(VideoCodecSettings)"}],"title":"HKStream Implementations"},{"type":"symbol","children":[{"type":"groupMarker","title":"Instance Methods"},{"title":"func mixer(MediaMixer, didOutput: CMSampleBuffer)","type":"method","path":"\/documentation\/haishinkit\/rtmpstream\/mixer(_:didoutput:)"},{"title":"func mixer(MediaMixer, didOutput: AVAudioPCMBuffer, when: AVAudioTime)","path":"\/documentation\/haishinkit\/rtmpstream\/mixer(_:didoutput:when:)","type":"method"},{"type":"method","path":"\/documentation\/haishinkit\/rtmpstream\/selecttrack(_:mediatype:)","title":"func selectTrack(UInt8?, mediaType: CMFormatDescription.MediaType)"}],"title":"MediaMixerOutput Implementations","path":"\/documentation\/haishinkit\/rtmpstream\/mediamixeroutput-implementations"}],"path":"\/documentation\/haishinkit\/rtmpstream"},{"path":"\/documentation\/haishinkit\/screen","children":[{"type":"groupMarker","title":"Initializers"},{"title":"init()","type":"init","path":"\/documentation\/haishinkit\/screen\/init()"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/screen\/backgroundcolor","type":"property","title":"var backgroundColor: CGColor"},{"path":"\/documentation\/haishinkit\/screen\/childcounts","type":"property","title":"var childCounts: Int"},{"title":"var delegate: (any ScreenDelegate)?","path":"\/documentation\/haishinkit\/screen\/delegate","type":"property"},{"path":"\/documentation\/haishinkit\/screen\/size-swift.property","title":"var size: CGSize","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/screen\/addchild(_:)","type":"method","title":"func addChild(ScreenObject?) throws"},{"title":"func registerVideoEffect(some VideoEffect) -> Bool","path":"\/documentation\/haishinkit\/screen\/registervideoeffect(_:)","type":"method"},{"path":"\/documentation\/haishinkit\/screen\/removechild(_:)","type":"method","title":"func removeChild(ScreenObject?)"},{"path":"\/documentation\/haishinkit\/screen\/unregistervideoeffect(_:)","title":"func unregisterVideoEffect(some VideoEffect) -> Bool","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"title":"static let size: CGSize","path":"\/documentation\/haishinkit\/screen\/size-swift.type.property","type":"property"}],"title":"Screen","type":"class"},{"path":"\/documentation\/haishinkit\/screenactor","type":"class","children":[{"type":"groupMarker","title":"Type Properties"},{"path":"\/documentation\/haishinkit\/screenactor\/shared","type":"property","title":"static let shared: ScreenActor"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Actor Implementations","path":"\/documentation\/haishinkit\/screenactor\/actor-implementations","type":"symbol","children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/screenactor\/assertisolated(_:file:line:)","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method"},{"path":"\/documentation\/haishinkit\/screenactor\/assumeisolated(_:file:line:)","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","type":"method"},{"path":"\/documentation\/haishinkit\/screenactor\/preconditionisolated(_:file:line:)","type":"method","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)"}]},{"title":"GlobalActor Implementations","children":[{"title":"Type Properties","type":"groupMarker"},{"type":"property","title":"static var sharedUnownedExecutor: UnownedSerialExecutor","path":"\/documentation\/haishinkit\/screenactor\/sharedunownedexecutor"}],"type":"symbol","path":"\/documentation\/haishinkit\/screenactor\/globalactor-implementations"}],"title":"ScreenActor"},{"type":"class","path":"\/documentation\/haishinkit\/screenobject","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init()","path":"\/documentation\/haishinkit\/screenobject\/init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"type":"property","path":"\/documentation\/haishinkit\/screenobject\/bounds","title":"var bounds: CGRect"},{"path":"\/documentation\/haishinkit\/screenobject\/cornerradius","title":"var cornerRadius: CGFloat","type":"property"},{"title":"var horizontalAlignment: ScreenObject.HorizontalAlignment","type":"property","path":"\/documentation\/haishinkit\/screenobject\/horizontalalignment-swift.property"},{"type":"property","path":"\/documentation\/haishinkit\/screenobject\/isvisible","title":"var isVisible: Bool"},{"path":"\/documentation\/haishinkit\/screenobject\/layoutmargin","type":"property","title":"var layoutMargin: NSEdgeInsets"},{"title":"var parent: ScreenObjectContainer?","type":"property","path":"\/documentation\/haishinkit\/screenobject\/parent"},{"type":"property","title":"var size: CGSize","path":"\/documentation\/haishinkit\/screenobject\/size"},{"title":"var verticalAlignment: ScreenObject.VerticalAlignment","path":"\/documentation\/haishinkit\/screenobject\/verticalalignment-swift.property","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"type":"method","title":"func invalidateLayout()","path":"\/documentation\/haishinkit\/screenobject\/invalidatelayout()"},{"path":"\/documentation\/haishinkit\/screenobject\/makebounds(_:)","title":"func makeBounds(CGSize) -> CGRect","type":"method"},{"title":"func makeImage(some ScreenRenderer) -> CGImage?","type":"method","path":"\/documentation\/haishinkit\/screenobject\/makeimage(_:)"},{"type":"groupMarker","title":"Enumerations"},{"type":"enum","path":"\/documentation\/haishinkit\/screenobject\/horizontalalignment-swift.enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case center","type":"case","path":"\/documentation\/haishinkit\/screenobject\/horizontalalignment-swift.enum\/center"},{"path":"\/documentation\/haishinkit\/screenobject\/horizontalalignment-swift.enum\/left","type":"case","title":"case left"},{"title":"case right","type":"case","path":"\/documentation\/haishinkit\/screenobject\/horizontalalignment-swift.enum\/right"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","type":"symbol","path":"\/documentation\/haishinkit\/screenobject\/horizontalalignment-swift.enum\/equatable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/haishinkit\/screenobject\/horizontalalignment-swift.enum\/!=(_:_:)"}]}],"title":"ScreenObject.HorizontalAlignment"},{"path":"\/documentation\/haishinkit\/screenobject\/verticalalignment-swift.enum","type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"type":"case","path":"\/documentation\/haishinkit\/screenobject\/verticalalignment-swift.enum\/bottom","title":"case bottom"},{"path":"\/documentation\/haishinkit\/screenobject\/verticalalignment-swift.enum\/middle","title":"case middle","type":"case"},{"type":"case","title":"case top","path":"\/documentation\/haishinkit\/screenobject\/verticalalignment-swift.enum\/top"},{"type":"groupMarker","title":"Default Implementations"},{"title":"Equatable Implementations","path":"\/documentation\/haishinkit\/screenobject\/verticalalignment-swift.enum\/equatable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/haishinkit\/screenobject\/verticalalignment-swift.enum\/!=(_:_:)"}],"type":"symbol"}],"title":"ScreenObject.VerticalAlignment"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/screenobject\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/haishinkit\/screenobject\/!=(_:_:)"},{"type":"op","title":"static func == (ScreenObject, ScreenObject) -> Bool","path":"\/documentation\/haishinkit\/screenobject\/==(_:_:)"}],"title":"Equatable Implementations","type":"symbol"},{"children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/screenobject\/hash(into:)","type":"method","title":"func hash(into: inout Hasher)"}],"type":"symbol","title":"Hashable Implementations","path":"\/documentation\/haishinkit\/screenobject\/hashable-implementations"}],"title":"ScreenObject"},{"path":"\/documentation\/haishinkit\/screenobjectcontainer","type":"class","title":"ScreenObjectContainer","children":[{"type":"groupMarker","title":"Instance Properties"},{"title":"var childCounts: Int","type":"property","path":"\/documentation\/haishinkit\/screenobjectcontainer\/childcounts"},{"title":"Instance Methods","type":"groupMarker"},{"type":"method","title":"func addChild(ScreenObject?) throws","path":"\/documentation\/haishinkit\/screenobjectcontainer\/addchild(_:)"},{"path":"\/documentation\/haishinkit\/screenobjectcontainer\/removechild(_:)","type":"method","title":"func removeChild(ScreenObject?)"},{"type":"groupMarker","title":"Enumerations"},{"title":"ScreenObjectContainer.Error","type":"enum","path":"\/documentation\/haishinkit\/screenobjectcontainer\/error","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case alreadyExists","type":"case","path":"\/documentation\/haishinkit\/screenobjectcontainer\/error\/alreadyexists"},{"type":"groupMarker","title":"Default Implementations"},{"title":"Equatable Implementations","type":"symbol","path":"\/documentation\/haishinkit\/screenobjectcontainer\/error\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/screenobjectcontainer\/error\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}]},{"title":"Error Implementations","type":"symbol","path":"\/documentation\/haishinkit\/screenobjectcontainer\/error\/error-implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"title":"var localizedDescription: String","path":"\/documentation\/haishinkit\/screenobjectcontainer\/error\/localizeddescription","type":"property"}]}]}]},{"title":"StreamScreenObject","type":"class","path":"\/documentation\/haishinkit\/streamscreenobject","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var chromaKeyColor: CGColor?","path":"\/documentation\/haishinkit\/streamscreenobject\/chromakeycolor","type":"property"},{"path":"\/documentation\/haishinkit\/streamscreenobject\/videogravity","title":"var videoGravity: AVLayerVideoGravity","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/streamscreenobject\/makebounds(_:)","title":"func makeBounds(CGSize) -> CGRect","type":"method"},{"title":"func makeImage(some ScreenRenderer) -> CGImage?","type":"method","path":"\/documentation\/haishinkit\/streamscreenobject\/makeimage(_:)"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","children":[{"type":"groupMarker","title":"Instance Methods"},{"title":"func stream(some HKStream, didOutput: CMSampleBuffer)","path":"\/documentation\/haishinkit\/streamscreenobject\/stream(_:didoutput:)","type":"method"},{"path":"\/documentation\/haishinkit\/streamscreenobject\/stream(_:didoutput:when:)","type":"method","title":"func stream(some HKStream, didOutput: AVAudioBuffer, when: AVAudioTime)"}],"path":"\/documentation\/haishinkit\/streamscreenobject\/hkstreamoutput-implementations","title":"HKStreamOutput Implementations"}]},{"title":"TSReader","type":"class","children":[{"title":"Initializers","type":"groupMarker"},{"type":"init","title":"init()","path":"\/documentation\/haishinkit\/tsreader\/init()"},{"title":"Instance Properties","type":"groupMarker"},{"type":"property","title":"var output: AsyncStream<(UInt16, CMSampleBuffer)>","path":"\/documentation\/haishinkit\/tsreader\/output"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func clear()","path":"\/documentation\/haishinkit\/tsreader\/clear()","type":"method"},{"type":"method","path":"\/documentation\/haishinkit\/tsreader\/read(_:)","title":"func read(Data) -> Int"}],"path":"\/documentation\/haishinkit\/tsreader"},{"title":"TSWriter","children":[{"type":"groupMarker","title":"Initializers"},{"title":"init(segmentDuration: Double)","path":"\/documentation\/haishinkit\/tswriter\/init(segmentduration:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/tswriter\/audioformat","type":"property","title":"var audioFormat: AVAudioFormat?"},{"path":"\/documentation\/haishinkit\/tswriter\/expectedmedias","title":"var expectedMedias: Set<AVMediaType>","type":"property"},{"title":"var output: AsyncStream<Data>","type":"property","path":"\/documentation\/haishinkit\/tswriter\/output"},{"title":"var videoFormat: CMFormatDescription?","path":"\/documentation\/haishinkit\/tswriter\/videoformat","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func append(CMSampleBuffer)","type":"method","path":"\/documentation\/haishinkit\/tswriter\/append(_:)"},{"type":"method","title":"func append(AVAudioBuffer, when: AVAudioTime)","path":"\/documentation\/haishinkit\/tswriter\/append(_:when:)"},{"title":"func clear()","type":"method","path":"\/documentation\/haishinkit\/tswriter\/clear()"}],"path":"\/documentation\/haishinkit\/tswriter","type":"class"},{"type":"class","children":[{"type":"groupMarker","title":"Instance Properties"},{"title":"var attributes: [NSAttributedString.Key : Any]?","path":"\/documentation\/haishinkit\/textscreenobject\/attributes","type":"property"},{"path":"\/documentation\/haishinkit\/textscreenobject\/bounds","type":"property","title":"var bounds: CGRect"},{"type":"property","path":"\/documentation\/haishinkit\/textscreenobject\/string","title":"var string: String"},{"type":"groupMarker","title":"Instance Methods"},{"title":"func makeBounds(CGSize) -> CGRect","path":"\/documentation\/haishinkit\/textscreenobject\/makebounds(_:)","type":"method"},{"type":"method","title":"func makeImage(some ScreenRenderer) -> CGImage?","path":"\/documentation\/haishinkit\/textscreenobject\/makeimage(_:)"}],"title":"TextScreenObject","path":"\/documentation\/haishinkit\/textscreenobject"},{"type":"class","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videodeviceunit\/colorformat-swift.property","type":"property","title":"var colorFormat: OSType"},{"path":"\/documentation\/haishinkit\/videodeviceunit\/connection","title":"var connection: AVCaptureConnection?","type":"property"},{"title":"var device: AVCaptureDevice?","type":"property","path":"\/documentation\/haishinkit\/videodeviceunit\/device"},{"path":"\/documentation\/haishinkit\/videodeviceunit\/input","type":"property","title":"var input: AVCaptureInput?"},{"path":"\/documentation\/haishinkit\/videodeviceunit\/isvideomirrored","title":"var isVideoMirrored: Bool","type":"property"},{"path":"\/documentation\/haishinkit\/videodeviceunit\/output-swift.property","title":"var output: VideoDeviceUnit.Output?","type":"property"},{"type":"property","path":"\/documentation\/haishinkit\/videodeviceunit\/track","title":"let track: UInt8"},{"path":"\/documentation\/haishinkit\/videodeviceunit\/videoorientation","type":"property","title":"var videoOrientation: AVCaptureVideoOrientation"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videodeviceunit\/output-swift.typealias","title":"VideoDeviceUnit.Output","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"title":"static let colorFormat: OSType","path":"\/documentation\/haishinkit\/videodeviceunit\/colorformat-swift.type.property","type":"property"}],"path":"\/documentation\/haishinkit\/videodeviceunit","title":"VideoDeviceUnit"},{"type":"class","children":[{"title":"Initializers","type":"groupMarker"},{"type":"init","title":"init?()","path":"\/documentation\/haishinkit\/videorotator\/init()"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func rotate(buffer: CMSampleBuffer) -> Result<CMSampleBuffer, VideoRotator.Error>","path":"\/documentation\/haishinkit\/videorotator\/rotate(buffer:)","type":"method"},{"type":"groupMarker","title":"Enumerations"},{"title":"VideoRotator.Error","path":"\/documentation\/haishinkit\/videorotator\/error","type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"title":"case cannotAllocatePixelBuffer(CVReturn)","path":"\/documentation\/haishinkit\/videorotator\/error\/cannotallocatepixelbuffer(_:)","type":"case"},{"path":"\/documentation\/haishinkit\/videorotator\/error\/noimagebuffer","type":"case","title":"case noImageBuffer"},{"title":"case noOrientationInfo","path":"\/documentation\/haishinkit\/videorotator\/error\/noorientationinfo","type":"case"},{"title":"case rotationFailure(OSStatus)","path":"\/documentation\/haishinkit\/videorotator\/error\/rotationfailure(_:)","type":"case"},{"path":"\/documentation\/haishinkit\/videorotator\/error\/unsupportedorientation","type":"case","title":"case unsupportedOrientation"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/haishinkit\/videorotator\/error\/error-implementations","title":"Error Implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var localizedDescription: String","path":"\/documentation\/haishinkit\/videorotator\/error\/localizeddescription"}],"type":"symbol"}]}],"title":"VideoRotator","path":"\/documentation\/haishinkit\/videorotator"},{"title":"VideoTrackScreenObject","path":"\/documentation\/haishinkit\/videotrackscreenobject","type":"class","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init()","type":"init","path":"\/documentation\/haishinkit\/videotrackscreenobject\/init()"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videotrackscreenobject\/chromakeycolor","type":"property","title":"var chromaKeyColor: CGColor?"},{"path":"\/documentation\/haishinkit\/videotrackscreenobject\/framerate","type":"property","title":"var frameRate: Int"},{"path":"\/documentation\/haishinkit\/videotrackscreenobject\/track","title":"var track: UInt8","type":"property"},{"path":"\/documentation\/haishinkit\/videotrackscreenobject\/videogravity","title":"var videoGravity: AVLayerVideoGravity","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videotrackscreenobject\/draw(_:)","title":"func draw(some ScreenRenderer)","type":"method"},{"path":"\/documentation\/haishinkit\/videotrackscreenobject\/makebounds(_:)","title":"func makeBounds(CGSize) -> CGRect","type":"method"},{"path":"\/documentation\/haishinkit\/videotrackscreenobject\/makeimage(_:)","type":"method","title":"func makeImage(some ScreenRenderer) -> CGImage?"},{"title":"func registerVideoEffect(some VideoEffect) -> Bool","path":"\/documentation\/haishinkit\/videotrackscreenobject\/registervideoeffect(_:)","type":"method"},{"path":"\/documentation\/haishinkit\/videotrackscreenobject\/unregistervideoeffect(_:)","title":"func unregisterVideoEffect(some VideoEffect) -> Bool","type":"method"}]},{"title":"Protocols","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var isRunning: Bool","path":"\/documentation\/haishinkit\/asyncrunner\/isrunning"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func startRunning() async","path":"\/documentation\/haishinkit\/asyncrunner\/startrunning()"},{"title":"func stopRunning() async","path":"\/documentation\/haishinkit\/asyncrunner\/stoprunning()","type":"method"}],"path":"\/documentation\/haishinkit\/asyncrunner","title":"AsyncRunner","type":"protocol"},{"title":"ChromaKeyProcessable","type":"protocol","path":"\/documentation\/haishinkit\/chromakeyprocessable","children":[{"title":"Instance Properties","type":"groupMarker"},{"type":"property","title":"var chromaKeyColor: CGColor?","path":"\/documentation\/haishinkit\/chromakeyprocessable\/chromakeycolor"}]},{"type":"protocol","path":"\/documentation\/haishinkit\/hkstream","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var audioSettings: AudioCodecSettings","path":"\/documentation\/haishinkit\/hkstream\/audiosettings","type":"property"},{"path":"\/documentation\/haishinkit\/hkstream\/readystate","title":"var readyState: HKStreamReadyState","type":"property"},{"path":"\/documentation\/haishinkit\/hkstream\/soundtransform","title":"var soundTransform: SoundTransform?","type":"property"},{"title":"var videoSettings: VideoCodecSettings","path":"\/documentation\/haishinkit\/hkstream\/videosettings","type":"property"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func addOutput(some HKStreamOutput)","path":"\/documentation\/haishinkit\/hkstream\/addoutput(_:)"},{"title":"func append(CMSampleBuffer)","path":"\/documentation\/haishinkit\/hkstream\/append(_:)","type":"method"},{"path":"\/documentation\/haishinkit\/hkstream\/append(_:when:)","title":"func append(AVAudioBuffer, when: AVAudioTime)","type":"method"},{"path":"\/documentation\/haishinkit\/hkstream\/attachaudioplayer(_:)","type":"method","title":"func attachAudioPlayer(AudioPlayer?) async"},{"path":"\/documentation\/haishinkit\/hkstream\/dispatch(_:)","type":"method","title":"func dispatch(NetworkMonitorEvent) async"},{"title":"func removeOutput(some HKStreamOutput)","path":"\/documentation\/haishinkit\/hkstream\/removeoutput(_:)","type":"method"},{"type":"method","title":"func setAudioSettings(AudioCodecSettings)","path":"\/documentation\/haishinkit\/hkstream\/setaudiosettings(_:)"},{"title":"func setBitrateStorategy((some HKStreamBitRateStrategy)?)","type":"method","path":"\/documentation\/haishinkit\/hkstream\/setbitratestorategy(_:)"},{"type":"method","title":"func setSoundTransform(SoundTransform) async","path":"\/documentation\/haishinkit\/hkstream\/setsoundtransform(_:)"},{"path":"\/documentation\/haishinkit\/hkstream\/setvideoinputbuffercounts(_:)","title":"func setVideoInputBufferCounts(Int)","type":"method"},{"title":"func setVideoSettings(VideoCodecSettings)","type":"method","path":"\/documentation\/haishinkit\/hkstream\/setvideosettings(_:)"}],"title":"HKStream"},{"title":"HKStreamBitRateStrategy","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var mamimumAudioBitRate: Int","path":"\/documentation\/haishinkit\/hkstreambitratestrategy\/mamimumaudiobitrate"},{"title":"var mamimumVideoBitRate: Int","path":"\/documentation\/haishinkit\/hkstreambitratestrategy\/mamimumvideobitrate","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/hkstreambitratestrategy\/adjustbitrate(_:stream:)","type":"method","title":"func adjustBitrate(NetworkMonitorEvent, stream: some HKStream) async"}],"path":"\/documentation\/haishinkit\/hkstreambitratestrategy","type":"protocol"},{"children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/hkstreamoutput\/stream(_:didoutput:)","type":"method","title":"func stream(some HKStream, didOutput: CMSampleBuffer)"},{"path":"\/documentation\/haishinkit\/hkstreamoutput\/stream(_:didoutput:when:)","type":"method","title":"func stream(some HKStream, didOutput: AVAudioBuffer, when: AVAudioTime)"}],"title":"HKStreamOutput","path":"\/documentation\/haishinkit\/hkstreamoutput","type":"protocol"},{"path":"\/documentation\/haishinkit\/mediamixeroutput","title":"MediaMixerOutput","type":"protocol","children":[{"title":"Instance Properties","type":"groupMarker"},{"type":"property","title":"var audioTrackId: UInt8?","path":"\/documentation\/haishinkit\/mediamixeroutput\/audiotrackid"},{"title":"var videoTrackId: UInt8?","type":"property","path":"\/documentation\/haishinkit\/mediamixeroutput\/videotrackid"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/mediamixeroutput\/mixer(_:didoutput:)","type":"method","title":"func mixer(MediaMixer, didOutput: CMSampleBuffer)"},{"title":"func mixer(MediaMixer, didOutput: AVAudioPCMBuffer, when: AVAudioTime)","type":"method","path":"\/documentation\/haishinkit\/mediamixeroutput\/mixer(_:didoutput:when:)"},{"title":"func selectTrack(UInt8?, mediaType: CMFormatDescription.MediaType) async","path":"\/documentation\/haishinkit\/mediamixeroutput\/selecttrack(_:mediatype:)","type":"method"}]},{"title":"NetworkConnection","path":"\/documentation\/haishinkit\/networkconnection","type":"protocol","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var connected: Bool","path":"\/documentation\/haishinkit\/networkconnection\/connected"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/networkconnection\/close()","type":"method","title":"func close() async throws"}]},{"title":"NetworkTransportReporter","path":"\/documentation\/haishinkit\/networktransportreporter","type":"protocol","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func makeNetworkMonitor() async -> NetworkMonitor","type":"method","path":"\/documentation\/haishinkit\/networktransportreporter\/makenetworkmonitor()"},{"type":"method","title":"func makeNetworkTransportReport() async -> NetworkTransportReport","path":"\/documentation\/haishinkit\/networktransportreporter\/makenetworktransportreport()"}]},{"type":"protocol","path":"\/documentation\/haishinkit\/runner","title":"Runner","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var isRunning: Bool","type":"property","path":"\/documentation\/haishinkit\/runner\/isrunning"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func startRunning()","type":"method","path":"\/documentation\/haishinkit\/runner\/startrunning()"},{"path":"\/documentation\/haishinkit\/runner\/stoprunning()","title":"func stopRunning()","type":"method"}]},{"type":"protocol","path":"\/documentation\/haishinkit\/screendelegate","children":[{"type":"groupMarker","title":"Instance Methods"},{"title":"func screen(Screen, willLayout: CMTime)","path":"\/documentation\/haishinkit\/screendelegate\/screen(_:willlayout:)","type":"method"}],"title":"ScreenDelegate"},{"path":"\/documentation\/haishinkit\/screenrenderer","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/screenrenderer\/backgroundcolor","title":"var backgroundColor: CGColor","type":"property"},{"path":"\/documentation\/haishinkit\/screenrenderer\/bounds","type":"property","title":"var bounds: CGRect"},{"type":"property","title":"var context: CIContext","path":"\/documentation\/haishinkit\/screenrenderer\/context"},{"type":"property","path":"\/documentation\/haishinkit\/screenrenderer\/presentationtimestamp","title":"var presentationTimeStamp: CMTime"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/screenrenderer\/draw(_:)","type":"method","title":"func draw(ScreenObject)"},{"title":"func layout(ScreenObject)","path":"\/documentation\/haishinkit\/screenrenderer\/layout(_:)","type":"method"},{"title":"func setTarget(CVPixelBuffer?)","path":"\/documentation\/haishinkit\/screenrenderer\/settarget(_:)","type":"method"}],"title":"ScreenRenderer","type":"protocol"},{"title":"VideoEffect","children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videoeffect\/execute(_:)","title":"func execute(CIImage) -> CIImage","type":"method"}],"type":"protocol","path":"\/documentation\/haishinkit\/videoeffect"},{"title":"Structures","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/amfarray","title":"AMFArray","type":"struct","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/amfarray\/init(count:)","type":"init","title":"init(count: Int)"},{"path":"\/documentation\/haishinkit\/amfarray\/init(data:)","type":"init","title":"init(data: [(any Sendable)?])"},{"title":"Instance Properties","type":"groupMarker"},{"type":"property","title":"var length: Int","path":"\/documentation\/haishinkit\/amfarray\/length"},{"type":"groupMarker","title":"Subscripts"},{"title":"subscript(Any) -> (any Sendable)?","path":"\/documentation\/haishinkit\/amfarray\/subscript(_:)","type":"subscript"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"title":"var debugDescription: String","path":"\/documentation\/haishinkit\/amfarray\/debugdescription","type":"property"}],"type":"symbol","title":"CustomDebugStringConvertible Implementations","path":"\/documentation\/haishinkit\/amfarray\/customdebugstringconvertible-implementations"},{"title":"Equatable Implementations","path":"\/documentation\/haishinkit\/amfarray\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/amfarray\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"},{"title":"static func == (AMFArray, AMFArray) -> Bool","path":"\/documentation\/haishinkit\/amfarray\/==(_:_:)","type":"op"}],"type":"symbol"},{"children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/haishinkit\/amfarray\/init(arrayliteral:)","type":"init","title":"init(arrayLiteral: (any Sendable)?...)"}],"type":"symbol","title":"ExpressibleByArrayLiteral Implementations","path":"\/documentation\/haishinkit\/amfarray\/expressiblebyarrayliteral-implementations"}]},{"type":"struct","children":[{"title":"Instance Properties","type":"groupMarker"},{"type":"property","title":"let data: AMFObject","path":"\/documentation\/haishinkit\/amftypedobject\/data"},{"type":"property","path":"\/documentation\/haishinkit\/amftypedobject\/typename","title":"let typeName: String"}],"path":"\/documentation\/haishinkit\/amftypedobject","title":"AMFTypedObject"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/amfundefined\/description","title":"var description: String","type":"property"}],"title":"AMFUndefined","type":"struct","path":"\/documentation\/haishinkit\/amfundefined"},{"path":"\/documentation\/haishinkit\/amfxml","type":"struct","title":"AMFXML","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init(data: String)","path":"\/documentation\/haishinkit\/amfxml\/init(data:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var description: String","path":"\/documentation\/haishinkit\/amfxml\/description","type":"property"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/haishinkit\/amfxml\/equatable-implementations","title":"Equatable Implementations","type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/haishinkit\/amfxml\/!=(_:_:)"},{"title":"static func == (AMFXML, AMFXML) -> Bool","path":"\/documentation\/haishinkit\/amfxml\/==(_:_:)","type":"op"}]}]},{"type":"struct","path":"\/documentation\/haishinkit\/amfxmldocument","title":"AMFXMLDocument","children":[{"title":"Initializers","type":"groupMarker"},{"type":"init","path":"\/documentation\/haishinkit\/amfxmldocument\/init(data:)","title":"init(data: String)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var description: String","path":"\/documentation\/haishinkit\/amfxmldocument\/description"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/haishinkit\/amfxmldocument\/!=(_:_:)"},{"path":"\/documentation\/haishinkit\/amfxmldocument\/==(_:_:)","title":"static func == (AMFXMLDocument, AMFXMLDocument) -> Bool","type":"op"}],"path":"\/documentation\/haishinkit\/amfxmldocument\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}]},{"title":"AudioCodecSettings","path":"\/documentation\/haishinkit\/audiocodecsettings","type":"struct","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(bitRate: Int, downmix: Bool, channelMap: [Int]?, sampleRate: Float64, format: AudioCodecSettings.Format)","path":"\/documentation\/haishinkit\/audiocodecsettings\/init(bitrate:downmix:channelmap:samplerate:format:)","type":"init"},{"type":"init","title":"init(from: any Decoder) throws","path":"\/documentation\/haishinkit\/audiocodecsettings\/init(from:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var bitRate: Int","path":"\/documentation\/haishinkit\/audiocodecsettings\/bitrate","type":"property"},{"type":"property","title":"var channelMap: [Int]?","path":"\/documentation\/haishinkit\/audiocodecsettings\/channelmap"},{"title":"var downmix: Bool","type":"property","path":"\/documentation\/haishinkit\/audiocodecsettings\/downmix"},{"type":"property","title":"var format: AudioCodecSettings.Format","path":"\/documentation\/haishinkit\/audiocodecsettings\/format-swift.property"},{"type":"property","path":"\/documentation\/haishinkit\/audiocodecsettings\/samplerate","title":"let sampleRate: Float64"},{"type":"groupMarker","title":"Type Properties"},{"path":"\/documentation\/haishinkit\/audiocodecsettings\/default","type":"property","title":"static let `default`: AudioCodecSettings"},{"path":"\/documentation\/haishinkit\/audiocodecsettings\/defaultbitrate","title":"static let defaultBitRate: Int","type":"property"},{"type":"property","path":"\/documentation\/haishinkit\/audiocodecsettings\/maximumnumberofchannels","title":"static let maximumNumberOfChannels: UInt32"},{"title":"Enumerations","type":"groupMarker"},{"title":"AudioCodecSettings.Format","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/audiocodecsettings\/format-swift.enum\/aac","type":"case","title":"case aac"},{"type":"case","title":"case opus","path":"\/documentation\/haishinkit\/audiocodecsettings\/format-swift.enum\/opus"},{"path":"\/documentation\/haishinkit\/audiocodecsettings\/format-swift.enum\/pcm","title":"case pcm","type":"case"},{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/haishinkit\/audiocodecsettings\/format-swift.enum\/init(from:)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","path":"\/documentation\/haishinkit\/audiocodecsettings\/format-swift.enum\/equatable-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/haishinkit\/audiocodecsettings\/format-swift.enum\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}]}],"path":"\/documentation\/haishinkit\/audiocodecsettings\/format-swift.enum","type":"enum"}]},{"children":[{"title":"Initializers","type":"groupMarker"},{"type":"init","title":"init(sampleRate: Float64, channels: UInt32, isMuted: Bool, mainTrack: UInt8, tracks: [UInt8 : AudioMixerTrackSettings])","path":"\/documentation\/haishinkit\/audiomixersettings\/init(samplerate:channels:ismuted:maintrack:tracks:)"},{"type":"groupMarker","title":"Instance Properties"},{"title":"let channels: UInt32","path":"\/documentation\/haishinkit\/audiomixersettings\/channels","type":"property"},{"type":"property","title":"var isMuted: Bool","path":"\/documentation\/haishinkit\/audiomixersettings\/ismuted"},{"title":"var mainTrack: UInt8","type":"property","path":"\/documentation\/haishinkit\/audiomixersettings\/maintrack"},{"type":"property","path":"\/documentation\/haishinkit\/audiomixersettings\/maximumnumberofchannels","title":"var maximumNumberOfChannels: UInt32"},{"path":"\/documentation\/haishinkit\/audiomixersettings\/samplerate","title":"let sampleRate: Float64","type":"property"},{"type":"property","path":"\/documentation\/haishinkit\/audiomixersettings\/tracks","title":"var tracks: [UInt8 : AudioMixerTrackSettings]"},{"title":"Type Properties","type":"groupMarker"},{"title":"static let `default`: AudioMixerSettings","type":"property","path":"\/documentation\/haishinkit\/audiomixersettings\/default"},{"type":"property","path":"\/documentation\/haishinkit\/audiomixersettings\/maximumsamplerate","title":"static let maximumSampleRate: Float64"}],"path":"\/documentation\/haishinkit\/audiomixersettings","type":"struct","title":"AudioMixerSettings"},{"type":"struct","path":"\/documentation\/haishinkit\/audiomixertracksettings","title":"AudioMixerTrackSettings","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/haishinkit\/audiomixertracksettings\/init(from:)","type":"init"},{"type":"init","path":"\/documentation\/haishinkit\/audiomixertracksettings\/init(volume:ismuted:downmix:channelmap:)","title":"init(volume: Float, isMuted: Bool, downmix: Bool, channelMap: [Int]?)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var channelMap: [Int]?","path":"\/documentation\/haishinkit\/audiomixertracksettings\/channelmap","type":"property"},{"path":"\/documentation\/haishinkit\/audiomixertracksettings\/downmix","type":"property","title":"var downmix: Bool"},{"path":"\/documentation\/haishinkit\/audiomixertracksettings\/ismuted","type":"property","title":"var isMuted: Bool"},{"type":"property","title":"var volume: Float","path":"\/documentation\/haishinkit\/audiomixertracksettings\/volume"},{"title":"Type Properties","type":"groupMarker"},{"type":"property","title":"static let `default`: AudioMixerTrackSettings","path":"\/documentation\/haishinkit\/audiomixertracksettings\/default"}]},{"type":"struct","children":[{"type":"groupMarker","title":"Initializers"},{"title":"init(A)","type":"init","path":"\/documentation\/haishinkit\/hkatomic\/init(_:)"},{"type":"groupMarker","title":"Instance Properties"},{"title":"var value: A","path":"\/documentation\/haishinkit\/hkatomic\/value","type":"property"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/hkatomic\/mutate(_:)","type":"method","title":"func mutate((inout A) -> Void)"}],"path":"\/documentation\/haishinkit\/hkatomic","title":"HKAtomic"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"type":"property","title":"let currentBytesInPerSecond: Int","path":"\/documentation\/haishinkit\/networkmonitorreport\/currentbytesinpersecond"},{"title":"let currentBytesOutPerSecond: Int","type":"property","path":"\/documentation\/haishinkit\/networkmonitorreport\/currentbytesoutpersecond"},{"path":"\/documentation\/haishinkit\/networkmonitorreport\/currentqueuebytesout","title":"let currentQueueBytesOut: Int","type":"property"},{"type":"property","title":"let totalBytesIn: Int","path":"\/documentation\/haishinkit\/networkmonitorreport\/totalbytesin"},{"type":"property","path":"\/documentation\/haishinkit\/networkmonitorreport\/totalbytesout","title":"let totalBytesOut: Int"}],"path":"\/documentation\/haishinkit\/networkmonitorreport","type":"struct","title":"NetworkMonitorReport"},{"type":"struct","path":"\/documentation\/haishinkit\/networktransportreport","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/networktransportreport\/init(queuebytesout:totalbytesin:totalbytesout:)","type":"init","title":"init(queueBytesOut: Int, totalBytesIn: Int, totalBytesOut: Int)"},{"title":"Instance Properties","type":"groupMarker"},{"type":"property","path":"\/documentation\/haishinkit\/networktransportreport\/queuebytesout","title":"let queueBytesOut: Int"},{"title":"let totalBytesIn: Int","path":"\/documentation\/haishinkit\/networktransportreport\/totalbytesin","type":"property"},{"title":"let totalBytesOut: Int","type":"property","path":"\/documentation\/haishinkit\/networktransportreport\/totalbytesout"}],"title":"NetworkTransportReport"},{"title":"RTMPResponse","type":"struct","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"let arguments: [(any Sendable)?]","path":"\/documentation\/haishinkit\/rtmpresponse\/arguments","type":"property"},{"path":"\/documentation\/haishinkit\/rtmpresponse\/status","title":"let status: RTMPStatus?","type":"property"}],"path":"\/documentation\/haishinkit\/rtmpresponse"},{"type":"struct","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"let code: String","path":"\/documentation\/haishinkit\/rtmpstatus\/code","type":"property"},{"title":"let description: String","path":"\/documentation\/haishinkit\/rtmpstatus\/description","type":"property"},{"type":"property","title":"let level: String","path":"\/documentation\/haishinkit\/rtmpstatus\/level"},{"title":"Subscripts","type":"groupMarker"},{"type":"subscript","title":"subscript(dynamicMember _: String) -> Double?","path":"\/documentation\/haishinkit\/rtmpstatus\/subscript(dynamicmember:)-7qc0b"},{"type":"subscript","path":"\/documentation\/haishinkit\/rtmpstatus\/subscript(dynamicmember:)-9sprr","title":"subscript(dynamicMember _: String) -> String?"}],"title":"RTMPStatus","path":"\/documentation\/haishinkit\/rtmpstatus"},{"path":"\/documentation\/haishinkit\/rtmpstreaminfo","children":[{"title":"Instance Properties","type":"groupMarker"},{"type":"property","title":"var byteCount: Int","path":"\/documentation\/haishinkit\/rtmpstreaminfo\/bytecount"},{"title":"var currentBytesPerSecond: Int","type":"property","path":"\/documentation\/haishinkit\/rtmpstreaminfo\/currentbytespersecond"},{"title":"var resourceName: String?","type":"property","path":"\/documentation\/haishinkit\/rtmpstreaminfo\/resourcename"},{"type":"groupMarker","title":"Default Implementations"},{"title":"CustomDebugStringConvertible Implementations","path":"\/documentation\/haishinkit\/rtmpstreaminfo\/customdebugstringconvertible-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/haishinkit\/rtmpstreaminfo\/debugdescription","title":"var debugDescription: String"}]}],"type":"struct","title":"RTMPStreamInfo"},{"title":"SoundTransform","type":"struct","path":"\/documentation\/haishinkit\/soundtransform","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init(volume: Float, pan: Float)","path":"\/documentation\/haishinkit\/soundtransform\/init(volume:pan:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var pan: Float","path":"\/documentation\/haishinkit\/soundtransform\/pan","type":"property"},{"type":"property","path":"\/documentation\/haishinkit\/soundtransform\/volume","title":"var volume: Float"},{"title":"Type Properties","type":"groupMarker"},{"title":"static let defaultPan: Float","type":"property","path":"\/documentation\/haishinkit\/soundtransform\/defaultpan"},{"type":"property","title":"static let defaultVolume: Float","path":"\/documentation\/haishinkit\/soundtransform\/defaultvolume"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/haishinkit\/soundtransform\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var debugDescription: String","type":"property","path":"\/documentation\/haishinkit\/soundtransform\/debugdescription"}]},{"title":"Equatable Implementations","type":"symbol","path":"\/documentation\/haishinkit\/soundtransform\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/haishinkit\/soundtransform\/!=(_:_:)","type":"op"}]}]},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"type":"symbol","title":"Equatable Implementations","path":"\/documentation\/haishinkit\/vtsessionoption\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/haishinkit\/vtsessionoption\/!=(_:_:)"},{"title":"static func == (VTSessionOption, VTSessionOption) -> Bool","type":"op","path":"\/documentation\/haishinkit\/vtsessionoption\/==(_:_:)"}]},{"path":"\/documentation\/haishinkit\/vtsessionoption\/hashable-implementations","title":"Hashable Implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/vtsessionoption\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}]}],"type":"struct","title":"VTSessionOption","path":"\/documentation\/haishinkit\/vtsessionoption"},{"path":"\/documentation\/haishinkit\/videocodecsettings","title":"VideoCodecSettings","type":"struct","children":[{"title":"Initializers","type":"groupMarker"},{"type":"init","title":"init(from: any Decoder) throws","path":"\/documentation\/haishinkit\/videocodecsettings\/init(from:)"},{"title":"init(videoSize: CGSize, bitRate: Int, profileLevel: String, scalingMode: VideoCodecSettings.ScalingMode, bitRateMode: VideoCodecSettings.BitRateMode, maxKeyFrameIntervalDuration: Int32, allowFrameReordering: Bool?, dataRateLimits: [Double]?, isHardwareEncoderEnabled: Bool)","path":"\/documentation\/haishinkit\/videocodecsettings\/init(videosize:bitrate:profilelevel:scalingmode:bitratemode:maxkeyframeintervalduration:allowframereordering:dataratelimits:ishardwareencoderenabled:)","type":"init"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/allowframereordering","type":"property","title":"var allowFrameReordering: Bool?"},{"type":"property","title":"var bitRate: Int","path":"\/documentation\/haishinkit\/videocodecsettings\/bitrate"},{"type":"property","title":"var bitRateMode: VideoCodecSettings.BitRateMode","path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.property"},{"type":"property","title":"var dataRateLimits: [Double]?","path":"\/documentation\/haishinkit\/videocodecsettings\/dataratelimits"},{"title":"var frameInterval: Double","type":"property","path":"\/documentation\/haishinkit\/videocodecsettings\/frameinterval"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/ishardwareencoderenabled","type":"property","title":"var isHardwareEncoderEnabled: Bool"},{"type":"property","path":"\/documentation\/haishinkit\/videocodecsettings\/maxkeyframeintervalduration","title":"var maxKeyFrameIntervalDuration: Int32"},{"title":"var profileLevel: String","path":"\/documentation\/haishinkit\/videocodecsettings\/profilelevel","type":"property"},{"type":"property","title":"var scalingMode: VideoCodecSettings.ScalingMode","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.property"},{"title":"var videoSize: CGSize","type":"property","path":"\/documentation\/haishinkit\/videocodecsettings\/videosize"},{"type":"groupMarker","title":"Type Properties"},{"title":"static let `default`: VideoCodecSettings","type":"property","path":"\/documentation\/haishinkit\/videocodecsettings\/default"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/frameinterval01","type":"property","title":"static let frameInterval01: Double"},{"title":"static let frameInterval05: Double","path":"\/documentation\/haishinkit\/videocodecsettings\/frameinterval05","type":"property"},{"type":"property","path":"\/documentation\/haishinkit\/videocodecsettings\/frameinterval10","title":"static let frameInterval10: Double"},{"type":"property","title":"static let frameInterval30: Double","path":"\/documentation\/haishinkit\/videocodecsettings\/frameinterval30"},{"type":"groupMarker","title":"Enumerations"},{"children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/average","title":"case average"},{"title":"case constant","type":"case","path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/constant"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: String)","type":"init","path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/init(rawvalue:)"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/!=(_:_:)"}]},{"title":"RawRepresentable Implementations","type":"symbol","path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/rawrepresentable-implementations","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","type":"init","path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/init(from:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/hashvalue","type":"property"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func encode(to: any Encoder) throws","path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/encode(to:)"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/hash(into:)","type":"method","title":"func hash(into: inout Hasher)"}]}],"title":"VideoCodecSettings.BitRateMode","path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum","type":"enum"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","title":"case cropSourceToCleanAperture","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/cropsourcetocleanaperture"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/letterbox","title":"case letterbox","type":"case"},{"type":"case","title":"case normal","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/normal"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/trim","title":"case trim","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/equatable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/!=(_:_:)"}],"title":"Equatable Implementations"},{"title":"RawRepresentable Implementations","type":"symbol","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/rawrepresentable-implementations","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","type":"init","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/init(from:)"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/hashvalue","type":"property","title":"var hashValue: Int"},{"type":"groupMarker","title":"Instance Methods"},{"title":"func encode(to: any Encoder) throws","type":"method","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/encode(to:)"},{"title":"func hash(into: inout Hasher)","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/hash(into:)","type":"method"}]}],"title":"VideoCodecSettings.ScalingMode","type":"enum"}]},{"path":"\/documentation\/haishinkit\/videomixersettings","title":"VideoMixerSettings","children":[{"title":"Initializers","type":"groupMarker"},{"type":"init","title":"init(from: any Decoder) throws","path":"\/documentation\/haishinkit\/videomixersettings\/init(from:)"},{"title":"init(mode: VideoMixerSettings.Mode, isMuted: Bool, mainTrack: UInt8)","path":"\/documentation\/haishinkit\/videomixersettings\/init(mode:ismuted:maintrack:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videomixersettings\/ismuted","title":"var isMuted: Bool","type":"property"},{"path":"\/documentation\/haishinkit\/videomixersettings\/maintrack","type":"property","title":"var mainTrack: UInt8"},{"path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.property","title":"var mode: VideoMixerSettings.Mode","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"title":"static let `default`: VideoMixerSettings","type":"property","path":"\/documentation\/haishinkit\/videomixersettings\/default"},{"type":"groupMarker","title":"Enumerations"},{"path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum","type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"type":"case","title":"case offscreen","path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/offscreen"},{"type":"case","path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/passthrough","title":"case passthrough"},{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init?(rawValue: String)","path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/init(rawvalue:)"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"type":"op","path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"}],"path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"type":"init","path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/init(from:)","title":"init(from: any Decoder) throws"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/hashvalue","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func encode(to: any Encoder) throws","type":"method","path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/encode(to:)"},{"title":"func hash(into: inout Hasher)","path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/hash(into:)","type":"method"}],"type":"symbol","path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations"}],"title":"VideoMixerSettings.Mode"}],"type":"struct"},{"type":"groupMarker","title":"Variables"},{"path":"\/documentation\/haishinkit\/kamfundefined","title":"let kAMFUndefined: AMFUndefined","type":"var"},{"type":"var","path":"\/documentation\/haishinkit\/khaishinkitidentifier","title":"let kHaishinKitIdentifier: String"},{"type":"groupMarker","title":"Type Aliases"},{"type":"typealias","path":"\/documentation\/haishinkit\/amfobject","title":"AMFObject"},{"type":"typealias","path":"\/documentation\/haishinkit\/audiodeviceconfigurationblock","title":"AudioDeviceConfigurationBlock"},{"path":"\/documentation\/haishinkit\/videodeviceconfigurationblock","type":"typealias","title":"VideoDeviceConfigurationBlock"},{"type":"groupMarker","title":"Enumerations"},{"title":"DeviceUtil","type":"enum","children":[{"title":"Type Methods","type":"groupMarker"},{"title":"static func device(withLocalizedName: String, mediaType: AVMediaType) -> AVCaptureDevice?","path":"\/documentation\/haishinkit\/deviceutil\/device(withlocalizedname:mediatype:)","type":"method"}],"path":"\/documentation\/haishinkit\/deviceutil"},{"title":"HKStreamReadyState","path":"\/documentation\/haishinkit\/hkstreamreadystate","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/haishinkit\/hkstreamreadystate\/idle","type":"case","title":"case idle"},{"path":"\/documentation\/haishinkit\/hkstreamreadystate\/play","title":"case play","type":"case"},{"path":"\/documentation\/haishinkit\/hkstreamreadystate\/playing","type":"case","title":"case playing"},{"type":"case","title":"case publish","path":"\/documentation\/haishinkit\/hkstreamreadystate\/publish"},{"path":"\/documentation\/haishinkit\/hkstreamreadystate\/publishing","title":"case publishing","type":"case"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: Int)","path":"\/documentation\/haishinkit\/hkstreamreadystate\/init(rawvalue:)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/hkstreamreadystate\/equatable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/haishinkit\/hkstreamreadystate\/!=(_:_:)","type":"op"}],"type":"symbol","title":"Equatable Implementations"},{"path":"\/documentation\/haishinkit\/hkstreamreadystate\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/hkstreamreadystate\/hashvalue","type":"property","title":"var hashValue: Int"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/hkstreamreadystate\/hash(into:)","type":"method","title":"func hash(into: inout Hasher)"}]}],"type":"enum"},{"path":"\/documentation\/haishinkit\/networkmonitorevent","title":"NetworkMonitorEvent","type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"type":"case","title":"case publishInsufficientBWOccured(report: NetworkMonitorReport)","path":"\/documentation\/haishinkit\/networkmonitorevent\/publishinsufficientbwoccured(report:)"},{"title":"case reset","path":"\/documentation\/haishinkit\/networkmonitorevent\/reset","type":"case"},{"path":"\/documentation\/haishinkit\/networkmonitorevent\/status(report:)","type":"case","title":"case status(report: NetworkMonitorReport)"}]},{"type":"enum","path":"\/documentation\/haishinkit\/rtmpobjectencoding","title":"RTMPObjectEncoding","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"type":"case","title":"case amf0","path":"\/documentation\/haishinkit\/rtmpobjectencoding\/amf0"},{"title":"case amf3","type":"case","path":"\/documentation\/haishinkit\/rtmpobjectencoding\/amf3"},{"type":"groupMarker","title":"Initializers"},{"title":"init?(rawValue: UInt8)","path":"\/documentation\/haishinkit\/rtmpobjectencoding\/init(rawvalue:)","type":"init"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/haishinkit\/rtmpobjectencoding\/equatable-implementations","type":"symbol","title":"Equatable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/rtmpobjectencoding\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}]},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","path":"\/documentation\/haishinkit\/rtmpobjectencoding\/hashvalue","type":"property"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func hash(into: inout Hasher)","path":"\/documentation\/haishinkit\/rtmpobjectencoding\/hash(into:)"}],"title":"RawRepresentable Implementations","type":"symbol","path":"\/documentation\/haishinkit\/rtmpobjectencoding\/rawrepresentable-implementations"}]},{"type":"groupMarker","title":"Extended Modules"},{"path":"\/documentation\/haishinkit\/coremedia","type":"extension","title":"CoreMedia","children":[{"title":"Extended Classes","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/coremedia\/cmformatdescription","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/coremedia\/cmformatdescription\/iscompressed","title":"var isCompressed: Bool","type":"property"}],"title":"CMFormatDescription","type":"extension"}]}],"path":"\/documentation\/haishinkit","title":"HaishinKit"},{"path":"\/documentation\/moqthaishinkit","title":"MoQTHaishinKit","type":"module","children":[{"title":"Classes","type":"groupMarker"},{"title":"MoQTConnection","path":"\/documentation\/moqthaishinkit\/moqtconnection","type":"class","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(MoQTSetupRole, requestTimeOut: UInt64)","type":"init","path":"\/documentation\/moqthaishinkit\/moqtconnection\/init(_:requesttimeout:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var objectStream: AsyncStream<MoQTObject>","path":"\/documentation\/moqthaishinkit\/moqtconnection\/objectstream","type":"property"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/requesttimeout","title":"let requestTimeout: UInt64","type":"property"},{"title":"let role: MoQTSetupRole","path":"\/documentation\/moqthaishinkit\/moqtconnection\/role","type":"property"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/annouce(_:authinfo:)","type":"method","title":"func annouce([String], authInfo: String?) async throws -> Result<MoQTAnnounceOk, MoQTAnnounceError>"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/close()","title":"func close() async","type":"method"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/connect(_:)","title":"func connect(String) async throws -> MoQTServerSetup","type":"method"},{"title":"func send([MoQTObject], header: MoQTStreamHeaderSubgroup) async throws","type":"method","path":"\/documentation\/moqthaishinkit\/moqtconnection\/send(_:header:)"},{"title":"func subscribe([String], name: String, authInfo: String?) async throws -> Result<MoQTSubscribeOk, MoQTSubscribeError>","path":"\/documentation\/moqthaishinkit\/moqtconnection\/subscribe(_:name:authinfo:)","type":"method"},{"title":"func subscribeAnnouces([String], authInfo: String?) async throws -> Result<MoQTSubscribeAnnouncesOk, MoQTSubscribeAnnouncesError>","type":"method","path":"\/documentation\/moqthaishinkit\/moqtconnection\/subscribeannouces(_:authinfo:)"},{"type":"groupMarker","title":"Type Properties"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/defaultport","type":"property","title":"static let defaultPort: Int"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtconnection\/defaultrequesttimeout","title":"static let defaultRequestTimeout: UInt64"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/supportedprotocols","title":"static let supportedProtocols: [String]","type":"property"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/supportedversions","type":"property","title":"static let supportedVersions: [MoQTVersion]"},{"type":"groupMarker","title":"Enumerations"},{"type":"enum","title":"MoQTConnection.Error","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"type":"case","title":"case connectionTimedOut","path":"\/documentation\/moqthaishinkit\/moqtconnection\/error\/connectiontimedout"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/error\/invalidstate","type":"case","title":"case invalidState"},{"type":"case","title":"case requestTimedOut","path":"\/documentation\/moqthaishinkit\/moqtconnection\/error\/requesttimedout"},{"title":"case socketErrorOccurred(any Error)","path":"\/documentation\/moqthaishinkit\/moqtconnection\/error\/socketerroroccurred(_:)","type":"case"},{"title":"case unknownResponse","path":"\/documentation\/moqthaishinkit\/moqtconnection\/error\/unknownresponse","type":"case"},{"title":"case unsupportedCommand(String)","path":"\/documentation\/moqthaishinkit\/moqtconnection\/error\/unsupportedcommand(_:)","type":"case"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/error\/error-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/error\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"title":"Error Implementations"}],"path":"\/documentation\/moqthaishinkit\/moqtconnection\/error"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method","path":"\/documentation\/moqthaishinkit\/moqtconnection\/assertisolated(_:file:line:)"},{"type":"method","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","path":"\/documentation\/moqthaishinkit\/moqtconnection\/assumeisolated(_:file:line:)"},{"type":"method","path":"\/documentation\/moqthaishinkit\/moqtconnection\/preconditionisolated(_:file:line:)","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)"}],"path":"\/documentation\/moqthaishinkit\/moqtconnection\/actor-implementations","title":"Actor Implementations","type":"symbol"}]},{"title":"Protocols","type":"groupMarker"},{"title":"MoQTControlMessage","path":"\/documentation\/moqthaishinkit\/moqtcontrolmessage","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtcontrolmessage\/payload","type":"property","title":"var payload: Data"},{"title":"var type: MoQTMessageType","type":"property","path":"\/documentation\/moqthaishinkit\/moqtcontrolmessage\/type"}],"type":"protocol"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtannounce\/payload","title":"var payload: Data","type":"property"},{"title":"let subscribeParameters: [MoQTVersionSpecificParameter]","path":"\/documentation\/moqthaishinkit\/moqtannounce\/subscribeparameters","type":"property"},{"title":"let trackNamespace: [String]","path":"\/documentation\/moqthaishinkit\/moqtannounce\/tracknamespace","type":"property"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtannounce\/type","title":"let type: MoQTMessageType"}],"type":"struct","path":"\/documentation\/moqthaishinkit\/moqtannounce","title":"MoQTAnnounce"},{"title":"MoQTAnnounceError","path":"\/documentation\/moqthaishinkit\/moqtannounceerror","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"let code: Int","type":"property","path":"\/documentation\/moqthaishinkit\/moqtannounceerror\/code"},{"title":"var payload: Data","path":"\/documentation\/moqthaishinkit\/moqtannounceerror\/payload","type":"property"},{"path":"\/documentation\/moqthaishinkit\/moqtannounceerror\/reasonphrase","type":"property","title":"let reasonPhrase: String"},{"path":"\/documentation\/moqthaishinkit\/moqtannounceerror\/tracknamespace","title":"let trackNamespace: [String]","type":"property"},{"path":"\/documentation\/moqthaishinkit\/moqtannounceerror\/type","type":"property","title":"let type: MoQTMessageType"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var localizedDescription: String","path":"\/documentation\/moqthaishinkit\/moqtannounceerror\/localizeddescription"}],"title":"Error Implementations","path":"\/documentation\/moqthaishinkit\/moqtannounceerror\/error-implementations"}],"type":"struct"},{"title":"MoQTAnnounceOk","type":"struct","path":"\/documentation\/moqthaishinkit\/moqtannounceok","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/moqthaishinkit\/moqtannounceok\/payload","title":"var payload: Data","type":"property"},{"title":"let trackNamespace: [String]","path":"\/documentation\/moqthaishinkit\/moqtannounceok\/tracknamespace","type":"property"},{"title":"let type: MoQTMessageType","type":"property","path":"\/documentation\/moqthaishinkit\/moqtannounceok\/type"}]},{"type":"struct","title":"MoQTGoaway","path":"\/documentation\/moqthaishinkit\/moqtgoaway","children":[{"title":"Instance Properties","type":"groupMarker"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtgoaway\/newsessionuri","title":"let newSessionURI: String"},{"type":"property","title":"var payload: Data","path":"\/documentation\/moqthaishinkit\/moqtgoaway\/payload"},{"type":"property","title":"let type: MoQTMessageType","path":"\/documentation\/moqthaishinkit\/moqtgoaway\/type"}]},{"path":"\/documentation\/moqthaishinkit\/moqtobject","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtobject\/init(id:status:data:)","title":"init(id: Int, status: Int?, data: Data)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let data: Data","path":"\/documentation\/moqthaishinkit\/moqtobject\/data","type":"property"},{"title":"let id: Int","path":"\/documentation\/moqthaishinkit\/moqtobject\/id","type":"property"},{"type":"property","title":"let status: Int?","path":"\/documentation\/moqthaishinkit\/moqtobject\/status"}],"type":"struct","title":"MoQTObject"},{"title":"MoQTServerSetup","path":"\/documentation\/moqthaishinkit\/moqtserversetup","type":"struct","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var payload: Data","type":"property","path":"\/documentation\/moqthaishinkit\/moqtserversetup\/payload"},{"title":"let selectedVersion: Int","path":"\/documentation\/moqthaishinkit\/moqtserversetup\/selectedversion","type":"property"},{"title":"let setupParameters: [MoQTSetupParameter]","type":"property","path":"\/documentation\/moqthaishinkit\/moqtserversetup\/setupparameters"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtserversetup\/type","title":"let type: MoQTMessageType"}]},{"title":"MoQTSetupParameter","path":"\/documentation\/moqthaishinkit\/moqtsetupparameter","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"let key: MoQTSetupParameterType","path":"\/documentation\/moqthaishinkit\/moqtsetupparameter\/key"},{"title":"let value: (any Sendable)","type":"property","path":"\/documentation\/moqthaishinkit\/moqtsetupparameter\/value"}],"type":"struct"},{"type":"struct","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/moqthaishinkit\/moqtstreamheadersubgroup\/init(trackalias:groupid:subgroupid:publisherpriority:)","type":"init","title":"init(trackAlias: Int, groupId: Int, subgroupId: Int, publisherPriority: Int)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let groupId: Int","type":"property","path":"\/documentation\/moqthaishinkit\/moqtstreamheadersubgroup\/groupid"},{"type":"property","title":"var payload: Data","path":"\/documentation\/moqthaishinkit\/moqtstreamheadersubgroup\/payload"},{"title":"let publisherPriority: Int","path":"\/documentation\/moqthaishinkit\/moqtstreamheadersubgroup\/publisherpriority","type":"property"},{"type":"property","title":"let subgroupId: Int","path":"\/documentation\/moqthaishinkit\/moqtstreamheadersubgroup\/subgroupid"},{"title":"let trackAlias: Int","path":"\/documentation\/moqthaishinkit\/moqtstreamheadersubgroup\/trackalias","type":"property"},{"type":"property","title":"let type: MoQTDataStreamType","path":"\/documentation\/moqthaishinkit\/moqtstreamheadersubgroup\/type"}],"title":"MoQTStreamHeaderSubgroup","path":"\/documentation\/moqthaishinkit\/moqtstreamheadersubgroup"},{"type":"struct","path":"\/documentation\/moqthaishinkit\/moqtsubscribe","title":"MoQTSubscribe","children":[{"title":"Instance Properties","type":"groupMarker"},{"type":"property","title":"let endGroup: Int?","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/endgroup"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/endobject","type":"property","title":"let endObject: Int?"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.property","title":"let filterType: MoQTSubscribe.FilterType"},{"type":"property","title":"let groupOrder: MoQTSubscribe.GroupOrder","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.property"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/payload","type":"property","title":"var payload: Data"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/startgroup","type":"property","title":"let startGroup: Int?"},{"type":"property","title":"let startObject: Int?","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/startobject"},{"title":"let subscribeId: Int","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/subscribeid","type":"property"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/subscribeparameters","type":"property","title":"let subscribeParameters: [MoQTVersionSpecificParameter]"},{"title":"let subscribePriority: Int","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/subscribepriority","type":"property"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/trackalias","title":"let trackAlias: Int"},{"title":"let trackName: String","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/trackname","type":"property"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/tracknamespace","type":"property","title":"let trackNamespace: [String]"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/type","type":"property","title":"let type: MoQTMessageType"},{"type":"groupMarker","title":"Enumerations"},{"type":"enum","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum","title":"MoQTSubscribe.FilterType","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/absoluterange","title":"case absoluteRange","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/absolutestart","title":"case absoluteStart","type":"case"},{"type":"case","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/latestgroup","title":"case latestGroup"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/latestobject","title":"case latestObject","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/!=(_:_:)","type":"op"}],"type":"symbol","title":"Equatable Implementations","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/equatable-implementations"},{"type":"symbol","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var hashValue: Int","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/hashvalue"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func hash(into: inout Hasher)","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/hash(into:)","type":"method"}]}]},{"title":"MoQTSubscribe.GroupOrder","type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","title":"case ascending","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/ascending"},{"title":"case descending","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/descending","type":"case"},{"title":"case original","type":"case","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/original"},{"type":"groupMarker","title":"Initializers"},{"title":"init?(rawValue: Int)","type":"init","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/init(rawvalue:)"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/equatable-implementations","type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/!=(_:_:)"}]},{"title":"RawRepresentable Implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/hashvalue","title":"var hashValue: Int"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func hash(into: inout Hasher)","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/hash(into:)","type":"method"}],"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/rawrepresentable-implementations","type":"symbol"}],"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum"}]},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounces\/parameters","type":"property","title":"let parameters: [MoQTVersionSpecificParameter]"},{"title":"var payload: Data","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounces\/payload","type":"property"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounces\/tracknamespaceprefix","type":"property","title":"let trackNamespacePrefix: [String]"},{"title":"let type: MoQTMessageType","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounces\/type","type":"property"}],"title":"MoQTSubscribeAnnounces","type":"struct","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounces"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounceserror\/errorcode","title":"let errorCode: Int"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounceserror\/payload","title":"var payload: Data","type":"property"},{"title":"let reasonPhrase: String","type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounceserror\/reasonphrase"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounceserror\/tracknamespaceprefix","type":"property","title":"let trackNamespacePrefix: [String]"},{"title":"let type: MoQTMessageType","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounceserror\/type","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounceserror\/localizeddescription","type":"property","title":"var localizedDescription: String"}],"title":"Error Implementations","type":"symbol","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounceserror\/error-implementations"}],"path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounceserror","type":"struct","title":"MoQTSubscribeAnnouncesError"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var payload: Data","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannouncesok\/payload"},{"title":"let trackNamespacePrefix: [String]","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannouncesok\/tracknamespaceprefix","type":"property"},{"title":"let type: MoQTMessageType","type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannouncesok\/type"}],"path":"\/documentation\/moqthaishinkit\/moqtsubscribeannouncesok","title":"MoQTSubscribeAnnouncesOk","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"let code: Int","type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror\/code"},{"title":"var payload: Data","type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror\/payload"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror\/reasonphrase","title":"let reasonPhrase: String"},{"title":"let subscribeId: Int","path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror\/subscribeid","type":"property"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror\/trackalias","title":"let trackAlias: Int"},{"type":"property","title":"let type: MoQTMessageType","path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror\/type"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"title":"var localizedDescription: String","type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror\/localizeddescription"}],"path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror\/error-implementations","type":"symbol","title":"Error Implementations"}],"type":"struct","title":"MoQTSubscribeError","path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror"},{"title":"MoQTSubscribeOk","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/contentexists","title":"let contentExists: Bool"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/expires","type":"property","title":"let expires: Int"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/grouporder","title":"let groupOrder: MoQTSubscribe.GroupOrder","type":"property"},{"type":"property","title":"let largestGroupId: Int?","path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/largestgroupid"},{"title":"let largestObjectId: Int?","path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/largestobjectid","type":"property"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/payload","type":"property","title":"var payload: Data"},{"title":"let subscribeId: Int","path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/subscribeid","type":"property"},{"title":"let subscribeParameters: [MoQTVersionSpecificParameter]","path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/subscribeparameters","type":"property"},{"type":"property","title":"let type: MoQTMessageType","path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/type"}],"path":"\/documentation\/moqthaishinkit\/moqtsubscribeok","type":"struct"},{"type":"struct","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtversionspecificparameter\/key","type":"property","title":"let key: MoQTVersionSpecificType"},{"path":"\/documentation\/moqthaishinkit\/moqtversionspecificparameter\/value","title":"let value: (any Sendable)","type":"property"}],"title":"MoQTVersionSpecificParameter","path":"\/documentation\/moqthaishinkit\/moqtversionspecificparameter"},{"type":"groupMarker","title":"Enumerations"},{"path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype","title":"MoQTDataStreamType","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"title":"case fetchHeader","type":"case","path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/fetchheader"},{"title":"case objectDatagram","type":"case","path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/objectdatagram"},{"title":"case streamHeaderSubgroup","path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/streamheadersubgroup","type":"case"},{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init?(rawValue: Int)","path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/init(rawvalue:)"},{"title":"Default Implementations","type":"groupMarker"},{"type":"symbol","path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/equatable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}],"title":"Equatable Implementations"},{"type":"symbol","path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"title":"var hashValue: Int","type":"property","path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/hashvalue"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func hash(into: inout Hasher)","path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/hash(into:)"}]}],"type":"enum"},{"type":"enum","title":"MoQTMessageType","path":"\/documentation\/moqthaishinkit\/moqtmessagetype","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"type":"case","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/announce","title":"case announce"},{"type":"case","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/announcecancel","title":"case announceCancel"},{"title":"case announceError","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/announceerror","type":"case"},{"title":"case announceOk","type":"case","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/announceok"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/clientsetup","type":"case","title":"case clientSetup"},{"title":"case goaway","type":"case","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/goaway"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/serversetup","type":"case","title":"case serverSetup"},{"title":"case subscribe","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/subscribe","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/subscribeannounuces","type":"case","title":"case subscribeAnnounuces"},{"type":"case","title":"case subscribeAnnounucesError","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/subscribeannounuceserror"},{"title":"case subscribeAnnounucesOk","type":"case","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/subscribeannounucesok"},{"type":"case","title":"case subscribeDone","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/subscribedone"},{"title":"case subscribeError","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/subscribeerror","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/subscribeok","type":"case","title":"case subscribeOk"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/subscribeupdate","title":"case subscribeUpdate","type":"case"},{"type":"case","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/trackstatus","title":"case trackStatus"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/trackstatusrequest","type":"case","title":"case trackStatusRequest"},{"type":"case","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/unannounce","title":"case unannounce"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/unsubscribe","type":"case","title":"case unsubscribe"},{"title":"Initializers","type":"groupMarker"},{"type":"init","title":"init?(rawValue: Int)","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/init(rawvalue:)"},{"title":"Default Implementations","type":"groupMarker"},{"type":"symbol","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/!=(_:_:)","type":"op"}],"title":"Equatable Implementations"},{"title":"RawRepresentable Implementations","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/rawrepresentable-implementations","type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/hashvalue","type":"property","title":"var hashValue: Int"},{"type":"groupMarker","title":"Instance Methods"},{"title":"func hash(into: inout Hasher)","type":"method","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/hash(into:)"}]}]},{"children":[{"type":"groupMarker","title":"Enumeration Cases"},{"title":"case maxSubscribeId","path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/maxsubscribeid","type":"case"},{"title":"case path","type":"case","path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/path"},{"type":"case","title":"case role","path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/role"},{"type":"groupMarker","title":"Initializers"},{"title":"init?(rawValue: Int)","type":"init","path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/init(rawvalue:)"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}],"type":"symbol","title":"Equatable Implementations","path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/equatable-implementations"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"title":"var hashValue: Int","type":"property","path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/hashvalue"},{"type":"groupMarker","title":"Instance Methods"},{"title":"func hash(into: inout Hasher)","path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/hash(into:)","type":"method"}],"title":"RawRepresentable Implementations","type":"symbol","path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/rawrepresentable-implementations"}],"path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype","type":"enum","title":"MoQTSetupParameterType"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/pubsub","type":"case","title":"case pubSub"},{"type":"case","path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/publisher","title":"case publisher"},{"path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/subscriber","type":"case","title":"case subscriber"},{"type":"groupMarker","title":"Initializers"},{"title":"init?(rawValue: Int)","type":"init","path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/init(rawvalue:)"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/equatable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/!=(_:_:)","type":"op"}],"type":"symbol","title":"Equatable Implementations"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"type":"property","title":"var hashValue: Int","path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/hashvalue"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func hash(into: inout Hasher)","path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/hash(into:)","type":"method"}],"path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/rawrepresentable-implementations","type":"symbol","title":"RawRepresentable Implementations"}],"type":"enum","path":"\/documentation\/moqthaishinkit\/moqtsetuprole","title":"MoQTSetupRole"},{"children":[{"type":"groupMarker","title":"Enumeration Cases"},{"title":"case draft01","path":"\/documentation\/moqthaishinkit\/moqtversion\/draft01","type":"case"},{"title":"case draft02","type":"case","path":"\/documentation\/moqthaishinkit\/moqtversion\/draft02"},{"type":"case","title":"case draft03","path":"\/documentation\/moqthaishinkit\/moqtversion\/draft03"},{"title":"case draft04","path":"\/documentation\/moqthaishinkit\/moqtversion\/draft04","type":"case"},{"title":"case draft05","type":"case","path":"\/documentation\/moqthaishinkit\/moqtversion\/draft05"},{"path":"\/documentation\/moqthaishinkit\/moqtversion\/draft06","type":"case","title":"case draft06"},{"title":"case draft07","path":"\/documentation\/moqthaishinkit\/moqtversion\/draft07","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtversion\/draft07exp","title":"case draft07Exp","type":"case"},{"type":"case","path":"\/documentation\/moqthaishinkit\/moqtversion\/draft07exp2","title":"case draft07Exp2"},{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/moqthaishinkit\/moqtversion\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtversion\/equatable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/moqthaishinkit\/moqtversion\/!=(_:_:)"}],"title":"Equatable Implementations","type":"symbol"},{"path":"\/documentation\/moqthaishinkit\/moqtversion\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"type":"property","title":"var hashValue: Int","path":"\/documentation\/moqthaishinkit\/moqtversion\/hashvalue"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func hash(into: inout Hasher)","path":"\/documentation\/moqthaishinkit\/moqtversion\/hash(into:)","type":"method"}]}],"path":"\/documentation\/moqthaishinkit\/moqtversion","type":"enum","title":"MoQTVersion"},{"children":[{"type":"groupMarker","title":"Enumeration Cases"},{"title":"case authorizationInfo","type":"case","path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/authorizationinfo"},{"path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/deliverytimeout","type":"case","title":"case deliveryTimeout"},{"title":"case maxCacheDuration","type":"case","path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/maxcacheduration"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: Int)","path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/init(rawvalue:)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","type":"symbol","path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/equatable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}]},{"title":"RawRepresentable Implementations","path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/rawrepresentable-implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","type":"property","path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/hashvalue"},{"title":"Instance Methods","type":"groupMarker"},{"type":"method","path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/hash(into:)","title":"func hash(into: inout Hasher)"}],"type":"symbol"}],"path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype","type":"enum","title":"MoQTVersionSpecificType"}]},{"type":"module","path":"\/documentation\/srthaishinkit","title":"SRTHaishinKit","children":[{"title":"Classes","type":"groupMarker"},{"path":"\/documentation\/srthaishinkit\/srtconnection","children":[{"title":"Initializers","type":"groupMarker"},{"type":"init","title":"init()","path":"\/documentation\/srthaishinkit\/srtconnection\/init()"},{"title":"Instance Properties","type":"groupMarker"},{"type":"property","title":"var connected: Bool","path":"\/documentation\/srthaishinkit\/srtconnection\/connected"},{"title":"var performanceData: SRTPerformanceData?","type":"property","path":"\/documentation\/srthaishinkit\/srtconnection\/performancedata"},{"title":"var uri: URL?","type":"property","path":"\/documentation\/srthaishinkit\/srtconnection\/uri"},{"type":"groupMarker","title":"Instance Methods"},{"title":"func close() async throws","path":"\/documentation\/srthaishinkit\/srtconnection\/close()","type":"method"},{"path":"\/documentation\/srthaishinkit\/srtconnection\/open(_:mode:)","title":"func open(URL?, mode: SRTMode) async throws","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"title":"static let version: String","type":"property","path":"\/documentation\/srthaishinkit\/srtconnection\/version"},{"title":"Enumerations","type":"groupMarker"},{"title":"SRTConnection.Error","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/srthaishinkit\/srtconnection\/error\/failedtoconnect(_:reson:)","title":"case failedToConnect(String, reson: Int32)","type":"case"},{"type":"case","title":"case invalidState","path":"\/documentation\/srthaishinkit\/srtconnection\/error\/invalidstate"},{"type":"case","title":"case unsupportedUri(URL?)","path":"\/documentation\/srthaishinkit\/srtconnection\/error\/unsupporteduri(_:)"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/srthaishinkit\/srtconnection\/error\/error-implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"title":"var localizedDescription: String","path":"\/documentation\/srthaishinkit\/srtconnection\/error\/localizeddescription","type":"property"}],"title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/srthaishinkit\/srtconnection\/error","type":"enum"},{"type":"groupMarker","title":"Default Implementations"},{"title":"Actor Implementations","path":"\/documentation\/srthaishinkit\/srtconnection\/actor-implementations","type":"symbol","children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/srthaishinkit\/srtconnection\/assertisolated(_:file:line:)","type":"method","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)"},{"title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","path":"\/documentation\/srthaishinkit\/srtconnection\/assumeisolated(_:file:line:)","type":"method"},{"title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/srthaishinkit\/srtconnection\/preconditionisolated(_:file:line:)","type":"method"}]}],"title":"SRTConnection","type":"class"},{"type":"class","title":"SRTStream","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(connection: SRTConnection)","path":"\/documentation\/srthaishinkit\/srtstream\/init(connection:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/srthaishinkit\/srtstream\/audiotrackid","title":"var audioTrackId: UInt8?","type":"property"},{"type":"property","title":"var readyState: HKStreamReadyState","path":"\/documentation\/srthaishinkit\/srtstream\/readystate"},{"path":"\/documentation\/srthaishinkit\/srtstream\/videotrackid","type":"property","title":"var videoTrackId: UInt8?"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func close() async","path":"\/documentation\/srthaishinkit\/srtstream\/close()","type":"method"},{"path":"\/documentation\/srthaishinkit\/srtstream\/play(_:)","type":"method","title":"func play(String?) async"},{"type":"method","path":"\/documentation\/srthaishinkit\/srtstream\/publish(_:)","title":"func publish(String?) async"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/srthaishinkit\/srtstream\/actor-implementations","type":"symbol","children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/srthaishinkit\/srtstream\/assertisolated(_:file:line:)","type":"method","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)"},{"path":"\/documentation\/srthaishinkit\/srtstream\/assumeisolated(_:file:line:)","type":"method","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T"},{"type":"method","path":"\/documentation\/srthaishinkit\/srtstream\/preconditionisolated(_:file:line:)","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)"}],"title":"Actor Implementations"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtstream\/audiosettings","title":"var audioSettings: AudioCodecSettings"},{"path":"\/documentation\/srthaishinkit\/srtstream\/soundtransform","type":"property","title":"var soundTransform: SoundTransform?"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtstream\/videosettings","title":"var videoSettings: VideoCodecSettings"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/srthaishinkit\/srtstream\/addoutput(_:)","title":"func addOutput(some HKStreamOutput)","type":"method"},{"title":"func append(CMSampleBuffer)","path":"\/documentation\/srthaishinkit\/srtstream\/append(_:)","type":"method"},{"path":"\/documentation\/srthaishinkit\/srtstream\/append(_:when:)","title":"func append(AVAudioBuffer, when: AVAudioTime)","type":"method"},{"path":"\/documentation\/srthaishinkit\/srtstream\/attachaudioplayer(_:)","title":"func attachAudioPlayer(AudioPlayer?) async","type":"method"},{"path":"\/documentation\/srthaishinkit\/srtstream\/dispatch(_:)","type":"method","title":"func dispatch(NetworkMonitorEvent) async"},{"title":"func removeOutput(some HKStreamOutput)","path":"\/documentation\/srthaishinkit\/srtstream\/removeoutput(_:)","type":"method"},{"title":"func setAudioSettings(AudioCodecSettings)","path":"\/documentation\/srthaishinkit\/srtstream\/setaudiosettings(_:)","type":"method"},{"title":"func setBitrateStorategy((some HKStreamBitRateStrategy)?)","path":"\/documentation\/srthaishinkit\/srtstream\/setbitratestorategy(_:)","type":"method"},{"path":"\/documentation\/srthaishinkit\/srtstream\/setsoundtransform(_:)","type":"method","title":"func setSoundTransform(SoundTransform) async"},{"title":"func setVideoInputBufferCounts(Int)","path":"\/documentation\/srthaishinkit\/srtstream\/setvideoinputbuffercounts(_:)","type":"method"},{"type":"method","title":"func setVideoSettings(VideoCodecSettings)","path":"\/documentation\/srthaishinkit\/srtstream\/setvideosettings(_:)"}],"type":"symbol","path":"\/documentation\/srthaishinkit\/srtstream\/hkstream-implementations","title":"HKStream Implementations"},{"path":"\/documentation\/srthaishinkit\/srtstream\/mediamixeroutput-implementations","type":"symbol","title":"MediaMixerOutput Implementations","children":[{"type":"groupMarker","title":"Instance Methods"},{"title":"func mixer(MediaMixer, didOutput: CMSampleBuffer)","path":"\/documentation\/srthaishinkit\/srtstream\/mixer(_:didoutput:)","type":"method"},{"type":"method","title":"func mixer(MediaMixer, didOutput: AVAudioPCMBuffer, when: AVAudioTime)","path":"\/documentation\/srthaishinkit\/srtstream\/mixer(_:didoutput:when:)"},{"path":"\/documentation\/srthaishinkit\/srtstream\/selecttrack(_:mediatype:)","type":"method","title":"func selectTrack(UInt8?, mediaType: CMFormatDescription.MediaType)"}]}],"path":"\/documentation\/srthaishinkit\/srtstream"},{"type":"groupMarker","title":"Structures"},{"type":"struct","title":"SRTLogger","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var functionalAreas: Set<SRTLogFunctionalArea>","path":"\/documentation\/srthaishinkit\/srtlogger\/functionalareas","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtlogger\/level","type":"property","title":"var level: SRTLogLevel"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/srthaishinkit\/srtlogger\/shared","title":"static let shared: SRTLogger","type":"property"}],"path":"\/documentation\/srthaishinkit\/srtlogger"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/byteavailrcvbuf","title":"let byteAvailRcvBuf: Int32"},{"title":"let byteAvailSndBuf: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/byteavailsndbuf","type":"property"},{"title":"let byteMSS: Int32","type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytemss"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytercvbuf","title":"let byteRcvBuf: Int32","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytercvdrop","type":"property","title":"let byteRcvDrop: UInt64"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytercvdroptotal","title":"let byteRcvDropTotal: UInt64"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytercvloss","type":"property","title":"let byteRcvLoss: UInt64"},{"title":"let byteRcvLossTotal: UInt64","type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytercvlosstotal"},{"type":"property","title":"let byteRcvUndecrypt: UInt64","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytercvundecrypt"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytercvundecrypttotal","title":"let byteRcvUndecryptTotal: UInt64"},{"title":"let byteRecv: UInt64","type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/byterecv"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/byterecvtotal","type":"property","title":"let byteRecvTotal: UInt64"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/byteretrans","type":"property","title":"let byteRetrans: UInt64"},{"type":"property","title":"let byteRetransTotal: UInt64","path":"\/documentation\/srthaishinkit\/srtperformancedata\/byteretranstotal"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytesent","type":"property","title":"let byteSent: UInt64"},{"title":"let byteSentTotal: UInt64","type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytesenttotal"},{"title":"let byteSndBuf: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytesndbuf","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytesnddrop","title":"let byteSndDrop: UInt64","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytesnddroptotal","type":"property","title":"let byteSndDropTotal: UInt64"},{"type":"property","title":"let mbpsBandwidth: Double","path":"\/documentation\/srthaishinkit\/srtperformancedata\/mbpsbandwidth"},{"title":"let mbpsMaxBW: Double","path":"\/documentation\/srthaishinkit\/srtperformancedata\/mbpsmaxbw","type":"property"},{"title":"let mbpsRecvRate: Double","path":"\/documentation\/srthaishinkit\/srtperformancedata\/mbpsrecvrate","type":"property"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/mbpssendrate","title":"let mbpsSendRate: Double"},{"title":"let msRTT: Double","path":"\/documentation\/srthaishinkit\/srtperformancedata\/msrtt","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/msrcvbuf","title":"let msRcvBuf: Int32","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/msrcvtsbpddelay","type":"property","title":"let msRcvTsbPdDelay: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/mssndbuf","title":"let msSndBuf: Int32"},{"type":"property","title":"let msSndTsbPdDelay: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/mssndtsbpddelay"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/mstimestamp","type":"property","title":"let msTimeStamp: Int64"},{"title":"let pktCongestionWindow: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktcongestionwindow","type":"property"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktflightsize","title":"let pktFlightSize: Int32"},{"type":"property","title":"let pktFlowWindow: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktflowwindow"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvavgbelatedtime","title":"let pktRcvAvgBelatedTime: Double"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvbelated","title":"let pktRcvBelated: Int64","type":"property"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvbuf","title":"let pktRcvBuf: Int32"},{"type":"property","title":"let pktRcvDrop: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvdrop"},{"title":"let pktRcvDropTotal: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvdroptotal","type":"property"},{"title":"let pktRcvFilterExtra: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvfilterextra","type":"property"},{"title":"let pktRcvFilterExtraTotal: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvfilterextratotal","type":"property"},{"title":"let pktRcvFilterLoss: Int32","type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvfilterloss"},{"title":"let pktRcvFilterLossTotal: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvfilterlosstotal","type":"property"},{"title":"let pktRcvFilterSupply: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvfiltersupply","type":"property"},{"title":"let pktRcvFilterSupplyTotal: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvfiltersupplytotal","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvloss","type":"property","title":"let pktRcvLoss: Int32"},{"title":"let pktRcvLossTotal: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvlosstotal","type":"property"},{"title":"let pktRcvRetrans: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvretrans","type":"property"},{"type":"property","title":"let pktRcvUndecrypt: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvundecrypt"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvundecrypttotal","title":"let pktRcvUndecryptTotal: Int32"},{"title":"let pktRecv: Int64","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrecv","type":"property"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrecvack","title":"let pktRecvACK: Int32"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrecvacktotal","type":"property","title":"let pktRecvACKTotal: Int32"},{"title":"let pktRecvNAK: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrecvnak","type":"property"},{"type":"property","title":"let pktRecvNAKTotal: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrecvnaktotal"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrecvtotal","type":"property","title":"let pktRecvTotal: Int64"},{"title":"let pktReorderDistance: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktreorderdistance","type":"property"},{"title":"let pktReorderTolerance: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktreordertolerance","type":"property"},{"title":"let pktRetrans: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktretrans","type":"property"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktretranstotal","title":"let pktRetransTotal: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsent","title":"let pktSent: Int64"},{"title":"let pktSentACK: Int32","type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsentack"},{"title":"let pktSentACKTotal: Int32","type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsentacktotal"},{"title":"let pktSentNAK: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsentnak","type":"property"},{"title":"let pktSentNAKTotal: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsentnaktotal","type":"property"},{"title":"let pktSentTotal: Int64","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsenttotal","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsndbuf","type":"property","title":"let pktSndBuf: Int32"},{"type":"property","title":"let pktSndDrop: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsnddrop"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsnddroptotal","type":"property","title":"let pktSndDropTotal: Int32"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsndfilterextra","type":"property","title":"let pktSndFilterExtra: Int32"},{"type":"property","title":"let pktSndFilterExtraTotal: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsndfilterextratotal"},{"type":"property","title":"let pktSndLoss: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsndloss"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsndlosstotal","title":"let pktSndLossTotal: Int32"},{"type":"property","title":"let usPktSndPeriod: Double","path":"\/documentation\/srthaishinkit\/srtperformancedata\/uspktsndperiod"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/ussndduration","type":"property","title":"let usSndDuration: Int64"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/ussnddurationtotal","type":"property","title":"let usSndDurationTotal: Int64"}],"path":"\/documentation\/srthaishinkit\/srtperformancedata","title":"SRTPerformanceData","type":"struct"},{"type":"groupMarker","title":"Enumerations"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"type":"case","title":"case apiCtrl","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/apictrl"},{"type":"case","title":"case apiRecv","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/apirecv"},{"title":"case apiSend","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/apisend","type":"case"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/applog","type":"case","title":"case applog"},{"type":"case","title":"case bstats","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/bstats"},{"type":"case","title":"case bufRecv","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/bufrecv"},{"type":"case","title":"case bufSend","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/bufsend"},{"type":"case","title":"case chanRecv","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/chanrecv"},{"title":"case chnMgmt","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/chnmgmt","type":"case"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/chnsend","title":"case chnSend","type":"case"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/congest","title":"case congest","type":"case"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/control","type":"case","title":"case control"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/data","type":"case","title":"case data"},{"type":"case","title":"case epollApi","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/epollapi"},{"title":"case epollUpd","type":"case","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/epollupd"},{"title":"case general","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/general","type":"case"},{"type":"case","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/grpmgmt","title":"case grpMgmt"},{"title":"case grpRecv","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/grprecv","type":"case"},{"title":"case grpSend","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/grpsend","type":"case"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/haicrypt","type":"case","title":"case haicrypt"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/internal","title":"case `internal`","type":"case"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/pfilter","title":"case pfilter","type":"case"},{"title":"case queCtrl","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/quectrl","type":"case"},{"title":"case queMgmt","type":"case","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/quemgmt"},{"title":"case queRecv","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/querecv","type":"case"},{"title":"case queSend","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/quesend","type":"case"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/rsrc","type":"case","title":"case rsrc"},{"title":"case tsbpd","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/tsbpd","type":"case"},{"title":"Initializers","type":"groupMarker"},{"type":"init","title":"init?(rawValue: Int32)","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/init(rawvalue:)"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/!=(_:_:)"}],"type":"symbol","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/equatable-implementations","title":"Equatable Implementations"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/rawrepresentable-implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/hashvalue","type":"property"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/hash(into:)","title":"func hash(into: inout Hasher)"}],"title":"RawRepresentable Implementations","type":"symbol"}],"title":"SRTLogFunctionalArea","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/srthaishinkit\/srtloglevel\/crit","title":"case crit","type":"case"},{"path":"\/documentation\/srthaishinkit\/srtloglevel\/debug","title":"case debug","type":"case"},{"title":"case error","path":"\/documentation\/srthaishinkit\/srtloglevel\/error","type":"case"},{"type":"case","title":"case notice","path":"\/documentation\/srthaishinkit\/srtloglevel\/notice"},{"title":"case warning","path":"\/documentation\/srthaishinkit\/srtloglevel\/warning","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","type":"symbol","path":"\/documentation\/srthaishinkit\/srtloglevel\/equatable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/srthaishinkit\/srtloglevel\/!=(_:_:)","type":"op"}]}],"title":"SRTLogLevel","path":"\/documentation\/srthaishinkit\/srtloglevel","type":"enum"},{"type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"title":"case caller","path":"\/documentation\/srthaishinkit\/srtmode\/caller","type":"case"},{"title":"case listener","path":"\/documentation\/srthaishinkit\/srtmode\/listener","type":"case"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","path":"\/documentation\/srthaishinkit\/srtmode\/equatable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/srthaishinkit\/srtmode\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}],"title":"Equatable Implementations"}],"title":"SRTMode","path":"\/documentation\/srthaishinkit\/srtmode"}]}]},"includedArchiveIdentifiers":["Logboard","HaishinKit","MoQTHaishinKit","SRTHaishinKit"],"schemaVersion":{"minor":1,"patch":2,"major":0}}