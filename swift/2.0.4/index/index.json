{"schemaVersion":{"major":0,"patch":2,"minor":1},"interfaceLanguages":{"swift":[{"title":"Logboard","path":"\/documentation\/logboard","children":[{"title":"Classes","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init()","path":"\/documentation\/logboard\/consoleappender\/init()"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/logboard\/consoleappender\/append(_:level:format:arguments:file:function:line:)","title":"func append(LBLogger, level: LBLogger.Level, format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)","type":"method"},{"path":"\/documentation\/logboard\/consoleappender\/append(_:level:message:file:function:line:)","type":"method","title":"func append(LBLogger, level: LBLogger.Level, message: [Any], file: StaticString, function: StaticString, line: Int)"}],"path":"\/documentation\/logboard\/consoleappender","title":"ConsoleAppender","type":"class"},{"path":"\/documentation\/logboard\/lblogger","type":"class","title":"LBLogger","children":[{"title":"Structures","type":"groupMarker"},{"path":"\/documentation\/logboard\/lblogger\/data","type":"struct","title":"LBLogger.Data","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init?(Data)","path":"\/documentation\/logboard\/lblogger\/data\/init(_:)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/logboard\/lblogger\/data\/date","title":"let date: Date"},{"type":"property","path":"\/documentation\/logboard\/lblogger\/data\/file","title":"let file: String"},{"type":"property","title":"let function: String","path":"\/documentation\/logboard\/lblogger\/data\/function"},{"type":"property","title":"let identifier: String","path":"\/documentation\/logboard\/lblogger\/data\/identifier"},{"path":"\/documentation\/logboard\/lblogger\/data\/level","type":"property","title":"let level: LBLogger.Level"},{"type":"property","path":"\/documentation\/logboard\/lblogger\/data\/line","title":"let line: Int"},{"title":"let message: String","path":"\/documentation\/logboard\/lblogger\/data\/message","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var description: String","path":"\/documentation\/logboard\/lblogger\/data\/description","type":"property"}],"type":"symbol","path":"\/documentation\/logboard\/lblogger\/data\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations"}]},{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/logboard\/lblogger\/init(_:)","title":"init(String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/logboard\/lblogger\/appender","type":"property","title":"var appender: any LBLoggerAppender"},{"title":"let identifier: String","path":"\/documentation\/logboard\/lblogger\/identifier","type":"property"},{"path":"\/documentation\/logboard\/lblogger\/level-swift.property","type":"property","title":"var level: LBLogger.Level"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/logboard\/lblogger\/debug(_:file:function:line:)","title":"func debug(Any..., file: StaticString, function: StaticString, line: Int)","type":"method"},{"title":"func debug(format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/lblogger\/debug(format:arguments:file:function:line:)","type":"method"},{"type":"method","path":"\/documentation\/logboard\/lblogger\/error(_:file:function:line:)","title":"func error(Any..., file: StaticString, function: StaticString, line: Int)"},{"type":"method","path":"\/documentation\/logboard\/lblogger\/error(format:arguments:file:function:line:)","title":"func error(format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)"},{"path":"\/documentation\/logboard\/lblogger\/info(_:file:function:line:)","type":"method","title":"func info(Any..., file: StaticString, function: StaticString, line: Int)"},{"title":"func info(format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/lblogger\/info(format:arguments:file:function:line:)","type":"method"},{"path":"\/documentation\/logboard\/lblogger\/isenabledfor(level:)","type":"method","title":"func isEnabledFor(level: LBLogger.Level) -> Bool"},{"title":"func trace(Any..., file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/lblogger\/trace(_:file:function:line:)","type":"method"},{"title":"func trace(format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)","type":"method","path":"\/documentation\/logboard\/lblogger\/trace(format:arguments:file:function:line:)"},{"title":"func warn(Any..., file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/lblogger\/warn(_:file:function:line:)","type":"method"},{"path":"\/documentation\/logboard\/lblogger\/warn(format:arguments:file:function:line:)","title":"func warn(format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"type":"property","path":"\/documentation\/logboard\/lblogger\/dateformatter","title":"static var dateFormatter: DateFormatter"},{"title":"Type Methods","type":"groupMarker"},{"type":"method","path":"\/documentation\/logboard\/lblogger\/with(_:)","title":"static func with(String) -> LBLogger"},{"title":"Enumerations","type":"groupMarker"},{"path":"\/documentation\/logboard\/lblogger\/level-swift.enum","type":"enum","title":"LBLogger.Level","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"type":"case","title":"case debug","path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/debug"},{"title":"case error","path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/error","type":"case"},{"type":"case","path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/info","title":"case info"},{"title":"case trace","path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/trace","type":"case"},{"title":"case warn","path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/warn","type":"case"},{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"init?(string: String)","path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/init(string:)","type":"init"},{"type":"groupMarker","title":"Instance Properties"},{"title":"var description: String","path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/description","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"type":"symbol","path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/!=(_:_:)"}],"title":"Equatable Implementations"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"type":"property","title":"var hashValue: Int","path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/hashvalue"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/hash(into:)","type":"method","title":"func hash(into: inout Hasher)"}],"type":"symbol","path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations"}]}]},{"children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/logboard\/multiappender\/init()","type":"init","title":"init()"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var appenders: [any LBLoggerAppender]","type":"property","path":"\/documentation\/logboard\/multiappender\/appenders"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/logboard\/multiappender\/append(_:level:format:arguments:file:function:line:)","type":"method","title":"func append(LBLogger, level: LBLogger.Level, format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)"},{"path":"\/documentation\/logboard\/multiappender\/append(_:level:message:file:function:line:)","title":"func append(LBLogger, level: LBLogger.Level, message: [Any], file: StaticString, function: StaticString, line: Int)","type":"method"}],"title":"MultiAppender","type":"class","path":"\/documentation\/logboard\/multiappender"},{"type":"class","path":"\/documentation\/logboard\/nullappender","children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/logboard\/nullappender\/append(_:level:format:arguments:file:function:line:)","title":"func append(LBLogger, level: LBLogger.Level, format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)","type":"method"},{"title":"func append(LBLogger, level: LBLogger.Level, message: [Any], file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/nullappender\/append(_:level:message:file:function:line:)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/logboard\/nullappender\/shared","title":"static let shared: NullAppender","type":"property"}],"title":"NullAppender"},{"type":"class","title":"OSLoggerAppender","path":"\/documentation\/logboard\/osloggerappender","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/logboard\/osloggerappender\/init(sybsystem:category:)","title":"init(sybsystem: String, category: String)","type":"init"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/logboard\/osloggerappender\/append(_:level:format:arguments:file:function:line:)","title":"func append(LBLogger, level: LBLogger.Level, format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)","type":"method"},{"title":"func append(LBLogger, level: LBLogger.Level, message: [Any], file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/osloggerappender\/append(_:level:message:file:function:line:)","type":"method"}]},{"children":[{"type":"groupMarker","title":"Initializers"},{"title":"init()","path":"\/documentation\/logboard\/socketappender\/init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/logboard\/socketappender\/append(_:level:format:arguments:file:function:line:)","title":"func append(LBLogger, level: LBLogger.Level, format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)","type":"method"},{"path":"\/documentation\/logboard\/socketappender\/append(_:level:message:file:function:line:)","type":"method","title":"func append(LBLogger, level: LBLogger.Level, message: [Any], file: StaticString, function: StaticString, line: Int)"},{"title":"func close()","path":"\/documentation\/logboard\/socketappender\/close()","type":"method"},{"path":"\/documentation\/logboard\/socketappender\/connect(_:port:)","title":"func connect(String, port: Int)","type":"method"}],"type":"class","title":"SocketAppender","path":"\/documentation\/logboard\/socketappender"},{"title":"Protocols","type":"groupMarker"},{"title":"LBLoggerAppender","children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/logboard\/lbloggerappender\/append(_:level:format:arguments:file:function:line:)","title":"func append(LBLogger, level: LBLogger.Level, format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)","type":"method"},{"path":"\/documentation\/logboard\/lbloggerappender\/append(_:level:message:file:function:line:)","type":"method","title":"func append(LBLogger, level: LBLogger.Level, message: [Any], file: StaticString, function: StaticString, line: Int)"}],"type":"protocol","path":"\/documentation\/logboard\/lbloggerappender"}],"type":"module"},{"path":"\/documentation\/haishinkit","type":"module","children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/assetscreenobject\/chromakeycolor","title":"var chromaKeyColor: CGColor?","type":"property"},{"type":"property","title":"var isReading: Bool","path":"\/documentation\/haishinkit\/assetscreenobject\/isreading"},{"title":"var videoGravity: AVLayerVideoGravity","path":"\/documentation\/haishinkit\/assetscreenobject\/videogravity","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func cancelReading()","path":"\/documentation\/haishinkit\/assetscreenobject\/cancelreading()","type":"method"},{"type":"method","title":"func makeBounds(CGSize) -> CGRect","path":"\/documentation\/haishinkit\/assetscreenobject\/makebounds(_:)"},{"title":"func makeImage(some ScreenRenderer) -> CGImage?","path":"\/documentation\/haishinkit\/assetscreenobject\/makeimage(_:)","type":"method"},{"path":"\/documentation\/haishinkit\/assetscreenobject\/startreading(_:)","type":"method","title":"func startReading(AVAsset) throws"}],"title":"AssetScreenObject","path":"\/documentation\/haishinkit\/assetscreenobject","type":"class"},{"title":"AudioDeviceUnit","type":"class","path":"\/documentation\/haishinkit\/audiodeviceunit","children":[{"type":"groupMarker","title":"Instance Properties"},{"title":"var connection: AVCaptureConnection?","path":"\/documentation\/haishinkit\/audiodeviceunit\/connection","type":"property"},{"title":"var device: AVCaptureDevice?","path":"\/documentation\/haishinkit\/audiodeviceunit\/device","type":"property"},{"type":"property","title":"var input: AVCaptureInput?","path":"\/documentation\/haishinkit\/audiodeviceunit\/input"},{"type":"property","title":"var output: AudioDeviceUnit.Output?","path":"\/documentation\/haishinkit\/audiodeviceunit\/output-swift.property"},{"type":"property","title":"let track: UInt8","path":"\/documentation\/haishinkit\/audiodeviceunit\/track"},{"type":"groupMarker","title":"Type Aliases"},{"type":"typealias","title":"AudioDeviceUnit.Output","path":"\/documentation\/haishinkit\/audiodeviceunit\/output-swift.typealias"}]},{"path":"\/documentation\/haishinkit\/audioplayer","type":"class","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/audioplayer\/init(audioengine:)","title":"init(audioEngine: AVAudioEngine)","type":"init"},{"type":"groupMarker","title":"Default Implementations"},{"title":"Actor Implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"type":"method","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/haishinkit\/audioplayer\/assertisolated(_:file:line:)"},{"path":"\/documentation\/haishinkit\/audioplayer\/assumeisolated(_:file:line:)","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","type":"method"},{"type":"method","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/haishinkit\/audioplayer\/preconditionisolated(_:file:line:)"}],"path":"\/documentation\/haishinkit\/audioplayer\/actor-implementations","type":"symbol"}],"title":"AudioPlayer"},{"path":"\/documentation\/haishinkit\/hkincomingstream","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/hkincomingstream\/init(_:)","title":"init(some HKStream)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"type":"property","title":"var isRunning: Bool","path":"\/documentation\/haishinkit\/hkincomingstream\/isrunning"},{"type":"property","title":"var soundTransfrom: SoundTransform?","path":"\/documentation\/haishinkit\/hkincomingstream\/soundtransfrom"},{"title":"Instance Methods","type":"groupMarker"},{"type":"method","title":"func append(CMSampleBuffer)","path":"\/documentation\/haishinkit\/hkincomingstream\/append(_:)"},{"type":"method","path":"\/documentation\/haishinkit\/hkincomingstream\/append(_:when:)","title":"func append(AVAudioBuffer, when: AVAudioTime)"},{"title":"func attachAudioPlayer(AudioPlayer?) async","type":"method","path":"\/documentation\/haishinkit\/hkincomingstream\/attachaudioplayer(_:)"},{"type":"method","path":"\/documentation\/haishinkit\/hkincomingstream\/setsoundtransform(_:)","title":"func setSoundTransform(SoundTransform) async"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/haishinkit\/hkincomingstream\/actor-implementations","title":"Actor Implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/hkincomingstream\/assertisolated(_:file:line:)","type":"method","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)"},{"type":"method","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","path":"\/documentation\/haishinkit\/hkincomingstream\/assumeisolated(_:file:line:)"},{"path":"\/documentation\/haishinkit\/hkincomingstream\/preconditionisolated(_:file:line:)","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method"}],"type":"symbol"},{"path":"\/documentation\/haishinkit\/hkincomingstream\/asyncrunner-implementations","children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/hkincomingstream\/startrunning()","title":"func startRunning()","type":"method"},{"path":"\/documentation\/haishinkit\/hkincomingstream\/stoprunning()","type":"method","title":"func stopRunning()"}],"type":"symbol","title":"AsyncRunner Implementations"}],"title":"HKIncomingStream","type":"class"},{"type":"class","path":"\/documentation\/haishinkit\/hkoutgoingstream","title":"HKOutgoingStream","children":[{"type":"groupMarker","title":"Initializers"},{"title":"init()","path":"\/documentation\/haishinkit\/hkoutgoingstream\/init()","type":"init"},{"type":"groupMarker","title":"Instance Properties"},{"title":"var audioInputFormat: CMFormatDescription?","path":"\/documentation\/haishinkit\/hkoutgoingstream\/audioinputformat","type":"property"},{"type":"property","path":"\/documentation\/haishinkit\/hkoutgoingstream\/audiooutputstream","title":"var audioOutputStream: AsyncStream<(AVAudioBuffer, AVAudioTime)>"},{"path":"\/documentation\/haishinkit\/hkoutgoingstream\/audiosettings","title":"var audioSettings: AudioCodecSettings","type":"property"},{"type":"property","path":"\/documentation\/haishinkit\/hkoutgoingstream\/isrunning","title":"var isRunning: Bool"},{"title":"var videoInputBufferCounts: Int","path":"\/documentation\/haishinkit\/hkoutgoingstream\/videoinputbuffercounts","type":"property"},{"title":"var videoInputFormat: CMFormatDescription?","path":"\/documentation\/haishinkit\/hkoutgoingstream\/videoinputformat","type":"property"},{"type":"property","title":"var videoInputStream: AsyncStream<CMSampleBuffer>","path":"\/documentation\/haishinkit\/hkoutgoingstream\/videoinputstream"},{"path":"\/documentation\/haishinkit\/hkoutgoingstream\/videooutputstream","type":"property","title":"var videoOutputStream: AsyncStream<CMSampleBuffer>"},{"title":"var videoSettings: VideoCodecSettings","path":"\/documentation\/haishinkit\/hkoutgoingstream\/videosettings","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"type":"method","title":"func append(CMSampleBuffer)","path":"\/documentation\/haishinkit\/hkoutgoingstream\/append(_:)"},{"type":"method","title":"func append(AVAudioBuffer, when: AVAudioTime)","path":"\/documentation\/haishinkit\/hkoutgoingstream\/append(_:when:)"},{"title":"func append(video: CMSampleBuffer)","path":"\/documentation\/haishinkit\/hkoutgoingstream\/append(video:)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Runner Implementations","path":"\/documentation\/haishinkit\/hkoutgoingstream\/runner-implementations","type":"symbol","children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/hkoutgoingstream\/startrunning()","type":"method","title":"func startRunning()"},{"type":"method","path":"\/documentation\/haishinkit\/hkoutgoingstream\/stoprunning()","title":"func stopRunning()"}]}]},{"path":"\/documentation\/haishinkit\/hkstreamrecorder","title":"HKStreamRecorder","type":"class","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init()","type":"init","path":"\/documentation\/haishinkit\/hkstreamrecorder\/init()"},{"title":"Instance Properties","type":"groupMarker"},{"type":"property","title":"var audioTrackId: UInt8?","path":"\/documentation\/haishinkit\/hkstreamrecorder\/audiotrackid"},{"type":"property","path":"\/documentation\/haishinkit\/hkstreamrecorder\/isrecording","title":"var isRecording: Bool"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/moviefragmentinterval","type":"property","title":"var movieFragmentInterval: Double?"},{"title":"var moviesDirectory: URL","path":"\/documentation\/haishinkit\/hkstreamrecorder\/moviesdirectory","type":"property"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/outputurl","title":"var outputURL: URL?","type":"property"},{"type":"property","title":"var settings: [AVMediaType : [String : any Sendable]]","path":"\/documentation\/haishinkit\/hkstreamrecorder\/settings"},{"type":"property","title":"var videoTrackId: UInt8?","path":"\/documentation\/haishinkit\/hkstreamrecorder\/videotrackid"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func selectTrack(UInt8?, mediaType: CMFormatDescription.MediaType)","path":"\/documentation\/haishinkit\/hkstreamrecorder\/selecttrack(_:mediatype:)","type":"method"},{"title":"func setMovieFragmentInterval(Double?)","path":"\/documentation\/haishinkit\/hkstreamrecorder\/setmoviefragmentinterval(_:)","type":"method"},{"type":"method","path":"\/documentation\/haishinkit\/hkstreamrecorder\/setmoviefragmentinterval(moviefragmentinterval:)","title":"func setMovieFragmentInterval(movieFragmentInterval: Double?)"},{"type":"method","path":"\/documentation\/haishinkit\/hkstreamrecorder\/startrecording(_:settings:)","title":"func startRecording(URL?, settings: [AVMediaType : [String : any Sendable]]) async throws"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/stoprecording()","type":"method","title":"func stopRecording() async throws -> URL"},{"type":"groupMarker","title":"Type Properties"},{"title":"static let defaultSettings: [AVMediaType : [String : any Sendable]]","type":"property","path":"\/documentation\/haishinkit\/hkstreamrecorder\/defaultsettings"},{"type":"groupMarker","title":"Enumerations"},{"type":"enum","title":"HKStreamRecorder.Error","path":"\/documentation\/haishinkit\/hkstreamrecorder\/error","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","path":"\/documentation\/haishinkit\/hkstreamrecorder\/error\/failedtoappend(error:)","title":"case failedToAppend(error: (any Error)?)"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/error\/failedtocreateassetwriter(error:)","type":"case","title":"case failedToCreateAssetWriter(error: any Error)"},{"title":"case failedToCreateAssetWriterInput(error: any Error)","path":"\/documentation\/haishinkit\/hkstreamrecorder\/error\/failedtocreateassetwriterinput(error:)","type":"case"},{"type":"case","path":"\/documentation\/haishinkit\/hkstreamrecorder\/error\/failedtofinishwriting(error:)","title":"case failedToFinishWriting(error: (any Error)?)"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/error\/filealreadyexists(outputurl:)","type":"case","title":"case fileAlreadyExists(outputURL: URL)"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/error\/invalidstate","type":"case","title":"case invalidState"},{"title":"case notSupportedFileType(pathExtension: String)","path":"\/documentation\/haishinkit\/hkstreamrecorder\/error\/notsupportedfiletype(pathextension:)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var localizedDescription: String","path":"\/documentation\/haishinkit\/hkstreamrecorder\/error\/localizeddescription","type":"property"}],"type":"symbol","path":"\/documentation\/haishinkit\/hkstreamrecorder\/error\/error-implementations","title":"Error Implementations"}]},{"type":"groupMarker","title":"Default Implementations"},{"title":"Actor Implementations","path":"\/documentation\/haishinkit\/hkstreamrecorder\/actor-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Methods"},{"title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method","path":"\/documentation\/haishinkit\/hkstreamrecorder\/assertisolated(_:file:line:)"},{"title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","path":"\/documentation\/haishinkit\/hkstreamrecorder\/assumeisolated(_:file:line:)","type":"method"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/preconditionisolated(_:file:line:)","type":"method","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)"}]},{"type":"symbol","path":"\/documentation\/haishinkit\/hkstreamrecorder\/hkstreamoutput-implementations","children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/stream(_:didoutput:)","title":"func stream(some HKStream, didOutput: CMSampleBuffer)","type":"method"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/stream(_:didoutput:when:)","title":"func stream(some HKStream, didOutput: AVAudioBuffer, when: AVAudioTime)","type":"method"}],"title":"HKStreamOutput Implementations"},{"children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/haishinkit\/hkstreamrecorder\/mixer(_:didoutput:)","title":"func mixer(MediaMixer, didOutput: CMSampleBuffer)"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/mixer(_:didoutput:when:)","type":"method","title":"func mixer(MediaMixer, didOutput: AVAudioPCMBuffer, when: AVAudioTime)"}],"title":"MediaMixerOutput Implementations","type":"symbol","path":"\/documentation\/haishinkit\/hkstreamrecorder\/mediamixeroutput-implementations"}]},{"type":"class","title":"HKStreamVideoAdaptiveBitRateStrategy","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/hkstreamvideoadaptivebitratestrategy\/init(mamimumvideobitrate:)","title":"init(mamimumVideoBitrate: Int)","type":"init"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"let mamimumAudioBitRate: Int","path":"\/documentation\/haishinkit\/hkstreamvideoadaptivebitratestrategy\/mamimumaudiobitrate"},{"path":"\/documentation\/haishinkit\/hkstreamvideoadaptivebitratestrategy\/mamimumvideobitrate","type":"property","title":"let mamimumVideoBitRate: Int"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/hkstreamvideoadaptivebitratestrategy\/adjustbitrate(_:stream:)","type":"method","title":"func adjustBitrate(NetworkMonitorEvent, stream: some HKStream) async"},{"title":"Type Properties","type":"groupMarker"},{"title":"static let statusCountsThreshold: Int","type":"property","path":"\/documentation\/haishinkit\/hkstreamvideoadaptivebitratestrategy\/statuscountsthreshold"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/haishinkit\/hkstreamvideoadaptivebitratestrategy\/actor-implementations","title":"Actor Implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"type":"method","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/haishinkit\/hkstreamvideoadaptivebitratestrategy\/assertisolated(_:file:line:)"},{"title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","path":"\/documentation\/haishinkit\/hkstreamvideoadaptivebitratestrategy\/assumeisolated(_:file:line:)","type":"method"},{"type":"method","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/haishinkit\/hkstreamvideoadaptivebitratestrategy\/preconditionisolated(_:file:line:)"}],"type":"symbol"}],"path":"\/documentation\/haishinkit\/hkstreamvideoadaptivebitratestrategy"},{"path":"\/documentation\/haishinkit\/imagescreenobject","type":"class","title":"ImageScreenObject","children":[{"title":"Instance Properties","type":"groupMarker"},{"type":"property","title":"var cgImage: CGImage?","path":"\/documentation\/haishinkit\/imagescreenobject\/cgimage"},{"title":"Instance Methods","type":"groupMarker"},{"type":"method","title":"func makeBounds(CGSize) -> CGRect","path":"\/documentation\/haishinkit\/imagescreenobject\/makebounds(_:)"},{"type":"method","path":"\/documentation\/haishinkit\/imagescreenobject\/makeimage(_:)","title":"func makeImage(some ScreenRenderer) -> CGImage?"}]},{"type":"class","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/haishinkit\/mthkview\/init(coder:)","title":"init(coder: NSCoder)","type":"init"},{"path":"\/documentation\/haishinkit\/mthkview\/init(frame:)","title":"init(frame: CGRect)","type":"init"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var audioTrackId: UInt8?","path":"\/documentation\/haishinkit\/mthkview\/audiotrackid"},{"type":"property","title":"var videoGravity: AVLayerVideoGravity","path":"\/documentation\/haishinkit\/mthkview\/videogravity"},{"title":"var videoTrackId: UInt8?","type":"property","path":"\/documentation\/haishinkit\/mthkview\/videotrackid"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func awakeFromNib()","path":"\/documentation\/haishinkit\/mthkview\/awakefromnib()"},{"type":"method","title":"func draw(CGRect)","path":"\/documentation\/haishinkit\/mthkview\/draw(_:)"},{"type":"method","title":"func registerVideoEffect(some VideoEffect) -> Bool","path":"\/documentation\/haishinkit\/mthkview\/registervideoeffect(_:)"},{"type":"method","title":"func unregisterVideoEffect(some VideoEffect) -> Bool","path":"\/documentation\/haishinkit\/mthkview\/unregistervideoeffect(_:)"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func stream(some HKStream, didOutput: CMSampleBuffer)","type":"method","path":"\/documentation\/haishinkit\/mthkview\/stream(_:didoutput:)"},{"path":"\/documentation\/haishinkit\/mthkview\/stream(_:didoutput:when:)","type":"method","title":"func stream(some HKStream, didOutput: AVAudioBuffer, when: AVAudioTime)"}],"title":"HKStreamOutput Implementations","path":"\/documentation\/haishinkit\/mthkview\/hkstreamoutput-implementations","type":"symbol"},{"title":"MediaMixerOutput Implementations","path":"\/documentation\/haishinkit\/mthkview\/mediamixeroutput-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Methods"},{"title":"func mixer(MediaMixer, didOutput: CMSampleBuffer)","path":"\/documentation\/haishinkit\/mthkview\/mixer(_:didoutput:)","type":"method"},{"title":"func mixer(MediaMixer, didOutput: AVAudioPCMBuffer, when: AVAudioTime)","path":"\/documentation\/haishinkit\/mthkview\/mixer(_:didoutput:when:)","type":"method"},{"type":"method","path":"\/documentation\/haishinkit\/mthkview\/selecttrack(_:mediatype:)","title":"func selectTrack(UInt8?, mediaType: CMFormatDescription.MediaType) async"}]}],"path":"\/documentation\/haishinkit\/mthkview","title":"MTHKView"},{"title":"MediaMixer","children":[{"title":"Initializers","type":"groupMarker"},{"type":"init","title":"init(multiTrackAudioMixingEnabled: Bool, useManualCapture: Bool)","path":"\/documentation\/haishinkit\/mediamixer\/init(multitrackaudiomixingenabled:usemanualcapture:)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var audioInputFormats: [UInt8 : AVAudioFormat]","path":"\/documentation\/haishinkit\/mediamixer\/audioinputformats"},{"path":"\/documentation\/haishinkit\/mediamixer\/audiomixersettings","title":"var audioMixerSettings: AudioMixerSettings","type":"property"},{"title":"var frameRate: Float64","type":"property","path":"\/documentation\/haishinkit\/mediamixer\/framerate"},{"title":"var isCapturing: Bool","type":"property","path":"\/documentation\/haishinkit\/mediamixer\/iscapturing"},{"title":"var isInterputted: AsyncStream<Bool>","path":"\/documentation\/haishinkit\/mediamixer\/isinterputted","type":"property"},{"type":"property","title":"var isMonitoringEnabled: Bool","path":"\/documentation\/haishinkit\/mediamixer\/ismonitoringenabled"},{"path":"\/documentation\/haishinkit\/mediamixer\/ismultitrackaudiomixingenabled","type":"property","title":"var isMultiTrackAudioMixingEnabled: Bool"},{"type":"property","title":"var isRunning: Bool","path":"\/documentation\/haishinkit\/mediamixer\/isrunning"},{"title":"var isTorchEnabled: Bool","path":"\/documentation\/haishinkit\/mediamixer\/istorchenabled","type":"property"},{"path":"\/documentation\/haishinkit\/mediamixer\/screen","type":"property","title":"var screen: Screen"},{"type":"property","title":"var sessionPreset: AVCaptureSession.Preset","path":"\/documentation\/haishinkit\/mediamixer\/sessionpreset"},{"path":"\/documentation\/haishinkit\/mediamixer\/videoinputformats","type":"property","title":"var videoInputFormats: [UInt8 : CMFormatDescription]"},{"path":"\/documentation\/haishinkit\/mediamixer\/videomixersettings","title":"var videoMixerSettings: VideoMixerSettings","type":"property"},{"title":"var videoOrientation: AVCaptureVideoOrientation","type":"property","path":"\/documentation\/haishinkit\/mediamixer\/videoorientation"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/mediamixer\/addoutput(_:)","title":"func addOutput(some MediaMixerOutput)","type":"method"},{"type":"method","title":"func append(CMSampleBuffer, track: UInt8)","path":"\/documentation\/haishinkit\/mediamixer\/append(_:track:)"},{"title":"func append(AVAudioBuffer, when: AVAudioTime, track: UInt8)","type":"method","path":"\/documentation\/haishinkit\/mediamixer\/append(_:when:track:)"},{"path":"\/documentation\/haishinkit\/mediamixer\/attachaudio(_:track:configuration:)","type":"method","title":"func attachAudio(AVCaptureDevice?, track: UInt8, configuration: AudioDeviceConfigurationBlock?) async throws"},{"path":"\/documentation\/haishinkit\/mediamixer\/attachvideo(_:track:configuration:)","type":"method","title":"func attachVideo(AVCaptureDevice?, track: UInt8, configuration: VideoDeviceConfigurationBlock?) async throws"},{"type":"method","title":"func configuration((AVCaptureSession) throws -> Void) rethrows","path":"\/documentation\/haishinkit\/mediamixer\/configuration(_:)"},{"path":"\/documentation\/haishinkit\/mediamixer\/configuration(audio:configuration:)","type":"method","title":"func configuration(audio: UInt8, configuration: (AudioDeviceUnit) throws -> Void) throws"},{"title":"func configuration(video: UInt8, configuration: (VideoDeviceUnit) throws -> Void) throws","path":"\/documentation\/haishinkit\/mediamixer\/configuration(video:configuration:)","type":"method"},{"type":"method","path":"\/documentation\/haishinkit\/mediamixer\/removeoutput(_:)","title":"func removeOutput(some MediaMixerOutput)"},{"title":"func setAudioMixerSettings(AudioMixerSettings)","type":"method","path":"\/documentation\/haishinkit\/mediamixer\/setaudiomixersettings(_:)"},{"title":"func setFrameRate(Float64)","type":"method","path":"\/documentation\/haishinkit\/mediamixer\/setframerate(_:)"},{"title":"func setMonitoringEnabled(Bool)","path":"\/documentation\/haishinkit\/mediamixer\/setmonitoringenabled(_:)","type":"method"},{"title":"func setSessionPreset(AVCaptureSession.Preset)","path":"\/documentation\/haishinkit\/mediamixer\/setsessionpreset(_:)","type":"method"},{"path":"\/documentation\/haishinkit\/mediamixer\/settorchenabled(_:)","title":"func setTorchEnabled(Bool)","type":"method"},{"path":"\/documentation\/haishinkit\/mediamixer\/setvideomixersettings(_:)","title":"func setVideoMixerSettings(VideoMixerSettings)","type":"method"},{"path":"\/documentation\/haishinkit\/mediamixer\/setvideoorientation(_:)","type":"method","title":"func setVideoOrientation(AVCaptureVideoOrientation)"},{"path":"\/documentation\/haishinkit\/mediamixer\/startcapturing()","title":"func startCapturing()","type":"method"},{"type":"method","title":"func stopCapturing()","path":"\/documentation\/haishinkit\/mediamixer\/stopcapturing()"},{"type":"groupMarker","title":"Enumerations"},{"type":"enum","title":"MediaMixer.Error","path":"\/documentation\/haishinkit\/mediamixer\/error","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"title":"case deviceNotFound","type":"case","path":"\/documentation\/haishinkit\/mediamixer\/error\/devicenotfound"},{"path":"\/documentation\/haishinkit\/mediamixer\/error\/failedtoattach(_:)","title":"case failedToAttach(any Error)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/mediamixer\/error\/error-implementations","type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/mediamixer\/error\/localizeddescription","type":"property","title":"var localizedDescription: String"}],"title":"Error Implementations"}]},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"type":"method","path":"\/documentation\/haishinkit\/mediamixer\/assertisolated(_:file:line:)","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)"},{"path":"\/documentation\/haishinkit\/mediamixer\/assumeisolated(_:file:line:)","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","type":"method"},{"title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/haishinkit\/mediamixer\/preconditionisolated(_:file:line:)","type":"method"}],"path":"\/documentation\/haishinkit\/mediamixer\/actor-implementations","type":"symbol","title":"Actor Implementations"},{"title":"AsyncRunner Implementations","path":"\/documentation\/haishinkit\/mediamixer\/asyncrunner-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/mediamixer\/startrunning()","type":"method","title":"func startRunning()"},{"title":"func stopRunning()","path":"\/documentation\/haishinkit\/mediamixer\/stoprunning()","type":"method"}]}],"path":"\/documentation\/haishinkit\/mediamixer","type":"class"},{"path":"\/documentation\/haishinkit\/networkmonitor","type":"class","children":[{"type":"groupMarker","title":"Initializers"},{"title":"init(some NetworkTransportReporter)","path":"\/documentation\/haishinkit\/networkmonitor\/init(_:)","type":"init"},{"type":"groupMarker","title":"Instance Properties"},{"title":"var event: AsyncStream<NetworkMonitorEvent>","path":"\/documentation\/haishinkit\/networkmonitor\/event","type":"property"},{"type":"property","path":"\/documentation\/haishinkit\/networkmonitor\/isrunning","title":"var isRunning: Bool"},{"type":"groupMarker","title":"Enumerations"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"type":"case","title":"case invalidState","path":"\/documentation\/haishinkit\/networkmonitor\/error\/invalidstate"},{"title":"Default Implementations","type":"groupMarker"},{"type":"symbol","title":"Equatable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/haishinkit\/networkmonitor\/error\/!=(_:_:)"}],"path":"\/documentation\/haishinkit\/networkmonitor\/error\/equatable-implementations"},{"path":"\/documentation\/haishinkit\/networkmonitor\/error\/error-implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/networkmonitor\/error\/localizeddescription","type":"property","title":"var localizedDescription: String"}],"type":"symbol","title":"Error Implementations"}],"path":"\/documentation\/haishinkit\/networkmonitor\/error","type":"enum","title":"NetworkMonitor.Error"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Actor Implementations","path":"\/documentation\/haishinkit\/networkmonitor\/actor-implementations","type":"symbol","children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/networkmonitor\/assertisolated(_:file:line:)","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method"},{"path":"\/documentation\/haishinkit\/networkmonitor\/assumeisolated(_:file:line:)","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","type":"method"},{"title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/haishinkit\/networkmonitor\/preconditionisolated(_:file:line:)","type":"method"}]},{"type":"symbol","title":"AsyncRunner Implementations","path":"\/documentation\/haishinkit\/networkmonitor\/asyncrunner-implementations","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func startRunning()","path":"\/documentation\/haishinkit\/networkmonitor\/startrunning()"},{"type":"method","path":"\/documentation\/haishinkit\/networkmonitor\/stoprunning()","title":"func stopRunning()"}]}],"title":"NetworkMonitor"},{"children":[{"type":"groupMarker","title":"Initializers"},{"title":"init?(coder: NSCoder)","type":"init","path":"\/documentation\/haishinkit\/piphkview\/init(coder:)"},{"type":"init","title":"init(frame: CGRect)","path":"\/documentation\/haishinkit\/piphkview\/init(frame:)"},{"type":"groupMarker","title":"Instance Properties"},{"title":"var audioTrackId: UInt8?","path":"\/documentation\/haishinkit\/piphkview\/audiotrackid","type":"property"},{"type":"property","title":"var videoGravity: AVLayerVideoGravity","path":"\/documentation\/haishinkit\/piphkview\/videogravity"},{"title":"var videoTrackId: UInt8?","path":"\/documentation\/haishinkit\/piphkview\/videotrackid","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func awakeFromNib()","type":"method","path":"\/documentation\/haishinkit\/piphkview\/awakefromnib()"},{"type":"groupMarker","title":"Type Properties"},{"path":"\/documentation\/haishinkit\/piphkview\/defaultbackgroundcolor","title":"static var defaultBackgroundColor: NSColor","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/piphkview\/hkstreamoutput-implementations","children":[{"type":"groupMarker","title":"Instance Methods"},{"title":"func stream(some HKStream, didOutput: CMSampleBuffer)","path":"\/documentation\/haishinkit\/piphkview\/stream(_:didoutput:)","type":"method"},{"title":"func stream(some HKStream, didOutput: AVAudioBuffer, when: AVAudioTime)","type":"method","path":"\/documentation\/haishinkit\/piphkview\/stream(_:didoutput:when:)"}],"type":"symbol","title":"HKStreamOutput Implementations"},{"path":"\/documentation\/haishinkit\/piphkview\/mediamixeroutput-implementations","title":"MediaMixerOutput Implementations","type":"symbol","children":[{"title":"Instance Methods","type":"groupMarker"},{"type":"method","title":"func mixer(MediaMixer, didOutput: CMSampleBuffer)","path":"\/documentation\/haishinkit\/piphkview\/mixer(_:didoutput:)"},{"title":"func mixer(MediaMixer, didOutput: AVAudioPCMBuffer, when: AVAudioTime)","path":"\/documentation\/haishinkit\/piphkview\/mixer(_:didoutput:when:)","type":"method"},{"title":"func selectTrack(UInt8?, mediaType: CMFormatDescription.MediaType) async","path":"\/documentation\/haishinkit\/piphkview\/selecttrack(_:mediatype:)","type":"method"}]}],"type":"class","title":"PiPHKView","path":"\/documentation\/haishinkit\/piphkview"},{"path":"\/documentation\/haishinkit\/rtmpconnection","title":"RTMPConnection","type":"class","children":[{"type":"groupMarker","title":"Initializers"},{"title":"init(swfUrl: String?, pageUrl: String?, flashVer: String, timeout: Int, requestTimeout: UInt64, chunkSize: Int, qualityOfService: DispatchQoS)","path":"\/documentation\/haishinkit\/rtmpconnection\/init(swfurl:pageurl:flashver:timeout:requesttimeout:chunksize:qualityofservice:)","type":"init"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/chunksize","title":"let chunkSize: Int","type":"property"},{"title":"var connected: Bool","path":"\/documentation\/haishinkit\/rtmpconnection\/connected","type":"property"},{"title":"let flashVer: String","path":"\/documentation\/haishinkit\/rtmpconnection\/flashver","type":"property"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/objectencoding","type":"property","title":"let objectEncoding: RTMPObjectEncoding"},{"type":"property","title":"let pageUrl: String?","path":"\/documentation\/haishinkit\/rtmpconnection\/pageurl"},{"type":"property","title":"let qualityOfService: DispatchQoS","path":"\/documentation\/haishinkit\/rtmpconnection\/qualityofservice"},{"title":"let requestTimeout: UInt64","type":"property","path":"\/documentation\/haishinkit\/rtmpconnection\/requesttimeout"},{"type":"property","title":"var status: AsyncStream<RTMPStatus>","path":"\/documentation\/haishinkit\/rtmpconnection\/status"},{"title":"let swfUrl: String?","path":"\/documentation\/haishinkit\/rtmpconnection\/swfurl","type":"property"},{"title":"let timeout: Int","path":"\/documentation\/haishinkit\/rtmpconnection\/timeout","type":"property"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/uri","title":"var uri: URL?","type":"property"},{"type":"groupMarker","title":"Instance Methods"},{"title":"func call(String, arguments: (any Sendable)?...) async throws -> RTMPResponse","type":"method","path":"\/documentation\/haishinkit\/rtmpconnection\/call(_:arguments:)"},{"title":"func close() async throws","type":"method","path":"\/documentation\/haishinkit\/rtmpconnection\/close()"},{"type":"method","title":"func connect(String, arguments: (any Sendable)?...) async throws -> RTMPResponse","path":"\/documentation\/haishinkit\/rtmpconnection\/connect(_:arguments:)"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/defaultcapabilities","title":"static let defaultCapabilities: Int","type":"property"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/defaultchunksizes","type":"property","title":"static let defaultChunkSizeS: Int"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/defaultflashver","title":"static let defaultFlashVer: String","type":"property"},{"type":"property","path":"\/documentation\/haishinkit\/rtmpconnection\/defaultobjectencoding","title":"static let defaultObjectEncoding: RTMPObjectEncoding"},{"title":"static let defaultPort: Int","path":"\/documentation\/haishinkit\/rtmpconnection\/defaultport","type":"property"},{"type":"property","title":"static let defaultRequestTimeout: UInt64","path":"\/documentation\/haishinkit\/rtmpconnection\/defaultrequesttimeout"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/defaultsecureport","title":"static let defaultSecurePort: Int","type":"property"},{"title":"static let defaultTimeout: Int","type":"property","path":"\/documentation\/haishinkit\/rtmpconnection\/defaulttimeout"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/defaultwindowsizes","type":"property","title":"static let defaultWindowSizeS: Int64"},{"type":"property","title":"static let supportedFourCcList: [String]","path":"\/documentation\/haishinkit\/rtmpconnection\/supportedfourcclist"},{"type":"property","title":"static let supportedProtocols: Set<String>","path":"\/documentation\/haishinkit\/rtmpconnection\/supportedprotocols"},{"title":"Enumerations","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/code","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","title":"case callBadVersion","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/callbadversion"},{"title":"case callFailed","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/callfailed","type":"case"},{"title":"case callProhibited","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/callprohibited","type":"case"},{"type":"case","title":"case connectAppshutdown","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/connectappshutdown"},{"type":"case","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/connectclosed","title":"case connectClosed"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/code\/connectfailed","title":"case connectFailed","type":"case"},{"title":"case connectIdleTimeOut","type":"case","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/connectidletimeout"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/code\/connectinvalidapp","title":"case connectInvalidApp","type":"case"},{"title":"case connectNetworkChange","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/connectnetworkchange","type":"case"},{"title":"case connectRejected","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/connectrejected","type":"case"},{"title":"case connectSuccess","type":"case","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/connectsuccess"},{"title":"Initializers","type":"groupMarker"},{"type":"init","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/init(rawvalue:)","title":"init?(rawValue: String)"},{"type":"groupMarker","title":"Instance Properties"},{"title":"var level: String","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/level","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"type":"symbol","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/equatable-implementations","title":"Equatable Implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/!=(_:_:)"}]},{"path":"\/documentation\/haishinkit\/rtmpconnection\/code\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Properties"},{"title":"var hashValue: Int","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/hashvalue","type":"property"},{"type":"groupMarker","title":"Instance Methods"},{"title":"func hash(into: inout Hasher)","type":"method","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/hash(into:)"}]}],"title":"RTMPConnection.Code","type":"enum"},{"type":"enum","path":"\/documentation\/haishinkit\/rtmpconnection\/error","title":"RTMPConnection.Error","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","title":"case connectionTimedOut","path":"\/documentation\/haishinkit\/rtmpconnection\/error\/connectiontimedout"},{"type":"case","path":"\/documentation\/haishinkit\/rtmpconnection\/error\/invalidstate","title":"case invalidState"},{"title":"case requestFailed(response: RTMPResponse)","path":"\/documentation\/haishinkit\/rtmpconnection\/error\/requestfailed(response:)","type":"case"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/error\/requesttimedout","type":"case","title":"case requestTimedOut"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/error\/socketerroroccurred(_:)","type":"case","title":"case socketErrorOccurred(any Error)"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/error\/unsupportedcommand(_:)","type":"case","title":"case unsupportedCommand(String)"},{"title":"Default Implementations","type":"groupMarker"},{"type":"symbol","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/error\/localizeddescription","type":"property","title":"var localizedDescription: String"}],"title":"Error Implementations","path":"\/documentation\/haishinkit\/rtmpconnection\/error\/error-implementations"}]},{"title":"Default Implementations","type":"groupMarker"},{"title":"Actor Implementations","type":"symbol","path":"\/documentation\/haishinkit\/rtmpconnection\/actor-implementations","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/haishinkit\/rtmpconnection\/assertisolated(_:file:line:)"},{"title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","path":"\/documentation\/haishinkit\/rtmpconnection\/assumeisolated(_:file:line:)","type":"method"},{"title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method","path":"\/documentation\/haishinkit\/rtmpconnection\/preconditionisolated(_:file:line:)"}]}]},{"path":"\/documentation\/haishinkit\/rtmpsharedobject","children":[{"type":"groupMarker","title":"Instance Properties"},{"title":"var data: AMFObject","path":"\/documentation\/haishinkit\/rtmpsharedobject\/data","type":"property"},{"title":"let objectEncoding: RTMPObjectEncoding","path":"\/documentation\/haishinkit\/rtmpsharedobject\/objectencoding","type":"property"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/rtmpsharedobject\/clear()","title":"func clear() async","type":"method"},{"type":"method","title":"func close() async","path":"\/documentation\/haishinkit\/rtmpsharedobject\/close()"},{"type":"method","title":"func connect(RTMPConnection) async","path":"\/documentation\/haishinkit\/rtmpsharedobject\/connect(_:)"},{"path":"\/documentation\/haishinkit\/rtmpsharedobject\/setproperty(_:_:)","type":"method","title":"func setProperty(String, (any Sendable)?) async"},{"title":"Type Methods","type":"groupMarker"},{"type":"method","title":"static func getRemote(withName: String, remotePath: String, persistence: Bool) -> RTMPSharedObject","path":"\/documentation\/haishinkit\/rtmpsharedobject\/getremote(withname:remotepath:persistence:)"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method","path":"\/documentation\/haishinkit\/rtmpsharedobject\/assertisolated(_:file:line:)"},{"path":"\/documentation\/haishinkit\/rtmpsharedobject\/assumeisolated(_:file:line:)","type":"method","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T"},{"type":"method","path":"\/documentation\/haishinkit\/rtmpsharedobject\/preconditionisolated(_:file:line:)","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)"}],"path":"\/documentation\/haishinkit\/rtmpsharedobject\/actor-implementations","title":"Actor Implementations","type":"symbol"}],"type":"class","title":"RTMPSharedObject"},{"children":[{"type":"groupMarker","title":"Initializers"},{"title":"init(connection: RTMPConnection, fcPublishName: String?)","path":"\/documentation\/haishinkit\/rtmpstream\/init(connection:fcpublishname:)","type":"init"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/rtmpstream\/audiosampleaccess","type":"property","title":"var audioSampleAccess: Bool"},{"path":"\/documentation\/haishinkit\/rtmpstream\/audiotrackid","type":"property","title":"var audioTrackId: UInt8?"},{"title":"var currentFPS: UInt16","path":"\/documentation\/haishinkit\/rtmpstream\/currentfps","type":"property"},{"title":"var fcPublishName: String?","path":"\/documentation\/haishinkit\/rtmpstream\/fcpublishname","type":"property"},{"type":"property","title":"var info: RTMPStreamInfo","path":"\/documentation\/haishinkit\/rtmpstream\/info"},{"path":"\/documentation\/haishinkit\/rtmpstream\/metadata","type":"property","title":"var metadata: AMFArray"},{"path":"\/documentation\/haishinkit\/rtmpstream\/objectencoding","type":"property","title":"var objectEncoding: RTMPObjectEncoding"},{"path":"\/documentation\/haishinkit\/rtmpstream\/readystate","type":"property","title":"var readyState: HKStreamReadyState"},{"title":"var status: AsyncStream<RTMPStatus>","path":"\/documentation\/haishinkit\/rtmpstream\/status","type":"property"},{"title":"var videoSampleAccess: Bool","type":"property","path":"\/documentation\/haishinkit\/rtmpstream\/videosampleaccess"},{"type":"property","path":"\/documentation\/haishinkit\/rtmpstream\/videotrackid","title":"var videoTrackId: UInt8?"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func close() async throws -> RTMPResponse","path":"\/documentation\/haishinkit\/rtmpstream\/close()","type":"method"},{"title":"func pause(Bool) async throws -> RTMPResponse","path":"\/documentation\/haishinkit\/rtmpstream\/pause(_:)","type":"method"},{"title":"func play((any Sendable)?...) async throws -> RTMPResponse","path":"\/documentation\/haishinkit\/rtmpstream\/play(_:)","type":"method"},{"path":"\/documentation\/haishinkit\/rtmpstream\/publish(_:type:)","type":"method","title":"func publish(String?, type: RTMPStream.HowToPublish) async throws -> RTMPResponse"},{"title":"func receiveAudio(Bool) async throws","path":"\/documentation\/haishinkit\/rtmpstream\/receiveaudio(_:)","type":"method"},{"title":"func receiveVideo(Bool) async throws","path":"\/documentation\/haishinkit\/rtmpstream\/receivevideo(_:)","type":"method"},{"path":"\/documentation\/haishinkit\/rtmpstream\/seek(_:)","type":"method","title":"func seek(Double) async throws"},{"type":"method","path":"\/documentation\/haishinkit\/rtmpstream\/send(_:arguments:isresettimestamp:)","title":"func send(String, arguments: (any Sendable)?..., isResetTimestamp: Bool) throws"},{"title":"func togglePause() async throws -> RTMPResponse","path":"\/documentation\/haishinkit\/rtmpstream\/togglepause()","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"type":"enum","title":"RTMPStream.Code","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"title":"case bufferEmpty","path":"\/documentation\/haishinkit\/rtmpstream\/code\/bufferempty","type":"case"},{"type":"case","title":"case bufferFlush","path":"\/documentation\/haishinkit\/rtmpstream\/code\/bufferflush"},{"title":"case bufferFull","type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/code\/bufferfull"},{"type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/code\/connectclosed","title":"case connectClosed"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/connectfailed","title":"case connectFailed","type":"case"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/connectrejected","type":"case","title":"case connectRejected"},{"title":"case connectSuccess","type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/code\/connectsuccess"},{"title":"case drmUpdateNeeded","path":"\/documentation\/haishinkit\/rtmpstream\/code\/drmupdateneeded","type":"case"},{"type":"case","title":"case failed","path":"\/documentation\/haishinkit\/rtmpstream\/code\/failed"},{"title":"case multicastStreamReset","path":"\/documentation\/haishinkit\/rtmpstream\/code\/multicaststreamreset","type":"case"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/pausenotify","type":"case","title":"case pauseNotify"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/playfailed","title":"case playFailed","type":"case"},{"title":"case playFileStructureInvalid","path":"\/documentation\/haishinkit\/rtmpstream\/code\/playfilestructureinvalid","type":"case"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/playinsufficientbw","type":"case","title":"case playInsufficientBW"},{"title":"case playNoSupportedTrackFound","path":"\/documentation\/haishinkit\/rtmpstream\/code\/playnosupportedtrackfound","type":"case"},{"type":"case","title":"case playReset","path":"\/documentation\/haishinkit\/rtmpstream\/code\/playreset"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/playstart","type":"case","title":"case playStart"},{"title":"case playStop","path":"\/documentation\/haishinkit\/rtmpstream\/code\/playstop","type":"case"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/playstreamnotfound","type":"case","title":"case playStreamNotFound"},{"type":"case","title":"case playTransition","path":"\/documentation\/haishinkit\/rtmpstream\/code\/playtransition"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/playunpublishnotify","title":"case playUnpublishNotify","type":"case"},{"type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/code\/publishbadname","title":"case publishBadName"},{"type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/code\/publishidle","title":"case publishIdle"},{"type":"case","title":"case publishStart","path":"\/documentation\/haishinkit\/rtmpstream\/code\/publishstart"},{"title":"case recordAlreadyExists","path":"\/documentation\/haishinkit\/rtmpstream\/code\/recordalreadyexists","type":"case"},{"type":"case","title":"case recordDiskQuotaExceeded","path":"\/documentation\/haishinkit\/rtmpstream\/code\/recorddiskquotaexceeded"},{"type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/code\/recordfailed","title":"case recordFailed"},{"title":"case recordNoAccess","type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/code\/recordnoaccess"},{"type":"case","title":"case recordStart","path":"\/documentation\/haishinkit\/rtmpstream\/code\/recordstart"},{"type":"case","title":"case recordStop","path":"\/documentation\/haishinkit\/rtmpstream\/code\/recordstop"},{"title":"case secondScreenStart","path":"\/documentation\/haishinkit\/rtmpstream\/code\/secondscreenstart","type":"case"},{"title":"case secondScreenStop","path":"\/documentation\/haishinkit\/rtmpstream\/code\/secondscreenstop","type":"case"},{"title":"case seekFailed","type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/code\/seekfailed"},{"title":"case seekInvalidTime","type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/code\/seekinvalidtime"},{"type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/code\/seeknotify","title":"case seekNotify"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/stepnotify","type":"case","title":"case stepNotify"},{"type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/code\/unpausenotify","title":"case unpauseNotify"},{"type":"case","title":"case unpublishSuccess","path":"\/documentation\/haishinkit\/rtmpstream\/code\/unpublishsuccess"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/videodimensionchange","type":"case","title":"case videoDimensionChange"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: String)","path":"\/documentation\/haishinkit\/rtmpstream\/code\/init(rawvalue:)","type":"init"},{"type":"groupMarker","title":"Instance Properties"},{"title":"var level: String","type":"property","path":"\/documentation\/haishinkit\/rtmpstream\/code\/level"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/haishinkit\/rtmpstream\/code\/!=(_:_:)","type":"op"}],"path":"\/documentation\/haishinkit\/rtmpstream\/code\/equatable-implementations","type":"symbol","title":"Equatable Implementations"},{"title":"RawRepresentable Implementations","type":"symbol","path":"\/documentation\/haishinkit\/rtmpstream\/code\/rawrepresentable-implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/hash(into:)","type":"method","title":"func hash(into: inout Hasher)"}]}],"path":"\/documentation\/haishinkit\/rtmpstream\/code"},{"path":"\/documentation\/haishinkit\/rtmpstream\/error","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/rtmpstream\/error\/invalidstate","type":"case","title":"case invalidState"},{"title":"case requestFailed(response: RTMPResponse)","path":"\/documentation\/haishinkit\/rtmpstream\/error\/requestfailed(response:)","type":"case"},{"path":"\/documentation\/haishinkit\/rtmpstream\/error\/requesttimedout","type":"case","title":"case requestTimedOut"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"title":"var localizedDescription: String","type":"property","path":"\/documentation\/haishinkit\/rtmpstream\/error\/localizeddescription"}],"title":"Error Implementations","path":"\/documentation\/haishinkit\/rtmpstream\/error\/error-implementations","type":"symbol"}],"type":"enum","title":"RTMPStream.Error"},{"type":"enum","path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish\/append","type":"case","title":"case append"},{"title":"case appendWithGap","type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish\/appendwithgap"},{"path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish\/live","type":"case","title":"case live"},{"title":"case record","type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish\/record"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish\/init(rawvalue:)","type":"init","title":"init?(rawValue: String)"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish\/!=(_:_:)"}],"path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish\/equatable-implementations","type":"symbol"},{"path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish\/rawrepresentable-implementations","title":"RawRepresentable Implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish\/hashvalue","title":"var hashValue: Int"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func hash(into: inout Hasher)","path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish\/hash(into:)","type":"method"}],"type":"symbol"}],"title":"RTMPStream.HowToPublish"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/rtmpstream\/assertisolated(_:file:line:)","type":"method","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)"},{"type":"method","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","path":"\/documentation\/haishinkit\/rtmpstream\/assumeisolated(_:file:line:)"},{"path":"\/documentation\/haishinkit\/rtmpstream\/preconditionisolated(_:file:line:)","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method"}],"type":"symbol","path":"\/documentation\/haishinkit\/rtmpstream\/actor-implementations","title":"Actor Implementations"},{"type":"symbol","children":[{"type":"groupMarker","title":"Instance Properties"},{"title":"var audioSettings: AudioCodecSettings","path":"\/documentation\/haishinkit\/rtmpstream\/audiosettings","type":"property"},{"path":"\/documentation\/haishinkit\/rtmpstream\/soundtransform","type":"property","title":"var soundTransform: SoundTransform?"},{"title":"var videoSettings: VideoCodecSettings","path":"\/documentation\/haishinkit\/rtmpstream\/videosettings","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"type":"method","title":"func addOutput(some HKStreamOutput)","path":"\/documentation\/haishinkit\/rtmpstream\/addoutput(_:)"},{"title":"func append(CMSampleBuffer)","path":"\/documentation\/haishinkit\/rtmpstream\/append(_:)","type":"method"},{"type":"method","title":"func append(AVAudioBuffer, when: AVAudioTime)","path":"\/documentation\/haishinkit\/rtmpstream\/append(_:when:)"},{"path":"\/documentation\/haishinkit\/rtmpstream\/attachaudioplayer(_:)","type":"method","title":"func attachAudioPlayer(AudioPlayer?) async"},{"title":"func dispatch(NetworkMonitorEvent) async","path":"\/documentation\/haishinkit\/rtmpstream\/dispatch(_:)","type":"method"},{"path":"\/documentation\/haishinkit\/rtmpstream\/removeoutput(_:)","title":"func removeOutput(some HKStreamOutput)","type":"method"},{"path":"\/documentation\/haishinkit\/rtmpstream\/setaudiosettings(_:)","type":"method","title":"func setAudioSettings(AudioCodecSettings)"},{"path":"\/documentation\/haishinkit\/rtmpstream\/setbitratestorategy(_:)","title":"func setBitrateStorategy((some HKStreamBitRateStrategy)?)","type":"method"},{"title":"func setSoundTransform(SoundTransform) async","type":"method","path":"\/documentation\/haishinkit\/rtmpstream\/setsoundtransform(_:)"},{"path":"\/documentation\/haishinkit\/rtmpstream\/setvideoinputbuffercounts(_:)","type":"method","title":"func setVideoInputBufferCounts(Int)"},{"title":"func setVideoSettings(VideoCodecSettings)","path":"\/documentation\/haishinkit\/rtmpstream\/setvideosettings(_:)","type":"method"}],"path":"\/documentation\/haishinkit\/rtmpstream\/hkstream-implementations","title":"HKStream Implementations"},{"type":"symbol","title":"MediaMixerOutput Implementations","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/haishinkit\/rtmpstream\/mixer(_:didoutput:)","title":"func mixer(MediaMixer, didOutput: CMSampleBuffer)"},{"title":"func mixer(MediaMixer, didOutput: AVAudioPCMBuffer, when: AVAudioTime)","type":"method","path":"\/documentation\/haishinkit\/rtmpstream\/mixer(_:didoutput:when:)"},{"type":"method","title":"func selectTrack(UInt8?, mediaType: CMFormatDescription.MediaType)","path":"\/documentation\/haishinkit\/rtmpstream\/selecttrack(_:mediatype:)"}],"path":"\/documentation\/haishinkit\/rtmpstream\/mediamixeroutput-implementations"}],"type":"class","title":"RTMPStream","path":"\/documentation\/haishinkit\/rtmpstream"},{"title":"Screen","type":"class","path":"\/documentation\/haishinkit\/screen","children":[{"type":"groupMarker","title":"Initializers"},{"title":"init()","path":"\/documentation\/haishinkit\/screen\/init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"type":"property","title":"var backgroundColor: CGColor","path":"\/documentation\/haishinkit\/screen\/backgroundcolor"},{"type":"property","path":"\/documentation\/haishinkit\/screen\/childcounts","title":"var childCounts: Int"},{"title":"var delegate: (any ScreenDelegate)?","path":"\/documentation\/haishinkit\/screen\/delegate","type":"property"},{"type":"property","path":"\/documentation\/haishinkit\/screen\/size-swift.property","title":"var size: CGSize"},{"type":"groupMarker","title":"Instance Methods"},{"title":"func addChild(ScreenObject?) throws","path":"\/documentation\/haishinkit\/screen\/addchild(_:)","type":"method"},{"title":"func registerVideoEffect(some VideoEffect) -> Bool","type":"method","path":"\/documentation\/haishinkit\/screen\/registervideoeffect(_:)"},{"title":"func removeChild(ScreenObject?)","path":"\/documentation\/haishinkit\/screen\/removechild(_:)","type":"method"},{"title":"func unregisterVideoEffect(some VideoEffect) -> Bool","path":"\/documentation\/haishinkit\/screen\/unregistervideoeffect(_:)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/screen\/size-swift.type.property","type":"property","title":"static let size: CGSize"}]},{"type":"class","path":"\/documentation\/haishinkit\/screenactor","title":"ScreenActor","children":[{"title":"Type Properties","type":"groupMarker"},{"type":"property","title":"static let shared: ScreenActor","path":"\/documentation\/haishinkit\/screenactor\/shared"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/screenactor\/actor-implementations","children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/screenactor\/assertisolated(_:file:line:)","type":"method","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)"},{"path":"\/documentation\/haishinkit\/screenactor\/assumeisolated(_:file:line:)","type":"method","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T"},{"type":"method","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/haishinkit\/screenactor\/preconditionisolated(_:file:line:)"}],"type":"symbol","title":"Actor Implementations"},{"title":"GlobalActor Implementations","path":"\/documentation\/haishinkit\/screenactor\/globalactor-implementations","children":[{"title":"Type Properties","type":"groupMarker"},{"title":"static var sharedUnownedExecutor: UnownedSerialExecutor","path":"\/documentation\/haishinkit\/screenactor\/sharedunownedexecutor","type":"property"}],"type":"symbol"}]},{"type":"class","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/haishinkit\/screenobject\/init()","title":"init()"},{"title":"Instance Properties","type":"groupMarker"},{"type":"property","title":"var bounds: CGRect","path":"\/documentation\/haishinkit\/screenobject\/bounds"},{"title":"var cornerRadius: CGFloat","type":"property","path":"\/documentation\/haishinkit\/screenobject\/cornerradius"},{"path":"\/documentation\/haishinkit\/screenobject\/horizontalalignment-swift.property","type":"property","title":"var horizontalAlignment: ScreenObject.HorizontalAlignment"},{"path":"\/documentation\/haishinkit\/screenobject\/isvisible","type":"property","title":"var isVisible: Bool"},{"title":"var layoutMargin: NSEdgeInsets","path":"\/documentation\/haishinkit\/screenobject\/layoutmargin","type":"property"},{"type":"property","title":"var parent: ScreenObjectContainer?","path":"\/documentation\/haishinkit\/screenobject\/parent"},{"title":"var size: CGSize","path":"\/documentation\/haishinkit\/screenobject\/size","type":"property"},{"title":"var verticalAlignment: ScreenObject.VerticalAlignment","path":"\/documentation\/haishinkit\/screenobject\/verticalalignment-swift.property","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/screenobject\/invalidatelayout()","type":"method","title":"func invalidateLayout()"},{"path":"\/documentation\/haishinkit\/screenobject\/makebounds(_:)","type":"method","title":"func makeBounds(CGSize) -> CGRect"},{"type":"method","title":"func makeImage(some ScreenRenderer) -> CGImage?","path":"\/documentation\/haishinkit\/screenobject\/makeimage(_:)"},{"type":"groupMarker","title":"Enumerations"},{"children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/haishinkit\/screenobject\/horizontalalignment-swift.enum\/center","title":"case center","type":"case"},{"path":"\/documentation\/haishinkit\/screenobject\/horizontalalignment-swift.enum\/left","type":"case","title":"case left"},{"type":"case","path":"\/documentation\/haishinkit\/screenobject\/horizontalalignment-swift.enum\/right","title":"case right"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/screenobject\/horizontalalignment-swift.enum\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}],"type":"symbol","title":"Equatable Implementations","path":"\/documentation\/haishinkit\/screenobject\/horizontalalignment-swift.enum\/equatable-implementations"}],"type":"enum","title":"ScreenObject.HorizontalAlignment","path":"\/documentation\/haishinkit\/screenobject\/horizontalalignment-swift.enum"},{"type":"enum","title":"ScreenObject.VerticalAlignment","path":"\/documentation\/haishinkit\/screenobject\/verticalalignment-swift.enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case bottom","path":"\/documentation\/haishinkit\/screenobject\/verticalalignment-swift.enum\/bottom","type":"case"},{"title":"case middle","path":"\/documentation\/haishinkit\/screenobject\/verticalalignment-swift.enum\/middle","type":"case"},{"title":"case top","path":"\/documentation\/haishinkit\/screenobject\/verticalalignment-swift.enum\/top","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/screenobject\/verticalalignment-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"type":"symbol","path":"\/documentation\/haishinkit\/screenobject\/verticalalignment-swift.enum\/equatable-implementations","title":"Equatable Implementations"}]},{"title":"Default Implementations","type":"groupMarker"},{"type":"symbol","path":"\/documentation\/haishinkit\/screenobject\/equatable-implementations","title":"Equatable Implementations","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/haishinkit\/screenobject\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"type":"op","path":"\/documentation\/haishinkit\/screenobject\/==(_:_:)","title":"static func == (ScreenObject, ScreenObject) -> Bool"}]},{"type":"symbol","children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/screenobject\/hash(into:)","type":"method","title":"func hash(into: inout Hasher)"}],"title":"Hashable Implementations","path":"\/documentation\/haishinkit\/screenobject\/hashable-implementations"}],"title":"ScreenObject","path":"\/documentation\/haishinkit\/screenobject"},{"title":"ScreenObjectContainer","children":[{"type":"groupMarker","title":"Instance Properties"},{"title":"var childCounts: Int","path":"\/documentation\/haishinkit\/screenobjectcontainer\/childcounts","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func addChild(ScreenObject?) throws","type":"method","path":"\/documentation\/haishinkit\/screenobjectcontainer\/addchild(_:)"},{"path":"\/documentation\/haishinkit\/screenobjectcontainer\/removechild(_:)","type":"method","title":"func removeChild(ScreenObject?)"},{"type":"groupMarker","title":"Enumerations"},{"type":"enum","path":"\/documentation\/haishinkit\/screenobjectcontainer\/error","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"title":"case alreadyExists","type":"case","path":"\/documentation\/haishinkit\/screenobjectcontainer\/error\/alreadyexists"},{"title":"Default Implementations","type":"groupMarker"},{"type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/screenobjectcontainer\/error\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/haishinkit\/screenobjectcontainer\/error\/equatable-implementations","title":"Equatable Implementations"},{"path":"\/documentation\/haishinkit\/screenobjectcontainer\/error\/error-implementations","title":"Error Implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Properties"},{"title":"var localizedDescription: String","type":"property","path":"\/documentation\/haishinkit\/screenobjectcontainer\/error\/localizeddescription"}]}],"title":"ScreenObjectContainer.Error"}],"type":"class","path":"\/documentation\/haishinkit\/screenobjectcontainer"},{"type":"class","title":"StreamScreenObject","path":"\/documentation\/haishinkit\/streamscreenobject","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/streamscreenobject\/chromakeycolor","type":"property","title":"var chromaKeyColor: CGColor?"},{"type":"property","title":"var videoGravity: AVLayerVideoGravity","path":"\/documentation\/haishinkit\/streamscreenobject\/videogravity"},{"title":"Instance Methods","type":"groupMarker"},{"type":"method","title":"func makeBounds(CGSize) -> CGRect","path":"\/documentation\/haishinkit\/streamscreenobject\/makebounds(_:)"},{"path":"\/documentation\/haishinkit\/streamscreenobject\/makeimage(_:)","title":"func makeImage(some ScreenRenderer) -> CGImage?","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"type":"symbol","path":"\/documentation\/haishinkit\/streamscreenobject\/hkstreamoutput-implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"type":"method","title":"func stream(some HKStream, didOutput: CMSampleBuffer)","path":"\/documentation\/haishinkit\/streamscreenobject\/stream(_:didoutput:)"},{"type":"method","title":"func stream(some HKStream, didOutput: AVAudioBuffer, when: AVAudioTime)","path":"\/documentation\/haishinkit\/streamscreenobject\/stream(_:didoutput:when:)"}],"title":"HKStreamOutput Implementations"}]},{"path":"\/documentation\/haishinkit\/tsreader","title":"TSReader","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init()","path":"\/documentation\/haishinkit\/tsreader\/init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/tsreader\/output","title":"var output: AsyncStream<(UInt16, CMSampleBuffer)>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func clear()","path":"\/documentation\/haishinkit\/tsreader\/clear()","type":"method"},{"title":"func read(Data) -> Int","path":"\/documentation\/haishinkit\/tsreader\/read(_:)","type":"method"}],"type":"class"},{"title":"TSWriter","path":"\/documentation\/haishinkit\/tswriter","type":"class","children":[{"title":"Initializers","type":"groupMarker"},{"type":"init","title":"init(segmentDuration: Double)","path":"\/documentation\/haishinkit\/tswriter\/init(segmentduration:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var audioFormat: AVAudioFormat?","path":"\/documentation\/haishinkit\/tswriter\/audioformat","type":"property"},{"title":"var expectedMedias: Set<AVMediaType>","path":"\/documentation\/haishinkit\/tswriter\/expectedmedias","type":"property"},{"path":"\/documentation\/haishinkit\/tswriter\/output","type":"property","title":"var output: AsyncStream<Data>"},{"title":"var videoFormat: CMFormatDescription?","path":"\/documentation\/haishinkit\/tswriter\/videoformat","type":"property"},{"type":"groupMarker","title":"Instance Methods"},{"title":"func append(CMSampleBuffer)","path":"\/documentation\/haishinkit\/tswriter\/append(_:)","type":"method"},{"type":"method","path":"\/documentation\/haishinkit\/tswriter\/append(_:when:)","title":"func append(AVAudioBuffer, when: AVAudioTime)"},{"type":"method","title":"func clear()","path":"\/documentation\/haishinkit\/tswriter\/clear()"}]},{"title":"TextScreenObject","path":"\/documentation\/haishinkit\/textscreenobject","type":"class","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/textscreenobject\/attributes","title":"var attributes: [NSAttributedString.Key : Any]?","type":"property"},{"path":"\/documentation\/haishinkit\/textscreenobject\/bounds","title":"var bounds: CGRect","type":"property"},{"path":"\/documentation\/haishinkit\/textscreenobject\/string","title":"var string: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"type":"method","path":"\/documentation\/haishinkit\/textscreenobject\/makebounds(_:)","title":"func makeBounds(CGSize) -> CGRect"},{"type":"method","title":"func makeImage(some ScreenRenderer) -> CGImage?","path":"\/documentation\/haishinkit\/textscreenobject\/makeimage(_:)"}]},{"title":"VideoDeviceUnit","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videodeviceunit\/colorformat-swift.property","title":"var colorFormat: OSType","type":"property"},{"path":"\/documentation\/haishinkit\/videodeviceunit\/connection","type":"property","title":"var connection: AVCaptureConnection?"},{"path":"\/documentation\/haishinkit\/videodeviceunit\/device","title":"var device: AVCaptureDevice?","type":"property"},{"type":"property","path":"\/documentation\/haishinkit\/videodeviceunit\/input","title":"var input: AVCaptureInput?"},{"title":"var isVideoMirrored: Bool","path":"\/documentation\/haishinkit\/videodeviceunit\/isvideomirrored","type":"property"},{"title":"var output: VideoDeviceUnit.Output?","path":"\/documentation\/haishinkit\/videodeviceunit\/output-swift.property","type":"property"},{"title":"let track: UInt8","path":"\/documentation\/haishinkit\/videodeviceunit\/track","type":"property"},{"type":"property","title":"var videoOrientation: AVCaptureVideoOrientation","path":"\/documentation\/haishinkit\/videodeviceunit\/videoorientation"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videodeviceunit\/output-swift.typealias","title":"VideoDeviceUnit.Output","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"title":"static let colorFormat: OSType","path":"\/documentation\/haishinkit\/videodeviceunit\/colorformat-swift.type.property","type":"property"}],"path":"\/documentation\/haishinkit\/videodeviceunit","type":"class"},{"type":"class","path":"\/documentation\/haishinkit\/videorotator","title":"VideoRotator","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videorotator\/init()","type":"init","title":"init?()"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videorotator\/rotate(buffer:)","title":"func rotate(buffer: CMSampleBuffer) -> Result<CMSampleBuffer, VideoRotator.Error>","type":"method"},{"type":"groupMarker","title":"Enumerations"},{"title":"VideoRotator.Error","path":"\/documentation\/haishinkit\/videorotator\/error","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case cannotAllocatePixelBuffer(CVReturn)","path":"\/documentation\/haishinkit\/videorotator\/error\/cannotallocatepixelbuffer(_:)","type":"case"},{"title":"case noImageBuffer","path":"\/documentation\/haishinkit\/videorotator\/error\/noimagebuffer","type":"case"},{"path":"\/documentation\/haishinkit\/videorotator\/error\/noorientationinfo","type":"case","title":"case noOrientationInfo"},{"path":"\/documentation\/haishinkit\/videorotator\/error\/rotationfailure(_:)","type":"case","title":"case rotationFailure(OSStatus)"},{"type":"case","title":"case unsupportedOrientation","path":"\/documentation\/haishinkit\/videorotator\/error\/unsupportedorientation"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","title":"Error Implementations","path":"\/documentation\/haishinkit\/videorotator\/error\/error-implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"type":"property","path":"\/documentation\/haishinkit\/videorotator\/error\/localizeddescription","title":"var localizedDescription: String"}]}],"type":"enum"}]},{"path":"\/documentation\/haishinkit\/videotrackscreenobject","title":"VideoTrackScreenObject","type":"class","children":[{"type":"groupMarker","title":"Initializers"},{"title":"init()","path":"\/documentation\/haishinkit\/videotrackscreenobject\/init()","type":"init"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/videotrackscreenobject\/chromakeycolor","type":"property","title":"var chromaKeyColor: CGColor?"},{"type":"property","title":"var frameRate: Int","path":"\/documentation\/haishinkit\/videotrackscreenobject\/framerate"},{"type":"property","title":"var track: UInt8","path":"\/documentation\/haishinkit\/videotrackscreenobject\/track"},{"title":"var videoGravity: AVLayerVideoGravity","path":"\/documentation\/haishinkit\/videotrackscreenobject\/videogravity","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"type":"method","title":"func draw(some ScreenRenderer)","path":"\/documentation\/haishinkit\/videotrackscreenobject\/draw(_:)"},{"type":"method","path":"\/documentation\/haishinkit\/videotrackscreenobject\/makebounds(_:)","title":"func makeBounds(CGSize) -> CGRect"},{"title":"func makeImage(some ScreenRenderer) -> CGImage?","type":"method","path":"\/documentation\/haishinkit\/videotrackscreenobject\/makeimage(_:)"},{"title":"func registerVideoEffect(some VideoEffect) -> Bool","path":"\/documentation\/haishinkit\/videotrackscreenobject\/registervideoeffect(_:)","type":"method"},{"path":"\/documentation\/haishinkit\/videotrackscreenobject\/unregistervideoeffect(_:)","type":"method","title":"func unregisterVideoEffect(some VideoEffect) -> Bool"}]},{"type":"groupMarker","title":"Protocols"},{"type":"protocol","title":"AsyncRunner","children":[{"type":"groupMarker","title":"Instance Properties"},{"title":"var isRunning: Bool","path":"\/documentation\/haishinkit\/asyncrunner\/isrunning","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func startRunning() async","path":"\/documentation\/haishinkit\/asyncrunner\/startrunning()","type":"method"},{"title":"func stopRunning() async","path":"\/documentation\/haishinkit\/asyncrunner\/stoprunning()","type":"method"}],"path":"\/documentation\/haishinkit\/asyncrunner"},{"path":"\/documentation\/haishinkit\/chromakeyprocessable","type":"protocol","title":"ChromaKeyProcessable","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var chromaKeyColor: CGColor?","path":"\/documentation\/haishinkit\/chromakeyprocessable\/chromakeycolor"}]},{"path":"\/documentation\/haishinkit\/hkstream","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/hkstream\/audiosettings","title":"var audioSettings: AudioCodecSettings","type":"property"},{"path":"\/documentation\/haishinkit\/hkstream\/readystate","type":"property","title":"var readyState: HKStreamReadyState"},{"type":"property","title":"var soundTransform: SoundTransform?","path":"\/documentation\/haishinkit\/hkstream\/soundtransform"},{"title":"var videoSettings: VideoCodecSettings","type":"property","path":"\/documentation\/haishinkit\/hkstream\/videosettings"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/hkstream\/addoutput(_:)","type":"method","title":"func addOutput(some HKStreamOutput)"},{"title":"func append(CMSampleBuffer)","path":"\/documentation\/haishinkit\/hkstream\/append(_:)","type":"method"},{"title":"func append(AVAudioBuffer, when: AVAudioTime)","path":"\/documentation\/haishinkit\/hkstream\/append(_:when:)","type":"method"},{"path":"\/documentation\/haishinkit\/hkstream\/attachaudioplayer(_:)","type":"method","title":"func attachAudioPlayer(AudioPlayer?) async"},{"type":"method","title":"func dispatch(NetworkMonitorEvent) async","path":"\/documentation\/haishinkit\/hkstream\/dispatch(_:)"},{"type":"method","title":"func removeOutput(some HKStreamOutput)","path":"\/documentation\/haishinkit\/hkstream\/removeoutput(_:)"},{"title":"func setAudioSettings(AudioCodecSettings)","path":"\/documentation\/haishinkit\/hkstream\/setaudiosettings(_:)","type":"method"},{"path":"\/documentation\/haishinkit\/hkstream\/setbitratestorategy(_:)","title":"func setBitrateStorategy((some HKStreamBitRateStrategy)?)","type":"method"},{"path":"\/documentation\/haishinkit\/hkstream\/setsoundtransform(_:)","type":"method","title":"func setSoundTransform(SoundTransform) async"},{"title":"func setVideoInputBufferCounts(Int)","path":"\/documentation\/haishinkit\/hkstream\/setvideoinputbuffercounts(_:)","type":"method"},{"title":"func setVideoSettings(VideoCodecSettings)","type":"method","path":"\/documentation\/haishinkit\/hkstream\/setvideosettings(_:)"}],"type":"protocol","title":"HKStream"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var mamimumAudioBitRate: Int","type":"property","path":"\/documentation\/haishinkit\/hkstreambitratestrategy\/mamimumaudiobitrate"},{"type":"property","title":"var mamimumVideoBitRate: Int","path":"\/documentation\/haishinkit\/hkstreambitratestrategy\/mamimumvideobitrate"},{"type":"groupMarker","title":"Instance Methods"},{"title":"func adjustBitrate(NetworkMonitorEvent, stream: some HKStream) async","path":"\/documentation\/haishinkit\/hkstreambitratestrategy\/adjustbitrate(_:stream:)","type":"method"}],"title":"HKStreamBitRateStrategy","type":"protocol","path":"\/documentation\/haishinkit\/hkstreambitratestrategy"},{"path":"\/documentation\/haishinkit\/hkstreamoutput","title":"HKStreamOutput","type":"protocol","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func stream(some HKStream, didOutput: CMSampleBuffer)","path":"\/documentation\/haishinkit\/hkstreamoutput\/stream(_:didoutput:)","type":"method"},{"type":"method","path":"\/documentation\/haishinkit\/hkstreamoutput\/stream(_:didoutput:when:)","title":"func stream(some HKStream, didOutput: AVAudioBuffer, when: AVAudioTime)"}]},{"title":"MediaMixerOutput","path":"\/documentation\/haishinkit\/mediamixeroutput","children":[{"title":"Instance Properties","type":"groupMarker"},{"type":"property","path":"\/documentation\/haishinkit\/mediamixeroutput\/audiotrackid","title":"var audioTrackId: UInt8?"},{"title":"var videoTrackId: UInt8?","path":"\/documentation\/haishinkit\/mediamixeroutput\/videotrackid","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/mediamixeroutput\/mixer(_:didoutput:)","type":"method","title":"func mixer(MediaMixer, didOutput: CMSampleBuffer)"},{"title":"func mixer(MediaMixer, didOutput: AVAudioPCMBuffer, when: AVAudioTime)","path":"\/documentation\/haishinkit\/mediamixeroutput\/mixer(_:didoutput:when:)","type":"method"},{"type":"method","path":"\/documentation\/haishinkit\/mediamixeroutput\/selecttrack(_:mediatype:)","title":"func selectTrack(UInt8?, mediaType: CMFormatDescription.MediaType) async"}],"type":"protocol"},{"path":"\/documentation\/haishinkit\/networkconnection","type":"protocol","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var connected: Bool","path":"\/documentation\/haishinkit\/networkconnection\/connected","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"type":"method","path":"\/documentation\/haishinkit\/networkconnection\/close()","title":"func close() async throws"}],"title":"NetworkConnection"},{"path":"\/documentation\/haishinkit\/networktransportreporter","title":"NetworkTransportReporter","children":[{"title":"Instance Methods","type":"groupMarker"},{"type":"method","title":"func makeNetworkMonitor() async -> NetworkMonitor","path":"\/documentation\/haishinkit\/networktransportreporter\/makenetworkmonitor()"},{"path":"\/documentation\/haishinkit\/networktransportreporter\/makenetworktransportreport()","title":"func makeNetworkTransportReport() async -> NetworkTransportReport","type":"method"}],"type":"protocol"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"title":"var isRunning: Bool","type":"property","path":"\/documentation\/haishinkit\/runner\/isrunning"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func startRunning()","path":"\/documentation\/haishinkit\/runner\/startrunning()","type":"method"},{"title":"func stopRunning()","type":"method","path":"\/documentation\/haishinkit\/runner\/stoprunning()"}],"title":"Runner","type":"protocol","path":"\/documentation\/haishinkit\/runner"},{"type":"protocol","children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/screendelegate\/screen(_:willlayout:)","type":"method","title":"func screen(Screen, willLayout: CMTime)"}],"path":"\/documentation\/haishinkit\/screendelegate","title":"ScreenDelegate"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"title":"var backgroundColor: CGColor","path":"\/documentation\/haishinkit\/screenrenderer\/backgroundcolor","type":"property"},{"path":"\/documentation\/haishinkit\/screenrenderer\/bounds","title":"var bounds: CGRect","type":"property"},{"title":"var context: CIContext","path":"\/documentation\/haishinkit\/screenrenderer\/context","type":"property"},{"path":"\/documentation\/haishinkit\/screenrenderer\/presentationtimestamp","type":"property","title":"var presentationTimeStamp: CMTime"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func draw(ScreenObject)","type":"method","path":"\/documentation\/haishinkit\/screenrenderer\/draw(_:)"},{"type":"method","path":"\/documentation\/haishinkit\/screenrenderer\/layout(_:)","title":"func layout(ScreenObject)"},{"path":"\/documentation\/haishinkit\/screenrenderer\/settarget(_:)","type":"method","title":"func setTarget(CVPixelBuffer?)"}],"path":"\/documentation\/haishinkit\/screenrenderer","type":"protocol","title":"ScreenRenderer"},{"path":"\/documentation\/haishinkit\/videoeffect","title":"VideoEffect","type":"protocol","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/haishinkit\/videoeffect\/execute(_:)","title":"func execute(CIImage) -> CIImage"}]},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"type":"init","title":"init(count: Int)","path":"\/documentation\/haishinkit\/amfarray\/init(count:)"},{"path":"\/documentation\/haishinkit\/amfarray\/init(data:)","title":"init(data: [(any Sendable)?])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var length: Int","path":"\/documentation\/haishinkit\/amfarray\/length","type":"property"},{"type":"groupMarker","title":"Subscripts"},{"title":"subscript(Any) -> (any Sendable)?","path":"\/documentation\/haishinkit\/amfarray\/subscript(_:)","type":"subscript"},{"type":"groupMarker","title":"Default Implementations"},{"title":"CustomDebugStringConvertible Implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/amfarray\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/haishinkit\/amfarray\/customdebugstringconvertible-implementations","type":"symbol"},{"path":"\/documentation\/haishinkit\/amfarray\/equatable-implementations","type":"symbol","title":"Equatable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/amfarray\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"static func == (AMFArray, AMFArray) -> Bool","type":"op","path":"\/documentation\/haishinkit\/amfarray\/==(_:_:)"}]},{"title":"ExpressibleByArrayLiteral Implementations","children":[{"title":"Initializers","type":"groupMarker"},{"type":"init","title":"init(arrayLiteral: (any Sendable)?...)","path":"\/documentation\/haishinkit\/amfarray\/init(arrayliteral:)"}],"path":"\/documentation\/haishinkit\/amfarray\/expressiblebyarrayliteral-implementations","type":"symbol"}],"path":"\/documentation\/haishinkit\/amfarray","type":"struct","title":"AMFArray"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"title":"let data: AMFObject","type":"property","path":"\/documentation\/haishinkit\/amftypedobject\/data"},{"path":"\/documentation\/haishinkit\/amftypedobject\/typename","type":"property","title":"let typeName: String"}],"type":"struct","title":"AMFTypedObject","path":"\/documentation\/haishinkit\/amftypedobject"},{"type":"struct","title":"AMFUndefined","path":"\/documentation\/haishinkit\/amfundefined","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/amfundefined\/description","type":"property","title":"var description: String"}]},{"children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(data: String)","path":"\/documentation\/haishinkit\/amfxml\/init(data:)","type":"init"},{"type":"groupMarker","title":"Instance Properties"},{"title":"var description: String","type":"property","path":"\/documentation\/haishinkit\/amfxml\/description"},{"type":"groupMarker","title":"Default Implementations"},{"title":"Equatable Implementations","path":"\/documentation\/haishinkit\/amfxml\/equatable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/haishinkit\/amfxml\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"static func == (AMFXML, AMFXML) -> Bool","path":"\/documentation\/haishinkit\/amfxml\/==(_:_:)","type":"op"}],"type":"symbol"}],"path":"\/documentation\/haishinkit\/amfxml","type":"struct","title":"AMFXML"},{"path":"\/documentation\/haishinkit\/amfxmldocument","type":"struct","title":"AMFXMLDocument","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/amfxmldocument\/init(data:)","type":"init","title":"init(data: String)"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/amfxmldocument\/description","title":"var description: String","type":"property"},{"type":"groupMarker","title":"Default Implementations"},{"title":"Equatable Implementations","path":"\/documentation\/haishinkit\/amfxmldocument\/equatable-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/haishinkit\/amfxmldocument\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/haishinkit\/amfxmldocument\/==(_:_:)","title":"static func == (AMFXMLDocument, AMFXMLDocument) -> Bool","type":"op"}]}]},{"title":"AudioCodecSettings","type":"struct","children":[{"title":"Initializers","type":"groupMarker"},{"type":"init","title":"init(bitRate: Int, downmix: Bool, channelMap: [Int]?, sampleRate: Float64, format: AudioCodecSettings.Format)","path":"\/documentation\/haishinkit\/audiocodecsettings\/init(bitrate:downmix:channelmap:samplerate:format:)"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/haishinkit\/audiocodecsettings\/init(from:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/audiocodecsettings\/bitrate","title":"var bitRate: Int","type":"property"},{"type":"property","title":"var channelMap: [Int]?","path":"\/documentation\/haishinkit\/audiocodecsettings\/channelmap"},{"path":"\/documentation\/haishinkit\/audiocodecsettings\/downmix","title":"var downmix: Bool","type":"property"},{"type":"property","path":"\/documentation\/haishinkit\/audiocodecsettings\/format-swift.property","title":"var format: AudioCodecSettings.Format"},{"type":"property","title":"let sampleRate: Float64","path":"\/documentation\/haishinkit\/audiocodecsettings\/samplerate"},{"type":"groupMarker","title":"Type Properties"},{"path":"\/documentation\/haishinkit\/audiocodecsettings\/default","type":"property","title":"static let `default`: AudioCodecSettings"},{"title":"static let defaultBitRate: Int","type":"property","path":"\/documentation\/haishinkit\/audiocodecsettings\/defaultbitrate"},{"type":"property","path":"\/documentation\/haishinkit\/audiocodecsettings\/maximumnumberofchannels","title":"static let maximumNumberOfChannels: UInt32"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"type":"case","title":"case aac","path":"\/documentation\/haishinkit\/audiocodecsettings\/format-swift.enum\/aac"},{"path":"\/documentation\/haishinkit\/audiocodecsettings\/format-swift.enum\/opus","title":"case opus","type":"case"},{"type":"case","title":"case pcm","path":"\/documentation\/haishinkit\/audiocodecsettings\/format-swift.enum\/pcm"},{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/haishinkit\/audiocodecsettings\/format-swift.enum\/init(from:)","type":"init"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/haishinkit\/audiocodecsettings\/format-swift.enum\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/haishinkit\/audiocodecsettings\/format-swift.enum\/!=(_:_:)","type":"op"}],"title":"Equatable Implementations","type":"symbol"}],"type":"enum","path":"\/documentation\/haishinkit\/audiocodecsettings\/format-swift.enum","title":"AudioCodecSettings.Format"}],"path":"\/documentation\/haishinkit\/audiocodecsettings"},{"children":[{"type":"groupMarker","title":"Initializers"},{"title":"init(sampleRate: Float64, channels: UInt32, isMuted: Bool, mainTrack: UInt8, tracks: [UInt8 : AudioMixerTrackSettings])","path":"\/documentation\/haishinkit\/audiomixersettings\/init(samplerate:channels:ismuted:maintrack:tracks:)","type":"init"},{"type":"groupMarker","title":"Instance Properties"},{"title":"let channels: UInt32","path":"\/documentation\/haishinkit\/audiomixersettings\/channels","type":"property"},{"title":"var isMuted: Bool","path":"\/documentation\/haishinkit\/audiomixersettings\/ismuted","type":"property"},{"type":"property","path":"\/documentation\/haishinkit\/audiomixersettings\/maintrack","title":"var mainTrack: UInt8"},{"type":"property","path":"\/documentation\/haishinkit\/audiomixersettings\/maximumnumberofchannels","title":"var maximumNumberOfChannels: UInt32"},{"path":"\/documentation\/haishinkit\/audiomixersettings\/samplerate","title":"let sampleRate: Float64","type":"property"},{"path":"\/documentation\/haishinkit\/audiomixersettings\/tracks","title":"var tracks: [UInt8 : AudioMixerTrackSettings]","type":"property"},{"type":"groupMarker","title":"Type Properties"},{"title":"static let `default`: AudioMixerSettings","path":"\/documentation\/haishinkit\/audiomixersettings\/default","type":"property"},{"type":"property","title":"static let maximumSampleRate: Float64","path":"\/documentation\/haishinkit\/audiomixersettings\/maximumsamplerate"}],"title":"AudioMixerSettings","path":"\/documentation\/haishinkit\/audiomixersettings","type":"struct"},{"type":"struct","title":"AudioMixerTrackSettings","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/audiomixertracksettings\/init(from:)","type":"init","title":"init(from: any Decoder) throws"},{"title":"init(volume: Float, isMuted: Bool, downmix: Bool, channelMap: [Int]?)","path":"\/documentation\/haishinkit\/audiomixertracksettings\/init(volume:ismuted:downmix:channelmap:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var channelMap: [Int]?","path":"\/documentation\/haishinkit\/audiomixertracksettings\/channelmap","type":"property"},{"path":"\/documentation\/haishinkit\/audiomixertracksettings\/downmix","title":"var downmix: Bool","type":"property"},{"title":"var isMuted: Bool","path":"\/documentation\/haishinkit\/audiomixertracksettings\/ismuted","type":"property"},{"title":"var volume: Float","type":"property","path":"\/documentation\/haishinkit\/audiomixertracksettings\/volume"},{"title":"Type Properties","type":"groupMarker"},{"title":"static let `default`: AudioMixerTrackSettings","path":"\/documentation\/haishinkit\/audiomixertracksettings\/default","type":"property"}],"path":"\/documentation\/haishinkit\/audiomixertracksettings"},{"children":[{"type":"groupMarker","title":"Initializers"},{"title":"init(A)","type":"init","path":"\/documentation\/haishinkit\/hkatomic\/init(_:)"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/hkatomic\/value","type":"property","title":"var value: A"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/hkatomic\/mutate(_:)","title":"func mutate((inout A) -> Void)","type":"method"}],"path":"\/documentation\/haishinkit\/hkatomic","title":"HKAtomic","type":"struct"},{"title":"NetworkMonitorReport","path":"\/documentation\/haishinkit\/networkmonitorreport","type":"struct","children":[{"title":"Instance Properties","type":"groupMarker"},{"type":"property","title":"let currentBytesInPerSecond: Int","path":"\/documentation\/haishinkit\/networkmonitorreport\/currentbytesinpersecond"},{"path":"\/documentation\/haishinkit\/networkmonitorreport\/currentbytesoutpersecond","title":"let currentBytesOutPerSecond: Int","type":"property"},{"title":"let currentQueueBytesOut: Int","path":"\/documentation\/haishinkit\/networkmonitorreport\/currentqueuebytesout","type":"property"},{"type":"property","title":"let totalBytesIn: Int","path":"\/documentation\/haishinkit\/networkmonitorreport\/totalbytesin"},{"path":"\/documentation\/haishinkit\/networkmonitorreport\/totalbytesout","title":"let totalBytesOut: Int","type":"property"}]},{"path":"\/documentation\/haishinkit\/networktransportreport","title":"NetworkTransportReport","type":"struct","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(queueBytesOut: Int, totalBytesIn: Int, totalBytesOut: Int)","path":"\/documentation\/haishinkit\/networktransportreport\/init(queuebytesout:totalbytesin:totalbytesout:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"type":"property","title":"let queueBytesOut: Int","path":"\/documentation\/haishinkit\/networktransportreport\/queuebytesout"},{"title":"let totalBytesIn: Int","path":"\/documentation\/haishinkit\/networktransportreport\/totalbytesin","type":"property"},{"title":"let totalBytesOut: Int","type":"property","path":"\/documentation\/haishinkit\/networktransportreport\/totalbytesout"}]},{"title":"RTMPResponse","type":"struct","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"let arguments: [(any Sendable)?]","path":"\/documentation\/haishinkit\/rtmpresponse\/arguments","type":"property"},{"path":"\/documentation\/haishinkit\/rtmpresponse\/status","type":"property","title":"let status: RTMPStatus?"}],"path":"\/documentation\/haishinkit\/rtmpresponse"},{"path":"\/documentation\/haishinkit\/rtmpstatus","type":"struct","title":"RTMPStatus","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"let code: String","path":"\/documentation\/haishinkit\/rtmpstatus\/code"},{"type":"property","title":"let description: String","path":"\/documentation\/haishinkit\/rtmpstatus\/description"},{"type":"property","path":"\/documentation\/haishinkit\/rtmpstatus\/level","title":"let level: String"},{"type":"groupMarker","title":"Subscripts"},{"type":"subscript","path":"\/documentation\/haishinkit\/rtmpstatus\/subscript(dynamicmember:)-7qc0b","title":"subscript(dynamicMember _: String) -> Double?"},{"type":"subscript","title":"subscript(dynamicMember _: String) -> String?","path":"\/documentation\/haishinkit\/rtmpstatus\/subscript(dynamicmember:)-9sprr"}]},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"type":"property","title":"var byteCount: Int","path":"\/documentation\/haishinkit\/rtmpstreaminfo\/bytecount"},{"path":"\/documentation\/haishinkit\/rtmpstreaminfo\/currentbytespersecond","title":"var currentBytesPerSecond: Int","type":"property"},{"title":"var resourceName: String?","type":"property","path":"\/documentation\/haishinkit\/rtmpstreaminfo\/resourcename"},{"title":"Default Implementations","type":"groupMarker"},{"title":"CustomDebugStringConvertible Implementations","type":"symbol","path":"\/documentation\/haishinkit\/rtmpstreaminfo\/customdebugstringconvertible-implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"title":"var debugDescription: String","path":"\/documentation\/haishinkit\/rtmpstreaminfo\/debugdescription","type":"property"}]}],"path":"\/documentation\/haishinkit\/rtmpstreaminfo","title":"RTMPStreamInfo","type":"struct"},{"path":"\/documentation\/haishinkit\/soundtransform","type":"struct","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/soundtransform\/init(volume:pan:)","type":"init","title":"init(volume: Float, pan: Float)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var pan: Float","type":"property","path":"\/documentation\/haishinkit\/soundtransform\/pan"},{"type":"property","title":"var volume: Float","path":"\/documentation\/haishinkit\/soundtransform\/volume"},{"title":"Type Properties","type":"groupMarker"},{"title":"static let defaultPan: Float","path":"\/documentation\/haishinkit\/soundtransform\/defaultpan","type":"property"},{"title":"static let defaultVolume: Float","type":"property","path":"\/documentation\/haishinkit\/soundtransform\/defaultvolume"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/soundtransform\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var debugDescription: String","path":"\/documentation\/haishinkit\/soundtransform\/debugdescription","type":"property"}],"type":"symbol"},{"title":"Equatable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"type":"op","path":"\/documentation\/haishinkit\/soundtransform\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"}],"type":"symbol","path":"\/documentation\/haishinkit\/soundtransform\/equatable-implementations"}],"title":"SoundTransform"},{"path":"\/documentation\/haishinkit\/vtsessionoption","children":[{"type":"groupMarker","title":"Default Implementations"},{"title":"Equatable Implementations","type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/haishinkit\/vtsessionoption\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"},{"type":"op","path":"\/documentation\/haishinkit\/vtsessionoption\/==(_:_:)","title":"static func == (VTSessionOption, VTSessionOption) -> Bool"}],"path":"\/documentation\/haishinkit\/vtsessionoption\/equatable-implementations"},{"path":"\/documentation\/haishinkit\/vtsessionoption\/hashable-implementations","title":"Hashable Implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"type":"method","path":"\/documentation\/haishinkit\/vtsessionoption\/hash(into:)","title":"func hash(into: inout Hasher)"}],"type":"symbol"}],"title":"VTSessionOption","type":"struct"},{"path":"\/documentation\/haishinkit\/videocodecsettings","title":"VideoCodecSettings","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/haishinkit\/videocodecsettings\/init(from:)","type":"init"},{"title":"init(videoSize: CGSize, bitRate: Int, profileLevel: String, scalingMode: VideoCodecSettings.ScalingMode, bitRateMode: VideoCodecSettings.BitRateMode, maxKeyFrameIntervalDuration: Int32, allowFrameReordering: Bool?, dataRateLimits: [Double]?, isHardwareEncoderEnabled: Bool)","path":"\/documentation\/haishinkit\/videocodecsettings\/init(videosize:bitrate:profilelevel:scalingmode:bitratemode:maxkeyframeintervalduration:allowframereordering:dataratelimits:ishardwareencoderenabled:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/allowframereordering","type":"property","title":"var allowFrameReordering: Bool?"},{"type":"property","path":"\/documentation\/haishinkit\/videocodecsettings\/bitrate","title":"var bitRate: Int"},{"title":"var bitRateMode: VideoCodecSettings.BitRateMode","type":"property","path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.property"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/dataratelimits","type":"property","title":"var dataRateLimits: [Double]?"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/frameinterval","title":"var frameInterval: Double","type":"property"},{"type":"property","path":"\/documentation\/haishinkit\/videocodecsettings\/ishardwareencoderenabled","title":"var isHardwareEncoderEnabled: Bool"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/maxkeyframeintervalduration","type":"property","title":"var maxKeyFrameIntervalDuration: Int32"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/profilelevel","title":"var profileLevel: String","type":"property"},{"title":"var scalingMode: VideoCodecSettings.ScalingMode","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.property","type":"property"},{"title":"var videoSize: CGSize","type":"property","path":"\/documentation\/haishinkit\/videocodecsettings\/videosize"},{"type":"groupMarker","title":"Type Properties"},{"title":"static let `default`: VideoCodecSettings","path":"\/documentation\/haishinkit\/videocodecsettings\/default","type":"property"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/frameinterval01","type":"property","title":"static let frameInterval01: Double"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/frameinterval05","type":"property","title":"static let frameInterval05: Double"},{"type":"property","title":"static let frameInterval10: Double","path":"\/documentation\/haishinkit\/videocodecsettings\/frameinterval10"},{"title":"static let frameInterval30: Double","path":"\/documentation\/haishinkit\/videocodecsettings\/frameinterval30","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case average","path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/average","type":"case"},{"title":"case constant","type":"case","path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/constant"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: String)","type":"init","path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/init(rawvalue:)"},{"title":"Default Implementations","type":"groupMarker"},{"type":"symbol","title":"Equatable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/!=(_:_:)"}],"path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/equatable-implementations"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/rawrepresentable-implementations","children":[{"type":"groupMarker","title":"Initializers"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/init(from:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","type":"property","path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/hashvalue"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func encode(to: any Encoder) throws","path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/encode(to:)","type":"method"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum","title":"VideoCodecSettings.BitRateMode","type":"enum"},{"title":"VideoCodecSettings.ScalingMode","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum","type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"type":"case","title":"case cropSourceToCleanAperture","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/cropsourcetocleanaperture"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/letterbox","type":"case","title":"case letterbox"},{"title":"case normal","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/normal","type":"case"},{"title":"case trim","type":"case","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/trim"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: String)","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/init(rawvalue:)","type":"init"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/equatable-implementations","type":"symbol","title":"Equatable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}]},{"children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/init(from:)","title":"init(from: any Decoder) throws"},{"type":"groupMarker","title":"Instance Properties"},{"title":"var hashValue: Int","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/hashvalue","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"type":"method","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)"}],"title":"RawRepresentable Implementations","type":"symbol","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/rawrepresentable-implementations"}]}],"type":"struct"},{"type":"struct","path":"\/documentation\/haishinkit\/videomixersettings","title":"VideoMixerSettings","children":[{"title":"Initializers","type":"groupMarker"},{"type":"init","path":"\/documentation\/haishinkit\/videomixersettings\/init(from:)","title":"init(from: any Decoder) throws"},{"type":"init","title":"init(mode: VideoMixerSettings.Mode, isMuted: Bool, mainTrack: UInt8)","path":"\/documentation\/haishinkit\/videomixersettings\/init(mode:ismuted:maintrack:)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/haishinkit\/videomixersettings\/ismuted","title":"var isMuted: Bool"},{"type":"property","title":"var mainTrack: UInt8","path":"\/documentation\/haishinkit\/videomixersettings\/maintrack"},{"title":"var mode: VideoMixerSettings.Mode","path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.property","type":"property"},{"type":"groupMarker","title":"Type Properties"},{"type":"property","title":"static let `default`: VideoMixerSettings","path":"\/documentation\/haishinkit\/videomixersettings\/default"},{"title":"Enumerations","type":"groupMarker"},{"type":"enum","title":"VideoMixerSettings.Mode","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"title":"case offscreen","path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/offscreen","type":"case"},{"path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/passthrough","type":"case","title":"case passthrough"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: String)","path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/init(rawvalue:)","type":"init"},{"type":"groupMarker","title":"Default Implementations"},{"title":"Equatable Implementations","type":"symbol","path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}]},{"title":"RawRepresentable Implementations","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init(from: any Decoder) throws","path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/init(from:)"},{"title":"Instance Properties","type":"groupMarker"},{"type":"property","path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/hashvalue","title":"var hashValue: Int"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func encode(to: any Encoder) throws","path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/encode(to:)","type":"method"},{"title":"func hash(into: inout Hasher)","path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/hash(into:)","type":"method"}],"type":"symbol","path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/rawrepresentable-implementations"}],"path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum"}]},{"type":"groupMarker","title":"Variables"},{"type":"var","path":"\/documentation\/haishinkit\/kamfundefined","title":"let kAMFUndefined: AMFUndefined"},{"type":"var","path":"\/documentation\/haishinkit\/khaishinkitidentifier","title":"let kHaishinKitIdentifier: String"},{"type":"groupMarker","title":"Type Aliases"},{"type":"typealias","title":"AMFObject","path":"\/documentation\/haishinkit\/amfobject"},{"title":"AudioDeviceConfigurationBlock","path":"\/documentation\/haishinkit\/audiodeviceconfigurationblock","type":"typealias"},{"title":"VideoDeviceConfigurationBlock","type":"typealias","path":"\/documentation\/haishinkit\/videodeviceconfigurationblock"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Type Methods"},{"path":"\/documentation\/haishinkit\/deviceutil\/device(withlocalizedname:mediatype:)","type":"method","title":"static func device(withLocalizedName: String, mediaType: AVMediaType) -> AVCaptureDevice?"}],"title":"DeviceUtil","path":"\/documentation\/haishinkit\/deviceutil","type":"enum"},{"title":"HKStreamReadyState","path":"\/documentation\/haishinkit\/hkstreamreadystate","type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/haishinkit\/hkstreamreadystate\/idle","type":"case","title":"case idle"},{"title":"case play","path":"\/documentation\/haishinkit\/hkstreamreadystate\/play","type":"case"},{"type":"case","path":"\/documentation\/haishinkit\/hkstreamreadystate\/playing","title":"case playing"},{"title":"case publish","path":"\/documentation\/haishinkit\/hkstreamreadystate\/publish","type":"case"},{"path":"\/documentation\/haishinkit\/hkstreamreadystate\/publishing","type":"case","title":"case publishing"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/hkstreamreadystate\/init(rawvalue:)","type":"init","title":"init?(rawValue: Int)"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","path":"\/documentation\/haishinkit\/hkstreamreadystate\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"}],"title":"Equatable Implementations","path":"\/documentation\/haishinkit\/hkstreamreadystate\/equatable-implementations"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/hkstreamreadystate\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"type":"method","title":"func hash(into: inout Hasher)","path":"\/documentation\/haishinkit\/hkstreamreadystate\/hash(into:)"}],"type":"symbol","path":"\/documentation\/haishinkit\/hkstreamreadystate\/rawrepresentable-implementations","title":"RawRepresentable Implementations"}]},{"path":"\/documentation\/haishinkit\/networkmonitorevent","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"title":"case publishInsufficientBWOccured(report: NetworkMonitorReport)","path":"\/documentation\/haishinkit\/networkmonitorevent\/publishinsufficientbwoccured(report:)","type":"case"},{"type":"case","path":"\/documentation\/haishinkit\/networkmonitorevent\/reset","title":"case reset"},{"path":"\/documentation\/haishinkit\/networkmonitorevent\/status(report:)","title":"case status(report: NetworkMonitorReport)","type":"case"}],"type":"enum","title":"NetworkMonitorEvent"},{"title":"RTMPObjectEncoding","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/haishinkit\/rtmpobjectencoding\/amf0","type":"case","title":"case amf0"},{"path":"\/documentation\/haishinkit\/rtmpobjectencoding\/amf3","type":"case","title":"case amf3"},{"type":"groupMarker","title":"Initializers"},{"title":"init?(rawValue: UInt8)","path":"\/documentation\/haishinkit\/rtmpobjectencoding\/init(rawvalue:)","type":"init"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/haishinkit\/rtmpobjectencoding\/equatable-implementations","title":"Equatable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/haishinkit\/rtmpobjectencoding\/!=(_:_:)"}],"type":"symbol"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/rtmpobjectencoding\/hashvalue","type":"property","title":"var hashValue: Int"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/rtmpobjectencoding\/hash(into:)","type":"method","title":"func hash(into: inout Hasher)"}],"path":"\/documentation\/haishinkit\/rtmpobjectencoding\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/haishinkit\/rtmpobjectencoding","type":"enum"},{"type":"groupMarker","title":"Extended Modules"},{"path":"\/documentation\/haishinkit\/coremedia","title":"CoreMedia","type":"extension","children":[{"title":"Extended Classes","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/coremedia\/cmformatdescription","title":"CMFormatDescription","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var isCompressed: Bool","path":"\/documentation\/haishinkit\/coremedia\/cmformatdescription\/iscompressed","type":"property"}],"type":"extension"}]}],"title":"HaishinKit"},{"path":"\/documentation\/moqthaishinkit","type":"module","title":"MoQTHaishinKit","children":[{"title":"Classes","type":"groupMarker"},{"title":"MoQTConnection","path":"\/documentation\/moqthaishinkit\/moqtconnection","type":"class","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/init(_:requesttimeout:)","title":"init(MoQTSetupRole, requestTimeOut: UInt64)","type":"init"},{"type":"groupMarker","title":"Instance Properties"},{"title":"var objectStream: AsyncStream<MoQTObject>","path":"\/documentation\/moqthaishinkit\/moqtconnection\/objectstream","type":"property"},{"type":"property","title":"let requestTimeout: UInt64","path":"\/documentation\/moqthaishinkit\/moqtconnection\/requesttimeout"},{"title":"let role: MoQTSetupRole","path":"\/documentation\/moqthaishinkit\/moqtconnection\/role","type":"property"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/annouce(_:authinfo:)","title":"func annouce([String], authInfo: String?) async throws -> Result<MoQTAnnounceOk, MoQTAnnounceError>","type":"method"},{"type":"method","path":"\/documentation\/moqthaishinkit\/moqtconnection\/close()","title":"func close() async"},{"type":"method","title":"func connect(String) async throws -> MoQTServerSetup","path":"\/documentation\/moqthaishinkit\/moqtconnection\/connect(_:)"},{"title":"func send([MoQTObject], header: MoQTStreamHeaderSubgroup) async throws","type":"method","path":"\/documentation\/moqthaishinkit\/moqtconnection\/send(_:header:)"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/subscribe(_:name:authinfo:)","title":"func subscribe([String], name: String, authInfo: String?) async throws -> Result<MoQTSubscribeOk, MoQTSubscribeError>","type":"method"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/subscribeannouces(_:authinfo:)","type":"method","title":"func subscribeAnnouces([String], authInfo: String?) async throws -> Result<MoQTSubscribeAnnouncesOk, MoQTSubscribeAnnouncesError>"},{"title":"Type Properties","type":"groupMarker"},{"title":"static let defaultPort: Int","type":"property","path":"\/documentation\/moqthaishinkit\/moqtconnection\/defaultport"},{"title":"static let defaultRequestTimeout: UInt64","type":"property","path":"\/documentation\/moqthaishinkit\/moqtconnection\/defaultrequesttimeout"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/supportedprotocols","type":"property","title":"static let supportedProtocols: [String]"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtconnection\/supportedversions","title":"static let supportedVersions: [MoQTVersion]"},{"title":"Enumerations","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/error","type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"title":"case connectionTimedOut","path":"\/documentation\/moqthaishinkit\/moqtconnection\/error\/connectiontimedout","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/error\/invalidstate","type":"case","title":"case invalidState"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/error\/requesttimedout","title":"case requestTimedOut","type":"case"},{"title":"case socketErrorOccurred(any Error)","path":"\/documentation\/moqthaishinkit\/moqtconnection\/error\/socketerroroccurred(_:)","type":"case"},{"type":"case","title":"case unknownResponse","path":"\/documentation\/moqthaishinkit\/moqtconnection\/error\/unknownresponse"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/error\/unsupportedcommand(_:)","type":"case","title":"case unsupportedCommand(String)"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Error Implementations","path":"\/documentation\/moqthaishinkit\/moqtconnection\/error\/error-implementations","type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"type":"property","title":"var localizedDescription: String","path":"\/documentation\/moqthaishinkit\/moqtconnection\/error\/localizeddescription"}]}],"title":"MoQTConnection.Error"},{"type":"groupMarker","title":"Default Implementations"},{"title":"Actor Implementations","path":"\/documentation\/moqthaishinkit\/moqtconnection\/actor-implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/assertisolated(_:file:line:)","type":"method","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)"},{"title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","path":"\/documentation\/moqthaishinkit\/moqtconnection\/assumeisolated(_:file:line:)","type":"method"},{"title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/moqthaishinkit\/moqtconnection\/preconditionisolated(_:file:line:)","type":"method"}],"type":"symbol"}]},{"type":"groupMarker","title":"Protocols"},{"path":"\/documentation\/moqthaishinkit\/moqtcontrolmessage","title":"MoQTControlMessage","type":"protocol","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var payload: Data","type":"property","path":"\/documentation\/moqthaishinkit\/moqtcontrolmessage\/payload"},{"title":"var type: MoQTMessageType","path":"\/documentation\/moqthaishinkit\/moqtcontrolmessage\/type","type":"property"}]},{"title":"Structures","type":"groupMarker"},{"type":"struct","title":"MoQTAnnounce","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtannounce\/payload","title":"var payload: Data","type":"property"},{"title":"let subscribeParameters: [MoQTVersionSpecificParameter]","path":"\/documentation\/moqthaishinkit\/moqtannounce\/subscribeparameters","type":"property"},{"type":"property","title":"let trackNamespace: [String]","path":"\/documentation\/moqthaishinkit\/moqtannounce\/tracknamespace"},{"path":"\/documentation\/moqthaishinkit\/moqtannounce\/type","title":"let type: MoQTMessageType","type":"property"}],"path":"\/documentation\/moqthaishinkit\/moqtannounce"},{"title":"MoQTAnnounceError","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"let code: Int","path":"\/documentation\/moqthaishinkit\/moqtannounceerror\/code","type":"property"},{"title":"var payload: Data","path":"\/documentation\/moqthaishinkit\/moqtannounceerror\/payload","type":"property"},{"path":"\/documentation\/moqthaishinkit\/moqtannounceerror\/reasonphrase","title":"let reasonPhrase: String","type":"property"},{"path":"\/documentation\/moqthaishinkit\/moqtannounceerror\/tracknamespace","title":"let trackNamespace: [String]","type":"property"},{"path":"\/documentation\/moqthaishinkit\/moqtannounceerror\/type","title":"let type: MoQTMessageType","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtannounceerror\/localizeddescription","type":"property","title":"var localizedDescription: String"}],"path":"\/documentation\/moqthaishinkit\/moqtannounceerror\/error-implementations","title":"Error Implementations"}],"path":"\/documentation\/moqthaishinkit\/moqtannounceerror","type":"struct"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/moqthaishinkit\/moqtannounceok\/payload","type":"property","title":"var payload: Data"},{"title":"let trackNamespace: [String]","path":"\/documentation\/moqthaishinkit\/moqtannounceok\/tracknamespace","type":"property"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtannounceok\/type","title":"let type: MoQTMessageType"}],"type":"struct","title":"MoQTAnnounceOk","path":"\/documentation\/moqthaishinkit\/moqtannounceok"},{"type":"struct","title":"MoQTGoaway","path":"\/documentation\/moqthaishinkit\/moqtgoaway","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/moqthaishinkit\/moqtgoaway\/newsessionuri","type":"property","title":"let newSessionURI: String"},{"path":"\/documentation\/moqthaishinkit\/moqtgoaway\/payload","title":"var payload: Data","type":"property"},{"title":"let type: MoQTMessageType","path":"\/documentation\/moqthaishinkit\/moqtgoaway\/type","type":"property"}]},{"path":"\/documentation\/moqthaishinkit\/moqtobject","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtobject\/init(id:status:data:)","title":"init(id: Int, status: Int?, data: Data)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let data: Data","type":"property","path":"\/documentation\/moqthaishinkit\/moqtobject\/data"},{"path":"\/documentation\/moqthaishinkit\/moqtobject\/id","title":"let id: Int","type":"property"},{"type":"property","title":"let status: Int?","path":"\/documentation\/moqthaishinkit\/moqtobject\/status"}],"title":"MoQTObject","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"type":"property","title":"var payload: Data","path":"\/documentation\/moqthaishinkit\/moqtserversetup\/payload"},{"title":"let selectedVersion: Int","path":"\/documentation\/moqthaishinkit\/moqtserversetup\/selectedversion","type":"property"},{"path":"\/documentation\/moqthaishinkit\/moqtserversetup\/setupparameters","title":"let setupParameters: [MoQTSetupParameter]","type":"property"},{"title":"let type: MoQTMessageType","path":"\/documentation\/moqthaishinkit\/moqtserversetup\/type","type":"property"}],"type":"struct","path":"\/documentation\/moqthaishinkit\/moqtserversetup","title":"MoQTServerSetup"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"let key: MoQTSetupParameterType","path":"\/documentation\/moqthaishinkit\/moqtsetupparameter\/key","type":"property"},{"type":"property","title":"let value: (any Sendable)","path":"\/documentation\/moqthaishinkit\/moqtsetupparameter\/value"}],"type":"struct","title":"MoQTSetupParameter","path":"\/documentation\/moqthaishinkit\/moqtsetupparameter"},{"title":"MoQTStreamHeaderSubgroup","path":"\/documentation\/moqthaishinkit\/moqtstreamheadersubgroup","children":[{"title":"Initializers","type":"groupMarker"},{"type":"init","path":"\/documentation\/moqthaishinkit\/moqtstreamheadersubgroup\/init(trackalias:groupid:subgroupid:publisherpriority:)","title":"init(trackAlias: Int, groupId: Int, subgroupId: Int, publisherPriority: Int)"},{"type":"groupMarker","title":"Instance Properties"},{"title":"let groupId: Int","path":"\/documentation\/moqthaishinkit\/moqtstreamheadersubgroup\/groupid","type":"property"},{"type":"property","title":"var payload: Data","path":"\/documentation\/moqthaishinkit\/moqtstreamheadersubgroup\/payload"},{"title":"let publisherPriority: Int","path":"\/documentation\/moqthaishinkit\/moqtstreamheadersubgroup\/publisherpriority","type":"property"},{"type":"property","title":"let subgroupId: Int","path":"\/documentation\/moqthaishinkit\/moqtstreamheadersubgroup\/subgroupid"},{"path":"\/documentation\/moqthaishinkit\/moqtstreamheadersubgroup\/trackalias","type":"property","title":"let trackAlias: Int"},{"title":"let type: MoQTDataStreamType","path":"\/documentation\/moqthaishinkit\/moqtstreamheadersubgroup\/type","type":"property"}],"type":"struct"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe","type":"struct","title":"MoQTSubscribe","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/endgroup","title":"let endGroup: Int?","type":"property"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/endobject","type":"property","title":"let endObject: Int?"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.property","title":"let filterType: MoQTSubscribe.FilterType","type":"property"},{"title":"let groupOrder: MoQTSubscribe.GroupOrder","type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.property"},{"type":"property","title":"var payload: Data","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/payload"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/startgroup","title":"let startGroup: Int?"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/startobject","title":"let startObject: Int?"},{"title":"let subscribeId: Int","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/subscribeid","type":"property"},{"type":"property","title":"let subscribeParameters: [MoQTVersionSpecificParameter]","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/subscribeparameters"},{"title":"let subscribePriority: Int","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/subscribepriority","type":"property"},{"type":"property","title":"let trackAlias: Int","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/trackalias"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/trackname","type":"property","title":"let trackName: String"},{"type":"property","title":"let trackNamespace: [String]","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/tracknamespace"},{"title":"let type: MoQTMessageType","type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/type"},{"type":"groupMarker","title":"Enumerations"},{"title":"MoQTSubscribe.FilterType","type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/absoluterange","title":"case absoluteRange","type":"case"},{"type":"case","title":"case absoluteStart","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/absolutestart"},{"type":"case","title":"case latestGroup","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/latestgroup"},{"type":"case","title":"case latestObject","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/latestobject"},{"type":"groupMarker","title":"Initializers"},{"title":"init?(rawValue: Int)","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/init(rawvalue:)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/!=(_:_:)"}]},{"title":"RawRepresentable Implementations","type":"symbol","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/rawrepresentable-implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/hashvalue","type":"property","title":"var hashValue: Int"},{"title":"Instance Methods","type":"groupMarker"},{"type":"method","title":"func hash(into: inout Hasher)","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/hash(into:)"}]}],"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum"},{"title":"MoQTSubscribe.GroupOrder","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum","type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case ascending","type":"case","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/ascending"},{"type":"case","title":"case descending","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/descending"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/original","type":"case","title":"case original"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}],"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/rawrepresentable-implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var hashValue: Int","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/hashvalue"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/hash(into:)","type":"method","title":"func hash(into: inout Hasher)"}],"type":"symbol","title":"RawRepresentable Implementations"}]}]},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounces","type":"struct","title":"MoQTSubscribeAnnounces","children":[{"type":"groupMarker","title":"Instance Properties"},{"title":"let parameters: [MoQTVersionSpecificParameter]","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounces\/parameters","type":"property"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounces\/payload","title":"var payload: Data","type":"property"},{"title":"let trackNamespacePrefix: [String]","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounces\/tracknamespaceprefix","type":"property"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounces\/type","title":"let type: MoQTMessageType"}]},{"type":"struct","title":"MoQTSubscribeAnnouncesError","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounceserror","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounceserror\/errorcode","title":"let errorCode: Int","type":"property"},{"title":"var payload: Data","type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounceserror\/payload"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounceserror\/reasonphrase","type":"property","title":"let reasonPhrase: String"},{"title":"let trackNamespacePrefix: [String]","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounceserror\/tracknamespaceprefix","type":"property"},{"title":"let type: MoQTMessageType","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounceserror\/type","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var localizedDescription: String","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounceserror\/localizeddescription","type":"property"}],"path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounceserror\/error-implementations","type":"symbol","title":"Error Implementations"}]},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var payload: Data","type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannouncesok\/payload"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeannouncesok\/tracknamespaceprefix","title":"let trackNamespacePrefix: [String]","type":"property"},{"type":"property","title":"let type: MoQTMessageType","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannouncesok\/type"}],"type":"struct","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannouncesok","title":"MoQTSubscribeAnnouncesOk"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror\/code","type":"property","title":"let code: Int"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror\/payload","type":"property","title":"var payload: Data"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror\/reasonphrase","type":"property","title":"let reasonPhrase: String"},{"type":"property","title":"let subscribeId: Int","path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror\/subscribeid"},{"title":"let trackAlias: Int","path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror\/trackalias","type":"property"},{"title":"let type: MoQTMessageType","path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror\/type","type":"property"},{"type":"groupMarker","title":"Default Implementations"},{"title":"Error Implementations","type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var localizedDescription: String","type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror\/localizeddescription"}],"path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror\/error-implementations"}],"type":"struct","title":"MoQTSubscribeError"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/contentexists","type":"property","title":"let contentExists: Bool"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/expires","type":"property","title":"let expires: Int"},{"type":"property","title":"let groupOrder: MoQTSubscribe.GroupOrder","path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/grouporder"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/largestgroupid","type":"property","title":"let largestGroupId: Int?"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/largestobjectid","type":"property","title":"let largestObjectId: Int?"},{"type":"property","title":"var payload: Data","path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/payload"},{"title":"let subscribeId: Int","path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/subscribeid","type":"property"},{"type":"property","title":"let subscribeParameters: [MoQTVersionSpecificParameter]","path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/subscribeparameters"},{"type":"property","title":"let type: MoQTMessageType","path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/type"}],"title":"MoQTSubscribeOk","path":"\/documentation\/moqthaishinkit\/moqtsubscribeok","type":"struct"},{"type":"struct","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"let key: MoQTVersionSpecificType","path":"\/documentation\/moqthaishinkit\/moqtversionspecificparameter\/key"},{"path":"\/documentation\/moqthaishinkit\/moqtversionspecificparameter\/value","type":"property","title":"let value: (any Sendable)"}],"title":"MoQTVersionSpecificParameter","path":"\/documentation\/moqthaishinkit\/moqtversionspecificparameter"},{"title":"Enumerations","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype","title":"MoQTDataStreamType","type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"type":"case","title":"case fetchHeader","path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/fetchheader"},{"type":"case","title":"case objectDatagram","path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/objectdatagram"},{"path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/streamheadersubgroup","type":"case","title":"case streamHeaderSubgroup"},{"type":"groupMarker","title":"Initializers"},{"title":"init?(rawValue: Int)","type":"init","path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/init(rawvalue:)"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/!=(_:_:)","type":"op"}],"type":"symbol","path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/equatable-implementations","title":"Equatable Implementations"},{"type":"symbol","path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"title":"var hashValue: Int","type":"property","path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/hashvalue"},{"title":"Instance Methods","type":"groupMarker"},{"type":"method","title":"func hash(into: inout Hasher)","path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/hash(into:)"}]}]},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/announce","title":"case announce","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/announcecancel","title":"case announceCancel","type":"case"},{"type":"case","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/announceerror","title":"case announceError"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/announceok","type":"case","title":"case announceOk"},{"type":"case","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/clientsetup","title":"case clientSetup"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/goaway","title":"case goaway","type":"case"},{"title":"case serverSetup","type":"case","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/serversetup"},{"type":"case","title":"case subscribe","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/subscribe"},{"type":"case","title":"case subscribeAnnounuces","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/subscribeannounuces"},{"title":"case subscribeAnnounucesError","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/subscribeannounuceserror","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/subscribeannounucesok","type":"case","title":"case subscribeAnnounucesOk"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/subscribedone","type":"case","title":"case subscribeDone"},{"title":"case subscribeError","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/subscribeerror","type":"case"},{"title":"case subscribeOk","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/subscribeok","type":"case"},{"title":"case subscribeUpdate","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/subscribeupdate","type":"case"},{"title":"case trackStatus","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/trackstatus","type":"case"},{"title":"case trackStatusRequest","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/trackstatusrequest","type":"case"},{"type":"case","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/unannounce","title":"case unannounce"},{"type":"case","title":"case unsubscribe","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/unsubscribe"},{"title":"Initializers","type":"groupMarker"},{"type":"init","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/init(rawvalue:)","title":"init?(rawValue: Int)"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"type":"op","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"}],"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/equatable-implementations"},{"title":"RawRepresentable Implementations","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/rawrepresentable-implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"title":"var hashValue: Int","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/hashvalue","type":"property"},{"type":"groupMarker","title":"Instance Methods"},{"title":"func hash(into: inout Hasher)","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/hash(into:)","type":"method"}],"type":"symbol"}],"title":"MoQTMessageType","type":"enum"},{"title":"MoQTSetupParameterType","path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype","type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"type":"case","title":"case maxSubscribeId","path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/maxsubscribeid"},{"path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/path","type":"case","title":"case path"},{"path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/role","type":"case","title":"case role"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/init(rawvalue:)","type":"init","title":"init?(rawValue: Int)"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/equatable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/!=(_:_:)"}],"type":"symbol","title":"Equatable Implementations"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/hashvalue","type":"property"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/rawrepresentable-implementations","type":"symbol","title":"RawRepresentable Implementations"}]},{"children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","title":"case pubSub","path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/pubsub"},{"title":"case publisher","type":"case","path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/publisher"},{"path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/subscriber","title":"case subscriber","type":"case"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: Int)","path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/init(rawvalue:)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/!=(_:_:)"}],"title":"Equatable Implementations","path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/equatable-implementations"},{"type":"symbol","title":"RawRepresentable Implementations","path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/rawrepresentable-implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/hashvalue","type":"property","title":"var hashValue: Int"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/hash(into:)","type":"method","title":"func hash(into: inout Hasher)"}]}],"path":"\/documentation\/moqthaishinkit\/moqtsetuprole","title":"MoQTSetupRole","type":"enum"},{"type":"enum","path":"\/documentation\/moqthaishinkit\/moqtversion","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"type":"case","path":"\/documentation\/moqthaishinkit\/moqtversion\/draft01","title":"case draft01"},{"type":"case","path":"\/documentation\/moqthaishinkit\/moqtversion\/draft02","title":"case draft02"},{"path":"\/documentation\/moqthaishinkit\/moqtversion\/draft03","type":"case","title":"case draft03"},{"path":"\/documentation\/moqthaishinkit\/moqtversion\/draft04","type":"case","title":"case draft04"},{"path":"\/documentation\/moqthaishinkit\/moqtversion\/draft05","type":"case","title":"case draft05"},{"path":"\/documentation\/moqthaishinkit\/moqtversion\/draft06","title":"case draft06","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtversion\/draft07","type":"case","title":"case draft07"},{"type":"case","title":"case draft07Exp","path":"\/documentation\/moqthaishinkit\/moqtversion\/draft07exp"},{"title":"case draft07Exp2","type":"case","path":"\/documentation\/moqthaishinkit\/moqtversion\/draft07exp2"},{"type":"groupMarker","title":"Initializers"},{"title":"init?(rawValue: Int)","type":"init","path":"\/documentation\/moqthaishinkit\/moqtversion\/init(rawvalue:)"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtversion\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}],"title":"Equatable Implementations","path":"\/documentation\/moqthaishinkit\/moqtversion\/equatable-implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","path":"\/documentation\/moqthaishinkit\/moqtversion\/hashvalue","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtversion\/hash(into:)","type":"method","title":"func hash(into: inout Hasher)"}],"path":"\/documentation\/moqthaishinkit\/moqtversion\/rawrepresentable-implementations","type":"symbol","title":"RawRepresentable Implementations"}],"title":"MoQTVersion"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"type":"case","title":"case authorizationInfo","path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/authorizationinfo"},{"type":"case","title":"case deliveryTimeout","path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/deliverytimeout"},{"path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/maxcacheduration","type":"case","title":"case maxCacheDuration"},{"type":"groupMarker","title":"Initializers"},{"title":"init?(rawValue: Int)","type":"init","path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/init(rawvalue:)"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Operators"},{"type":"op","path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"}],"path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/equatable-implementations","type":"symbol","title":"Equatable Implementations"},{"type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","type":"property","path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/hashvalue"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"title":"RawRepresentable Implementations","path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/rawrepresentable-implementations"}],"path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype","title":"MoQTVersionSpecificType","type":"enum"}]},{"type":"module","title":"SRTHaishinKit","path":"\/documentation\/srthaishinkit","children":[{"type":"groupMarker","title":"Classes"},{"title":"SRTConnection","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init()","path":"\/documentation\/srthaishinkit\/srtconnection\/init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var connected: Bool","path":"\/documentation\/srthaishinkit\/srtconnection\/connected","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtconnection\/performancedata","type":"property","title":"var performanceData: SRTPerformanceData?"},{"path":"\/documentation\/srthaishinkit\/srtconnection\/uri","title":"var uri: URL?","type":"property"},{"type":"groupMarker","title":"Instance Methods"},{"title":"func close() async throws","type":"method","path":"\/documentation\/srthaishinkit\/srtconnection\/close()"},{"type":"method","title":"func open(URL?, mode: SRTMode) async throws","path":"\/documentation\/srthaishinkit\/srtconnection\/open(_:mode:)"},{"type":"groupMarker","title":"Type Properties"},{"title":"static let version: String","type":"property","path":"\/documentation\/srthaishinkit\/srtconnection\/version"},{"title":"Enumerations","type":"groupMarker"},{"title":"SRTConnection.Error","path":"\/documentation\/srthaishinkit\/srtconnection\/error","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"title":"case failedToConnect(String, reson: Int32)","path":"\/documentation\/srthaishinkit\/srtconnection\/error\/failedtoconnect(_:reson:)","type":"case"},{"type":"case","path":"\/documentation\/srthaishinkit\/srtconnection\/error\/invalidstate","title":"case invalidState"},{"path":"\/documentation\/srthaishinkit\/srtconnection\/error\/unsupporteduri(_:)","type":"case","title":"case unsupportedUri(URL?)"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/srthaishinkit\/srtconnection\/error\/error-implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtconnection\/error\/localizeddescription","title":"var localizedDescription: String"}],"title":"Error Implementations","type":"symbol"}],"type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"type":"symbol","title":"Actor Implementations","path":"\/documentation\/srthaishinkit\/srtconnection\/actor-implementations","children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/srthaishinkit\/srtconnection\/assertisolated(_:file:line:)","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method"},{"type":"method","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","path":"\/documentation\/srthaishinkit\/srtconnection\/assumeisolated(_:file:line:)"},{"title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/srthaishinkit\/srtconnection\/preconditionisolated(_:file:line:)","type":"method"}]}],"type":"class","path":"\/documentation\/srthaishinkit\/srtconnection"},{"path":"\/documentation\/srthaishinkit\/srtstream","type":"class","title":"SRTStream","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/srthaishinkit\/srtstream\/init(connection:)","title":"init(connection: SRTConnection)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/srthaishinkit\/srtstream\/audiotrackid","title":"var audioTrackId: UInt8?","type":"property"},{"title":"var readyState: HKStreamReadyState","path":"\/documentation\/srthaishinkit\/srtstream\/readystate","type":"property"},{"title":"var videoTrackId: UInt8?","type":"property","path":"\/documentation\/srthaishinkit\/srtstream\/videotrackid"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/srthaishinkit\/srtstream\/close()","type":"method","title":"func close() async"},{"path":"\/documentation\/srthaishinkit\/srtstream\/play(_:)","type":"method","title":"func play(String?) async"},{"path":"\/documentation\/srthaishinkit\/srtstream\/publish(_:)","title":"func publish(String?) async","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Actor Implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/srthaishinkit\/srtstream\/assertisolated(_:file:line:)","type":"method"},{"type":"method","path":"\/documentation\/srthaishinkit\/srtstream\/assumeisolated(_:file:line:)","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T"},{"path":"\/documentation\/srthaishinkit\/srtstream\/preconditionisolated(_:file:line:)","type":"method","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)"}],"path":"\/documentation\/srthaishinkit\/srtstream\/actor-implementations","type":"symbol"},{"path":"\/documentation\/srthaishinkit\/srtstream\/hkstream-implementations","type":"symbol","title":"HKStream Implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"type":"property","title":"var audioSettings: AudioCodecSettings","path":"\/documentation\/srthaishinkit\/srtstream\/audiosettings"},{"title":"var soundTransform: SoundTransform?","path":"\/documentation\/srthaishinkit\/srtstream\/soundtransform","type":"property"},{"title":"var videoSettings: VideoCodecSettings","path":"\/documentation\/srthaishinkit\/srtstream\/videosettings","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func addOutput(some HKStreamOutput)","type":"method","path":"\/documentation\/srthaishinkit\/srtstream\/addoutput(_:)"},{"path":"\/documentation\/srthaishinkit\/srtstream\/append(_:)","title":"func append(CMSampleBuffer)","type":"method"},{"title":"func append(AVAudioBuffer, when: AVAudioTime)","path":"\/documentation\/srthaishinkit\/srtstream\/append(_:when:)","type":"method"},{"type":"method","path":"\/documentation\/srthaishinkit\/srtstream\/attachaudioplayer(_:)","title":"func attachAudioPlayer(AudioPlayer?) async"},{"title":"func dispatch(NetworkMonitorEvent) async","path":"\/documentation\/srthaishinkit\/srtstream\/dispatch(_:)","type":"method"},{"title":"func removeOutput(some HKStreamOutput)","path":"\/documentation\/srthaishinkit\/srtstream\/removeoutput(_:)","type":"method"},{"path":"\/documentation\/srthaishinkit\/srtstream\/setaudiosettings(_:)","type":"method","title":"func setAudioSettings(AudioCodecSettings)"},{"path":"\/documentation\/srthaishinkit\/srtstream\/setbitratestorategy(_:)","type":"method","title":"func setBitrateStorategy((some HKStreamBitRateStrategy)?)"},{"title":"func setSoundTransform(SoundTransform) async","path":"\/documentation\/srthaishinkit\/srtstream\/setsoundtransform(_:)","type":"method"},{"path":"\/documentation\/srthaishinkit\/srtstream\/setvideoinputbuffercounts(_:)","type":"method","title":"func setVideoInputBufferCounts(Int)"},{"title":"func setVideoSettings(VideoCodecSettings)","path":"\/documentation\/srthaishinkit\/srtstream\/setvideosettings(_:)","type":"method"}]},{"children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/srthaishinkit\/srtstream\/mixer(_:didoutput:)","type":"method","title":"func mixer(MediaMixer, didOutput: CMSampleBuffer)"},{"path":"\/documentation\/srthaishinkit\/srtstream\/mixer(_:didoutput:when:)","title":"func mixer(MediaMixer, didOutput: AVAudioPCMBuffer, when: AVAudioTime)","type":"method"},{"type":"method","path":"\/documentation\/srthaishinkit\/srtstream\/selecttrack(_:mediatype:)","title":"func selectTrack(UInt8?, mediaType: CMFormatDescription.MediaType)"}],"type":"symbol","path":"\/documentation\/srthaishinkit\/srtstream\/mediamixeroutput-implementations","title":"MediaMixerOutput Implementations"}]},{"title":"Structures","type":"groupMarker"},{"title":"SRTLogger","type":"struct","path":"\/documentation\/srthaishinkit\/srtlogger","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var functionalAreas: Set<SRTLogFunctionalArea>","path":"\/documentation\/srthaishinkit\/srtlogger\/functionalareas"},{"path":"\/documentation\/srthaishinkit\/srtlogger\/level","type":"property","title":"var level: SRTLogLevel"},{"title":"Type Properties","type":"groupMarker"},{"type":"property","title":"static let shared: SRTLogger","path":"\/documentation\/srthaishinkit\/srtlogger\/shared"}]},{"path":"\/documentation\/srthaishinkit\/srtperformancedata","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/byteavailrcvbuf","title":"let byteAvailRcvBuf: Int32","type":"property"},{"title":"let byteAvailSndBuf: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/byteavailsndbuf","type":"property"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytemss","title":"let byteMSS: Int32"},{"title":"let byteRcvBuf: Int32","type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytercvbuf"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytercvdrop","title":"let byteRcvDrop: UInt64"},{"title":"let byteRcvDropTotal: UInt64","type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytercvdroptotal"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytercvloss","type":"property","title":"let byteRcvLoss: UInt64"},{"title":"let byteRcvLossTotal: UInt64","type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytercvlosstotal"},{"title":"let byteRcvUndecrypt: UInt64","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytercvundecrypt","type":"property"},{"title":"let byteRcvUndecryptTotal: UInt64","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytercvundecrypttotal","type":"property"},{"title":"let byteRecv: UInt64","type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/byterecv"},{"type":"property","title":"let byteRecvTotal: UInt64","path":"\/documentation\/srthaishinkit\/srtperformancedata\/byterecvtotal"},{"type":"property","title":"let byteRetrans: UInt64","path":"\/documentation\/srthaishinkit\/srtperformancedata\/byteretrans"},{"title":"let byteRetransTotal: UInt64","type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/byteretranstotal"},{"type":"property","title":"let byteSent: UInt64","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytesent"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytesenttotal","title":"let byteSentTotal: UInt64"},{"type":"property","title":"let byteSndBuf: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytesndbuf"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytesnddrop","type":"property","title":"let byteSndDrop: UInt64"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytesnddroptotal","type":"property","title":"let byteSndDropTotal: UInt64"},{"type":"property","title":"let mbpsBandwidth: Double","path":"\/documentation\/srthaishinkit\/srtperformancedata\/mbpsbandwidth"},{"title":"let mbpsMaxBW: Double","path":"\/documentation\/srthaishinkit\/srtperformancedata\/mbpsmaxbw","type":"property"},{"title":"let mbpsRecvRate: Double","path":"\/documentation\/srthaishinkit\/srtperformancedata\/mbpsrecvrate","type":"property"},{"title":"let mbpsSendRate: Double","path":"\/documentation\/srthaishinkit\/srtperformancedata\/mbpssendrate","type":"property"},{"type":"property","title":"let msRTT: Double","path":"\/documentation\/srthaishinkit\/srtperformancedata\/msrtt"},{"title":"let msRcvBuf: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/msrcvbuf","type":"property"},{"title":"let msRcvTsbPdDelay: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/msrcvtsbpddelay","type":"property"},{"type":"property","title":"let msSndBuf: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/mssndbuf"},{"type":"property","title":"let msSndTsbPdDelay: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/mssndtsbpddelay"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/mstimestamp","title":"let msTimeStamp: Int64"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktcongestionwindow","title":"let pktCongestionWindow: Int32"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktflightsize","type":"property","title":"let pktFlightSize: Int32"},{"type":"property","title":"let pktFlowWindow: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktflowwindow"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvavgbelatedtime","title":"let pktRcvAvgBelatedTime: Double","type":"property"},{"type":"property","title":"let pktRcvBelated: Int64","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvbelated"},{"type":"property","title":"let pktRcvBuf: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvbuf"},{"title":"let pktRcvDrop: Int32","type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvdrop"},{"type":"property","title":"let pktRcvDropTotal: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvdroptotal"},{"type":"property","title":"let pktRcvFilterExtra: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvfilterextra"},{"title":"let pktRcvFilterExtraTotal: Int32","type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvfilterextratotal"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvfilterloss","type":"property","title":"let pktRcvFilterLoss: Int32"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvfilterlosstotal","type":"property","title":"let pktRcvFilterLossTotal: Int32"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvfiltersupply","title":"let pktRcvFilterSupply: Int32","type":"property"},{"title":"let pktRcvFilterSupplyTotal: Int32","type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvfiltersupplytotal"},{"title":"let pktRcvLoss: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvloss","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvlosstotal","type":"property","title":"let pktRcvLossTotal: Int32"},{"title":"let pktRcvRetrans: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvretrans","type":"property"},{"title":"let pktRcvUndecrypt: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvundecrypt","type":"property"},{"title":"let pktRcvUndecryptTotal: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvundecrypttotal","type":"property"},{"type":"property","title":"let pktRecv: Int64","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrecv"},{"title":"let pktRecvACK: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrecvack","type":"property"},{"title":"let pktRecvACKTotal: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrecvacktotal","type":"property"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrecvnak","title":"let pktRecvNAK: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrecvnaktotal","title":"let pktRecvNAKTotal: Int32"},{"title":"let pktRecvTotal: Int64","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrecvtotal","type":"property"},{"type":"property","title":"let pktReorderDistance: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktreorderdistance"},{"title":"let pktReorderTolerance: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktreordertolerance","type":"property"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktretrans","title":"let pktRetrans: Int32"},{"title":"let pktRetransTotal: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktretranstotal","type":"property"},{"title":"let pktSent: Int64","type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsent"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsentack","type":"property","title":"let pktSentACK: Int32"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsentacktotal","type":"property","title":"let pktSentACKTotal: Int32"},{"type":"property","title":"let pktSentNAK: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsentnak"},{"title":"let pktSentNAKTotal: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsentnaktotal","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsenttotal","title":"let pktSentTotal: Int64","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsndbuf","type":"property","title":"let pktSndBuf: Int32"},{"type":"property","title":"let pktSndDrop: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsnddrop"},{"title":"let pktSndDropTotal: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsnddroptotal","type":"property"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsndfilterextra","title":"let pktSndFilterExtra: Int32"},{"type":"property","title":"let pktSndFilterExtraTotal: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsndfilterextratotal"},{"type":"property","title":"let pktSndLoss: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsndloss"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsndlosstotal","title":"let pktSndLossTotal: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/uspktsndperiod","title":"let usPktSndPeriod: Double"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/ussndduration","title":"let usSndDuration: Int64"},{"type":"property","title":"let usSndDurationTotal: Int64","path":"\/documentation\/srthaishinkit\/srtperformancedata\/ussnddurationtotal"}],"title":"SRTPerformanceData","type":"struct"},{"type":"groupMarker","title":"Enumerations"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"type":"case","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/apictrl","title":"case apiCtrl"},{"title":"case apiRecv","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/apirecv","type":"case"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/apisend","type":"case","title":"case apiSend"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/applog","title":"case applog","type":"case"},{"type":"case","title":"case bstats","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/bstats"},{"title":"case bufRecv","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/bufrecv","type":"case"},{"type":"case","title":"case bufSend","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/bufsend"},{"title":"case chanRecv","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/chanrecv","type":"case"},{"title":"case chnMgmt","type":"case","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/chnmgmt"},{"type":"case","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/chnsend","title":"case chnSend"},{"type":"case","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/congest","title":"case congest"},{"title":"case control","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/control","type":"case"},{"title":"case data","type":"case","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/data"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/epollapi","type":"case","title":"case epollApi"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/epollupd","type":"case","title":"case epollUpd"},{"title":"case general","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/general","type":"case"},{"title":"case grpMgmt","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/grpmgmt","type":"case"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/grprecv","title":"case grpRecv","type":"case"},{"title":"case grpSend","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/grpsend","type":"case"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/haicrypt","title":"case haicrypt","type":"case"},{"title":"case `internal`","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/internal","type":"case"},{"title":"case pfilter","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/pfilter","type":"case"},{"title":"case queCtrl","type":"case","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/quectrl"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/quemgmt","type":"case","title":"case queMgmt"},{"title":"case queRecv","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/querecv","type":"case"},{"title":"case queSend","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/quesend","type":"case"},{"type":"case","title":"case rsrc","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/rsrc"},{"title":"case tsbpd","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/tsbpd","type":"case"},{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init?(rawValue: Int32)","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/init(rawvalue:)"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/equatable-implementations","type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/!=(_:_:)","type":"op"}],"title":"Equatable Implementations"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/rawrepresentable-implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/hashvalue","type":"property"},{"type":"groupMarker","title":"Instance Methods"},{"title":"func hash(into: inout Hasher)","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/hash(into:)","type":"method"}],"type":"symbol","title":"RawRepresentable Implementations"}],"type":"enum","title":"SRTLogFunctionalArea"},{"title":"SRTLogLevel","path":"\/documentation\/srthaishinkit\/srtloglevel","type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/srthaishinkit\/srtloglevel\/crit","type":"case","title":"case crit"},{"title":"case debug","path":"\/documentation\/srthaishinkit\/srtloglevel\/debug","type":"case"},{"path":"\/documentation\/srthaishinkit\/srtloglevel\/error","type":"case","title":"case error"},{"path":"\/documentation\/srthaishinkit\/srtloglevel\/notice","title":"case notice","type":"case"},{"title":"case warning","type":"case","path":"\/documentation\/srthaishinkit\/srtloglevel\/warning"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","path":"\/documentation\/srthaishinkit\/srtloglevel\/equatable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/srthaishinkit\/srtloglevel\/!=(_:_:)"}],"type":"symbol"}]},{"title":"SRTMode","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case caller","path":"\/documentation\/srthaishinkit\/srtmode\/caller","type":"case"},{"path":"\/documentation\/srthaishinkit\/srtmode\/listener","title":"case listener","type":"case"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/srthaishinkit\/srtmode\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"title":"Equatable Implementations","path":"\/documentation\/srthaishinkit\/srtmode\/equatable-implementations","type":"symbol"}],"type":"enum","path":"\/documentation\/srthaishinkit\/srtmode"}]}]},"includedArchiveIdentifiers":["Logboard","HaishinKit","MoQTHaishinKit","SRTHaishinKit"]}