{"interfaceLanguages":{"swift":[{"children":[{"title":"Logboard","type":"module","children":[{"title":"Classes","type":"groupMarker"},{"title":"ConsoleAppender","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/logboard\/consoleappender\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/logboard\/consoleappender\/append(_:level:format:arguments:file:function:line:)","title":"func append(LBLogger, level: LBLogger.Level, format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)","type":"method"},{"path":"\/documentation\/logboard\/consoleappender\/append(_:level:message:file:function:line:)","title":"func append(LBLogger, level: LBLogger.Level, message: [Any], file: StaticString, function: StaticString, line: Int)","type":"method"}],"path":"\/documentation\/logboard\/consoleappender","type":"class"},{"title":"LBLogger","children":[{"title":"Structures","type":"groupMarker"},{"title":"LBLogger.Data","type":"struct","path":"\/documentation\/logboard\/lblogger\/data","children":[{"title":"Initializers","type":"groupMarker"},{"type":"init","title":"init?(Data)","path":"\/documentation\/logboard\/lblogger\/data\/init(_:)"},{"title":"Instance Properties","type":"groupMarker"},{"type":"property","title":"let date: Date","path":"\/documentation\/logboard\/lblogger\/data\/date"},{"type":"property","title":"let file: String","path":"\/documentation\/logboard\/lblogger\/data\/file"},{"type":"property","title":"let function: String","path":"\/documentation\/logboard\/lblogger\/data\/function"},{"type":"property","title":"let identifier: String","path":"\/documentation\/logboard\/lblogger\/data\/identifier"},{"type":"property","title":"let level: LBLogger.Level","path":"\/documentation\/logboard\/lblogger\/data\/level"},{"type":"property","title":"let line: Int","path":"\/documentation\/logboard\/lblogger\/data\/line"},{"type":"property","title":"let message: String","path":"\/documentation\/logboard\/lblogger\/data\/message"},{"title":"Default Implementations","type":"groupMarker"},{"type":"symbol","title":"CustomStringConvertible Implementations","path":"\/documentation\/logboard\/lblogger\/data\/customstringconvertible-implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var description: String","path":"\/documentation\/logboard\/lblogger\/data\/description"}]}]},{"title":"Initializers","type":"groupMarker"},{"title":"init(String)","type":"init","path":"\/documentation\/logboard\/lblogger\/init(_:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var appender: any LBLoggerAppender","type":"property","path":"\/documentation\/logboard\/lblogger\/appender"},{"title":"let identifier: String","type":"property","path":"\/documentation\/logboard\/lblogger\/identifier"},{"title":"var level: LBLogger.Level","type":"property","path":"\/documentation\/logboard\/lblogger\/level-swift.property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func debug(Any..., file: StaticString, function: StaticString, line: Int)","type":"method","path":"\/documentation\/logboard\/lblogger\/debug(_:file:function:line:)"},{"title":"func debug(format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)","type":"method","path":"\/documentation\/logboard\/lblogger\/debug(format:arguments:file:function:line:)"},{"title":"func error(Any..., file: StaticString, function: StaticString, line: Int)","type":"method","path":"\/documentation\/logboard\/lblogger\/error(_:file:function:line:)"},{"title":"func error(format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)","type":"method","path":"\/documentation\/logboard\/lblogger\/error(format:arguments:file:function:line:)"},{"title":"func info(Any..., file: StaticString, function: StaticString, line: Int)","type":"method","path":"\/documentation\/logboard\/lblogger\/info(_:file:function:line:)"},{"title":"func info(format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)","type":"method","path":"\/documentation\/logboard\/lblogger\/info(format:arguments:file:function:line:)"},{"title":"func isEnabledFor(level: LBLogger.Level) -> Bool","type":"method","path":"\/documentation\/logboard\/lblogger\/isenabledfor(level:)"},{"title":"func trace(Any..., file: StaticString, function: StaticString, line: Int)","type":"method","path":"\/documentation\/logboard\/lblogger\/trace(_:file:function:line:)"},{"title":"func trace(format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)","type":"method","path":"\/documentation\/logboard\/lblogger\/trace(format:arguments:file:function:line:)"},{"title":"func warn(Any..., file: StaticString, function: StaticString, line: Int)","type":"method","path":"\/documentation\/logboard\/lblogger\/warn(_:file:function:line:)"},{"title":"func warn(format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)","type":"method","path":"\/documentation\/logboard\/lblogger\/warn(format:arguments:file:function:line:)"},{"title":"Type Properties","type":"groupMarker"},{"title":"static var dateFormatter: DateFormatter","type":"property","path":"\/documentation\/logboard\/lblogger\/dateformatter"},{"title":"Type Methods","type":"groupMarker"},{"title":"static func with(String) -> LBLogger","type":"method","path":"\/documentation\/logboard\/lblogger\/with(_:)"},{"title":"Enumerations","type":"groupMarker"},{"title":"LBLogger.Level","type":"enum","path":"\/documentation\/logboard\/lblogger\/level-swift.enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case debug","path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/debug","type":"case"},{"title":"case error","path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/error","type":"case"},{"title":"case info","path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/info","type":"case"},{"title":"case trace","path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/trace","type":"case"},{"title":"case warn","path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/warn","type":"case"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: Int)","path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/init(rawvalue:)","type":"init"},{"title":"init?(string: String)","path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/init(string:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var description: String","path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/description","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}],"title":"Equatable Implementations","path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/equatable-implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","type":"property","path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/hashvalue"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func hash(into: inout Hasher)","type":"method","path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/hash(into:)"}],"title":"RawRepresentable Implementations","path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/rawrepresentable-implementations","type":"symbol"}]}],"path":"\/documentation\/logboard\/lblogger","type":"class"},{"title":"MultiAppender","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/logboard\/multiappender\/init()","type":"init","title":"init()"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/logboard\/multiappender\/appenders","type":"property","title":"var appenders: [any LBLoggerAppender]"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/logboard\/multiappender\/append(_:level:format:arguments:file:function:line:)","type":"method","title":"func append(LBLogger, level: LBLogger.Level, format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)"},{"path":"\/documentation\/logboard\/multiappender\/append(_:level:message:file:function:line:)","type":"method","title":"func append(LBLogger, level: LBLogger.Level, message: [Any], file: StaticString, function: StaticString, line: Int)"}],"path":"\/documentation\/logboard\/multiappender","type":"class"},{"title":"NullAppender","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/logboard\/nullappender\/append(_:level:format:arguments:file:function:line:)","title":"func append(LBLogger, level: LBLogger.Level, format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)"},{"type":"method","path":"\/documentation\/logboard\/nullappender\/append(_:level:message:file:function:line:)","title":"func append(LBLogger, level: LBLogger.Level, message: [Any], file: StaticString, function: StaticString, line: Int)"},{"type":"groupMarker","title":"Type Properties"},{"type":"property","path":"\/documentation\/logboard\/nullappender\/shared","title":"static let shared: NullAppender"}],"path":"\/documentation\/logboard\/nullappender","type":"class"},{"title":"OSLoggerAppender","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/logboard\/osloggerappender\/init(sybsystem:category:)","title":"init(sybsystem: String, category: String)"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/logboard\/osloggerappender\/append(_:level:format:arguments:file:function:line:)","title":"func append(LBLogger, level: LBLogger.Level, format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)"},{"type":"method","path":"\/documentation\/logboard\/osloggerappender\/append(_:level:message:file:function:line:)","title":"func append(LBLogger, level: LBLogger.Level, message: [Any], file: StaticString, function: StaticString, line: Int)"}],"path":"\/documentation\/logboard\/osloggerappender","type":"class"},{"title":"SocketAppender","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init()","path":"\/documentation\/logboard\/socketappender\/init()"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func append(LBLogger, level: LBLogger.Level, format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/socketappender\/append(_:level:format:arguments:file:function:line:)"},{"type":"method","title":"func append(LBLogger, level: LBLogger.Level, message: [Any], file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/socketappender\/append(_:level:message:file:function:line:)"},{"type":"method","title":"func close()","path":"\/documentation\/logboard\/socketappender\/close()"},{"type":"method","title":"func connect(String, port: Int)","path":"\/documentation\/logboard\/socketappender\/connect(_:port:)"}],"path":"\/documentation\/logboard\/socketappender","type":"class"},{"title":"Protocols","type":"groupMarker"},{"title":"LBLoggerAppender","children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/logboard\/lbloggerappender\/append(_:level:format:arguments:file:function:line:)","title":"func append(LBLogger, level: LBLogger.Level, format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)","type":"method"},{"path":"\/documentation\/logboard\/lbloggerappender\/append(_:level:message:file:function:line:)","title":"func append(LBLogger, level: LBLogger.Level, message: [Any], file: StaticString, function: StaticString, line: Int)","type":"method"}],"path":"\/documentation\/logboard\/lbloggerappender","type":"protocol"}],"path":"\/documentation\/logboard"},{"title":"HaishinKit","type":"module","children":[{"type":"groupMarker","title":"Articles"},{"type":"article","path":"\/documentation\/haishinkit\/e-rtmp","title":"Enhanced RTMP"},{"type":"groupMarker","title":"Classes"},{"type":"class","path":"\/documentation\/haishinkit\/assetscreenobject","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/assetscreenobject\/chromakeycolor","title":"var chromaKeyColor: CGColor?","type":"property"},{"path":"\/documentation\/haishinkit\/assetscreenobject\/isreading","title":"var isReading: Bool","type":"property"},{"path":"\/documentation\/haishinkit\/assetscreenobject\/videogravity","title":"var videoGravity: AVLayerVideoGravity","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/assetscreenobject\/cancelreading()","title":"func cancelReading()","type":"method"},{"path":"\/documentation\/haishinkit\/assetscreenobject\/makebounds(_:)","title":"func makeBounds(CGSize) -> CGRect","type":"method"},{"path":"\/documentation\/haishinkit\/assetscreenobject\/makeimage(_:)","title":"func makeImage(some ScreenRenderer) -> CGImage?","type":"method"},{"path":"\/documentation\/haishinkit\/assetscreenobject\/startreading(_:)","title":"func startReading(AVAsset) throws","type":"method"}],"title":"AssetScreenObject"},{"type":"class","path":"\/documentation\/haishinkit\/audiodeviceunit","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/audiodeviceunit\/connection","type":"property","title":"var connection: AVCaptureConnection?"},{"path":"\/documentation\/haishinkit\/audiodeviceunit\/device","type":"property","title":"var device: AVCaptureDevice?"},{"path":"\/documentation\/haishinkit\/audiodeviceunit\/input","type":"property","title":"var input: AVCaptureInput?"},{"path":"\/documentation\/haishinkit\/audiodeviceunit\/output-swift.property","type":"property","title":"var output: AudioDeviceUnit.Output?"},{"path":"\/documentation\/haishinkit\/audiodeviceunit\/track","type":"property","title":"let track: UInt8"},{"type":"groupMarker","title":"Type Aliases"},{"path":"\/documentation\/haishinkit\/audiodeviceunit\/output-swift.typealias","type":"typealias","title":"AudioDeviceUnit.Output"}],"title":"AudioDeviceUnit"},{"type":"class","path":"\/documentation\/haishinkit\/audioplayer","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/haishinkit\/audioplayer\/init(audioengine:)","title":"init(audioEngine: AVAudioEngine)"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","path":"\/documentation\/haishinkit\/audioplayer\/actor-implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/audioplayer\/assertisolated(_:file:line:)","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method"},{"path":"\/documentation\/haishinkit\/audioplayer\/assumeisolated(_:file:line:)","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","type":"method"},{"path":"\/documentation\/haishinkit\/audioplayer\/preconditionisolated(_:file:line:)","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method"}],"title":"Actor Implementations"}],"title":"AudioPlayer"},{"type":"class","path":"\/documentation\/haishinkit\/hkincomingstream","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(some HKStream)","type":"init","path":"\/documentation\/haishinkit\/hkincomingstream\/init(_:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var isRunning: Bool","type":"property","path":"\/documentation\/haishinkit\/hkincomingstream\/isrunning"},{"title":"var soundTransfrom: SoundTransform?","type":"property","path":"\/documentation\/haishinkit\/hkincomingstream\/soundtransfrom"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func append(CMSampleBuffer)","type":"method","path":"\/documentation\/haishinkit\/hkincomingstream\/append(_:)"},{"title":"func append(AVAudioBuffer, when: AVAudioTime)","type":"method","path":"\/documentation\/haishinkit\/hkincomingstream\/append(_:when:)"},{"title":"func attachAudioPlayer(AudioPlayer?) async","type":"method","path":"\/documentation\/haishinkit\/hkincomingstream\/attachaudioplayer(_:)"},{"title":"func setSoundTransform(SoundTransform) async","type":"method","path":"\/documentation\/haishinkit\/hkincomingstream\/setsoundtransform(_:)"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/hkincomingstream\/assertisolated(_:file:line:)","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method"},{"path":"\/documentation\/haishinkit\/hkincomingstream\/assumeisolated(_:file:line:)","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","type":"method"},{"path":"\/documentation\/haishinkit\/hkincomingstream\/preconditionisolated(_:file:line:)","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method"}],"title":"Actor Implementations","type":"symbol","path":"\/documentation\/haishinkit\/hkincomingstream\/actor-implementations"},{"children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/haishinkit\/hkincomingstream\/startrunning()","title":"func startRunning()"},{"type":"method","path":"\/documentation\/haishinkit\/hkincomingstream\/stoprunning()","title":"func stopRunning()"}],"title":"AsyncRunner Implementations","type":"symbol","path":"\/documentation\/haishinkit\/hkincomingstream\/asyncrunner-implementations"}],"title":"HKIncomingStream"},{"type":"class","path":"\/documentation\/haishinkit\/hkoutgoingstream","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/haishinkit\/hkoutgoingstream\/init()","type":"init","title":"init()"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/hkoutgoingstream\/audioinputformat","type":"property","title":"var audioInputFormat: CMFormatDescription?"},{"path":"\/documentation\/haishinkit\/hkoutgoingstream\/audiooutputstream","type":"property","title":"var audioOutputStream: AsyncStream<(AVAudioBuffer, AVAudioTime)>"},{"path":"\/documentation\/haishinkit\/hkoutgoingstream\/audiosettings","type":"property","title":"var audioSettings: AudioCodecSettings"},{"path":"\/documentation\/haishinkit\/hkoutgoingstream\/isrunning","type":"property","title":"var isRunning: Bool"},{"path":"\/documentation\/haishinkit\/hkoutgoingstream\/videoinputbuffercounts","type":"property","title":"var videoInputBufferCounts: Int"},{"path":"\/documentation\/haishinkit\/hkoutgoingstream\/videoinputformat","type":"property","title":"var videoInputFormat: CMFormatDescription?"},{"path":"\/documentation\/haishinkit\/hkoutgoingstream\/videoinputstream","type":"property","title":"var videoInputStream: AsyncStream<CMSampleBuffer>"},{"path":"\/documentation\/haishinkit\/hkoutgoingstream\/videooutputstream","type":"property","title":"var videoOutputStream: AsyncStream<CMSampleBuffer>"},{"path":"\/documentation\/haishinkit\/hkoutgoingstream\/videosettings","type":"property","title":"var videoSettings: VideoCodecSettings"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/hkoutgoingstream\/append(_:)","type":"method","title":"func append(CMSampleBuffer)"},{"path":"\/documentation\/haishinkit\/hkoutgoingstream\/append(_:when:)","type":"method","title":"func append(AVAudioBuffer, when: AVAudioTime)"},{"path":"\/documentation\/haishinkit\/hkoutgoingstream\/append(video:)","type":"method","title":"func append(video: CMSampleBuffer)"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/haishinkit\/hkoutgoingstream\/runner-implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/hkoutgoingstream\/startrunning()","title":"func startRunning()","type":"method"},{"path":"\/documentation\/haishinkit\/hkoutgoingstream\/stoprunning()","title":"func stopRunning()","type":"method"}],"type":"symbol","title":"Runner Implementations"}],"title":"HKOutgoingStream"},{"type":"class","path":"\/documentation\/haishinkit\/hkstreamrecorder","children":[{"title":"Initializers","type":"groupMarker"},{"type":"init","title":"init()","path":"\/documentation\/haishinkit\/hkstreamrecorder\/init()"},{"title":"Instance Properties","type":"groupMarker"},{"type":"property","title":"var audioTrackId: UInt8?","path":"\/documentation\/haishinkit\/hkstreamrecorder\/audiotrackid"},{"type":"property","title":"var isRecording: Bool","path":"\/documentation\/haishinkit\/hkstreamrecorder\/isrecording"},{"type":"property","title":"var movieFragmentInterval: Double?","path":"\/documentation\/haishinkit\/hkstreamrecorder\/moviefragmentinterval"},{"type":"property","title":"var moviesDirectory: URL","path":"\/documentation\/haishinkit\/hkstreamrecorder\/moviesdirectory"},{"type":"property","title":"var outputURL: URL?","path":"\/documentation\/haishinkit\/hkstreamrecorder\/outputurl"},{"type":"property","title":"var settings: [AVMediaType : [String : any Sendable]]","path":"\/documentation\/haishinkit\/hkstreamrecorder\/settings"},{"type":"property","title":"var videoTrackId: UInt8?","path":"\/documentation\/haishinkit\/hkstreamrecorder\/videotrackid"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func selectTrack(UInt8?, mediaType: CMFormatDescription.MediaType)","path":"\/documentation\/haishinkit\/hkstreamrecorder\/selecttrack(_:mediatype:)","type":"method"},{"title":"func setMovieFragmentInterval(Double?)","path":"\/documentation\/haishinkit\/hkstreamrecorder\/setmoviefragmentinterval(_:)","type":"method"},{"title":"func setMovieFragmentInterval(movieFragmentInterval: Double?)","path":"\/documentation\/haishinkit\/hkstreamrecorder\/setmoviefragmentinterval(moviefragmentinterval:)","type":"method"},{"title":"func startRecording(URL?, settings: [AVMediaType : [String : any Sendable]]) async throws","path":"\/documentation\/haishinkit\/hkstreamrecorder\/startrecording(_:settings:)","type":"method"},{"title":"func stopRecording() async throws -> URL","path":"\/documentation\/haishinkit\/hkstreamrecorder\/stoprecording()","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"title":"static let defaultSettings: [AVMediaType : [String : any Sendable]]","path":"\/documentation\/haishinkit\/hkstreamrecorder\/defaultsettings","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"title":"HKStreamRecorder.Error","path":"\/documentation\/haishinkit\/hkstreamrecorder\/error","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case failedToAppend(error: (any Error)?)","type":"case","path":"\/documentation\/haishinkit\/hkstreamrecorder\/error\/failedtoappend(error:)"},{"title":"case failedToCreateAssetWriter(error: any Error)","type":"case","path":"\/documentation\/haishinkit\/hkstreamrecorder\/error\/failedtocreateassetwriter(error:)"},{"title":"case failedToCreateAssetWriterInput(error: any Error)","type":"case","path":"\/documentation\/haishinkit\/hkstreamrecorder\/error\/failedtocreateassetwriterinput(error:)"},{"title":"case failedToFinishWriting(error: (any Error)?)","type":"case","path":"\/documentation\/haishinkit\/hkstreamrecorder\/error\/failedtofinishwriting(error:)"},{"title":"case fileAlreadyExists(outputURL: URL)","type":"case","path":"\/documentation\/haishinkit\/hkstreamrecorder\/error\/filealreadyexists(outputurl:)"},{"title":"case invalidState","type":"case","path":"\/documentation\/haishinkit\/hkstreamrecorder\/error\/invalidstate"},{"title":"case notSupportedFileType(pathExtension: String)","type":"case","path":"\/documentation\/haishinkit\/hkstreamrecorder\/error\/notsupportedfiletype(pathextension:)"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Error Implementations","type":"symbol","path":"\/documentation\/haishinkit\/hkstreamrecorder\/error\/error-implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/error\/localizeddescription","title":"var localizedDescription: String","type":"property"}]}],"type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Actor Implementations","path":"\/documentation\/haishinkit\/hkstreamrecorder\/actor-implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"type":"method","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/haishinkit\/hkstreamrecorder\/assertisolated(_:file:line:)"},{"type":"method","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","path":"\/documentation\/haishinkit\/hkstreamrecorder\/assumeisolated(_:file:line:)"},{"type":"method","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/haishinkit\/hkstreamrecorder\/preconditionisolated(_:file:line:)"}],"type":"symbol"},{"title":"HKStreamOutput Implementations","path":"\/documentation\/haishinkit\/hkstreamrecorder\/hkstreamoutput-implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func stream(some HKStream, didOutput: CMSampleBuffer)","path":"\/documentation\/haishinkit\/hkstreamrecorder\/stream(_:didoutput:)","type":"method"},{"title":"func stream(some HKStream, didOutput: AVAudioBuffer, when: AVAudioTime)","path":"\/documentation\/haishinkit\/hkstreamrecorder\/stream(_:didoutput:when:)","type":"method"}],"type":"symbol"},{"title":"MediaMixerOutput Implementations","path":"\/documentation\/haishinkit\/hkstreamrecorder\/mediamixeroutput-implementations","children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/mixer(_:didoutput:)","type":"method","title":"func mixer(MediaMixer, didOutput: CMSampleBuffer)"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/mixer(_:didoutput:when:)","type":"method","title":"func mixer(MediaMixer, didOutput: AVAudioPCMBuffer, when: AVAudioTime)"}],"type":"symbol"}],"title":"HKStreamRecorder"},{"type":"class","path":"\/documentation\/haishinkit\/hkstreamvideoadaptivebitratestrategy","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init(mamimumVideoBitrate: Int)","path":"\/documentation\/haishinkit\/hkstreamvideoadaptivebitratestrategy\/init(mamimumvideobitrate:)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"let mamimumAudioBitRate: Int","path":"\/documentation\/haishinkit\/hkstreamvideoadaptivebitratestrategy\/mamimumaudiobitrate"},{"type":"property","title":"let mamimumVideoBitRate: Int","path":"\/documentation\/haishinkit\/hkstreamvideoadaptivebitratestrategy\/mamimumvideobitrate"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func adjustBitrate(NetworkMonitorEvent, stream: some HKStream) async","path":"\/documentation\/haishinkit\/hkstreamvideoadaptivebitratestrategy\/adjustbitrate(_:stream:)"},{"type":"groupMarker","title":"Type Properties"},{"type":"property","title":"static let statusCountsThreshold: Int","path":"\/documentation\/haishinkit\/hkstreamvideoadaptivebitratestrategy\/statuscountsthreshold"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/haishinkit\/hkstreamvideoadaptivebitratestrategy\/assertisolated(_:file:line:)","type":"method"},{"title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","path":"\/documentation\/haishinkit\/hkstreamvideoadaptivebitratestrategy\/assumeisolated(_:file:line:)","type":"method"},{"title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/haishinkit\/hkstreamvideoadaptivebitratestrategy\/preconditionisolated(_:file:line:)","type":"method"}],"type":"symbol","title":"Actor Implementations","path":"\/documentation\/haishinkit\/hkstreamvideoadaptivebitratestrategy\/actor-implementations"}],"title":"HKStreamVideoAdaptiveBitRateStrategy"},{"type":"class","path":"\/documentation\/haishinkit\/imagescreenobject","children":[{"title":"Instance Properties","type":"groupMarker"},{"type":"property","title":"var cgImage: CGImage?","path":"\/documentation\/haishinkit\/imagescreenobject\/cgimage"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func makeBounds(CGSize) -> CGRect","path":"\/documentation\/haishinkit\/imagescreenobject\/makebounds(_:)"},{"type":"method","title":"func makeImage(some ScreenRenderer) -> CGImage?","path":"\/documentation\/haishinkit\/imagescreenobject\/makeimage(_:)"}],"title":"ImageScreenObject"},{"type":"class","path":"\/documentation\/haishinkit\/mthkview","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/haishinkit\/mthkview\/init(coder:)","title":"init(coder: NSCoder)"},{"type":"init","path":"\/documentation\/haishinkit\/mthkview\/init(frame:)","title":"init(frame: CGRect)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/haishinkit\/mthkview\/audiotrackid","title":"var audioTrackId: UInt8?"},{"type":"property","path":"\/documentation\/haishinkit\/mthkview\/videogravity","title":"var videoGravity: AVLayerVideoGravity"},{"type":"property","path":"\/documentation\/haishinkit\/mthkview\/videotrackid","title":"var videoTrackId: UInt8?"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/haishinkit\/mthkview\/awakefromnib()","title":"func awakeFromNib()"},{"type":"method","path":"\/documentation\/haishinkit\/mthkview\/draw(_:)","title":"func draw(CGRect)"},{"type":"method","path":"\/documentation\/haishinkit\/mthkview\/registervideoeffect(_:)","title":"func registerVideoEffect(some VideoEffect) -> Bool"},{"type":"method","path":"\/documentation\/haishinkit\/mthkview\/unregistervideoeffect(_:)","title":"func unregisterVideoEffect(some VideoEffect) -> Bool"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/mthkview\/stream(_:didoutput:)","type":"method","title":"func stream(some HKStream, didOutput: CMSampleBuffer)"},{"path":"\/documentation\/haishinkit\/mthkview\/stream(_:didoutput:when:)","type":"method","title":"func stream(some HKStream, didOutput: AVAudioBuffer, when: AVAudioTime)"}],"type":"symbol","path":"\/documentation\/haishinkit\/mthkview\/hkstreamoutput-implementations","title":"HKStreamOutput Implementations"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"type":"method","title":"func mixer(MediaMixer, didOutput: CMSampleBuffer)","path":"\/documentation\/haishinkit\/mthkview\/mixer(_:didoutput:)"},{"type":"method","title":"func mixer(MediaMixer, didOutput: AVAudioPCMBuffer, when: AVAudioTime)","path":"\/documentation\/haishinkit\/mthkview\/mixer(_:didoutput:when:)"},{"type":"method","title":"func selectTrack(UInt8?, mediaType: CMFormatDescription.MediaType) async","path":"\/documentation\/haishinkit\/mthkview\/selecttrack(_:mediatype:)"}],"type":"symbol","path":"\/documentation\/haishinkit\/mthkview\/mediamixeroutput-implementations","title":"MediaMixerOutput Implementations"}],"title":"MTHKView"},{"type":"class","path":"\/documentation\/haishinkit\/mediamixer","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(multiTrackAudioMixingEnabled: Bool, useManualCapture: Bool)","type":"init","path":"\/documentation\/haishinkit\/mediamixer\/init(multitrackaudiomixingenabled:usemanualcapture:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var audioInputFormats: [UInt8 : AVAudioFormat]","type":"property","path":"\/documentation\/haishinkit\/mediamixer\/audioinputformats"},{"title":"var audioMixerSettings: AudioMixerSettings","type":"property","path":"\/documentation\/haishinkit\/mediamixer\/audiomixersettings"},{"title":"var frameRate: Float64","type":"property","path":"\/documentation\/haishinkit\/mediamixer\/framerate"},{"title":"var isCapturing: Bool","type":"property","path":"\/documentation\/haishinkit\/mediamixer\/iscapturing"},{"title":"var isInterputted: AsyncStream<Bool>","type":"property","path":"\/documentation\/haishinkit\/mediamixer\/isinterputted"},{"title":"var isMonitoringEnabled: Bool","type":"property","path":"\/documentation\/haishinkit\/mediamixer\/ismonitoringenabled"},{"title":"var isMultiTrackAudioMixingEnabled: Bool","type":"property","path":"\/documentation\/haishinkit\/mediamixer\/ismultitrackaudiomixingenabled"},{"title":"var isRunning: Bool","type":"property","path":"\/documentation\/haishinkit\/mediamixer\/isrunning"},{"title":"var isTorchEnabled: Bool","type":"property","path":"\/documentation\/haishinkit\/mediamixer\/istorchenabled"},{"title":"var screen: Screen","type":"property","path":"\/documentation\/haishinkit\/mediamixer\/screen"},{"title":"var sessionPreset: AVCaptureSession.Preset","type":"property","path":"\/documentation\/haishinkit\/mediamixer\/sessionpreset"},{"title":"var videoInputFormats: [UInt8 : CMFormatDescription]","type":"property","path":"\/documentation\/haishinkit\/mediamixer\/videoinputformats"},{"title":"var videoMixerSettings: VideoMixerSettings","type":"property","path":"\/documentation\/haishinkit\/mediamixer\/videomixersettings"},{"title":"var videoOrientation: AVCaptureVideoOrientation","type":"property","path":"\/documentation\/haishinkit\/mediamixer\/videoorientation"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func addOutput(some MediaMixerOutput)","type":"method","path":"\/documentation\/haishinkit\/mediamixer\/addoutput(_:)"},{"title":"func append(CMSampleBuffer, track: UInt8)","type":"method","path":"\/documentation\/haishinkit\/mediamixer\/append(_:track:)"},{"title":"func append(AVAudioBuffer, when: AVAudioTime, track: UInt8)","type":"method","path":"\/documentation\/haishinkit\/mediamixer\/append(_:when:track:)"},{"title":"func attachAudio(AVCaptureDevice?, track: UInt8, configuration: AudioDeviceConfigurationBlock?) async throws","type":"method","path":"\/documentation\/haishinkit\/mediamixer\/attachaudio(_:track:configuration:)"},{"title":"func attachVideo(AVCaptureDevice?, track: UInt8, configuration: VideoDeviceConfigurationBlock?) async throws","type":"method","path":"\/documentation\/haishinkit\/mediamixer\/attachvideo(_:track:configuration:)"},{"title":"func configuration((AVCaptureSession) throws -> Void) rethrows","type":"method","path":"\/documentation\/haishinkit\/mediamixer\/configuration(_:)"},{"title":"func configuration(audio: UInt8, configuration: (AudioDeviceUnit) throws -> Void) throws","type":"method","path":"\/documentation\/haishinkit\/mediamixer\/configuration(audio:configuration:)"},{"title":"func configuration(video: UInt8, configuration: (VideoDeviceUnit) throws -> Void) throws","type":"method","path":"\/documentation\/haishinkit\/mediamixer\/configuration(video:configuration:)"},{"title":"func removeOutput(some MediaMixerOutput)","type":"method","path":"\/documentation\/haishinkit\/mediamixer\/removeoutput(_:)"},{"title":"func setAudioMixerSettings(AudioMixerSettings)","type":"method","path":"\/documentation\/haishinkit\/mediamixer\/setaudiomixersettings(_:)"},{"title":"func setFrameRate(Float64)","type":"method","path":"\/documentation\/haishinkit\/mediamixer\/setframerate(_:)"},{"title":"func setMonitoringEnabled(Bool)","type":"method","path":"\/documentation\/haishinkit\/mediamixer\/setmonitoringenabled(_:)"},{"title":"func setSessionPreset(AVCaptureSession.Preset)","type":"method","path":"\/documentation\/haishinkit\/mediamixer\/setsessionpreset(_:)"},{"title":"func setTorchEnabled(Bool)","type":"method","path":"\/documentation\/haishinkit\/mediamixer\/settorchenabled(_:)"},{"title":"func setVideoMixerSettings(VideoMixerSettings)","type":"method","path":"\/documentation\/haishinkit\/mediamixer\/setvideomixersettings(_:)"},{"title":"func setVideoOrientation(AVCaptureVideoOrientation)","type":"method","path":"\/documentation\/haishinkit\/mediamixer\/setvideoorientation(_:)"},{"title":"func startCapturing()","type":"method","path":"\/documentation\/haishinkit\/mediamixer\/startcapturing()"},{"title":"func stopCapturing()","type":"method","path":"\/documentation\/haishinkit\/mediamixer\/stopcapturing()"},{"title":"Enumerations","type":"groupMarker"},{"title":"MediaMixer.Error","type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/mediamixer\/error\/devicenotfound","title":"case deviceNotFound","type":"case"},{"path":"\/documentation\/haishinkit\/mediamixer\/error\/failedtoattach(_:)","title":"case failedToAttach(any Error)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/mediamixer\/error\/error-implementations","title":"Error Implementations","type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var localizedDescription: String","path":"\/documentation\/haishinkit\/mediamixer\/error\/localizeddescription","type":"property"}]}],"path":"\/documentation\/haishinkit\/mediamixer\/error"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Actor Implementations","type":"symbol","children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/mediamixer\/assertisolated(_:file:line:)","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method"},{"path":"\/documentation\/haishinkit\/mediamixer\/assumeisolated(_:file:line:)","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","type":"method"},{"path":"\/documentation\/haishinkit\/mediamixer\/preconditionisolated(_:file:line:)","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method"}],"path":"\/documentation\/haishinkit\/mediamixer\/actor-implementations"},{"title":"AsyncRunner Implementations","type":"symbol","children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/mediamixer\/startrunning()","title":"func startRunning()","type":"method"},{"path":"\/documentation\/haishinkit\/mediamixer\/stoprunning()","title":"func stopRunning()","type":"method"}],"path":"\/documentation\/haishinkit\/mediamixer\/asyncrunner-implementations"}],"title":"MediaMixer"},{"type":"class","path":"\/documentation\/haishinkit\/networkmonitor","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(some NetworkTransportReporter)","type":"init","path":"\/documentation\/haishinkit\/networkmonitor\/init(_:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var event: AsyncStream<NetworkMonitorEvent>","type":"property","path":"\/documentation\/haishinkit\/networkmonitor\/event"},{"title":"var isRunning: Bool","type":"property","path":"\/documentation\/haishinkit\/networkmonitor\/isrunning"},{"title":"Enumerations","type":"groupMarker"},{"title":"NetworkMonitor.Error","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","title":"case invalidState","path":"\/documentation\/haishinkit\/networkmonitor\/error\/invalidstate"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/haishinkit\/networkmonitor\/error\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}],"type":"symbol","title":"Equatable Implementations","path":"\/documentation\/haishinkit\/networkmonitor\/error\/equatable-implementations"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var localizedDescription: String","path":"\/documentation\/haishinkit\/networkmonitor\/error\/localizeddescription","type":"property"}],"type":"symbol","title":"Error Implementations","path":"\/documentation\/haishinkit\/networkmonitor\/error\/error-implementations"}],"type":"enum","path":"\/documentation\/haishinkit\/networkmonitor\/error"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Actor Implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method","path":"\/documentation\/haishinkit\/networkmonitor\/assertisolated(_:file:line:)"},{"title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","type":"method","path":"\/documentation\/haishinkit\/networkmonitor\/assumeisolated(_:file:line:)"},{"title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method","path":"\/documentation\/haishinkit\/networkmonitor\/preconditionisolated(_:file:line:)"}],"type":"symbol","path":"\/documentation\/haishinkit\/networkmonitor\/actor-implementations"},{"title":"AsyncRunner Implementations","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/haishinkit\/networkmonitor\/startrunning()","title":"func startRunning()"},{"type":"method","path":"\/documentation\/haishinkit\/networkmonitor\/stoprunning()","title":"func stopRunning()"}],"type":"symbol","path":"\/documentation\/haishinkit\/networkmonitor\/asyncrunner-implementations"}],"title":"NetworkMonitor"},{"type":"class","path":"\/documentation\/haishinkit\/piphkview","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init?(coder: NSCoder)","type":"init","path":"\/documentation\/haishinkit\/piphkview\/init(coder:)"},{"title":"init(frame: CGRect)","type":"init","path":"\/documentation\/haishinkit\/piphkview\/init(frame:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var audioTrackId: UInt8?","type":"property","path":"\/documentation\/haishinkit\/piphkview\/audiotrackid"},{"title":"var videoGravity: AVLayerVideoGravity","type":"property","path":"\/documentation\/haishinkit\/piphkview\/videogravity"},{"title":"var videoTrackId: UInt8?","type":"property","path":"\/documentation\/haishinkit\/piphkview\/videotrackid"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func awakeFromNib()","type":"method","path":"\/documentation\/haishinkit\/piphkview\/awakefromnib()"},{"title":"Type Properties","type":"groupMarker"},{"title":"static var defaultBackgroundColor: NSColor","type":"property","path":"\/documentation\/haishinkit\/piphkview\/defaultbackgroundcolor"},{"title":"Default Implementations","type":"groupMarker"},{"title":"HKStreamOutput Implementations","type":"symbol","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func stream(some HKStream, didOutput: CMSampleBuffer)","path":"\/documentation\/haishinkit\/piphkview\/stream(_:didoutput:)","type":"method"},{"title":"func stream(some HKStream, didOutput: AVAudioBuffer, when: AVAudioTime)","path":"\/documentation\/haishinkit\/piphkview\/stream(_:didoutput:when:)","type":"method"}],"path":"\/documentation\/haishinkit\/piphkview\/hkstreamoutput-implementations"},{"title":"MediaMixerOutput Implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/piphkview\/mixer(_:didoutput:)","type":"method","title":"func mixer(MediaMixer, didOutput: CMSampleBuffer)"},{"path":"\/documentation\/haishinkit\/piphkview\/mixer(_:didoutput:when:)","type":"method","title":"func mixer(MediaMixer, didOutput: AVAudioPCMBuffer, when: AVAudioTime)"},{"path":"\/documentation\/haishinkit\/piphkview\/selecttrack(_:mediatype:)","type":"method","title":"func selectTrack(UInt8?, mediaType: CMFormatDescription.MediaType) async"}],"path":"\/documentation\/haishinkit\/piphkview\/mediamixeroutput-implementations"}],"title":"PiPHKView"},{"type":"class","path":"\/documentation\/haishinkit\/rtmpconnection","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(swfUrl: String?, pageUrl: String?, flashVer: String, fourCcList: [String]?, videoFourCcInfoMap: AMFObject?, audioFourCcInfoMap: AMFObject?, capsEx: Int, timeout: Int, requestTimeout: UInt64, chunkSize: Int, qualityOfService: DispatchQoS)","path":"\/documentation\/haishinkit\/rtmpconnection\/init(swfurl:pageurl:flashver:fourcclist:videofourccinfomap:audiofourccinfomap:capsex:timeout:requesttimeout:chunksize:qualityofservice:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let audioFourCcInfoMap: AMFObject?","path":"\/documentation\/haishinkit\/rtmpconnection\/audiofourccinfomap","type":"property"},{"title":"let capsEx: Int","path":"\/documentation\/haishinkit\/rtmpconnection\/capsex","type":"property"},{"title":"let chunkSize: Int","path":"\/documentation\/haishinkit\/rtmpconnection\/chunksize","type":"property"},{"title":"var connected: Bool","path":"\/documentation\/haishinkit\/rtmpconnection\/connected","type":"property"},{"title":"let flashVer: String","path":"\/documentation\/haishinkit\/rtmpconnection\/flashver","type":"property"},{"title":"let fourCcList: [String]?","path":"\/documentation\/haishinkit\/rtmpconnection\/fourcclist","type":"property"},{"title":"let objectEncoding: RTMPObjectEncoding","path":"\/documentation\/haishinkit\/rtmpconnection\/objectencoding","type":"property"},{"title":"let pageUrl: String?","path":"\/documentation\/haishinkit\/rtmpconnection\/pageurl","type":"property"},{"title":"let qualityOfService: DispatchQoS","path":"\/documentation\/haishinkit\/rtmpconnection\/qualityofservice","type":"property"},{"title":"let requestTimeout: UInt64","path":"\/documentation\/haishinkit\/rtmpconnection\/requesttimeout","type":"property"},{"title":"var status: AsyncStream<RTMPStatus>","path":"\/documentation\/haishinkit\/rtmpconnection\/status","type":"property"},{"title":"let swfUrl: String?","path":"\/documentation\/haishinkit\/rtmpconnection\/swfurl","type":"property"},{"title":"let timeout: Int","path":"\/documentation\/haishinkit\/rtmpconnection\/timeout","type":"property"},{"title":"var uri: URL?","path":"\/documentation\/haishinkit\/rtmpconnection\/uri","type":"property"},{"title":"let videoFourCcInfoMap: AMFObject?","path":"\/documentation\/haishinkit\/rtmpconnection\/videofourccinfomap","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func call(String, arguments: (any Sendable)?...) async throws -> RTMPResponse","path":"\/documentation\/haishinkit\/rtmpconnection\/call(_:arguments:)","type":"method"},{"title":"func close() async throws","path":"\/documentation\/haishinkit\/rtmpconnection\/close()","type":"method"},{"title":"func connect(String, arguments: (any Sendable)?...) async throws -> RTMPResponse","path":"\/documentation\/haishinkit\/rtmpconnection\/connect(_:arguments:)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"title":"static let defaultCapabilities: Int","path":"\/documentation\/haishinkit\/rtmpconnection\/defaultcapabilities","type":"property"},{"title":"static let defaultChunkSizeS: Int","path":"\/documentation\/haishinkit\/rtmpconnection\/defaultchunksizes","type":"property"},{"title":"static let defaultFlashVer: String","path":"\/documentation\/haishinkit\/rtmpconnection\/defaultflashver","type":"property"},{"title":"static let defaultObjectEncoding: RTMPObjectEncoding","path":"\/documentation\/haishinkit\/rtmpconnection\/defaultobjectencoding","type":"property"},{"title":"static let defaultPort: Int","path":"\/documentation\/haishinkit\/rtmpconnection\/defaultport","type":"property"},{"title":"static let defaultRequestTimeout: UInt64","path":"\/documentation\/haishinkit\/rtmpconnection\/defaultrequesttimeout","type":"property"},{"title":"static let defaultSecurePort: Int","path":"\/documentation\/haishinkit\/rtmpconnection\/defaultsecureport","type":"property"},{"title":"static let defaultTimeout: Int","path":"\/documentation\/haishinkit\/rtmpconnection\/defaulttimeout","type":"property"},{"title":"static let defaultWindowSizeS: Int64","path":"\/documentation\/haishinkit\/rtmpconnection\/defaultwindowsizes","type":"property"},{"title":"static let supportedAudioFourCcInfoMap: AMFObject","path":"\/documentation\/haishinkit\/rtmpconnection\/supportedaudiofourccinfomap","type":"property"},{"title":"static let supportedFourCcList: [String]","path":"\/documentation\/haishinkit\/rtmpconnection\/supportedfourcclist","type":"property"},{"title":"static let supportedProtocols: Set<String>","path":"\/documentation\/haishinkit\/rtmpconnection\/supportedprotocols","type":"property"},{"title":"static let supportedVideoFourCcInfoMap: AMFObject","path":"\/documentation\/haishinkit\/rtmpconnection\/supportedvideofourccinfomap","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"title":"RTMPConnection.Code","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case callBadVersion","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/callbadversion","type":"case"},{"title":"case callFailed","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/callfailed","type":"case"},{"title":"case callProhibited","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/callprohibited","type":"case"},{"title":"case connectAppshutdown","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/connectappshutdown","type":"case"},{"title":"case connectClosed","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/connectclosed","type":"case"},{"title":"case connectFailed","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/connectfailed","type":"case"},{"title":"case connectIdleTimeOut","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/connectidletimeout","type":"case"},{"title":"case connectInvalidApp","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/connectinvalidapp","type":"case"},{"title":"case connectNetworkChange","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/connectnetworkchange","type":"case"},{"title":"case connectRejected","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/connectrejected","type":"case"},{"title":"case connectSuccess","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/connectsuccess","type":"case"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: String)","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/init(rawvalue:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var level: String","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/level","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/equatable-implementations","type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/code\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}]},{"title":"RawRepresentable Implementations","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/rawrepresentable-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/code\/hashvalue","type":"property","title":"var hashValue: Int"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/code\/hash(into:)","type":"method","title":"func hash(into: inout Hasher)"}]}],"path":"\/documentation\/haishinkit\/rtmpconnection\/code","type":"enum"},{"title":"RTMPConnection.Error","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/error\/connectiontimedout","type":"case","title":"case connectionTimedOut"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/error\/invalidstate","type":"case","title":"case invalidState"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/error\/requestfailed(response:)","type":"case","title":"case requestFailed(response: RTMPResponse)"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/error\/requesttimedout","type":"case","title":"case requestTimedOut"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/error\/socketerroroccurred(_:)","type":"case","title":"case socketErrorOccurred(any Error)"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/error\/unsupportedcommand(_:)","type":"case","title":"case unsupportedCommand(String)"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/error\/error-implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"type":"property","title":"var localizedDescription: String","path":"\/documentation\/haishinkit\/rtmpconnection\/error\/localizeddescription"}],"type":"symbol","title":"Error Implementations"}],"path":"\/documentation\/haishinkit\/rtmpconnection\/error","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Actor Implementations","children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/assertisolated(_:file:line:)","type":"method","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/assumeisolated(_:file:line:)","type":"method","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/preconditionisolated(_:file:line:)","type":"method","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)"}],"path":"\/documentation\/haishinkit\/rtmpconnection\/actor-implementations","type":"symbol"}],"title":"RTMPConnection"},{"type":"class","path":"\/documentation\/haishinkit\/rtmpsharedobject","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/rtmpsharedobject\/data","title":"var data: AMFObject","type":"property"},{"path":"\/documentation\/haishinkit\/rtmpsharedobject\/objectencoding","title":"let objectEncoding: RTMPObjectEncoding","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/rtmpsharedobject\/clear()","title":"func clear() async","type":"method"},{"path":"\/documentation\/haishinkit\/rtmpsharedobject\/close()","title":"func close() async","type":"method"},{"path":"\/documentation\/haishinkit\/rtmpsharedobject\/connect(_:)","title":"func connect(RTMPConnection) async","type":"method"},{"path":"\/documentation\/haishinkit\/rtmpsharedobject\/setproperty(_:_:)","title":"func setProperty(String, (any Sendable)?) async","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/rtmpsharedobject\/getremote(withname:remotepath:persistence:)","title":"static func getRemote(withName: String, remotePath: String, persistence: Bool) -> RTMPSharedObject","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/rtmpsharedobject\/assertisolated(_:file:line:)","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method"},{"path":"\/documentation\/haishinkit\/rtmpsharedobject\/assumeisolated(_:file:line:)","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","type":"method"},{"path":"\/documentation\/haishinkit\/rtmpsharedobject\/preconditionisolated(_:file:line:)","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method"}],"path":"\/documentation\/haishinkit\/rtmpsharedobject\/actor-implementations","title":"Actor Implementations","type":"symbol"}],"title":"RTMPSharedObject"},{"type":"class","path":"\/documentation\/haishinkit\/rtmpstream","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/haishinkit\/rtmpstream\/init(connection:fcpublishname:)","title":"init(connection: RTMPConnection, fcPublishName: String?)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/haishinkit\/rtmpstream\/audiosampleaccess","title":"var audioSampleAccess: Bool"},{"type":"property","path":"\/documentation\/haishinkit\/rtmpstream\/audiotrackid","title":"var audioTrackId: UInt8?"},{"type":"property","path":"\/documentation\/haishinkit\/rtmpstream\/currentfps","title":"var currentFPS: UInt16"},{"type":"property","path":"\/documentation\/haishinkit\/rtmpstream\/fcpublishname","title":"var fcPublishName: String?"},{"type":"property","path":"\/documentation\/haishinkit\/rtmpstream\/info","title":"var info: RTMPStreamInfo"},{"type":"property","path":"\/documentation\/haishinkit\/rtmpstream\/metadata","title":"var metadata: AMFArray"},{"type":"property","path":"\/documentation\/haishinkit\/rtmpstream\/objectencoding","title":"var objectEncoding: RTMPObjectEncoding"},{"type":"property","path":"\/documentation\/haishinkit\/rtmpstream\/readystate","title":"var readyState: HKStreamReadyState"},{"type":"property","path":"\/documentation\/haishinkit\/rtmpstream\/status","title":"var status: AsyncStream<RTMPStatus>"},{"type":"property","path":"\/documentation\/haishinkit\/rtmpstream\/videosampleaccess","title":"var videoSampleAccess: Bool"},{"type":"property","path":"\/documentation\/haishinkit\/rtmpstream\/videotrackid","title":"var videoTrackId: UInt8?"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/haishinkit\/rtmpstream\/close()","title":"func close() async throws -> RTMPResponse"},{"type":"method","path":"\/documentation\/haishinkit\/rtmpstream\/pause(_:)","title":"func pause(Bool) async throws -> RTMPResponse"},{"type":"method","path":"\/documentation\/haishinkit\/rtmpstream\/play(_:)","title":"func play((any Sendable)?...) async throws -> RTMPResponse"},{"type":"method","path":"\/documentation\/haishinkit\/rtmpstream\/publish(_:type:)","title":"func publish(String?, type: RTMPStream.HowToPublish) async throws -> RTMPResponse"},{"type":"method","path":"\/documentation\/haishinkit\/rtmpstream\/receiveaudio(_:)","title":"func receiveAudio(Bool) async throws"},{"type":"method","path":"\/documentation\/haishinkit\/rtmpstream\/receivevideo(_:)","title":"func receiveVideo(Bool) async throws"},{"type":"method","path":"\/documentation\/haishinkit\/rtmpstream\/seek(_:)","title":"func seek(Double) async throws"},{"type":"method","path":"\/documentation\/haishinkit\/rtmpstream\/send(_:arguments:isresettimestamp:)","title":"func send(String, arguments: (any Sendable)?..., isResetTimestamp: Bool) throws"},{"type":"method","path":"\/documentation\/haishinkit\/rtmpstream\/togglepause()","title":"func togglePause() async throws -> RTMPResponse"},{"type":"groupMarker","title":"Enumerations"},{"type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case bufferEmpty","type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/code\/bufferempty"},{"title":"case bufferFlush","type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/code\/bufferflush"},{"title":"case bufferFull","type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/code\/bufferfull"},{"title":"case connectClosed","type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/code\/connectclosed"},{"title":"case connectFailed","type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/code\/connectfailed"},{"title":"case connectRejected","type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/code\/connectrejected"},{"title":"case connectSuccess","type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/code\/connectsuccess"},{"title":"case drmUpdateNeeded","type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/code\/drmupdateneeded"},{"title":"case failed","type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/code\/failed"},{"title":"case multicastStreamReset","type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/code\/multicaststreamreset"},{"title":"case pauseNotify","type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/code\/pausenotify"},{"title":"case playFailed","type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/code\/playfailed"},{"title":"case playFileStructureInvalid","type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/code\/playfilestructureinvalid"},{"title":"case playInsufficientBW","type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/code\/playinsufficientbw"},{"title":"case playNoSupportedTrackFound","type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/code\/playnosupportedtrackfound"},{"title":"case playReset","type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/code\/playreset"},{"title":"case playStart","type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/code\/playstart"},{"title":"case playStop","type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/code\/playstop"},{"title":"case playStreamNotFound","type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/code\/playstreamnotfound"},{"title":"case playTransition","type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/code\/playtransition"},{"title":"case playUnpublishNotify","type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/code\/playunpublishnotify"},{"title":"case publishBadName","type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/code\/publishbadname"},{"title":"case publishIdle","type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/code\/publishidle"},{"title":"case publishStart","type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/code\/publishstart"},{"title":"case recordAlreadyExists","type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/code\/recordalreadyexists"},{"title":"case recordDiskQuotaExceeded","type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/code\/recorddiskquotaexceeded"},{"title":"case recordFailed","type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/code\/recordfailed"},{"title":"case recordNoAccess","type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/code\/recordnoaccess"},{"title":"case recordStart","type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/code\/recordstart"},{"title":"case recordStop","type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/code\/recordstop"},{"title":"case secondScreenStart","type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/code\/secondscreenstart"},{"title":"case secondScreenStop","type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/code\/secondscreenstop"},{"title":"case seekFailed","type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/code\/seekfailed"},{"title":"case seekInvalidTime","type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/code\/seekinvalidtime"},{"title":"case seekNotify","type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/code\/seeknotify"},{"title":"case stepNotify","type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/code\/stepnotify"},{"title":"case unpauseNotify","type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/code\/unpausenotify"},{"title":"case unpublishSuccess","type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/code\/unpublishsuccess"},{"title":"case videoDimensionChange","type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/code\/videodimensionchange"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: String)","type":"init","path":"\/documentation\/haishinkit\/rtmpstream\/code\/init(rawvalue:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var level: String","type":"property","path":"\/documentation\/haishinkit\/rtmpstream\/code\/level"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","type":"symbol","path":"\/documentation\/haishinkit\/rtmpstream\/code\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/haishinkit\/rtmpstream\/code\/!=(_:_:)"}]},{"title":"RawRepresentable Implementations","type":"symbol","path":"\/documentation\/haishinkit\/rtmpstream\/code\/rawrepresentable-implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","path":"\/documentation\/haishinkit\/rtmpstream\/code\/hashvalue","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func hash(into: inout Hasher)","path":"\/documentation\/haishinkit\/rtmpstream\/code\/hash(into:)","type":"method"}]}],"path":"\/documentation\/haishinkit\/rtmpstream\/code","title":"RTMPStream.Code"},{"type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/error\/invalidstate","title":"case invalidState"},{"type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/error\/requestfailed(response:)","title":"case requestFailed(response: RTMPResponse)"},{"type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/error\/requesttimedout","title":"case requestTimedOut"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/haishinkit\/rtmpstream\/error\/localizeddescription","title":"var localizedDescription: String"}],"type":"symbol","path":"\/documentation\/haishinkit\/rtmpstream\/error\/error-implementations","title":"Error Implementations"}],"path":"\/documentation\/haishinkit\/rtmpstream\/error","title":"RTMPStream.Error"},{"type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish\/append","title":"case append"},{"type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish\/appendwithgap","title":"case appendWithGap"},{"type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish\/live","title":"case live"},{"type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish\/record","title":"case record"},{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish\/init(rawvalue:)","title":"init?(rawValue: String)"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish\/equatable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}],"title":"Equatable Implementations"},{"type":"symbol","path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish\/rawrepresentable-implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var hashValue: Int","path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish\/hashvalue"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func hash(into: inout Hasher)","path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish\/hash(into:)"}],"title":"RawRepresentable Implementations"}],"path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish","title":"RTMPStream.HowToPublish"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/haishinkit\/rtmpstream\/assertisolated(_:file:line:)"},{"type":"method","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","path":"\/documentation\/haishinkit\/rtmpstream\/assumeisolated(_:file:line:)"},{"type":"method","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/haishinkit\/rtmpstream\/preconditionisolated(_:file:line:)"}],"path":"\/documentation\/haishinkit\/rtmpstream\/actor-implementations","title":"Actor Implementations"},{"type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var audioSettings: AudioCodecSettings","path":"\/documentation\/haishinkit\/rtmpstream\/audiosettings","type":"property"},{"title":"var soundTransform: SoundTransform?","path":"\/documentation\/haishinkit\/rtmpstream\/soundtransform","type":"property"},{"title":"var videoSettings: VideoCodecSettings","path":"\/documentation\/haishinkit\/rtmpstream\/videosettings","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func addOutput(some HKStreamOutput)","path":"\/documentation\/haishinkit\/rtmpstream\/addoutput(_:)","type":"method"},{"title":"func append(CMSampleBuffer)","path":"\/documentation\/haishinkit\/rtmpstream\/append(_:)","type":"method"},{"title":"func append(AVAudioBuffer, when: AVAudioTime)","path":"\/documentation\/haishinkit\/rtmpstream\/append(_:when:)","type":"method"},{"title":"func attachAudioPlayer(AudioPlayer?) async","path":"\/documentation\/haishinkit\/rtmpstream\/attachaudioplayer(_:)","type":"method"},{"title":"func dispatch(NetworkMonitorEvent) async","path":"\/documentation\/haishinkit\/rtmpstream\/dispatch(_:)","type":"method"},{"title":"func removeOutput(some HKStreamOutput)","path":"\/documentation\/haishinkit\/rtmpstream\/removeoutput(_:)","type":"method"},{"title":"func setAudioSettings(AudioCodecSettings)","path":"\/documentation\/haishinkit\/rtmpstream\/setaudiosettings(_:)","type":"method"},{"title":"func setBitrateStorategy((some HKStreamBitRateStrategy)?)","path":"\/documentation\/haishinkit\/rtmpstream\/setbitratestorategy(_:)","type":"method"},{"title":"func setSoundTransform(SoundTransform) async","path":"\/documentation\/haishinkit\/rtmpstream\/setsoundtransform(_:)","type":"method"},{"title":"func setVideoInputBufferCounts(Int)","path":"\/documentation\/haishinkit\/rtmpstream\/setvideoinputbuffercounts(_:)","type":"method"},{"title":"func setVideoSettings(VideoCodecSettings)","path":"\/documentation\/haishinkit\/rtmpstream\/setvideosettings(_:)","type":"method"}],"path":"\/documentation\/haishinkit\/rtmpstream\/hkstream-implementations","title":"HKStream Implementations"},{"type":"symbol","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func mixer(MediaMixer, didOutput: CMSampleBuffer)","path":"\/documentation\/haishinkit\/rtmpstream\/mixer(_:didoutput:)","type":"method"},{"title":"func mixer(MediaMixer, didOutput: AVAudioPCMBuffer, when: AVAudioTime)","path":"\/documentation\/haishinkit\/rtmpstream\/mixer(_:didoutput:when:)","type":"method"},{"title":"func selectTrack(UInt8?, mediaType: CMFormatDescription.MediaType)","path":"\/documentation\/haishinkit\/rtmpstream\/selecttrack(_:mediatype:)","type":"method"}],"path":"\/documentation\/haishinkit\/rtmpstream\/mediamixeroutput-implementations","title":"MediaMixerOutput Implementations"}],"title":"RTMPStream"},{"type":"class","path":"\/documentation\/haishinkit\/screen","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init()","path":"\/documentation\/haishinkit\/screen\/init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var backgroundColor: CGColor","path":"\/documentation\/haishinkit\/screen\/backgroundcolor","type":"property"},{"title":"var childCounts: Int","path":"\/documentation\/haishinkit\/screen\/childcounts","type":"property"},{"title":"var delegate: (any ScreenDelegate)?","path":"\/documentation\/haishinkit\/screen\/delegate","type":"property"},{"title":"var size: CGSize","path":"\/documentation\/haishinkit\/screen\/size-swift.property","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func addChild(ScreenObject?) throws","path":"\/documentation\/haishinkit\/screen\/addchild(_:)","type":"method"},{"title":"func registerVideoEffect(some VideoEffect) -> Bool","path":"\/documentation\/haishinkit\/screen\/registervideoeffect(_:)","type":"method"},{"title":"func removeChild(ScreenObject?)","path":"\/documentation\/haishinkit\/screen\/removechild(_:)","type":"method"},{"title":"func unregisterVideoEffect(some VideoEffect) -> Bool","path":"\/documentation\/haishinkit\/screen\/unregistervideoeffect(_:)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"title":"static let size: CGSize","path":"\/documentation\/haishinkit\/screen\/size-swift.type.property","type":"property"}],"title":"Screen"},{"type":"class","path":"\/documentation\/haishinkit\/screenactor","children":[{"title":"Type Properties","type":"groupMarker"},{"title":"static let shared: ScreenActor","type":"property","path":"\/documentation\/haishinkit\/screenactor\/shared"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/haishinkit\/screenactor\/assertisolated(_:file:line:)","type":"method"},{"title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","path":"\/documentation\/haishinkit\/screenactor\/assumeisolated(_:file:line:)","type":"method"},{"title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/haishinkit\/screenactor\/preconditionisolated(_:file:line:)","type":"method"}],"title":"Actor Implementations","type":"symbol","path":"\/documentation\/haishinkit\/screenactor\/actor-implementations"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/screenactor\/sharedunownedexecutor","title":"static var sharedUnownedExecutor: UnownedSerialExecutor","type":"property"}],"title":"GlobalActor Implementations","type":"symbol","path":"\/documentation\/haishinkit\/screenactor\/globalactor-implementations"}],"title":"ScreenActor"},{"type":"class","path":"\/documentation\/haishinkit\/screenobject","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init()","path":"\/documentation\/haishinkit\/screenobject\/init()"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var bounds: CGRect","path":"\/documentation\/haishinkit\/screenobject\/bounds"},{"type":"property","title":"var cornerRadius: CGFloat","path":"\/documentation\/haishinkit\/screenobject\/cornerradius"},{"type":"property","title":"var horizontalAlignment: ScreenObject.HorizontalAlignment","path":"\/documentation\/haishinkit\/screenobject\/horizontalalignment-swift.property"},{"type":"property","title":"var isVisible: Bool","path":"\/documentation\/haishinkit\/screenobject\/isvisible"},{"type":"property","title":"var layoutMargin: NSEdgeInsets","path":"\/documentation\/haishinkit\/screenobject\/layoutmargin"},{"type":"property","title":"var parent: ScreenObjectContainer?","path":"\/documentation\/haishinkit\/screenobject\/parent"},{"type":"property","title":"var size: CGSize","path":"\/documentation\/haishinkit\/screenobject\/size"},{"type":"property","title":"var verticalAlignment: ScreenObject.VerticalAlignment","path":"\/documentation\/haishinkit\/screenobject\/verticalalignment-swift.property"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func invalidateLayout()","path":"\/documentation\/haishinkit\/screenobject\/invalidatelayout()"},{"type":"method","title":"func makeBounds(CGSize) -> CGRect","path":"\/documentation\/haishinkit\/screenobject\/makebounds(_:)"},{"type":"method","title":"func makeImage(some ScreenRenderer) -> CGImage?","path":"\/documentation\/haishinkit\/screenobject\/makeimage(_:)"},{"type":"groupMarker","title":"Enumerations"},{"type":"enum","title":"ScreenObject.HorizontalAlignment","path":"\/documentation\/haishinkit\/screenobject\/horizontalalignment-swift.enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/screenobject\/horizontalalignment-swift.enum\/center","title":"case center","type":"case"},{"path":"\/documentation\/haishinkit\/screenobject\/horizontalalignment-swift.enum\/left","title":"case left","type":"case"},{"path":"\/documentation\/haishinkit\/screenobject\/horizontalalignment-swift.enum\/right","title":"case right","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/haishinkit\/screenobject\/horizontalalignment-swift.enum\/!=(_:_:)"}],"path":"\/documentation\/haishinkit\/screenobject\/horizontalalignment-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}]},{"type":"enum","title":"ScreenObject.VerticalAlignment","path":"\/documentation\/haishinkit\/screenobject\/verticalalignment-swift.enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/haishinkit\/screenobject\/verticalalignment-swift.enum\/bottom","type":"case","title":"case bottom"},{"path":"\/documentation\/haishinkit\/screenobject\/verticalalignment-swift.enum\/middle","type":"case","title":"case middle"},{"path":"\/documentation\/haishinkit\/screenobject\/verticalalignment-swift.enum\/top","type":"case","title":"case top"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/haishinkit\/screenobject\/verticalalignment-swift.enum\/equatable-implementations","type":"symbol","title":"Equatable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/screenobject\/verticalalignment-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}]}]},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","title":"Equatable Implementations","path":"\/documentation\/haishinkit\/screenobject\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/screenobject\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/haishinkit\/screenobject\/==(_:_:)","title":"static func == (ScreenObject, ScreenObject) -> Bool","type":"op"}]},{"type":"symbol","title":"Hashable Implementations","path":"\/documentation\/haishinkit\/screenobject\/hashable-implementations","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/haishinkit\/screenobject\/hash(into:)","title":"func hash(into: inout Hasher)"}]}],"title":"ScreenObject"},{"type":"class","path":"\/documentation\/haishinkit\/screenobjectcontainer","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/screenobjectcontainer\/childcounts","title":"var childCounts: Int","type":"property"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/screenobjectcontainer\/addchild(_:)","title":"func addChild(ScreenObject?) throws","type":"method"},{"path":"\/documentation\/haishinkit\/screenobjectcontainer\/removechild(_:)","title":"func removeChild(ScreenObject?)","type":"method"},{"type":"groupMarker","title":"Enumerations"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/screenobjectcontainer\/error\/alreadyexists","title":"case alreadyExists","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/screenobjectcontainer\/error\/equatable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/haishinkit\/screenobjectcontainer\/error\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}],"title":"Equatable Implementations","type":"symbol"},{"path":"\/documentation\/haishinkit\/screenobjectcontainer\/error\/error-implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var localizedDescription: String","type":"property","path":"\/documentation\/haishinkit\/screenobjectcontainer\/error\/localizeddescription"}],"title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/haishinkit\/screenobjectcontainer\/error","title":"ScreenObjectContainer.Error","type":"enum"}],"title":"ScreenObjectContainer"},{"type":"class","path":"\/documentation\/haishinkit\/streamscreenobject","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/haishinkit\/streamscreenobject\/chromakeycolor","title":"var chromaKeyColor: CGColor?"},{"type":"property","path":"\/documentation\/haishinkit\/streamscreenobject\/videogravity","title":"var videoGravity: AVLayerVideoGravity"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/haishinkit\/streamscreenobject\/makebounds(_:)","title":"func makeBounds(CGSize) -> CGRect"},{"type":"method","path":"\/documentation\/haishinkit\/streamscreenobject\/makeimage(_:)","title":"func makeImage(some ScreenRenderer) -> CGImage?"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","path":"\/documentation\/haishinkit\/streamscreenobject\/hkstreamoutput-implementations","children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/streamscreenobject\/stream(_:didoutput:)","type":"method","title":"func stream(some HKStream, didOutput: CMSampleBuffer)"},{"path":"\/documentation\/haishinkit\/streamscreenobject\/stream(_:didoutput:when:)","type":"method","title":"func stream(some HKStream, didOutput: AVAudioBuffer, when: AVAudioTime)"}],"title":"HKStreamOutput Implementations"}],"title":"StreamScreenObject"},{"type":"class","path":"\/documentation\/haishinkit\/tsreader","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/haishinkit\/tsreader\/init()","title":"init()","type":"init"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/tsreader\/output","title":"var output: AsyncStream<(UInt16, CMSampleBuffer)>","type":"property"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/tsreader\/clear()","title":"func clear()","type":"method"},{"path":"\/documentation\/haishinkit\/tsreader\/read(_:)","title":"func read(Data) -> Int","type":"method"}],"title":"TSReader"},{"type":"class","path":"\/documentation\/haishinkit\/tswriter","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/haishinkit\/tswriter\/init(segmentduration:)","type":"init","title":"init(segmentDuration: Double)"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/tswriter\/audioformat","type":"property","title":"var audioFormat: AVAudioFormat?"},{"path":"\/documentation\/haishinkit\/tswriter\/expectedmedias","type":"property","title":"var expectedMedias: Set<AVMediaType>"},{"path":"\/documentation\/haishinkit\/tswriter\/output","type":"property","title":"var output: AsyncStream<Data>"},{"path":"\/documentation\/haishinkit\/tswriter\/videoformat","type":"property","title":"var videoFormat: CMFormatDescription?"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/tswriter\/append(_:)","type":"method","title":"func append(CMSampleBuffer)"},{"path":"\/documentation\/haishinkit\/tswriter\/append(_:when:)","type":"method","title":"func append(AVAudioBuffer, when: AVAudioTime)"},{"path":"\/documentation\/haishinkit\/tswriter\/clear()","type":"method","title":"func clear()"}],"title":"TSWriter"},{"type":"class","path":"\/documentation\/haishinkit\/textscreenobject","children":[{"title":"Instance Properties","type":"groupMarker"},{"type":"property","title":"var attributes: [NSAttributedString.Key : Any]?","path":"\/documentation\/haishinkit\/textscreenobject\/attributes"},{"type":"property","title":"var bounds: CGRect","path":"\/documentation\/haishinkit\/textscreenobject\/bounds"},{"type":"property","title":"var string: String","path":"\/documentation\/haishinkit\/textscreenobject\/string"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func makeBounds(CGSize) -> CGRect","path":"\/documentation\/haishinkit\/textscreenobject\/makebounds(_:)"},{"type":"method","title":"func makeImage(some ScreenRenderer) -> CGImage?","path":"\/documentation\/haishinkit\/textscreenobject\/makeimage(_:)"}],"title":"TextScreenObject"},{"type":"class","path":"\/documentation\/haishinkit\/videodeviceunit","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var colorFormat: OSType","type":"property","path":"\/documentation\/haishinkit\/videodeviceunit\/colorformat-swift.property"},{"title":"var connection: AVCaptureConnection?","type":"property","path":"\/documentation\/haishinkit\/videodeviceunit\/connection"},{"title":"var device: AVCaptureDevice?","type":"property","path":"\/documentation\/haishinkit\/videodeviceunit\/device"},{"title":"var input: AVCaptureInput?","type":"property","path":"\/documentation\/haishinkit\/videodeviceunit\/input"},{"title":"var isVideoMirrored: Bool","type":"property","path":"\/documentation\/haishinkit\/videodeviceunit\/isvideomirrored"},{"title":"var output: VideoDeviceUnit.Output?","type":"property","path":"\/documentation\/haishinkit\/videodeviceunit\/output-swift.property"},{"title":"let track: UInt8","type":"property","path":"\/documentation\/haishinkit\/videodeviceunit\/track"},{"title":"var videoOrientation: AVCaptureVideoOrientation","type":"property","path":"\/documentation\/haishinkit\/videodeviceunit\/videoorientation"},{"title":"Type Aliases","type":"groupMarker"},{"title":"VideoDeviceUnit.Output","type":"typealias","path":"\/documentation\/haishinkit\/videodeviceunit\/output-swift.typealias"},{"title":"Type Properties","type":"groupMarker"},{"title":"static let colorFormat: OSType","type":"property","path":"\/documentation\/haishinkit\/videodeviceunit\/colorformat-swift.type.property"}],"title":"VideoDeviceUnit"},{"type":"class","path":"\/documentation\/haishinkit\/videorotator","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/haishinkit\/videorotator\/init()","type":"init","title":"init?()"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/videorotator\/rotate(buffer:)","type":"method","title":"func rotate(buffer: CMSampleBuffer) -> Result<CMSampleBuffer, VideoRotator.Error>"},{"type":"groupMarker","title":"Enumerations"},{"path":"\/documentation\/haishinkit\/videorotator\/error","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","title":"case cannotAllocatePixelBuffer(CVReturn)","path":"\/documentation\/haishinkit\/videorotator\/error\/cannotallocatepixelbuffer(_:)"},{"type":"case","title":"case noImageBuffer","path":"\/documentation\/haishinkit\/videorotator\/error\/noimagebuffer"},{"type":"case","title":"case noOrientationInfo","path":"\/documentation\/haishinkit\/videorotator\/error\/noorientationinfo"},{"type":"case","title":"case rotationFailure(OSStatus)","path":"\/documentation\/haishinkit\/videorotator\/error\/rotationfailure(_:)"},{"type":"case","title":"case unsupportedOrientation","path":"\/documentation\/haishinkit\/videorotator\/error\/unsupportedorientation"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/videorotator\/error\/localizeddescription","type":"property","title":"var localizedDescription: String"}],"title":"Error Implementations","path":"\/documentation\/haishinkit\/videorotator\/error\/error-implementations"}],"type":"enum","title":"VideoRotator.Error"}],"title":"VideoRotator"},{"type":"class","path":"\/documentation\/haishinkit\/videotrackscreenobject","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/haishinkit\/videotrackscreenobject\/init()","title":"init()"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/haishinkit\/videotrackscreenobject\/chromakeycolor","title":"var chromaKeyColor: CGColor?"},{"type":"property","path":"\/documentation\/haishinkit\/videotrackscreenobject\/framerate","title":"var frameRate: Int"},{"type":"property","path":"\/documentation\/haishinkit\/videotrackscreenobject\/track","title":"var track: UInt8"},{"type":"property","path":"\/documentation\/haishinkit\/videotrackscreenobject\/videogravity","title":"var videoGravity: AVLayerVideoGravity"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/haishinkit\/videotrackscreenobject\/draw(_:)","title":"func draw(some ScreenRenderer)"},{"type":"method","path":"\/documentation\/haishinkit\/videotrackscreenobject\/makebounds(_:)","title":"func makeBounds(CGSize) -> CGRect"},{"type":"method","path":"\/documentation\/haishinkit\/videotrackscreenobject\/makeimage(_:)","title":"func makeImage(some ScreenRenderer) -> CGImage?"},{"type":"method","path":"\/documentation\/haishinkit\/videotrackscreenobject\/registervideoeffect(_:)","title":"func registerVideoEffect(some VideoEffect) -> Bool"},{"type":"method","path":"\/documentation\/haishinkit\/videotrackscreenobject\/unregistervideoeffect(_:)","title":"func unregisterVideoEffect(some VideoEffect) -> Bool"}],"title":"VideoTrackScreenObject"},{"type":"groupMarker","title":"Protocols"},{"type":"protocol","path":"\/documentation\/haishinkit\/asyncrunner","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/asyncrunner\/isrunning","title":"var isRunning: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/asyncrunner\/startrunning()","title":"func startRunning() async","type":"method"},{"path":"\/documentation\/haishinkit\/asyncrunner\/stoprunning()","title":"func stopRunning() async","type":"method"}],"title":"AsyncRunner"},{"type":"protocol","path":"\/documentation\/haishinkit\/chromakeyprocessable","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/haishinkit\/chromakeyprocessable\/chromakeycolor","title":"var chromaKeyColor: CGColor?"}],"title":"ChromaKeyProcessable"},{"type":"protocol","path":"\/documentation\/haishinkit\/hkstream","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/hkstream\/audiosettings","title":"var audioSettings: AudioCodecSettings","type":"property"},{"path":"\/documentation\/haishinkit\/hkstream\/readystate","title":"var readyState: HKStreamReadyState","type":"property"},{"path":"\/documentation\/haishinkit\/hkstream\/soundtransform","title":"var soundTransform: SoundTransform?","type":"property"},{"path":"\/documentation\/haishinkit\/hkstream\/videosettings","title":"var videoSettings: VideoCodecSettings","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/hkstream\/addoutput(_:)","title":"func addOutput(some HKStreamOutput)","type":"method"},{"path":"\/documentation\/haishinkit\/hkstream\/append(_:)","title":"func append(CMSampleBuffer)","type":"method"},{"path":"\/documentation\/haishinkit\/hkstream\/append(_:when:)","title":"func append(AVAudioBuffer, when: AVAudioTime)","type":"method"},{"path":"\/documentation\/haishinkit\/hkstream\/attachaudioplayer(_:)","title":"func attachAudioPlayer(AudioPlayer?) async","type":"method"},{"path":"\/documentation\/haishinkit\/hkstream\/dispatch(_:)","title":"func dispatch(NetworkMonitorEvent) async","type":"method"},{"path":"\/documentation\/haishinkit\/hkstream\/removeoutput(_:)","title":"func removeOutput(some HKStreamOutput)","type":"method"},{"path":"\/documentation\/haishinkit\/hkstream\/setaudiosettings(_:)","title":"func setAudioSettings(AudioCodecSettings)","type":"method"},{"path":"\/documentation\/haishinkit\/hkstream\/setbitratestorategy(_:)","title":"func setBitrateStorategy((some HKStreamBitRateStrategy)?)","type":"method"},{"path":"\/documentation\/haishinkit\/hkstream\/setsoundtransform(_:)","title":"func setSoundTransform(SoundTransform) async","type":"method"},{"path":"\/documentation\/haishinkit\/hkstream\/setvideoinputbuffercounts(_:)","title":"func setVideoInputBufferCounts(Int)","type":"method"},{"path":"\/documentation\/haishinkit\/hkstream\/setvideosettings(_:)","title":"func setVideoSettings(VideoCodecSettings)","type":"method"}],"title":"HKStream"},{"type":"protocol","path":"\/documentation\/haishinkit\/hkstreambitratestrategy","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/haishinkit\/hkstreambitratestrategy\/mamimumaudiobitrate","title":"var mamimumAudioBitRate: Int"},{"type":"property","path":"\/documentation\/haishinkit\/hkstreambitratestrategy\/mamimumvideobitrate","title":"var mamimumVideoBitRate: Int"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/haishinkit\/hkstreambitratestrategy\/adjustbitrate(_:stream:)","title":"func adjustBitrate(NetworkMonitorEvent, stream: some HKStream) async"}],"title":"HKStreamBitRateStrategy"},{"type":"protocol","path":"\/documentation\/haishinkit\/hkstreamoutput","children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/hkstreamoutput\/stream(_:didoutput:)","type":"method","title":"func stream(some HKStream, didOutput: CMSampleBuffer)"},{"path":"\/documentation\/haishinkit\/hkstreamoutput\/stream(_:didoutput:when:)","type":"method","title":"func stream(some HKStream, didOutput: AVAudioBuffer, when: AVAudioTime)"}],"title":"HKStreamOutput"},{"type":"protocol","path":"\/documentation\/haishinkit\/mediamixeroutput","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/haishinkit\/mediamixeroutput\/audiotrackid","title":"var audioTrackId: UInt8?"},{"type":"property","path":"\/documentation\/haishinkit\/mediamixeroutput\/videotrackid","title":"var videoTrackId: UInt8?"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/haishinkit\/mediamixeroutput\/mixer(_:didoutput:)","title":"func mixer(MediaMixer, didOutput: CMSampleBuffer)"},{"type":"method","path":"\/documentation\/haishinkit\/mediamixeroutput\/mixer(_:didoutput:when:)","title":"func mixer(MediaMixer, didOutput: AVAudioPCMBuffer, when: AVAudioTime)"},{"type":"method","path":"\/documentation\/haishinkit\/mediamixeroutput\/selecttrack(_:mediatype:)","title":"func selectTrack(UInt8?, mediaType: CMFormatDescription.MediaType) async"}],"title":"MediaMixerOutput"},{"type":"protocol","path":"\/documentation\/haishinkit\/networkconnection","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var connected: Bool","path":"\/documentation\/haishinkit\/networkconnection\/connected","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func close() async throws","path":"\/documentation\/haishinkit\/networkconnection\/close()","type":"method"}],"title":"NetworkConnection"},{"type":"protocol","path":"\/documentation\/haishinkit\/networktransportreporter","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func makeNetworkMonitor() async -> NetworkMonitor","path":"\/documentation\/haishinkit\/networktransportreporter\/makenetworkmonitor()","type":"method"},{"title":"func makeNetworkTransportReport() async -> NetworkTransportReport","path":"\/documentation\/haishinkit\/networktransportreporter\/makenetworktransportreport()","type":"method"}],"title":"NetworkTransportReporter"},{"type":"protocol","path":"\/documentation\/haishinkit\/runner","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var isRunning: Bool","path":"\/documentation\/haishinkit\/runner\/isrunning","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func startRunning()","path":"\/documentation\/haishinkit\/runner\/startrunning()","type":"method"},{"title":"func stopRunning()","path":"\/documentation\/haishinkit\/runner\/stoprunning()","type":"method"}],"title":"Runner"},{"type":"protocol","path":"\/documentation\/haishinkit\/screendelegate","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func screen(Screen, willLayout: CMTime)","path":"\/documentation\/haishinkit\/screendelegate\/screen(_:willlayout:)","type":"method"}],"title":"ScreenDelegate"},{"type":"protocol","path":"\/documentation\/haishinkit\/screenrenderer","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/screenrenderer\/backgroundcolor","title":"var backgroundColor: CGColor","type":"property"},{"path":"\/documentation\/haishinkit\/screenrenderer\/bounds","title":"var bounds: CGRect","type":"property"},{"path":"\/documentation\/haishinkit\/screenrenderer\/context","title":"var context: CIContext","type":"property"},{"path":"\/documentation\/haishinkit\/screenrenderer\/presentationtimestamp","title":"var presentationTimeStamp: CMTime","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/screenrenderer\/draw(_:)","title":"func draw(ScreenObject)","type":"method"},{"path":"\/documentation\/haishinkit\/screenrenderer\/layout(_:)","title":"func layout(ScreenObject)","type":"method"},{"path":"\/documentation\/haishinkit\/screenrenderer\/settarget(_:)","title":"func setTarget(CVPixelBuffer?)","type":"method"}],"title":"ScreenRenderer"},{"type":"protocol","path":"\/documentation\/haishinkit\/videoeffect","children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videoeffect\/execute(_:)","title":"func execute(CIImage) -> CIImage","type":"method"}],"title":"VideoEffect"},{"type":"groupMarker","title":"Structures"},{"type":"struct","path":"\/documentation\/haishinkit\/amfarray","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(count: Int)","type":"init","path":"\/documentation\/haishinkit\/amfarray\/init(count:)"},{"title":"init(data: [(any Sendable)?])","type":"init","path":"\/documentation\/haishinkit\/amfarray\/init(data:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var length: Int","type":"property","path":"\/documentation\/haishinkit\/amfarray\/length"},{"title":"Subscripts","type":"groupMarker"},{"title":"subscript(Any) -> (any Sendable)?","type":"subscript","path":"\/documentation\/haishinkit\/amfarray\/subscript(_:)"},{"title":"Default Implementations","type":"groupMarker"},{"title":"CustomDebugStringConvertible Implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/amfarray\/debugdescription","type":"property","title":"var debugDescription: String"}],"path":"\/documentation\/haishinkit\/amfarray\/customdebugstringconvertible-implementations"},{"title":"Equatable Implementations","type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/amfarray\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/haishinkit\/amfarray\/==(_:_:)","title":"static func == (AMFArray, AMFArray) -> Bool","type":"op"}],"path":"\/documentation\/haishinkit\/amfarray\/equatable-implementations"},{"title":"ExpressibleByArrayLiteral Implementations","type":"symbol","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init(arrayLiteral: (any Sendable)?...)","path":"\/documentation\/haishinkit\/amfarray\/init(arrayliteral:)"}],"path":"\/documentation\/haishinkit\/amfarray\/expressiblebyarrayliteral-implementations"}],"title":"AMFArray"},{"type":"struct","path":"\/documentation\/haishinkit\/amftypedobject","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/amftypedobject\/data","type":"property","title":"let data: AMFObject"},{"path":"\/documentation\/haishinkit\/amftypedobject\/typename","type":"property","title":"let typeName: String"}],"title":"AMFTypedObject"},{"type":"struct","path":"\/documentation\/haishinkit\/amfundefined","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/amfundefined\/description","title":"var description: String","type":"property"}],"title":"AMFUndefined"},{"type":"struct","path":"\/documentation\/haishinkit\/amfxml","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/amfxml\/init(data:)","title":"init(data: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/amfxml\/description","title":"var description: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/haishinkit\/amfxml\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"},{"path":"\/documentation\/haishinkit\/amfxml\/==(_:_:)","type":"op","title":"static func == (AMFXML, AMFXML) -> Bool"}],"path":"\/documentation\/haishinkit\/amfxml\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"title":"AMFXML"},{"type":"struct","path":"\/documentation\/haishinkit\/amfxmldocument","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(data: String)","type":"init","path":"\/documentation\/haishinkit\/amfxmldocument\/init(data:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var description: String","type":"property","path":"\/documentation\/haishinkit\/amfxmldocument\/description"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/haishinkit\/amfxmldocument\/!=(_:_:)","type":"op"},{"title":"static func == (AMFXMLDocument, AMFXMLDocument) -> Bool","path":"\/documentation\/haishinkit\/amfxmldocument\/==(_:_:)","type":"op"}],"type":"symbol","path":"\/documentation\/haishinkit\/amfxmldocument\/equatable-implementations"}],"title":"AMFXMLDocument"},{"type":"struct","path":"\/documentation\/haishinkit\/audiocodecsettings","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(bitRate: Int, downmix: Bool, channelMap: [Int]?, sampleRate: Float64, format: AudioCodecSettings.Format)","path":"\/documentation\/haishinkit\/audiocodecsettings\/init(bitrate:downmix:channelmap:samplerate:format:)","type":"init"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/haishinkit\/audiocodecsettings\/init(from:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var bitRate: Int","path":"\/documentation\/haishinkit\/audiocodecsettings\/bitrate","type":"property"},{"title":"var channelMap: [Int]?","path":"\/documentation\/haishinkit\/audiocodecsettings\/channelmap","type":"property"},{"title":"var downmix: Bool","path":"\/documentation\/haishinkit\/audiocodecsettings\/downmix","type":"property"},{"title":"var format: AudioCodecSettings.Format","path":"\/documentation\/haishinkit\/audiocodecsettings\/format-swift.property","type":"property"},{"title":"let sampleRate: Float64","path":"\/documentation\/haishinkit\/audiocodecsettings\/samplerate","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"title":"static let `default`: AudioCodecSettings","path":"\/documentation\/haishinkit\/audiocodecsettings\/default","type":"property"},{"title":"static let defaultBitRate: Int","path":"\/documentation\/haishinkit\/audiocodecsettings\/defaultbitrate","type":"property"},{"title":"static let maximumNumberOfChannels: UInt32","path":"\/documentation\/haishinkit\/audiocodecsettings\/maximumnumberofchannels","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case aac","path":"\/documentation\/haishinkit\/audiocodecsettings\/format-swift.enum\/aac","type":"case"},{"title":"case opus","path":"\/documentation\/haishinkit\/audiocodecsettings\/format-swift.enum\/opus","type":"case"},{"title":"case pcm","path":"\/documentation\/haishinkit\/audiocodecsettings\/format-swift.enum\/pcm","type":"case"},{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/haishinkit\/audiocodecsettings\/format-swift.enum\/init(from:)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","path":"\/documentation\/haishinkit\/audiocodecsettings\/format-swift.enum\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/haishinkit\/audiocodecsettings\/format-swift.enum\/!=(_:_:)","type":"op"}],"type":"symbol"}],"title":"AudioCodecSettings.Format","path":"\/documentation\/haishinkit\/audiocodecsettings\/format-swift.enum","type":"enum"}],"title":"AudioCodecSettings"},{"type":"struct","path":"\/documentation\/haishinkit\/audiomixersettings","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/audiomixersettings\/init(samplerate:channels:ismuted:maintrack:tracks:)","title":"init(sampleRate: Float64, channels: UInt32, isMuted: Bool, mainTrack: UInt8, tracks: [UInt8 : AudioMixerTrackSettings])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/audiomixersettings\/channels","title":"let channels: UInt32","type":"property"},{"path":"\/documentation\/haishinkit\/audiomixersettings\/ismuted","title":"var isMuted: Bool","type":"property"},{"path":"\/documentation\/haishinkit\/audiomixersettings\/maintrack","title":"var mainTrack: UInt8","type":"property"},{"path":"\/documentation\/haishinkit\/audiomixersettings\/maximumnumberofchannels","title":"var maximumNumberOfChannels: UInt32","type":"property"},{"path":"\/documentation\/haishinkit\/audiomixersettings\/samplerate","title":"let sampleRate: Float64","type":"property"},{"path":"\/documentation\/haishinkit\/audiomixersettings\/tracks","title":"var tracks: [UInt8 : AudioMixerTrackSettings]","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/audiomixersettings\/default","title":"static let `default`: AudioMixerSettings","type":"property"},{"path":"\/documentation\/haishinkit\/audiomixersettings\/maximumsamplerate","title":"static let maximumSampleRate: Float64","type":"property"}],"title":"AudioMixerSettings"},{"type":"struct","path":"\/documentation\/haishinkit\/audiomixertracksettings","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/haishinkit\/audiomixertracksettings\/init(from:)","type":"init"},{"title":"init(volume: Float, isMuted: Bool, downmix: Bool, channelMap: [Int]?)","path":"\/documentation\/haishinkit\/audiomixertracksettings\/init(volume:ismuted:downmix:channelmap:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var channelMap: [Int]?","path":"\/documentation\/haishinkit\/audiomixertracksettings\/channelmap","type":"property"},{"title":"var downmix: Bool","path":"\/documentation\/haishinkit\/audiomixertracksettings\/downmix","type":"property"},{"title":"var isMuted: Bool","path":"\/documentation\/haishinkit\/audiomixertracksettings\/ismuted","type":"property"},{"title":"var volume: Float","path":"\/documentation\/haishinkit\/audiomixertracksettings\/volume","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"title":"static let `default`: AudioMixerTrackSettings","path":"\/documentation\/haishinkit\/audiomixertracksettings\/default","type":"property"}],"title":"AudioMixerTrackSettings"},{"type":"struct","path":"\/documentation\/haishinkit\/hkatomic","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(A)","path":"\/documentation\/haishinkit\/hkatomic\/init(_:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var value: A","path":"\/documentation\/haishinkit\/hkatomic\/value","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func mutate((inout A) -> Void)","path":"\/documentation\/haishinkit\/hkatomic\/mutate(_:)","type":"method"}],"title":"HKAtomic"},{"type":"struct","path":"\/documentation\/haishinkit\/networkmonitorreport","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"let currentBytesInPerSecond: Int","type":"property","path":"\/documentation\/haishinkit\/networkmonitorreport\/currentbytesinpersecond"},{"title":"let currentBytesOutPerSecond: Int","type":"property","path":"\/documentation\/haishinkit\/networkmonitorreport\/currentbytesoutpersecond"},{"title":"let currentQueueBytesOut: Int","type":"property","path":"\/documentation\/haishinkit\/networkmonitorreport\/currentqueuebytesout"},{"title":"let totalBytesIn: Int","type":"property","path":"\/documentation\/haishinkit\/networkmonitorreport\/totalbytesin"},{"title":"let totalBytesOut: Int","type":"property","path":"\/documentation\/haishinkit\/networkmonitorreport\/totalbytesout"}],"title":"NetworkMonitorReport"},{"type":"struct","path":"\/documentation\/haishinkit\/networktransportreport","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(queueBytesOut: Int, totalBytesIn: Int, totalBytesOut: Int)","type":"init","path":"\/documentation\/haishinkit\/networktransportreport\/init(queuebytesout:totalbytesin:totalbytesout:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let queueBytesOut: Int","type":"property","path":"\/documentation\/haishinkit\/networktransportreport\/queuebytesout"},{"title":"let totalBytesIn: Int","type":"property","path":"\/documentation\/haishinkit\/networktransportreport\/totalbytesin"},{"title":"let totalBytesOut: Int","type":"property","path":"\/documentation\/haishinkit\/networktransportreport\/totalbytesout"}],"title":"NetworkTransportReport"},{"type":"struct","path":"\/documentation\/haishinkit\/rtmpresponse","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"let arguments: [(any Sendable)?]","type":"property","path":"\/documentation\/haishinkit\/rtmpresponse\/arguments"},{"title":"let status: RTMPStatus?","type":"property","path":"\/documentation\/haishinkit\/rtmpresponse\/status"}],"title":"RTMPResponse"},{"type":"struct","path":"\/documentation\/haishinkit\/rtmpstatus","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"let code: String","type":"property","path":"\/documentation\/haishinkit\/rtmpstatus\/code"},{"title":"let description: String","type":"property","path":"\/documentation\/haishinkit\/rtmpstatus\/description"},{"title":"let level: String","type":"property","path":"\/documentation\/haishinkit\/rtmpstatus\/level"},{"title":"Subscripts","type":"groupMarker"},{"title":"subscript(dynamicMember _: String) -> Double?","type":"subscript","path":"\/documentation\/haishinkit\/rtmpstatus\/subscript(dynamicmember:)-7qc0b"},{"title":"subscript(dynamicMember _: String) -> String?","type":"subscript","path":"\/documentation\/haishinkit\/rtmpstatus\/subscript(dynamicmember:)-9sprr"}],"title":"RTMPStatus"},{"type":"struct","path":"\/documentation\/haishinkit\/rtmpstreaminfo","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var byteCount: Int","path":"\/documentation\/haishinkit\/rtmpstreaminfo\/bytecount"},{"type":"property","title":"var currentBytesPerSecond: Int","path":"\/documentation\/haishinkit\/rtmpstreaminfo\/currentbytespersecond"},{"type":"property","title":"var resourceName: String?","path":"\/documentation\/haishinkit\/rtmpstreaminfo\/resourcename"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","title":"CustomDebugStringConvertible Implementations","path":"\/documentation\/haishinkit\/rtmpstreaminfo\/customdebugstringconvertible-implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var debugDescription: String","type":"property","path":"\/documentation\/haishinkit\/rtmpstreaminfo\/debugdescription"}]}],"title":"RTMPStreamInfo"},{"type":"struct","path":"\/documentation\/haishinkit\/soundtransform","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(volume: Float, pan: Float)","type":"init","path":"\/documentation\/haishinkit\/soundtransform\/init(volume:pan:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var pan: Float","type":"property","path":"\/documentation\/haishinkit\/soundtransform\/pan"},{"title":"var volume: Float","type":"property","path":"\/documentation\/haishinkit\/soundtransform\/volume"},{"title":"Type Properties","type":"groupMarker"},{"title":"static let defaultPan: Float","type":"property","path":"\/documentation\/haishinkit\/soundtransform\/defaultpan"},{"title":"static let defaultVolume: Float","type":"property","path":"\/documentation\/haishinkit\/soundtransform\/defaultvolume"},{"title":"Default Implementations","type":"groupMarker"},{"title":"CustomDebugStringConvertible Implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/haishinkit\/soundtransform\/debugdescription","title":"var debugDescription: String"}],"type":"symbol","path":"\/documentation\/haishinkit\/soundtransform\/customdebugstringconvertible-implementations"},{"title":"Equatable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/haishinkit\/soundtransform\/!=(_:_:)","type":"op"}],"type":"symbol","path":"\/documentation\/haishinkit\/soundtransform\/equatable-implementations"}],"title":"SoundTransform"},{"type":"struct","path":"\/documentation\/haishinkit\/vtsessionoption","children":[{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","path":"\/documentation\/haishinkit\/vtsessionoption\/equatable-implementations","title":"Equatable Implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/haishinkit\/vtsessionoption\/!=(_:_:)"},{"type":"op","title":"static func == (VTSessionOption, VTSessionOption) -> Bool","path":"\/documentation\/haishinkit\/vtsessionoption\/==(_:_:)"}]},{"type":"symbol","path":"\/documentation\/haishinkit\/vtsessionoption\/hashable-implementations","title":"Hashable Implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func hash(into: inout Hasher)","path":"\/documentation\/haishinkit\/vtsessionoption\/hash(into:)","type":"method"}]}],"title":"VTSessionOption"},{"type":"struct","path":"\/documentation\/haishinkit\/videocodecsettings","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init(from: any Decoder) throws","path":"\/documentation\/haishinkit\/videocodecsettings\/init(from:)"},{"type":"init","title":"init(videoSize: CGSize, bitRate: Int, profileLevel: String, scalingMode: VideoCodecSettings.ScalingMode, bitRateMode: VideoCodecSettings.BitRateMode, maxKeyFrameIntervalDuration: Int32, allowFrameReordering: Bool?, dataRateLimits: [Double]?, isHardwareEncoderEnabled: Bool)","path":"\/documentation\/haishinkit\/videocodecsettings\/init(videosize:bitrate:profilelevel:scalingmode:bitratemode:maxkeyframeintervalduration:allowframereordering:dataratelimits:ishardwareencoderenabled:)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var allowFrameReordering: Bool?","path":"\/documentation\/haishinkit\/videocodecsettings\/allowframereordering"},{"type":"property","title":"var bitRate: Int","path":"\/documentation\/haishinkit\/videocodecsettings\/bitrate"},{"type":"property","title":"var bitRateMode: VideoCodecSettings.BitRateMode","path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.property"},{"type":"property","title":"var dataRateLimits: [Double]?","path":"\/documentation\/haishinkit\/videocodecsettings\/dataratelimits"},{"type":"property","title":"var frameInterval: Double","path":"\/documentation\/haishinkit\/videocodecsettings\/frameinterval"},{"type":"property","title":"var isHardwareEncoderEnabled: Bool","path":"\/documentation\/haishinkit\/videocodecsettings\/ishardwareencoderenabled"},{"type":"property","title":"var maxKeyFrameIntervalDuration: Int32","path":"\/documentation\/haishinkit\/videocodecsettings\/maxkeyframeintervalduration"},{"type":"property","title":"var profileLevel: String","path":"\/documentation\/haishinkit\/videocodecsettings\/profilelevel"},{"type":"property","title":"var scalingMode: VideoCodecSettings.ScalingMode","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.property"},{"type":"property","title":"var videoSize: CGSize","path":"\/documentation\/haishinkit\/videocodecsettings\/videosize"},{"type":"groupMarker","title":"Type Properties"},{"type":"property","title":"static let `default`: VideoCodecSettings","path":"\/documentation\/haishinkit\/videocodecsettings\/default"},{"type":"property","title":"static let frameInterval01: Double","path":"\/documentation\/haishinkit\/videocodecsettings\/frameinterval01"},{"type":"property","title":"static let frameInterval05: Double","path":"\/documentation\/haishinkit\/videocodecsettings\/frameinterval05"},{"type":"property","title":"static let frameInterval10: Double","path":"\/documentation\/haishinkit\/videocodecsettings\/frameinterval10"},{"type":"property","title":"static let frameInterval30: Double","path":"\/documentation\/haishinkit\/videocodecsettings\/frameinterval30"},{"type":"groupMarker","title":"Enumerations"},{"type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","title":"case average","path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/average"},{"type":"case","title":"case constant","path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/constant"},{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init?(rawValue: String)","path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/init(rawvalue:)"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","title":"Equatable Implementations","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}],"path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/equatable-implementations"},{"type":"symbol","title":"RawRepresentable Implementations","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/init(from:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/hashvalue","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func encode(to: any Encoder) throws","path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/encode(to:)","type":"method"},{"title":"func hash(into: inout Hasher)","path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/hash(into:)","type":"method"}],"path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/rawrepresentable-implementations"}],"title":"VideoCodecSettings.BitRateMode","path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum"},{"type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","title":"case cropSourceToCleanAperture","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/cropsourcetocleanaperture"},{"type":"case","title":"case letterbox","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/letterbox"},{"type":"case","title":"case normal","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/normal"},{"type":"case","title":"case trim","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/trim"},{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init?(rawValue: String)","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/init(rawvalue:)"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","title":"Equatable Implementations","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/equatable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}]},{"type":"symbol","title":"RawRepresentable Implementations","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/rawrepresentable-implementations","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init(from: any Decoder) throws","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/init(from:)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var hashValue: Int","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/hashvalue"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func encode(to: any Encoder) throws","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/encode(to:)"},{"type":"method","title":"func hash(into: inout Hasher)","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/hash(into:)"}]}],"title":"VideoCodecSettings.ScalingMode","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum"}],"title":"VideoCodecSettings"},{"type":"struct","path":"\/documentation\/haishinkit\/videomixersettings","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","type":"init","path":"\/documentation\/haishinkit\/videomixersettings\/init(from:)"},{"title":"init(mode: VideoMixerSettings.Mode, isMuted: Bool, mainTrack: UInt8)","type":"init","path":"\/documentation\/haishinkit\/videomixersettings\/init(mode:ismuted:maintrack:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var isMuted: Bool","type":"property","path":"\/documentation\/haishinkit\/videomixersettings\/ismuted"},{"title":"var mainTrack: UInt8","type":"property","path":"\/documentation\/haishinkit\/videomixersettings\/maintrack"},{"title":"var mode: VideoMixerSettings.Mode","type":"property","path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.property"},{"title":"Type Properties","type":"groupMarker"},{"title":"static let `default`: VideoMixerSettings","type":"property","path":"\/documentation\/haishinkit\/videomixersettings\/default"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","title":"case offscreen","path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/offscreen"},{"type":"case","title":"case passthrough","path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/passthrough"},{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init?(rawValue: String)","path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/init(rawvalue:)"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","title":"Equatable Implementations","path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/equatable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}]},{"type":"symbol","title":"RawRepresentable Implementations","path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/rawrepresentable-implementations","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}]}],"title":"VideoMixerSettings.Mode","type":"enum","path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum"}],"title":"VideoMixerSettings"},{"type":"groupMarker","title":"Variables"},{"type":"var","path":"\/documentation\/haishinkit\/kamfundefined","title":"let kAMFUndefined: AMFUndefined"},{"type":"var","path":"\/documentation\/haishinkit\/khaishinkitidentifier","title":"let kHaishinKitIdentifier: String"},{"type":"groupMarker","title":"Type Aliases"},{"type":"typealias","path":"\/documentation\/haishinkit\/amfobject","title":"AMFObject"},{"type":"typealias","path":"\/documentation\/haishinkit\/audiodeviceconfigurationblock","title":"AudioDeviceConfigurationBlock"},{"type":"typealias","path":"\/documentation\/haishinkit\/videodeviceconfigurationblock","title":"VideoDeviceConfigurationBlock"},{"type":"groupMarker","title":"Enumerations"},{"type":"enum","path":"\/documentation\/haishinkit\/deviceutil","children":[{"title":"Type Methods","type":"groupMarker"},{"title":"static func device(withLocalizedName: String, mediaType: AVMediaType) -> AVCaptureDevice?","path":"\/documentation\/haishinkit\/deviceutil\/device(withlocalizedname:mediatype:)","type":"method"}],"title":"DeviceUtil"},{"type":"enum","path":"\/documentation\/haishinkit\/hkstreamreadystate","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case idle","type":"case","path":"\/documentation\/haishinkit\/hkstreamreadystate\/idle"},{"title":"case play","type":"case","path":"\/documentation\/haishinkit\/hkstreamreadystate\/play"},{"title":"case playing","type":"case","path":"\/documentation\/haishinkit\/hkstreamreadystate\/playing"},{"title":"case publish","type":"case","path":"\/documentation\/haishinkit\/hkstreamreadystate\/publish"},{"title":"case publishing","type":"case","path":"\/documentation\/haishinkit\/hkstreamreadystate\/publishing"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: Int)","type":"init","path":"\/documentation\/haishinkit\/hkstreamreadystate\/init(rawvalue:)"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","type":"symbol","path":"\/documentation\/haishinkit\/hkstreamreadystate\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/hkstreamreadystate\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}]},{"title":"RawRepresentable Implementations","type":"symbol","path":"\/documentation\/haishinkit\/hkstreamreadystate\/rawrepresentable-implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","path":"\/documentation\/haishinkit\/hkstreamreadystate\/hashvalue","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func hash(into: inout Hasher)","path":"\/documentation\/haishinkit\/hkstreamreadystate\/hash(into:)","type":"method"}]}],"title":"HKStreamReadyState"},{"type":"enum","path":"\/documentation\/haishinkit\/networkmonitorevent","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"title":"case publishInsufficientBWOccured(report: NetworkMonitorReport)","path":"\/documentation\/haishinkit\/networkmonitorevent\/publishinsufficientbwoccured(report:)","type":"case"},{"title":"case reset","path":"\/documentation\/haishinkit\/networkmonitorevent\/reset","type":"case"},{"title":"case status(report: NetworkMonitorReport)","path":"\/documentation\/haishinkit\/networkmonitorevent\/status(report:)","type":"case"}],"title":"NetworkMonitorEvent"},{"type":"enum","path":"\/documentation\/haishinkit\/rtmpobjectencoding","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/haishinkit\/rtmpobjectencoding\/amf0","type":"case","title":"case amf0"},{"path":"\/documentation\/haishinkit\/rtmpobjectencoding\/amf3","type":"case","title":"case amf3"},{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/haishinkit\/rtmpobjectencoding\/init(rawvalue:)","type":"init","title":"init?(rawValue: UInt8)"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/haishinkit\/rtmpobjectencoding\/equatable-implementations","type":"symbol","title":"Equatable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/haishinkit\/rtmpobjectencoding\/!=(_:_:)"}]},{"path":"\/documentation\/haishinkit\/rtmpobjectencoding\/rawrepresentable-implementations","type":"symbol","title":"RawRepresentable Implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","path":"\/documentation\/haishinkit\/rtmpobjectencoding\/hashvalue","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func hash(into: inout Hasher)","path":"\/documentation\/haishinkit\/rtmpobjectencoding\/hash(into:)","type":"method"}]}],"title":"RTMPObjectEncoding"},{"type":"groupMarker","title":"Extended Modules"},{"type":"extension","path":"\/documentation\/haishinkit\/coremedia","children":[{"title":"Extended Classes","type":"groupMarker"},{"title":"CMFormatDescription","type":"extension","path":"\/documentation\/haishinkit\/coremedia\/cmformatdescription","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var isCompressed: Bool","type":"property","path":"\/documentation\/haishinkit\/coremedia\/cmformatdescription\/iscompressed"}]}],"title":"CoreMedia"}],"path":"\/documentation\/haishinkit"},{"title":"SRTHaishinKit","type":"module","children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"title":"init()","path":"\/documentation\/srthaishinkit\/srtconnection\/init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var connected: Bool","path":"\/documentation\/srthaishinkit\/srtconnection\/connected","type":"property"},{"title":"var performanceData: SRTPerformanceData?","path":"\/documentation\/srthaishinkit\/srtconnection\/performancedata","type":"property"},{"title":"var uri: URL?","path":"\/documentation\/srthaishinkit\/srtconnection\/uri","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func close() async","path":"\/documentation\/srthaishinkit\/srtconnection\/close()","type":"method"},{"title":"func connect(URL?) async throws","path":"\/documentation\/srthaishinkit\/srtconnection\/connect(_:)","type":"method"},{"title":"func getSocketOption(SRTSocketOption.Name) async throws -> SRTSocketOption?","path":"\/documentation\/srthaishinkit\/srtconnection\/getsocketoption(_:)","type":"method"},{"title":"func open(URL?, mode: SRTMode) async throws","path":"\/documentation\/srthaishinkit\/srtconnection\/open(_:mode:)","type":"method"},{"title":"func setSocketOption(SRTSocketOption) async throws","path":"\/documentation\/srthaishinkit\/srtconnection\/setsocketoption(_:)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"title":"static let version: String","path":"\/documentation\/srthaishinkit\/srtconnection\/version","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"title":"SRTConnection.Error","path":"\/documentation\/srthaishinkit\/srtconnection\/error","type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case failedToConnect(String, reson: Int32)","type":"case","path":"\/documentation\/srthaishinkit\/srtconnection\/error\/failedtoconnect(_:reson:)"},{"title":"case invalidState","type":"case","path":"\/documentation\/srthaishinkit\/srtconnection\/error\/invalidstate"},{"title":"case unsupportedUri(URL?)","type":"case","path":"\/documentation\/srthaishinkit\/srtconnection\/error\/unsupporteduri(_:)"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/srthaishinkit\/srtconnection\/error\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"title":"Error Implementations","type":"symbol","path":"\/documentation\/srthaishinkit\/srtconnection\/error\/error-implementations"}]},{"title":"Default Implementations","type":"groupMarker"},{"title":"Actor Implementations","path":"\/documentation\/srthaishinkit\/srtconnection\/actor-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/srthaishinkit\/srtconnection\/assertisolated(_:file:line:)","type":"method","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)"},{"path":"\/documentation\/srthaishinkit\/srtconnection\/assumeisolated(_:file:line:)","type":"method","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T"},{"path":"\/documentation\/srthaishinkit\/srtconnection\/preconditionisolated(_:file:line:)","type":"method","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)"}]}],"title":"SRTConnection","path":"\/documentation\/srthaishinkit\/srtconnection","type":"class"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/srthaishinkit\/srtlogger\/functionalareas","type":"property","title":"var functionalAreas: Set<SRTLogFunctionalArea>"},{"path":"\/documentation\/srthaishinkit\/srtlogger\/level","type":"property","title":"var level: SRTLogLevel"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/srthaishinkit\/srtlogger\/setfunctionalareas(_:)","type":"method","title":"func setFunctionalAreas(Set<SRTLogFunctionalArea>)"},{"path":"\/documentation\/srthaishinkit\/srtlogger\/setlevel(_:)","type":"method","title":"func setLevel(SRTLogLevel)"},{"type":"groupMarker","title":"Type Properties"},{"path":"\/documentation\/srthaishinkit\/srtlogger\/shared","type":"property","title":"static let shared: SRTLogger"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/srthaishinkit\/srtlogger\/actor-implementations","type":"symbol","title":"Actor Implementations","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/srthaishinkit\/srtlogger\/assertisolated(_:file:line:)"},{"type":"method","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","path":"\/documentation\/srthaishinkit\/srtlogger\/assumeisolated(_:file:line:)"},{"type":"method","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/srthaishinkit\/srtlogger\/preconditionisolated(_:file:line:)"}]}],"title":"SRTLogger","path":"\/documentation\/srthaishinkit\/srtlogger","type":"class"},{"children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/srthaishinkit\/srtstream\/init(connection:)","title":"init(connection: SRTConnection)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtstream\/audiotrackid","title":"var audioTrackId: UInt8?"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtstream\/readystate","title":"var readyState: HKStreamReadyState"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtstream\/videotrackid","title":"var videoTrackId: UInt8?"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/srthaishinkit\/srtstream\/close()","title":"func close() async"},{"type":"method","path":"\/documentation\/srthaishinkit\/srtstream\/play(_:)","title":"func play(String?) async"},{"type":"method","path":"\/documentation\/srthaishinkit\/srtstream\/publish(_:)","title":"func publish(String?) async"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","path":"\/documentation\/srthaishinkit\/srtstream\/actor-implementations","title":"Actor Implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/srthaishinkit\/srtstream\/assertisolated(_:file:line:)","type":"method"},{"title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","path":"\/documentation\/srthaishinkit\/srtstream\/assumeisolated(_:file:line:)","type":"method"},{"title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/srthaishinkit\/srtstream\/preconditionisolated(_:file:line:)","type":"method"}]},{"type":"symbol","path":"\/documentation\/srthaishinkit\/srtstream\/hkstream-implementations","title":"HKStream Implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtstream\/audiosettings","title":"var audioSettings: AudioCodecSettings"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtstream\/soundtransform","title":"var soundTransform: SoundTransform?"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtstream\/videosettings","title":"var videoSettings: VideoCodecSettings"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/srthaishinkit\/srtstream\/addoutput(_:)","title":"func addOutput(some HKStreamOutput)"},{"type":"method","path":"\/documentation\/srthaishinkit\/srtstream\/append(_:)","title":"func append(CMSampleBuffer)"},{"type":"method","path":"\/documentation\/srthaishinkit\/srtstream\/append(_:when:)","title":"func append(AVAudioBuffer, when: AVAudioTime)"},{"type":"method","path":"\/documentation\/srthaishinkit\/srtstream\/attachaudioplayer(_:)","title":"func attachAudioPlayer(AudioPlayer?) async"},{"type":"method","path":"\/documentation\/srthaishinkit\/srtstream\/dispatch(_:)","title":"func dispatch(NetworkMonitorEvent) async"},{"type":"method","path":"\/documentation\/srthaishinkit\/srtstream\/removeoutput(_:)","title":"func removeOutput(some HKStreamOutput)"},{"type":"method","path":"\/documentation\/srthaishinkit\/srtstream\/setaudiosettings(_:)","title":"func setAudioSettings(AudioCodecSettings)"},{"type":"method","path":"\/documentation\/srthaishinkit\/srtstream\/setbitratestorategy(_:)","title":"func setBitrateStorategy((some HKStreamBitRateStrategy)?)"},{"type":"method","path":"\/documentation\/srthaishinkit\/srtstream\/setsoundtransform(_:)","title":"func setSoundTransform(SoundTransform) async"},{"type":"method","path":"\/documentation\/srthaishinkit\/srtstream\/setvideoinputbuffercounts(_:)","title":"func setVideoInputBufferCounts(Int)"},{"type":"method","path":"\/documentation\/srthaishinkit\/srtstream\/setvideosettings(_:)","title":"func setVideoSettings(VideoCodecSettings)"}]},{"type":"symbol","path":"\/documentation\/srthaishinkit\/srtstream\/mediamixeroutput-implementations","title":"MediaMixerOutput Implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func mixer(MediaMixer, didOutput: CMSampleBuffer)","path":"\/documentation\/srthaishinkit\/srtstream\/mixer(_:didoutput:)","type":"method"},{"title":"func mixer(MediaMixer, didOutput: AVAudioPCMBuffer, when: AVAudioTime)","path":"\/documentation\/srthaishinkit\/srtstream\/mixer(_:didoutput:when:)","type":"method"},{"title":"func selectTrack(UInt8?, mediaType: CMFormatDescription.MediaType)","path":"\/documentation\/srthaishinkit\/srtstream\/selecttrack(_:mediatype:)","type":"method"}]}],"title":"SRTStream","path":"\/documentation\/srthaishinkit\/srtstream","type":"class"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"let byteAvailRcvBuf: Int32","type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/byteavailrcvbuf"},{"title":"let byteAvailSndBuf: Int32","type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/byteavailsndbuf"},{"title":"let byteMSS: Int32","type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytemss"},{"title":"let byteRcvBuf: Int32","type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytercvbuf"},{"title":"let byteRcvDrop: UInt64","type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytercvdrop"},{"title":"let byteRcvDropTotal: UInt64","type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytercvdroptotal"},{"title":"let byteRcvLoss: UInt64","type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytercvloss"},{"title":"let byteRcvLossTotal: UInt64","type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytercvlosstotal"},{"title":"let byteRcvUndecrypt: UInt64","type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytercvundecrypt"},{"title":"let byteRcvUndecryptTotal: UInt64","type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytercvundecrypttotal"},{"title":"let byteRecv: UInt64","type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/byterecv"},{"title":"let byteRecvTotal: UInt64","type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/byterecvtotal"},{"title":"let byteRetrans: UInt64","type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/byteretrans"},{"title":"let byteRetransTotal: UInt64","type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/byteretranstotal"},{"title":"let byteSent: UInt64","type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytesent"},{"title":"let byteSentTotal: UInt64","type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytesenttotal"},{"title":"let byteSndBuf: Int32","type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytesndbuf"},{"title":"let byteSndDrop: UInt64","type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytesnddrop"},{"title":"let byteSndDropTotal: UInt64","type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytesnddroptotal"},{"title":"let mbpsBandwidth: Double","type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/mbpsbandwidth"},{"title":"let mbpsMaxBW: Double","type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/mbpsmaxbw"},{"title":"let mbpsRecvRate: Double","type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/mbpsrecvrate"},{"title":"let mbpsSendRate: Double","type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/mbpssendrate"},{"title":"let msRTT: Double","type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/msrtt"},{"title":"let msRcvBuf: Int32","type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/msrcvbuf"},{"title":"let msRcvTsbPdDelay: Int32","type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/msrcvtsbpddelay"},{"title":"let msSndBuf: Int32","type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/mssndbuf"},{"title":"let msSndTsbPdDelay: Int32","type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/mssndtsbpddelay"},{"title":"let msTimeStamp: Int64","type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/mstimestamp"},{"title":"let pktCongestionWindow: Int32","type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktcongestionwindow"},{"title":"let pktFlightSize: Int32","type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktflightsize"},{"title":"let pktFlowWindow: Int32","type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktflowwindow"},{"title":"let pktRcvAvgBelatedTime: Double","type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvavgbelatedtime"},{"title":"let pktRcvBelated: Int64","type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvbelated"},{"title":"let pktRcvBuf: Int32","type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvbuf"},{"title":"let pktRcvDrop: Int32","type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvdrop"},{"title":"let pktRcvDropTotal: Int32","type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvdroptotal"},{"title":"let pktRcvFilterExtra: Int32","type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvfilterextra"},{"title":"let pktRcvFilterExtraTotal: Int32","type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvfilterextratotal"},{"title":"let pktRcvFilterLoss: Int32","type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvfilterloss"},{"title":"let pktRcvFilterLossTotal: Int32","type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvfilterlosstotal"},{"title":"let pktRcvFilterSupply: Int32","type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvfiltersupply"},{"title":"let pktRcvFilterSupplyTotal: Int32","type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvfiltersupplytotal"},{"title":"let pktRcvLoss: Int32","type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvloss"},{"title":"let pktRcvLossTotal: Int32","type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvlosstotal"},{"title":"let pktRcvRetrans: Int32","type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvretrans"},{"title":"let pktRcvUndecrypt: Int32","type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvundecrypt"},{"title":"let pktRcvUndecryptTotal: Int32","type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvundecrypttotal"},{"title":"let pktRecv: Int64","type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrecv"},{"title":"let pktRecvACK: Int32","type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrecvack"},{"title":"let pktRecvACKTotal: Int32","type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrecvacktotal"},{"title":"let pktRecvNAK: Int32","type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrecvnak"},{"title":"let pktRecvNAKTotal: Int32","type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrecvnaktotal"},{"title":"let pktRecvTotal: Int64","type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrecvtotal"},{"title":"let pktReorderDistance: Int32","type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktreorderdistance"},{"title":"let pktReorderTolerance: Int32","type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktreordertolerance"},{"title":"let pktRetrans: Int32","type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktretrans"},{"title":"let pktRetransTotal: Int32","type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktretranstotal"},{"title":"let pktSent: Int64","type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsent"},{"title":"let pktSentACK: Int32","type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsentack"},{"title":"let pktSentACKTotal: Int32","type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsentacktotal"},{"title":"let pktSentNAK: Int32","type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsentnak"},{"title":"let pktSentNAKTotal: Int32","type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsentnaktotal"},{"title":"let pktSentTotal: Int64","type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsenttotal"},{"title":"let pktSndBuf: Int32","type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsndbuf"},{"title":"let pktSndDrop: Int32","type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsnddrop"},{"title":"let pktSndDropTotal: Int32","type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsnddroptotal"},{"title":"let pktSndFilterExtra: Int32","type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsndfilterextra"},{"title":"let pktSndFilterExtraTotal: Int32","type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsndfilterextratotal"},{"title":"let pktSndLoss: Int32","type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsndloss"},{"title":"let pktSndLossTotal: Int32","type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsndlosstotal"},{"title":"let usPktSndPeriod: Double","type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/uspktsndperiod"},{"title":"let usSndDuration: Int64","type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/ussndduration"},{"title":"let usSndDurationTotal: Int64","type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/ussnddurationtotal"}],"title":"SRTPerformanceData","path":"\/documentation\/srthaishinkit\/srtperformancedata","type":"struct"},{"children":[{"type":"groupMarker","title":"Structures"},{"type":"struct","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct","title":"SRTSocketOption.Name","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(rawValue: String, symbol: SRT_SOCKOPT, restriction: SRTSocketOption.Restriction?, type: SRTSocketOption.CType)","type":"init","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/init(rawvalue:symbol:restriction:type:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let rawValue: String","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/rawvalue-swift.property"},{"title":"Type Aliases","type":"groupMarker"},{"title":"SRTSocketOption.Name.RawValue","type":"typealias","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/rawvalue-swift.typealias"},{"title":"Type Properties","type":"groupMarker"},{"title":"static let bindtodevice: SRTSocketOption.Name","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/bindtodevice"},{"title":"static let congestion: SRTSocketOption.Name","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/congestion"},{"title":"static let conntimeo: SRTSocketOption.Name","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/conntimeo"},{"title":"static let drifttracer: SRTSocketOption.Name","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/drifttracer"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/enforcedencryption","type":"property","title":"static let enforcedencryption: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/event","type":"property","title":"static let event: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/fc","type":"property","title":"static let fc: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/groupconnect","type":"property","title":"static let groupconnect: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/groupminstabletimeo","type":"property","title":"static let groupminstabletimeo: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/grouptype","type":"property","title":"static let grouptype: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/inputbw","type":"property","title":"static let inputbw: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/iptos","type":"property","title":"static let iptos: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/ipttl","type":"property","title":"static let ipttl: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/ipv6only","type":"property","title":"static let ipv6only: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/isn","type":"property","title":"static let isn: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/kmpreannounce","type":"property","title":"static let kmpreannounce: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/kmrefreshrate","type":"property","title":"static let kmrefreshrate: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/kmstate","type":"property","title":"static let kmstate: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/latency","type":"property","title":"static let latency: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/lossmaxttl","type":"property","title":"static let lossmaxttl: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/maxbw","type":"property","title":"static let maxbw: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/messageapi","type":"property","title":"static let messageapi: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/mininputbw","type":"property","title":"static let mininputbw: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/minversion","type":"property","title":"static let minversion: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/mss","type":"property","title":"static let mss: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/nakreport","type":"property","title":"static let nakreport: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/oheadbw","type":"property","title":"static let oheadbw: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/packetfilter","type":"property","title":"static let packetfilter: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/passphrase","type":"property","title":"static let passphrase: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/pbkeylen","type":"property","title":"static let pbkeylen: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/peeridletimeo","type":"property","title":"static let peeridletimeo: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/peerlatency","type":"property","title":"static let peerlatency: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/peerversion","type":"property","title":"static let peerversion: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/rcvbuf","type":"property","title":"static let rcvbuf: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/rcvdata","type":"property","title":"static let rcvdata: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/rcvlatency","type":"property","title":"static let rcvlatency: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/rcvsyn","type":"property","title":"static let rcvsyn: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/rcvtimeo","type":"property","title":"static let rcvtimeo: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/rendezvous","type":"property","title":"static let rendezvous: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/retransmitalgo","type":"property","title":"static let retransmitalgo: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/reuseaddr","type":"property","title":"static let reuseaddr: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/sender","type":"property","title":"static let sender: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/sndbuf","type":"property","title":"static let sndbuf: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/snddata","type":"property","title":"static let snddata: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/snddropdelay","type":"property","title":"static let snddropdelay: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/sndkmstate","type":"property","title":"static let sndkmstate: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/sndsyn","type":"property","title":"static let sndsyn: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/sndtimeo","type":"property","title":"static let sndtimeo: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/state","type":"property","title":"static let state: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/streamid","type":"property","title":"static let streamid: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/tlpktdrop","type":"property","title":"static let tlpktdrop: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/transtype","type":"property","title":"static let transtype: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/tsbpdmode","type":"property","title":"static let tsbpdmode: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/udprcvbuf","type":"property","title":"static let udpRcvbuf: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/udpsndbuf","type":"property","title":"static let udpSndbuf: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/version","type":"property","title":"static let version: SRTSocketOption.Name"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/rawrepresentable-implementations","type":"symbol","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: String)","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/init(rawvalue:)","type":"init"}],"title":"RawRepresentable Implementations"}]},{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/srthaishinkit\/srtsocketoption\/init(name:value:)-3uyvp","title":"init(name: SRTSocketOption.Name, value: String) throws"},{"type":"init","path":"\/documentation\/srthaishinkit\/srtsocketoption\/init(name:value:)-66kiu","title":"init(name: SRTSocketOption.Name, value: Int) throws"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/boolvalue","title":"var boolValue: Bool"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/intvalue","title":"var intValue: Int"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.property","title":"let name: SRTSocketOption.Name"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/stringvalue","title":"var stringValue: String"},{"type":"groupMarker","title":"Enumerations"},{"type":"enum","path":"\/documentation\/srthaishinkit\/srtsocketoption\/ctype","title":"SRTSocketOption.CType","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/ctype\/bool","title":"case bool","type":"case"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/ctype\/int32","title":"case int32","type":"case"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/ctype\/int64","title":"case int64","type":"case"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/ctype\/string","title":"case string","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/ctype\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/ctype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/srthaishinkit\/srtsocketoption\/ctype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/ctype\/hashvalue","type":"property","title":"var hashValue: Int"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/ctype\/hash(into:)","type":"method","title":"func hash(into: inout Hasher)"}],"path":"\/documentation\/srthaishinkit\/srtsocketoption\/ctype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}]},{"type":"enum","path":"\/documentation\/srthaishinkit\/srtsocketoption\/restriction","title":"SRTSocketOption.Restriction","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case post","path":"\/documentation\/srthaishinkit\/srtsocketoption\/restriction\/post","type":"case"},{"title":"case pre","path":"\/documentation\/srthaishinkit\/srtsocketoption\/restriction\/pre","type":"case"},{"title":"case preBind","path":"\/documentation\/srthaishinkit\/srtsocketoption\/restriction\/prebind","type":"case"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: Int)","path":"\/documentation\/srthaishinkit\/srtsocketoption\/restriction\/init(rawvalue:)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","path":"\/documentation\/srthaishinkit\/srtsocketoption\/restriction\/equatable-implementations","type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/srthaishinkit\/srtsocketoption\/restriction\/!=(_:_:)","type":"op"}]},{"title":"RawRepresentable Implementations","path":"\/documentation\/srthaishinkit\/srtsocketoption\/restriction\/rawrepresentable-implementations","type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/restriction\/hashvalue"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func hash(into: inout Hasher)","type":"method","path":"\/documentation\/srthaishinkit\/srtsocketoption\/restriction\/hash(into:)"}]}]}],"title":"SRTSocketOption","path":"\/documentation\/srthaishinkit\/srtsocketoption","type":"struct"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/apictrl","title":"case apiCtrl","type":"case"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/apirecv","title":"case apiRecv","type":"case"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/apisend","title":"case apiSend","type":"case"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/applog","title":"case applog","type":"case"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/bstats","title":"case bstats","type":"case"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/bufrecv","title":"case bufRecv","type":"case"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/bufsend","title":"case bufSend","type":"case"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/chanrecv","title":"case chanRecv","type":"case"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/chnmgmt","title":"case chnMgmt","type":"case"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/chnsend","title":"case chnSend","type":"case"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/congest","title":"case congest","type":"case"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/control","title":"case control","type":"case"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/data","title":"case data","type":"case"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/epollapi","title":"case epollApi","type":"case"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/epollupd","title":"case epollUpd","type":"case"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/general","title":"case general","type":"case"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/grpmgmt","title":"case grpMgmt","type":"case"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/grprecv","title":"case grpRecv","type":"case"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/grpsend","title":"case grpSend","type":"case"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/haicrypt","title":"case haicrypt","type":"case"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/internal","title":"case `internal`","type":"case"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/pfilter","title":"case pfilter","type":"case"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/quectrl","title":"case queCtrl","type":"case"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/quemgmt","title":"case queMgmt","type":"case"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/querecv","title":"case queRecv","type":"case"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/quesend","title":"case queSend","type":"case"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/rsrc","title":"case rsrc","type":"case"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/tsbpd","title":"case tsbpd","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/init(rawvalue:)","title":"init?(rawValue: Int32)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/equatable-implementations","title":"Equatable Implementations","type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/!=(_:_:)","type":"op"}]},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var hashValue: Int","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/hashvalue"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func hash(into: inout Hasher)","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/hash(into:)"}]}],"title":"SRTLogFunctionalArea","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case crit","path":"\/documentation\/srthaishinkit\/srtloglevel\/crit","type":"case"},{"title":"case debug","path":"\/documentation\/srthaishinkit\/srtloglevel\/debug","type":"case"},{"title":"case error","path":"\/documentation\/srthaishinkit\/srtloglevel\/error","type":"case"},{"title":"case notice","path":"\/documentation\/srthaishinkit\/srtloglevel\/notice","type":"case"},{"title":"case warning","path":"\/documentation\/srthaishinkit\/srtloglevel\/warning","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","path":"\/documentation\/srthaishinkit\/srtloglevel\/equatable-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/srthaishinkit\/srtloglevel\/!=(_:_:)"}]}],"title":"SRTLogLevel","path":"\/documentation\/srthaishinkit\/srtloglevel","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/srthaishinkit\/srtmode\/caller","title":"case caller","type":"case"},{"path":"\/documentation\/srthaishinkit\/srtmode\/listener","title":"case listener","type":"case"},{"path":"\/documentation\/srthaishinkit\/srtmode\/rendezvous","title":"case rendezvous","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/srthaishinkit\/srtmode\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/srthaishinkit\/srtmode\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/srthaishinkit\/srtmode\/!=(_:_:)"}],"title":"Equatable Implementations","type":"symbol"},{"path":"\/documentation\/srthaishinkit\/srtmode\/rawrepresentable-implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var hashValue: Int","path":"\/documentation\/srthaishinkit\/srtmode\/hashvalue"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func hash(into: inout Hasher)","path":"\/documentation\/srthaishinkit\/srtmode\/hash(into:)"}],"title":"RawRepresentable Implementations","type":"symbol"}],"title":"SRTMode","path":"\/documentation\/srthaishinkit\/srtmode","type":"enum"}],"path":"\/documentation\/srthaishinkit"},{"title":"MoQTHaishinKit","type":"module","children":[{"type":"groupMarker","title":"Classes"},{"children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(MoQTSetupRole, requestTimeOut: UInt64)","path":"\/documentation\/moqthaishinkit\/moqtconnection\/init(_:requesttimeout:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var objectStream: AsyncStream<MoQTObject>","path":"\/documentation\/moqthaishinkit\/moqtconnection\/objectstream","type":"property"},{"title":"let requestTimeout: UInt64","path":"\/documentation\/moqthaishinkit\/moqtconnection\/requesttimeout","type":"property"},{"title":"let role: MoQTSetupRole","path":"\/documentation\/moqthaishinkit\/moqtconnection\/role","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func annouce([String], authInfo: String?) async throws -> Result<MoQTAnnounceOk, MoQTAnnounceError>","path":"\/documentation\/moqthaishinkit\/moqtconnection\/annouce(_:authinfo:)","type":"method"},{"title":"func close() async","path":"\/documentation\/moqthaishinkit\/moqtconnection\/close()","type":"method"},{"title":"func connect(String) async throws -> MoQTServerSetup","path":"\/documentation\/moqthaishinkit\/moqtconnection\/connect(_:)","type":"method"},{"title":"func send([MoQTObject], header: MoQTStreamHeaderSubgroup) async throws","path":"\/documentation\/moqthaishinkit\/moqtconnection\/send(_:header:)","type":"method"},{"title":"func subscribe([String], name: String, authInfo: String?) async throws -> Result<MoQTSubscribeOk, MoQTSubscribeError>","path":"\/documentation\/moqthaishinkit\/moqtconnection\/subscribe(_:name:authinfo:)","type":"method"},{"title":"func subscribeAnnouces([String], authInfo: String?) async throws -> Result<MoQTSubscribeAnnouncesOk, MoQTSubscribeAnnouncesError>","path":"\/documentation\/moqthaishinkit\/moqtconnection\/subscribeannouces(_:authinfo:)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"title":"static let defaultPort: Int","path":"\/documentation\/moqthaishinkit\/moqtconnection\/defaultport","type":"property"},{"title":"static let defaultRequestTimeout: UInt64","path":"\/documentation\/moqthaishinkit\/moqtconnection\/defaultrequesttimeout","type":"property"},{"title":"static let supportedProtocols: [String]","path":"\/documentation\/moqthaishinkit\/moqtconnection\/supportedprotocols","type":"property"},{"title":"static let supportedVersions: [MoQTVersion]","path":"\/documentation\/moqthaishinkit\/moqtconnection\/supportedversions","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"title":"MoQTConnection.Error","path":"\/documentation\/moqthaishinkit\/moqtconnection\/error","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/error\/connectiontimedout","title":"case connectionTimedOut","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/error\/invalidstate","title":"case invalidState","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/error\/requesttimedout","title":"case requestTimedOut","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/error\/socketerroroccurred(_:)","title":"case socketErrorOccurred(any Error)","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/error\/unknownresponse","title":"case unknownResponse","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/error\/unsupportedcommand(_:)","title":"case unsupportedCommand(String)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/error\/error-implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtconnection\/error\/localizeddescription","title":"var localizedDescription: String"}],"title":"Error Implementations","type":"symbol"}],"type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Actor Implementations","path":"\/documentation\/moqthaishinkit\/moqtconnection\/actor-implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/moqthaishinkit\/moqtconnection\/assertisolated(_:file:line:)","type":"method"},{"title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","path":"\/documentation\/moqthaishinkit\/moqtconnection\/assumeisolated(_:file:line:)","type":"method"},{"title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/moqthaishinkit\/moqtconnection\/preconditionisolated(_:file:line:)","type":"method"}],"type":"symbol"}],"type":"class","title":"MoQTConnection","path":"\/documentation\/moqthaishinkit\/moqtconnection"},{"type":"groupMarker","title":"Protocols"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"type":"property","title":"var payload: Data","path":"\/documentation\/moqthaishinkit\/moqtcontrolmessage\/payload"},{"type":"property","title":"var type: MoQTMessageType","path":"\/documentation\/moqthaishinkit\/moqtcontrolmessage\/type"}],"type":"protocol","title":"MoQTControlMessage","path":"\/documentation\/moqthaishinkit\/moqtcontrolmessage"},{"type":"groupMarker","title":"Structures"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/moqthaishinkit\/moqtannounce\/payload","type":"property","title":"var payload: Data"},{"path":"\/documentation\/moqthaishinkit\/moqtannounce\/subscribeparameters","type":"property","title":"let subscribeParameters: [MoQTVersionSpecificParameter]"},{"path":"\/documentation\/moqthaishinkit\/moqtannounce\/tracknamespace","type":"property","title":"let trackNamespace: [String]"},{"path":"\/documentation\/moqthaishinkit\/moqtannounce\/type","type":"property","title":"let type: MoQTMessageType"}],"type":"struct","title":"MoQTAnnounce","path":"\/documentation\/moqthaishinkit\/moqtannounce"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/moqthaishinkit\/moqtannounceerror\/code","type":"property","title":"let code: Int"},{"path":"\/documentation\/moqthaishinkit\/moqtannounceerror\/payload","type":"property","title":"var payload: Data"},{"path":"\/documentation\/moqthaishinkit\/moqtannounceerror\/reasonphrase","type":"property","title":"let reasonPhrase: String"},{"path":"\/documentation\/moqthaishinkit\/moqtannounceerror\/tracknamespace","type":"property","title":"let trackNamespace: [String]"},{"path":"\/documentation\/moqthaishinkit\/moqtannounceerror\/type","type":"property","title":"let type: MoQTMessageType"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var localizedDescription: String","path":"\/documentation\/moqthaishinkit\/moqtannounceerror\/localizeddescription"}],"path":"\/documentation\/moqthaishinkit\/moqtannounceerror\/error-implementations","type":"symbol","title":"Error Implementations"}],"type":"struct","title":"MoQTAnnounceError","path":"\/documentation\/moqthaishinkit\/moqtannounceerror"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var payload: Data","path":"\/documentation\/moqthaishinkit\/moqtannounceok\/payload","type":"property"},{"title":"let trackNamespace: [String]","path":"\/documentation\/moqthaishinkit\/moqtannounceok\/tracknamespace","type":"property"},{"title":"let type: MoQTMessageType","path":"\/documentation\/moqthaishinkit\/moqtannounceok\/type","type":"property"}],"type":"struct","title":"MoQTAnnounceOk","path":"\/documentation\/moqthaishinkit\/moqtannounceok"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"let newSessionURI: String","path":"\/documentation\/moqthaishinkit\/moqtgoaway\/newsessionuri","type":"property"},{"title":"var payload: Data","path":"\/documentation\/moqthaishinkit\/moqtgoaway\/payload","type":"property"},{"title":"let type: MoQTMessageType","path":"\/documentation\/moqthaishinkit\/moqtgoaway\/type","type":"property"}],"type":"struct","title":"MoQTGoaway","path":"\/documentation\/moqthaishinkit\/moqtgoaway"},{"children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/moqthaishinkit\/moqtobject\/init(id:status:data:)","type":"init","title":"init(id: Int, status: Int?, data: Data)"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/moqthaishinkit\/moqtobject\/data","type":"property","title":"let data: Data"},{"path":"\/documentation\/moqthaishinkit\/moqtobject\/id","type":"property","title":"let id: Int"},{"path":"\/documentation\/moqthaishinkit\/moqtobject\/status","type":"property","title":"let status: Int?"}],"type":"struct","title":"MoQTObject","path":"\/documentation\/moqthaishinkit\/moqtobject"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var payload: Data","path":"\/documentation\/moqthaishinkit\/moqtserversetup\/payload","type":"property"},{"title":"let selectedVersion: Int","path":"\/documentation\/moqthaishinkit\/moqtserversetup\/selectedversion","type":"property"},{"title":"let setupParameters: [MoQTSetupParameter]","path":"\/documentation\/moqthaishinkit\/moqtserversetup\/setupparameters","type":"property"},{"title":"let type: MoQTMessageType","path":"\/documentation\/moqthaishinkit\/moqtserversetup\/type","type":"property"}],"type":"struct","title":"MoQTServerSetup","path":"\/documentation\/moqthaishinkit\/moqtserversetup"},{"path":"\/documentation\/moqthaishinkit\/moqtsetupparameter","title":"MoQTSetupParameter","type":"struct","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/moqthaishinkit\/moqtsetupparameter\/key","type":"property","title":"let key: MoQTSetupParameterType"},{"path":"\/documentation\/moqthaishinkit\/moqtsetupparameter\/value","type":"property","title":"let value: any Sendable"}]},{"path":"\/documentation\/moqthaishinkit\/moqtstreamheadersubgroup","title":"MoQTStreamHeaderSubgroup","type":"struct","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/moqthaishinkit\/moqtstreamheadersubgroup\/init(trackalias:groupid:subgroupid:publisherpriority:)","type":"init","title":"init(trackAlias: Int, groupId: Int, subgroupId: Int, publisherPriority: Int)"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/moqthaishinkit\/moqtstreamheadersubgroup\/groupid","type":"property","title":"let groupId: Int"},{"path":"\/documentation\/moqthaishinkit\/moqtstreamheadersubgroup\/payload","type":"property","title":"var payload: Data"},{"path":"\/documentation\/moqthaishinkit\/moqtstreamheadersubgroup\/publisherpriority","type":"property","title":"let publisherPriority: Int"},{"path":"\/documentation\/moqthaishinkit\/moqtstreamheadersubgroup\/subgroupid","type":"property","title":"let subgroupId: Int"},{"path":"\/documentation\/moqthaishinkit\/moqtstreamheadersubgroup\/trackalias","type":"property","title":"let trackAlias: Int"},{"path":"\/documentation\/moqthaishinkit\/moqtstreamheadersubgroup\/type","type":"property","title":"let type: MoQTDataStreamType"}]},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe","title":"MoQTSubscribe","type":"struct","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"let endGroup: Int?","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/endgroup","type":"property"},{"title":"let endObject: Int?","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/endobject","type":"property"},{"title":"let filterType: MoQTSubscribe.FilterType","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.property","type":"property"},{"title":"let groupOrder: MoQTSubscribe.GroupOrder","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.property","type":"property"},{"title":"var payload: Data","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/payload","type":"property"},{"title":"let startGroup: Int?","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/startgroup","type":"property"},{"title":"let startObject: Int?","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/startobject","type":"property"},{"title":"let subscribeId: Int","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/subscribeid","type":"property"},{"title":"let subscribeParameters: [MoQTVersionSpecificParameter]","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/subscribeparameters","type":"property"},{"title":"let subscribePriority: Int","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/subscribepriority","type":"property"},{"title":"let trackAlias: Int","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/trackalias","type":"property"},{"title":"let trackName: String","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/trackname","type":"property"},{"title":"let trackNamespace: [String]","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/tracknamespace","type":"property"},{"title":"let type: MoQTMessageType","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/type","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"title":"MoQTSubscribe.FilterType","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case absoluteRange","type":"case","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/absoluterange"},{"title":"case absoluteStart","type":"case","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/absolutestart"},{"title":"case latestGroup","type":"case","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/latestgroup"},{"title":"case latestObject","type":"case","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/latestobject"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: Int)","type":"init","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/init(rawvalue:)"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}],"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/equatable-implementations"},{"title":"RawRepresentable Implementations","type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/rawrepresentable-implementations"}],"type":"enum"},{"title":"MoQTSubscribe.GroupOrder","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/ascending","type":"case","title":"case ascending"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/descending","type":"case","title":"case descending"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/original","type":"case","title":"case original"},{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/init(rawvalue:)","type":"init","title":"init?(rawValue: Int)"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/equatable-implementations","type":"symbol","title":"Equatable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}]},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/rawrepresentable-implementations","type":"symbol","title":"RawRepresentable Implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/hashvalue","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func hash(into: inout Hasher)","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/hash(into:)","type":"method"}]}],"type":"enum"}]},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounces","title":"MoQTSubscribeAnnounces","type":"struct","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"let parameters: [MoQTVersionSpecificParameter]","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounces\/parameters","type":"property"},{"title":"var payload: Data","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounces\/payload","type":"property"},{"title":"let trackNamespacePrefix: [String]","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounces\/tracknamespaceprefix","type":"property"},{"title":"let type: MoQTMessageType","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounces\/type","type":"property"}]},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounceserror","title":"MoQTSubscribeAnnouncesError","type":"struct","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"let errorCode: Int","type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounceserror\/errorcode"},{"title":"var payload: Data","type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounceserror\/payload"},{"title":"let reasonPhrase: String","type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounceserror\/reasonphrase"},{"title":"let trackNamespacePrefix: [String]","type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounceserror\/tracknamespaceprefix"},{"title":"let type: MoQTMessageType","type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounceserror\/type"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Error Implementations","type":"symbol","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounceserror\/error-implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var localizedDescription: String","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounceserror\/localizeddescription","type":"property"}]}]},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeannouncesok","title":"MoQTSubscribeAnnouncesOk","type":"struct","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var payload: Data","type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannouncesok\/payload"},{"title":"let trackNamespacePrefix: [String]","type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannouncesok\/tracknamespaceprefix"},{"title":"let type: MoQTMessageType","type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannouncesok\/type"}]},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror","title":"MoQTSubscribeError","type":"struct","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror\/code","title":"let code: Int","type":"property"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror\/payload","title":"var payload: Data","type":"property"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror\/reasonphrase","title":"let reasonPhrase: String","type":"property"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror\/subscribeid","title":"let subscribeId: Int","type":"property"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror\/trackalias","title":"let trackAlias: Int","type":"property"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror\/type","title":"let type: MoQTMessageType","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var localizedDescription: String","path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror\/localizeddescription","type":"property"}],"path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror\/error-implementations","title":"Error Implementations","type":"symbol"}]},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeok","title":"MoQTSubscribeOk","type":"struct","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"let contentExists: Bool","path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/contentexists","type":"property"},{"title":"let expires: Int","path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/expires","type":"property"},{"title":"let groupOrder: MoQTSubscribe.GroupOrder","path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/grouporder","type":"property"},{"title":"let largestGroupId: Int?","path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/largestgroupid","type":"property"},{"title":"let largestObjectId: Int?","path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/largestobjectid","type":"property"},{"title":"var payload: Data","path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/payload","type":"property"},{"title":"let subscribeId: Int","path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/subscribeid","type":"property"},{"title":"let subscribeParameters: [MoQTVersionSpecificParameter]","path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/subscribeparameters","type":"property"},{"title":"let type: MoQTMessageType","path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/type","type":"property"}]},{"path":"\/documentation\/moqthaishinkit\/moqtversionspecificparameter","title":"MoQTVersionSpecificParameter","type":"struct","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"let key: MoQTVersionSpecificType","path":"\/documentation\/moqthaishinkit\/moqtversionspecificparameter\/key","type":"property"},{"title":"let value: any Sendable","path":"\/documentation\/moqthaishinkit\/moqtversionspecificparameter\/value","type":"property"}]},{"title":"Enumerations","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype","title":"MoQTDataStreamType","type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","title":"case fetchHeader","path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/fetchheader"},{"type":"case","title":"case objectDatagram","path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/objectdatagram"},{"type":"case","title":"case streamHeaderSubgroup","path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/streamheadersubgroup"},{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init?(rawValue: Int)","path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/init(rawvalue:)"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/!=(_:_:)"}],"type":"symbol","title":"Equatable Implementations","path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/equatable-implementations"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"type":"property","title":"var hashValue: Int","path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/hashvalue"},{"title":"Instance Methods","type":"groupMarker"},{"type":"method","title":"func hash(into: inout Hasher)","path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/hash(into:)"}],"type":"symbol","title":"RawRepresentable Implementations","path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/rawrepresentable-implementations"}]},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype","title":"MoQTMessageType","type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case announce","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/announce","type":"case"},{"title":"case announceCancel","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/announcecancel","type":"case"},{"title":"case announceError","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/announceerror","type":"case"},{"title":"case announceOk","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/announceok","type":"case"},{"title":"case clientSetup","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/clientsetup","type":"case"},{"title":"case goaway","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/goaway","type":"case"},{"title":"case serverSetup","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/serversetup","type":"case"},{"title":"case subscribe","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/subscribe","type":"case"},{"title":"case subscribeAnnounuces","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/subscribeannounuces","type":"case"},{"title":"case subscribeAnnounucesError","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/subscribeannounuceserror","type":"case"},{"title":"case subscribeAnnounucesOk","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/subscribeannounucesok","type":"case"},{"title":"case subscribeDone","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/subscribedone","type":"case"},{"title":"case subscribeError","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/subscribeerror","type":"case"},{"title":"case subscribeOk","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/subscribeok","type":"case"},{"title":"case subscribeUpdate","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/subscribeupdate","type":"case"},{"title":"case trackStatus","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/trackstatus","type":"case"},{"title":"case trackStatusRequest","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/trackstatusrequest","type":"case"},{"title":"case unannounce","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/unannounce","type":"case"},{"title":"case unsubscribe","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/unsubscribe","type":"case"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: Int)","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/init(rawvalue:)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/equatable-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"}]},{"title":"RawRepresentable Implementations","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/rawrepresentable-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var hashValue: Int","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/hashvalue"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func hash(into: inout Hasher)","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/hash(into:)"}]}]},{"path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype","title":"MoQTSetupParameterType","type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case maxSubscribeId","type":"case","path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/maxsubscribeid"},{"title":"case path","type":"case","path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/path"},{"title":"case role","type":"case","path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/role"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: Int)","type":"init","path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/init(rawvalue:)"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"title":"Equatable Implementations","type":"symbol","path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/equatable-implementations"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","type":"property","path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/hashvalue"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func hash(into: inout Hasher)","type":"method","path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/hash(into:)"}],"title":"RawRepresentable Implementations","type":"symbol","path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/rawrepresentable-implementations"}]},{"path":"\/documentation\/moqthaishinkit\/moqtsetuprole","title":"MoQTSetupRole","type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","title":"case pubSub","path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/pubsub"},{"type":"case","title":"case publisher","path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/publisher"},{"type":"case","title":"case subscriber","path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/subscriber"},{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init?(rawValue: Int)","path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/init(rawvalue:)"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","title":"Equatable Implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/!=(_:_:)"}],"path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/equatable-implementations"},{"type":"symbol","title":"RawRepresentable Implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/hashvalue","type":"property","title":"var hashValue: Int"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/hash(into:)","type":"method","title":"func hash(into: inout Hasher)"}],"path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/rawrepresentable-implementations"}]},{"path":"\/documentation\/moqthaishinkit\/moqtversion","title":"MoQTVersion","type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case draft01","type":"case","path":"\/documentation\/moqthaishinkit\/moqtversion\/draft01"},{"title":"case draft02","type":"case","path":"\/documentation\/moqthaishinkit\/moqtversion\/draft02"},{"title":"case draft03","type":"case","path":"\/documentation\/moqthaishinkit\/moqtversion\/draft03"},{"title":"case draft04","type":"case","path":"\/documentation\/moqthaishinkit\/moqtversion\/draft04"},{"title":"case draft05","type":"case","path":"\/documentation\/moqthaishinkit\/moqtversion\/draft05"},{"title":"case draft06","type":"case","path":"\/documentation\/moqthaishinkit\/moqtversion\/draft06"},{"title":"case draft07","type":"case","path":"\/documentation\/moqthaishinkit\/moqtversion\/draft07"},{"title":"case draft07Exp","type":"case","path":"\/documentation\/moqthaishinkit\/moqtversion\/draft07exp"},{"title":"case draft07Exp2","type":"case","path":"\/documentation\/moqthaishinkit\/moqtversion\/draft07exp2"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: Int)","type":"init","path":"\/documentation\/moqthaishinkit\/moqtversion\/init(rawvalue:)"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtversion\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/moqthaishinkit\/moqtversion\/equatable-implementations"},{"title":"RawRepresentable Implementations","type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtversion\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtversion\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/moqthaishinkit\/moqtversion\/rawrepresentable-implementations"}]},{"path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype","title":"MoQTVersionSpecificType","type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case authorizationInfo","path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/authorizationinfo","type":"case"},{"title":"case deliveryTimeout","path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/deliverytimeout","type":"case"},{"title":"case maxCacheDuration","path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/maxcacheduration","type":"case"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: Int)","path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/init(rawvalue:)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/equatable-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/!=(_:_:)"}]},{"title":"RawRepresentable Implementations","path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/rawrepresentable-implementations","type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","type":"property","path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/hashvalue"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func hash(into: inout Hasher)","type":"method","path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/hash(into:)"}]}]}],"path":"\/documentation\/moqthaishinkit"}],"type":"module","title":"HaishinKit","path":"\/documentation"}]},"schemaVersion":{"patch":2,"minor":1,"major":0},"includedArchiveIdentifiers":["Logboard","HaishinKit","SRTHaishinKit","MoQTHaishinKit"]}