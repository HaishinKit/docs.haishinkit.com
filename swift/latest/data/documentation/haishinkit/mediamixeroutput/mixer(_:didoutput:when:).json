{"abstract":[{"text":"Tells the receiver to an audio buffer incoming.","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/haishinkit\/mediamixeroutput\/mixer(_:didoutput:when:)"]}],"metadata":{"modules":[{"name":"HaishinKit"}],"required":true,"role":"symbol","title":"mixer(_:didOutput:when:)","roleHeading":"Instance Method","externalID":"s:10HaishinKit16MediaMixerOutputP5mixer_03didE04whenyAA0cD0C_So16AVAudioPCMBufferCSo0I4TimeCtF","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"mixer"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"MediaMixer","preciseIdentifier":"s:10HaishinKit10MediaMixerC"},{"kind":"text","text":", "},{"kind":"externalParam","text":"didOutput"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"AVAudioPCMBuffer","preciseIdentifier":"c:objc(cs)AVAudioPCMBuffer"},{"kind":"text","text":", "},{"kind":"externalParam","text":"when"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"AVAudioTime","preciseIdentifier":"c:objc(cs)AVAudioTime"},{"kind":"text","text":")"}],"symbolKind":"method"},"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"mixer","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"mixer","kind":"internalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10HaishinKit10MediaMixerC","text":"MediaMixer","identifier":"doc:\/\/HaishinKit\/documentation\/HaishinKit\/MediaMixer","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"didOutput","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"buffer","kind":"internalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"c:objc(cs)AVAudioPCMBuffer","text":"AVAudioPCMBuffer","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"when","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"c:objc(cs)AVAudioTime","text":"AVAudioTime","kind":"typeIdentifier"},{"text":")","kind":"text"}],"platforms":["macOS"]}],"kind":"declarations"}],"identifier":{"url":"doc:\/\/HaishinKit\/documentation\/HaishinKit\/MediaMixerOutput\/mixer(_:didOutput:when:)","interfaceLanguage":"swift"},"kind":"symbol","sections":[],"hierarchy":{"paths":[["doc:\/\/HaishinKit\/documentation\/HaishinKit","doc:\/\/HaishinKit\/documentation\/HaishinKit\/MediaMixerOutput"]]},"schemaVersion":{"major":0,"minor":3,"patch":0},"references":{"doc://HaishinKit/documentation/HaishinKit":{"url":"\/documentation\/haishinkit","type":"topic","role":"collection","abstract":[{"type":"text","text":"This is the main module. This module supports the RTMP protocol."}],"title":"HaishinKit","kind":"symbol","identifier":"doc:\/\/HaishinKit\/documentation\/HaishinKit"},"doc://HaishinKit/documentation/HaishinKit/MediaMixerOutput/mixer(_:didOutput:when:)":{"required":true,"role":"symbol","title":"mixer(_:didOutput:when:)","abstract":[{"type":"text","text":"Tells the receiver to an audio buffer incoming."}],"type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"mixer"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:10HaishinKit10MediaMixerC","text":"MediaMixer"},{"kind":"text","text":", "},{"kind":"externalParam","text":"didOutput"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)AVAudioPCMBuffer","text":"AVAudioPCMBuffer"},{"kind":"text","text":", "},{"kind":"externalParam","text":"when"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)AVAudioTime","text":"AVAudioTime"},{"kind":"text","text":")"}],"url":"\/documentation\/haishinkit\/mediamixeroutput\/mixer(_:didoutput:when:)","kind":"symbol","identifier":"doc:\/\/HaishinKit\/documentation\/HaishinKit\/MediaMixerOutput\/mixer(_:didOutput:when:)"},"doc://HaishinKit/documentation/HaishinKit/MediaMixer":{"type":"topic","kind":"symbol","title":"MediaMixer","role":"symbol","identifier":"doc:\/\/HaishinKit\/documentation\/HaishinKit\/MediaMixer","url":"\/documentation\/haishinkit\/mediamixer","abstract":[{"type":"text","text":"An actor that mixies audio and video for streaming."}],"navigatorTitle":[{"text":"MediaMixer","kind":"identifier"}],"fragments":[{"text":"actor","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MediaMixer","kind":"identifier"}]},"doc://HaishinKit/documentation/HaishinKit/MediaMixerOutput":{"abstract":[{"type":"text","text":"A delegate protocol implements to receive stream output events."}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"MediaMixerOutput"}],"identifier":"doc:\/\/HaishinKit\/documentation\/HaishinKit\/MediaMixerOutput","navigatorTitle":[{"kind":"identifier","text":"MediaMixerOutput"}],"url":"\/documentation\/haishinkit\/mediamixeroutput","title":"MediaMixerOutput","role":"symbol","kind":"symbol","type":"topic"}}}