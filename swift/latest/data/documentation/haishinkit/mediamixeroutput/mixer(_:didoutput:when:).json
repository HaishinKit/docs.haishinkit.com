{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"mixer","kind":"identifier"},{"kind":"text","text":"("},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"mixer","kind":"internalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10HaishinKit10MediaMixerC","identifier":"doc:\/\/HaishinKit\/documentation\/HaishinKit\/MediaMixer","text":"MediaMixer"},{"text":", ","kind":"text"},{"text":"didOutput","kind":"externalParam"},{"kind":"text","text":" "},{"kind":"internalParam","text":"buffer"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)AVAudioPCMBuffer","text":"AVAudioPCMBuffer"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"when"},{"text":": ","kind":"text"},{"preciseIdentifier":"c:objc(cs)AVAudioTime","kind":"typeIdentifier","text":"AVAudioTime"},{"text":")","kind":"text"}],"languages":["swift"],"platforms":["macOS"]}]}],"hierarchy":{"paths":[["doc:\/\/HaishinKit\/documentation\/HaishinKit","doc:\/\/HaishinKit\/documentation\/HaishinKit\/MediaMixerOutput"]]},"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/haishinkit\/mediamixeroutput\/mixer(_:didoutput:when:)"]}],"schemaVersion":{"patch":0,"minor":3,"major":0},"metadata":{"title":"mixer(_:didOutput:when:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"mixer","kind":"identifier"},{"kind":"text","text":"("},{"text":"MediaMixer","kind":"typeIdentifier","preciseIdentifier":"s:10HaishinKit10MediaMixerC"},{"text":", ","kind":"text"},{"text":"didOutput","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"AVAudioPCMBuffer","preciseIdentifier":"c:objc(cs)AVAudioPCMBuffer"},{"text":", ","kind":"text"},{"text":"when","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"AVAudioTime","kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)AVAudioTime"},{"kind":"text","text":")"}],"roleHeading":"Instance Method","modules":[{"name":"HaishinKit"}],"symbolKind":"method","required":true,"role":"symbol","externalID":"s:10HaishinKit16MediaMixerOutputP5mixer_03didE04whenyAA0cD0C_So16AVAudioPCMBufferCSo0I4TimeCtF"},"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/HaishinKit\/documentation\/HaishinKit\/MediaMixerOutput\/mixer(_:didOutput:when:)"},"abstract":[{"text":"Tells the receiver to an audio buffer incoming.","type":"text"}],"references":{"doc://HaishinKit/documentation/HaishinKit":{"kind":"symbol","title":"HaishinKit","url":"\/documentation\/haishinkit","identifier":"doc:\/\/HaishinKit\/documentation\/HaishinKit","type":"topic","abstract":[],"role":"collection"},"doc://HaishinKit/documentation/HaishinKit/MediaMixerOutput/mixer(_:didOutput:when:)":{"url":"\/documentation\/haishinkit\/mediamixeroutput\/mixer(_:didoutput:when:)","type":"topic","title":"mixer(_:didOutput:when:)","kind":"symbol","required":true,"identifier":"doc:\/\/HaishinKit\/documentation\/HaishinKit\/MediaMixerOutput\/mixer(_:didOutput:when:)","abstract":[{"text":"Tells the receiver to an audio buffer incoming.","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"mixer","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:10HaishinKit10MediaMixerC","text":"MediaMixer","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"didOutput"},{"text":": ","kind":"text"},{"text":"AVAudioPCMBuffer","preciseIdentifier":"c:objc(cs)AVAudioPCMBuffer","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"when"},{"kind":"text","text":": "},{"preciseIdentifier":"c:objc(cs)AVAudioTime","kind":"typeIdentifier","text":"AVAudioTime"},{"kind":"text","text":")"}]},"doc://HaishinKit/documentation/HaishinKit/MediaMixer":{"identifier":"doc:\/\/HaishinKit\/documentation\/HaishinKit\/MediaMixer","abstract":[{"type":"text","text":"An actor that mixies audio and video for streaming."}],"kind":"symbol","role":"symbol","url":"\/documentation\/haishinkit\/mediamixer","type":"topic","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"MediaMixer"}],"title":"MediaMixer","navigatorTitle":[{"kind":"identifier","text":"MediaMixer"}]},"doc://HaishinKit/documentation/HaishinKit/MediaMixerOutput":{"title":"MediaMixerOutput","type":"topic","url":"\/documentation\/haishinkit\/mediamixeroutput","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"MediaMixerOutput"}],"navigatorTitle":[{"text":"MediaMixerOutput","kind":"identifier"}],"identifier":"doc:\/\/HaishinKit\/documentation\/HaishinKit\/MediaMixerOutput","abstract":[{"type":"text","text":"A delegate protocol implements to receive stream output events."}],"kind":"symbol","role":"symbol"}}}