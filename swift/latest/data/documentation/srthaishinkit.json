{"primaryContentSections":[{"content":[{"anchor":"Overview","level":2,"type":"heading","text":"Overview"},{"inlineContent":[{"type":"text","text":"This is a module that supports SRT protocol. It internally uses a library that is built from "},{"isActive":true,"identifier":"https:\/\/github.com\/Haivision\/srt","type":"reference"},{"type":"text","text":" and converted into an xcframework."}],"type":"paragraph"},{"anchor":"%F0%9F%8E%A8-Features","type":"heading","text":"ðŸŽ¨ Features","level":2},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Ingest","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"H264, HEVC and AAC support.","type":"text"}]}]}]}]},{"content":[{"inlineContent":[{"text":"Playback","type":"text"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"H264, HEVC and AAC support.","type":"text"}],"type":"paragraph"}]}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"SRT Mode"}]},{"items":[{"checked":true,"content":[{"inlineContent":[{"text":"caller","type":"text"}],"type":"paragraph"}]},{"checked":true,"content":[{"inlineContent":[{"text":"listener","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"rendezvous"}]}],"checked":false}],"type":"unorderedList"}]}]},{"text":"ðŸ““ Usage","type":"heading","level":2,"anchor":"%F0%9F%93%93-Usage"},{"level":3,"text":"Logging","type":"heading","anchor":"Logging"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Defining a Swift wrapper method for "},{"type":"codeVoice","code":"srt_setloglevel"},{"type":"text","text":"."}]}]}],"type":"unorderedList"},{"syntax":"swift","type":"codeListing","code":["await SRTLogger.shared.setLevel(.debug)"]},{"type":"heading","text":"Ingest","level":3,"anchor":"Ingest"},{"code":["let mixer = MediaMixer()","let connection = SRTConnection()","let stream = SRTStream(connection: connection)","let hkView = MTHKView(frame: view.bounds)","","Task {","  do {","    try await mixer.attachAudio(AVCaptureDevice.default(for: .audio))","  } catch {","    print(error)","  }","","  do {","    try await mixer.attachVideo(AVCaptureDevice.default(.builtInWideAngleCamera, for: .video, position: .back))","  } catch {","    print(error)","  }","","  await mixer.addOutput(stream)","}","","Task { MainActor in","  await stream.addOutput(hkView)","  \/\/ add ViewController#view","  view.addSubview(hkView)","}","","Task {","  stream.attachAudioPlayer(audioPlayer)","  do {","    try await connection.connect(\"srt:\/\/host:port\")","    await stream.publish()","  } catch {","    print(error)","  }","}"],"type":"codeListing","syntax":"swift"},{"level":3,"anchor":"Playback","type":"heading","text":"Playback"},{"type":"codeListing","syntax":"swift","code":["let connection = SRTConnection()","let stream = SRTStream(connection: connection)","let hkView = MTHKView(frame: view.bounds)","let audioPlayer = AudioPlayer(AVAudioEngine())","","Task { MainActor in","  await stream.addOutput(hkView)","  \/\/ add ViewController#view","  view.addSubview(hkView)","}","","Task {","  \/\/ requires attachAudioPlayer","  await stream.attachAudioPlayer(audioPlayer)","","  do {","    try await connection.connect(\"srt:\/\/host:port\")","    await stream.play()","  } catch {","    print(error)","  }","}"]},{"type":"heading","level":3,"text":"Specify socket options.","anchor":"Specify-socket-options"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"On the HaishinKit side, the default settings of libsrt are used.","type":"text"}]},{"items":[{"content":[{"inlineContent":[{"text":"Please check ","type":"text"},{"identifier":"https:\/\/github.com\/shogo4405\/HaishinKit.swift\/blob\/main\/SRTHaishinKit\/Sources\/SRT\/SRTSocketOption.swift","type":"reference","isActive":true},{"type":"text","text":" for the support status."}],"type":"paragraph"}]}],"type":"unorderedList"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Many SRT options can be defined as query parameters in the connection URL as follows."}]}]}]},{"code":["try await connection.connect(\"srt:\/\/host:port?key=value\")"],"type":"codeListing","syntax":"swift"},{"level":2,"text":"ðŸ”§ Test","type":"heading","anchor":"%F0%9F%94%A7-Test"},{"anchor":"ffplay-as-a-SRT-service-for-ingest-HaishinKit","text":"ffplay as a SRT service for ingest HaishinKit.","type":"heading","level":3},{"code":["$ ffplay -i 'srt:\/\/${YOUR_IP_ADDRESS}?mode=listener'"],"type":"codeListing","syntax":"sh"},{"anchor":"ffmpeg-as-a-SRT-service-for-playback-HaishinKit","text":"ffmpeg as a SRT service for playback HaishinKit.","level":3,"type":"heading"},{"type":"codeListing","syntax":"sh","code":["$ ffmpeg -stream_loop -1 -re -i input.mp4 -c copy -f mpegts 'srt:\/\/0.0.0.0:9998?mode=listener'"]},{"type":"heading","anchor":"%F0%9F%93%9C-License","text":"ðŸ“œ License","level":2},{"type":"heading","anchor":"SRTHaishinKit","level":3,"text":"SRTHaishinKit"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"SRTHaishinKit is licensed under the BSD-3-Clause."}],"type":"paragraph"}]}]},{"type":"heading","level":3,"anchor":"libsrtxcframework","text":"libsrt.xcframework"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"libsrt.xcframework is licensed under MPLv2.0.","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"This is a build of https:\/\/github.com\/Haivision\/srt as an xcframework."}],"type":"paragraph"}]}]}],"kind":"content"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SRTHaishinKit\/documentation\/SRTHaishinKit"},"sections":[],"topicSections":[{"generated":true,"title":"Classes","anchor":"Classes","identifiers":["doc:\/\/SRTHaishinKit\/documentation\/SRTHaishinKit\/SRTConnection","doc:\/\/SRTHaishinKit\/documentation\/SRTHaishinKit\/SRTLogger","doc:\/\/SRTHaishinKit\/documentation\/SRTHaishinKit\/SRTStream"]},{"generated":true,"title":"Structures","identifiers":["doc:\/\/SRTHaishinKit\/documentation\/SRTHaishinKit\/SRTPerformanceData"],"anchor":"Structures"},{"generated":true,"title":"Enumerations","anchor":"Enumerations","identifiers":["doc:\/\/SRTHaishinKit\/documentation\/SRTHaishinKit\/SRTLogFunctionalArea","doc:\/\/SRTHaishinKit\/documentation\/SRTHaishinKit\/SRTLogLevel","doc:\/\/SRTHaishinKit\/documentation\/SRTHaishinKit\/SRTMode"]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/srthaishinkit"]}],"hierarchy":{"paths":[[]]},"kind":"symbol","metadata":{"role":"collection","roleHeading":"Framework","externalID":"SRTHaishinKit","modules":[{"name":"SRTHaishinKit"}],"symbolKind":"module","title":"SRTHaishinKit"},"abstract":[{"text":"This module supports the SRT protocol.","type":"text"}],"references":{"doc://SRTHaishinKit/documentation/SRTHaishinKit":{"role":"collection","url":"\/documentation\/srthaishinkit","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"This module supports the SRT protocol."}],"identifier":"doc:\/\/SRTHaishinKit\/documentation\/SRTHaishinKit","title":"SRTHaishinKit"},"doc://SRTHaishinKit/documentation/SRTHaishinKit/SRTLogFunctionalArea":{"url":"\/documentation\/srthaishinkit\/srtlogfunctionalarea","navigatorTitle":[{"text":"SRTLogFunctionalArea","kind":"identifier"}],"identifier":"doc:\/\/SRTHaishinKit\/documentation\/SRTHaishinKit\/SRTLogFunctionalArea","title":"SRTLogFunctionalArea","type":"topic","kind":"symbol","role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SRTLogFunctionalArea","kind":"identifier"}],"abstract":[{"type":"text","text":"Constants that indicate the addition to levels the logging system has functional areas ."}]},"doc://SRTHaishinKit/documentation/SRTHaishinKit/SRTLogger":{"abstract":[{"type":"text","text":"An actor for writing interpolated string messages to srt logging system."}],"title":"SRTLogger","type":"topic","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"SRTLogger","kind":"identifier"}],"navigatorTitle":[{"text":"SRTLogger","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/srthaishinkit\/srtlogger","role":"symbol","identifier":"doc:\/\/SRTHaishinKit\/documentation\/SRTHaishinKit\/SRTLogger"},"doc://SRTHaishinKit/documentation/SRTHaishinKit/SRTLogLevel":{"navigatorTitle":[{"text":"SRTLogLevel","kind":"identifier"}],"role":"symbol","abstract":[],"type":"topic","identifier":"doc:\/\/SRTHaishinKit\/documentation\/SRTHaishinKit\/SRTLogLevel","url":"\/documentation\/srthaishinkit\/srtloglevel","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SRTLogLevel"}],"title":"SRTLogLevel","kind":"symbol"},"doc://SRTHaishinKit/documentation/SRTHaishinKit/SRTMode":{"navigatorTitle":[{"kind":"identifier","text":"SRTMode"}],"type":"topic","abstract":[{"text":"The type of SRTHaishinKit supports srt modes.","type":"text"}],"url":"\/documentation\/srthaishinkit\/srtmode","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SRTMode"}],"identifier":"doc:\/\/SRTHaishinKit\/documentation\/SRTHaishinKit\/SRTMode","title":"SRTMode"},"doc://SRTHaishinKit/documentation/SRTHaishinKit/SRTConnection":{"identifier":"doc:\/\/SRTHaishinKit\/documentation\/SRTHaishinKit\/SRTConnection","url":"\/documentation\/srthaishinkit\/srtconnection","title":"SRTConnection","abstract":[{"type":"text","text":"An actor that provides the interface to control a SRT connection."},{"text":" ","type":"text"},{"text":"Supports a one-to-one connection. Multiple connections cannot be established.","type":"text"}],"role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SRTConnection"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"SRTConnection"}],"kind":"symbol"},"https://github.com/shogo4405/HaishinKit.swift/blob/main/SRTHaishinKit/Sources/SRT/SRTSocketOption.swift":{"type":"link","titleInlineContent":[{"type":"text","text":"the following code"}],"identifier":"https:\/\/github.com\/shogo4405\/HaishinKit.swift\/blob\/main\/SRTHaishinKit\/Sources\/SRT\/SRTSocketOption.swift","title":"the following code","url":"https:\/\/github.com\/shogo4405\/HaishinKit.swift\/blob\/main\/SRTHaishinKit\/Sources\/SRT\/SRTSocketOption.swift"},"https://github.com/Haivision/srt":{"type":"link","titleInlineContent":[{"type":"text","text":"libsrt"}],"identifier":"https:\/\/github.com\/Haivision\/srt","title":"libsrt","url":"https:\/\/github.com\/Haivision\/srt"},"doc://SRTHaishinKit/documentation/SRTHaishinKit/SRTPerformanceData":{"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"SRTPerformanceData","kind":"identifier"}],"role":"symbol","url":"\/documentation\/srthaishinkit\/srtperformancedata","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"The SRTPerformanceData represents the SRTâ€™s performance statistics. This struct is wrapper for an CBytePerfMon."}],"identifier":"doc:\/\/SRTHaishinKit\/documentation\/SRTHaishinKit\/SRTPerformanceData","title":"SRTPerformanceData","navigatorTitle":[{"kind":"identifier","text":"SRTPerformanceData"}]},"doc://SRTHaishinKit/documentation/SRTHaishinKit/SRTStream":{"kind":"symbol","identifier":"doc:\/\/SRTHaishinKit\/documentation\/SRTHaishinKit\/SRTStream","url":"\/documentation\/srthaishinkit\/srtstream","title":"SRTStream","abstract":[{"text":"An actor that provides the interface to control a one-way channel over a SRTConnection.","type":"text"}],"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"SRTStream","kind":"identifier"}],"navigatorTitle":[{"text":"SRTStream","kind":"identifier"}]}}}