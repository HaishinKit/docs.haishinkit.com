{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SRTHaishinKit\/documentation\/SRTHaishinKit"},"hierarchy":{"paths":[[]]},"schemaVersion":{"patch":0,"major":0,"minor":3},"sections":[],"topicSections":[{"anchor":"Classes","title":"Classes","identifiers":["doc:\/\/SRTHaishinKit\/documentation\/SRTHaishinKit\/SRTConnection","doc:\/\/SRTHaishinKit\/documentation\/SRTHaishinKit\/SRTStream"],"generated":true},{"identifiers":["doc:\/\/SRTHaishinKit\/documentation\/SRTHaishinKit\/SRTLogger","doc:\/\/SRTHaishinKit\/documentation\/SRTHaishinKit\/SRTPerformanceData"],"anchor":"Structures","generated":true,"title":"Structures"},{"identifiers":["doc:\/\/SRTHaishinKit\/documentation\/SRTHaishinKit\/SRTLogFunctionalArea","doc:\/\/SRTHaishinKit\/documentation\/SRTHaishinKit\/SRTLogLevel","doc:\/\/SRTHaishinKit\/documentation\/SRTHaishinKit\/SRTMode"],"anchor":"Enumerations","generated":true,"title":"Enumerations"}],"primaryContentSections":[{"kind":"content","content":[{"type":"heading","level":2,"text":"Overview","anchor":"Overview"},{"inlineContent":[{"type":"text","text":"This module supports the SRT protocol. It is separated into its own module due to the large size of the wrapper library for libsrt."}],"type":"paragraph"},{"type":"heading","level":2,"anchor":"libsrtxcframework","text":"libsrt.xcframework"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"This is a build of https:\/\/github.com\/Haivision\/srt as an xcframework.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The license under the MPLv2.0."}]}]}]},{"text":"ðŸ““ Usage","anchor":"%F0%9F%93%93-Usage","level":2,"type":"heading"},{"level":3,"text":"Ingest","anchor":"Ingest","type":"heading"},{"type":"codeListing","syntax":"swift","code":["let mixer = MediaMixer()","let connection = SRTConnection()","let stream = SRTStream(connection: connection)","let hkView = MTHKView(frame: view.bounds)","","Task {","  do {","    try await mixer.attachAudio(AVCaptureDevice.default(for: .audio))","  } catch {","    print(error)","  }","","  do {","    try await mixer.attachVideo(AVCaptureDevice.default(.builtInWideAngleCamera, for: .video, position: .back))","  } catch {","    print(error)","  }","","  await mixer.addOutput(stream)","}","","Task { MainActor in","  await stream.addOutput(hkView)","  \/\/ add ViewController#view","  view.addSubview(hkView)","}","","Task {","  stream.attachAudioPlayer(audioPlayer)","  do {","    try await connection.connect(\"srt:\/\/host:port?option=foo\")","    try await stream.publish()","  } catch {","    print(error)","  }","}"]},{"level":3,"anchor":"Playback","type":"heading","text":"Playback"},{"type":"codeListing","syntax":"swift","code":["let connection = SRTConnection()","let stream = SRTStream(connection: connection)","let hkView = MTHKView(frame: view.bounds)","let audioPlayer = AudioPlayer(AVAudioEngine())","","Task { MainActor in","  await stream.addOutput(hkView)","  \/\/ add ViewController#view","  view.addSubview(hkView)","}","","Task {","  \/\/ requires attachAudioPlayer","  await stream.attachAudioPlayer(audioPlayer)","","  do {","    try await connection.connect(\"srt:\/\/host:port?option=foo\")","    try await stream.play()","  } catch {","    print(error)","  }","}"]},{"type":"heading","text":"Test","anchor":"Test","level":2},{"text":"ffplay as a SRT service for ingest HaishinKit.","level":3,"type":"heading","anchor":"ffplay-as-a-SRT-service-for-ingest-HaishinKit"},{"code":["$ ffplay -i 'srt:\/\/${YOUR_IP_ADDRESS}?mode=listener'"],"syntax":"sh","type":"codeListing"},{"type":"heading","level":3,"text":"ffmpeg as a SRT service for playback HaishinKit.","anchor":"ffmpeg-as-a-SRT-service-for-playback-HaishinKit"},{"syntax":"sh","type":"codeListing","code":["$ ffmpeg -stream_loop -1 -re -i input.mp4 -c copy -f mpegts 'srt:\/\/0.0.0.0:9998?mode=listener'"]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/srthaishinkit"]}],"metadata":{"role":"collection","title":"SRTHaishinKit","modules":[{"name":"SRTHaishinKit"}],"roleHeading":"Framework","externalID":"SRTHaishinKit","symbolKind":"module"},"kind":"symbol","references":{"doc://SRTHaishinKit/documentation/SRTHaishinKit/SRTLogLevel":{"identifier":"doc:\/\/SRTHaishinKit\/documentation\/SRTHaishinKit\/SRTLogLevel","abstract":[],"url":"\/documentation\/srthaishinkit\/srtloglevel","type":"topic","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SRTLogLevel","kind":"identifier"}],"kind":"symbol","title":"SRTLogLevel","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"SRTLogLevel"}]},"doc://SRTHaishinKit/documentation/SRTHaishinKit/SRTStream":{"type":"topic","url":"\/documentation\/srthaishinkit\/srtstream","abstract":[{"text":"An actor that provides the interface to control a one-way channel over a SRTConnection.","type":"text"}],"identifier":"doc:\/\/SRTHaishinKit\/documentation\/SRTHaishinKit\/SRTStream","title":"SRTStream","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"SRTStream","kind":"identifier"}],"navigatorTitle":[{"text":"SRTStream","kind":"identifier"}],"kind":"symbol"},"doc://SRTHaishinKit/documentation/SRTHaishinKit/SRTPerformanceData":{"url":"\/documentation\/srthaishinkit\/srtperformancedata","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"SRTPerformanceData","kind":"identifier"}],"navigatorTitle":[{"text":"SRTPerformanceData","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/SRTHaishinKit\/documentation\/SRTHaishinKit\/SRTPerformanceData","title":"SRTPerformanceData","abstract":[{"type":"text","text":"The SRTPerformanceData represents the SRTâ€™s performance statistics. This struct is wrapper for an CBytePerfMon."}],"kind":"symbol","role":"symbol"},"doc://SRTHaishinKit/documentation/SRTHaishinKit/SRTLogger":{"url":"\/documentation\/srthaishinkit\/srtlogger","type":"topic","title":"SRTLogger","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"SRTLogger","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/SRTHaishinKit\/documentation\/SRTHaishinKit\/SRTLogger","kind":"symbol","abstract":[{"type":"text","text":"An object for writing interpolated string messages to srt logging system."}],"navigatorTitle":[{"text":"SRTLogger","kind":"identifier"}]},"doc://SRTHaishinKit/documentation/SRTHaishinKit/SRTConnection":{"kind":"symbol","navigatorTitle":[{"text":"SRTConnection","kind":"identifier"}],"role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"SRTConnection"}],"type":"topic","identifier":"doc:\/\/SRTHaishinKit\/documentation\/SRTHaishinKit\/SRTConnection","abstract":[{"text":"An actor that provides the interface to control a two-way SRT connection.","type":"text"}],"title":"SRTConnection","url":"\/documentation\/srthaishinkit\/srtconnection"},"doc://SRTHaishinKit/documentation/SRTHaishinKit/SRTLogFunctionalArea":{"kind":"symbol","navigatorTitle":[{"text":"SRTLogFunctionalArea","kind":"identifier"}],"role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"SRTLogFunctionalArea"}],"type":"topic","identifier":"doc:\/\/SRTHaishinKit\/documentation\/SRTHaishinKit\/SRTLogFunctionalArea","abstract":[],"title":"SRTLogFunctionalArea","url":"\/documentation\/srthaishinkit\/srtlogfunctionalarea"},"doc://SRTHaishinKit/documentation/SRTHaishinKit":{"role":"collection","identifier":"doc:\/\/SRTHaishinKit\/documentation\/SRTHaishinKit","url":"\/documentation\/srthaishinkit","abstract":[],"title":"SRTHaishinKit","type":"topic","kind":"symbol"},"doc://SRTHaishinKit/documentation/SRTHaishinKit/SRTMode":{"role":"symbol","type":"topic","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SRTMode"}],"navigatorTitle":[{"kind":"identifier","text":"SRTMode"}],"title":"SRTMode","identifier":"doc:\/\/SRTHaishinKit\/documentation\/SRTHaishinKit\/SRTMode","kind":"symbol","abstract":[{"text":"The type of SRTHaishinKit supports srt modes.","type":"text"}],"url":"\/documentation\/srthaishinkit\/srtmode"}}}