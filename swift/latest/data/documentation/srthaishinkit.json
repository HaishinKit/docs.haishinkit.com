{"metadata":{"externalID":"SRTHaishinKit","symbolKind":"module","modules":[{"name":"SRTHaishinKit"}],"title":"SRTHaishinKit","roleHeading":"Framework","role":"collection"},"hierarchy":{"paths":[[]]},"primaryContentSections":[{"kind":"content","content":[{"anchor":"%F0%9F%94%8D-Overview","type":"heading","level":2,"text":"üîç Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"SRTHaishinKit is SRT protocols stack in Swift. It internally uses a library that is built from "},{"identifier":"https:\/\/github.com\/Haivision\/srt","type":"reference","isActive":true},{"type":"text","text":" and converted into an xcframework."}]},{"anchor":"%F0%9F%8E%A8-Features","type":"heading","level":2,"text":"üé® Features"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"Publish","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"H264, HEVC and AAC support."}],"type":"paragraph"}]}],"type":"unorderedList"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Playback","type":"text"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"H264, HEVC and AAC support."}]}]}],"type":"unorderedList"}]},{"content":[{"inlineContent":[{"type":"text","text":"SRT Mode"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"caller","type":"text"}]}],"checked":true},{"content":[{"type":"paragraph","inlineContent":[{"text":"listener","type":"text"}]}],"checked":true},{"content":[{"inlineContent":[{"type":"text","text":"rendezvous"}],"type":"paragraph"}],"checked":true}],"type":"unorderedList"}]}]},{"anchor":"%F0%9F%93%93-Usage","type":"heading","level":2,"text":"üìì Usage"},{"anchor":"Logging","type":"heading","level":3,"text":"Logging"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Defining a Swift wrapper method for ","type":"text"},{"code":"srt_setloglevel","type":"codeVoice"},{"text":".","type":"text"}]}]}]},{"type":"codeListing","syntax":"swift","code":["await SRTLogger.shared.setLevel(.debug)"]},{"anchor":"Publish","type":"heading","level":3,"text":"Publish"},{"type":"codeListing","syntax":"swift","code":["let mixer = MediaMixer()","let connection = SRTConnection()","let stream = SRTStream(connection: connection)","let hkView = MTHKView(frame: view.bounds)","","Task {","  do {","    try await mixer.attachAudio(AVCaptureDevice.default(for: .audio))","  } catch {","    print(error)","  }","","  do {","    try await mixer.attachVideo(AVCaptureDevice.default(.builtInWideAngleCamera, for: .video, position: .back))","  } catch {","    print(error)","  }","","  await mixer.addOutput(stream)","}","","Task { MainActor in","  await stream.addOutput(hkView)","  \/\/ add ViewController#view","  view.addSubview(hkView)","}","","Task {","  stream.attachAudioPlayer(audioPlayer)","  do {","    try await connection.connect(\"srt:\/\/host:port\")","    await stream.publish()","  } catch {","    print(error)","  }","}"]},{"anchor":"Playback","type":"heading","level":3,"text":"Playback"},{"code":["let connection = SRTConnection()","let stream = SRTStream(connection: connection)","let hkView = MTHKView(frame: view.bounds)","let audioPlayer = AudioPlayer(AVAudioEngine())","","Task { MainActor in","  await stream.addOutput(hkView)","  \/\/ add ViewController#view","  view.addSubview(hkView)","}","","Task {","  \/\/ requires attachAudioPlayer","  await stream.attachAudioPlayer(audioPlayer)","","  do {","    try await connection.connect(\"srt:\/\/host:port\")","    await stream.play()","  } catch {","    print(error)","  }","}"],"type":"codeListing","syntax":"swift"},{"text":"Specify socket options.","type":"heading","anchor":"Specify-socket-options","level":3},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"On the HaishinKit side, the default settings of libsrt are used."}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"Please check "},{"type":"reference","identifier":"https:\/\/github.com\/shogo4405\/HaishinKit.swift\/blob\/main\/SRTHaishinKit\/Sources\/SRT\/SRTSocketOption.swift","isActive":true},{"type":"text","text":" for the support status."}],"type":"paragraph"}]}],"type":"unorderedList"}]},{"content":[{"inlineContent":[{"text":"Many SRT options can be defined as query parameters in the connection URL as follows.","type":"text"}],"type":"paragraph"}]}]},{"code":["try await connection.connect(\"srt:\/\/host:port?key=value\")"],"type":"codeListing","syntax":"swift"},{"text":"Session","type":"heading","anchor":"Session","level":3},{"code":["import SRTHaishinKit","","await SessionBuilderFactory.shared.register(SRTSessionFactory())"],"type":"codeListing","syntax":"swift"},{"text":"üîß Test","type":"heading","anchor":"%F0%9F%94%A7-Test","level":2},{"text":"ffplay as a SRT service for publish HaishinKit.","type":"heading","anchor":"ffplay-as-a-SRT-service-for-publish-HaishinKit","level":3},{"code":["$ ffplay -i 'srt:\/\/${YOUR_IP_ADDRESS}?mode=listener'"],"type":"codeListing","syntax":"sh"},{"text":"ffmpeg as a SRT service for playback HaishinKit.","type":"heading","anchor":"ffmpeg-as-a-SRT-service-for-playback-HaishinKit","level":3},{"syntax":"sh","type":"codeListing","code":["$ ffmpeg -stream_loop -1 -re -i input.mp4 -c copy -f mpegts 'srt:\/\/0.0.0.0:9998?mode=listener'"]},{"level":2,"type":"heading","anchor":"%F0%9F%93%9C-License","text":"üìú License"},{"level":3,"type":"heading","anchor":"SRTHaishinKit","text":"SRTHaishinKit"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"SRTHaishinKit is licensed under the BSD-3-Clause."}]}]}],"type":"unorderedList"},{"level":3,"type":"heading","anchor":"libsrtxcframework","text":"libsrt.xcframework"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"libsrt.xcframework is licensed under MPLv2.0."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"This is a build of https:\/\/github.com\/Haivision\/srt as an xcframework."}],"type":"paragraph"}]}],"type":"unorderedList"}]}],"abstract":[{"text":"This module supports the SRT protocol.","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/srthaishinkit"]}],"sections":[],"topicSections":[{"anchor":"Classes","identifiers":["doc:\/\/SRTHaishinKit\/documentation\/SRTHaishinKit\/SRTConnection","doc:\/\/SRTHaishinKit\/documentation\/SRTHaishinKit\/SRTLogger","doc:\/\/SRTHaishinKit\/documentation\/SRTHaishinKit\/SRTStream"],"title":"Classes","generated":true},{"anchor":"Structures","identifiers":["doc:\/\/SRTHaishinKit\/documentation\/SRTHaishinKit\/SRTPerformanceData","doc:\/\/SRTHaishinKit\/documentation\/SRTHaishinKit\/SRTSessionFactory","doc:\/\/SRTHaishinKit\/documentation\/SRTHaishinKit\/SRTSocketOption"],"title":"Structures","generated":true},{"anchor":"Variables","identifiers":["doc:\/\/SRTHaishinKit\/documentation\/SRTHaishinKit\/kSRTHaishinKitIdentifier"],"title":"Variables","generated":true},{"anchor":"Enumerations","identifiers":["doc:\/\/SRTHaishinKit\/documentation\/SRTHaishinKit\/SRTLogFunctionalArea","doc:\/\/SRTHaishinKit\/documentation\/SRTHaishinKit\/SRTLogLevel","doc:\/\/SRTHaishinKit\/documentation\/SRTHaishinKit\/SRTRejectReason"],"title":"Enumerations","generated":true}],"kind":"symbol","schemaVersion":{"minor":3,"major":0,"patch":0},"identifier":{"url":"doc:\/\/SRTHaishinKit\/documentation\/SRTHaishinKit","interfaceLanguage":"swift"},"references":{"doc://SRTHaishinKit/documentation/SRTHaishinKit/SRTSocketOption":{"kind":"symbol","abstract":[{"type":"text","text":"A structure that represents a Key-Value-Object for the SRTSocket."}],"url":"\/documentation\/srthaishinkit\/srtsocketoption","title":"SRTSocketOption","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"SRTSocketOption"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SRTSocketOption"}],"type":"topic","identifier":"doc:\/\/SRTHaishinKit\/documentation\/SRTHaishinKit\/SRTSocketOption"},"doc://SRTHaishinKit/documentation/SRTHaishinKit/SRTConnection":{"kind":"symbol","abstract":[{"text":"An actor that provides the interface to control a SRT connection.","type":"text"}],"type":"topic","identifier":"doc:\/\/SRTHaishinKit\/documentation\/SRTHaishinKit\/SRTConnection","url":"\/documentation\/srthaishinkit\/srtconnection","fragments":[{"kind":"keyword","text":"actor"},{"kind":"text","text":" "},{"kind":"identifier","text":"SRTConnection"}],"navigatorTitle":[{"kind":"identifier","text":"SRTConnection"}],"title":"SRTConnection","role":"symbol"},"doc://SRTHaishinKit/documentation/SRTHaishinKit/SRTSessionFactory":{"identifier":"doc:\/\/SRTHaishinKit\/documentation\/SRTHaishinKit\/SRTSessionFactory","title":"SRTSessionFactory","abstract":[],"type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"SRTSessionFactory"}],"url":"\/documentation\/srthaishinkit\/srtsessionfactory","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SRTSessionFactory"}],"kind":"symbol"},"doc://SRTHaishinKit/documentation/SRTHaishinKit/SRTRejectReason":{"type":"topic","title":"SRTRejectReason","identifier":"doc:\/\/SRTHaishinKit\/documentation\/SRTHaishinKit\/SRTRejectReason","navigatorTitle":[{"text":"SRTRejectReason","kind":"identifier"}],"url":"\/documentation\/srthaishinkit\/srtrejectreason","role":"symbol","abstract":[{"text":"An enumeration that describes the srt connection reject reason.","type":"text"}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SRTRejectReason","kind":"identifier"}],"kind":"symbol"},"doc://SRTHaishinKit/documentation/SRTHaishinKit":{"title":"SRTHaishinKit","url":"\/documentation\/srthaishinkit","kind":"symbol","role":"collection","abstract":[{"type":"text","text":"This module supports the SRT protocol."}],"type":"topic","identifier":"doc:\/\/SRTHaishinKit\/documentation\/SRTHaishinKit"},"https://github.com/shogo4405/HaishinKit.swift/blob/main/SRTHaishinKit/Sources/SRT/SRTSocketOption.swift":{"titleInlineContent":[{"type":"text","text":"the following code"}],"url":"https:\/\/github.com\/shogo4405\/HaishinKit.swift\/blob\/main\/SRTHaishinKit\/Sources\/SRT\/SRTSocketOption.swift","type":"link","identifier":"https:\/\/github.com\/shogo4405\/HaishinKit.swift\/blob\/main\/SRTHaishinKit\/Sources\/SRT\/SRTSocketOption.swift","title":"the following code"},"doc://SRTHaishinKit/documentation/SRTHaishinKit/SRTLogger":{"abstract":[{"type":"text","text":"An actor for writing interpolated string messages to srt logging system."}],"fragments":[{"kind":"keyword","text":"actor"},{"kind":"text","text":" "},{"kind":"identifier","text":"SRTLogger"}],"title":"SRTLogger","url":"\/documentation\/srthaishinkit\/srtlogger","navigatorTitle":[{"kind":"identifier","text":"SRTLogger"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/SRTHaishinKit\/documentation\/SRTHaishinKit\/SRTLogger","type":"topic"},"doc://SRTHaishinKit/documentation/SRTHaishinKit/SRTLogLevel":{"abstract":[],"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"SRTLogLevel"}],"title":"SRTLogLevel","url":"\/documentation\/srthaishinkit\/srtloglevel","navigatorTitle":[{"kind":"identifier","text":"SRTLogLevel"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/SRTHaishinKit\/documentation\/SRTHaishinKit\/SRTLogLevel","type":"topic"},"doc://SRTHaishinKit/documentation/SRTHaishinKit/SRTLogFunctionalArea":{"navigatorTitle":[{"text":"SRTLogFunctionalArea","kind":"identifier"}],"type":"topic","kind":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SRTLogFunctionalArea","kind":"identifier"}],"url":"\/documentation\/srthaishinkit\/srtlogfunctionalarea","identifier":"doc:\/\/SRTHaishinKit\/documentation\/SRTHaishinKit\/SRTLogFunctionalArea","title":"SRTLogFunctionalArea","role":"symbol","abstract":[{"type":"text","text":"Constants that indicate the addition to levels the logging system has functional areas."}]},"doc://SRTHaishinKit/documentation/SRTHaishinKit/kSRTHaishinKitIdentifier":{"abstract":[],"fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"kSRTHaishinKitIdentifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"}],"title":"kSRTHaishinKitIdentifier","url":"\/documentation\/srthaishinkit\/ksrthaishinkitidentifier","kind":"symbol","role":"symbol","identifier":"doc:\/\/SRTHaishinKit\/documentation\/SRTHaishinKit\/kSRTHaishinKitIdentifier","type":"topic"},"doc://SRTHaishinKit/documentation/SRTHaishinKit/SRTStream":{"title":"SRTStream","abstract":[{"text":"An actor that provides the interface to control a one-way channel over a SRTConnection.","type":"text"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/SRTHaishinKit\/documentation\/SRTHaishinKit\/SRTStream","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"SRTStream"}],"fragments":[{"kind":"keyword","text":"actor"},{"kind":"text","text":" "},{"kind":"identifier","text":"SRTStream"}],"url":"\/documentation\/srthaishinkit\/srtstream"},"doc://SRTHaishinKit/documentation/SRTHaishinKit/SRTPerformanceData":{"url":"\/documentation\/srthaishinkit\/srtperformancedata","identifier":"doc:\/\/SRTHaishinKit\/documentation\/SRTHaishinKit\/SRTPerformanceData","type":"topic","abstract":[{"type":"text","text":"The SRTPerformanceData represents the SRT‚Äôs performance statistics. This struct is wrapper for an CBytePerfMon."}],"role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SRTPerformanceData"}],"title":"SRTPerformanceData","navigatorTitle":[{"kind":"identifier","text":"SRTPerformanceData"}]},"https://github.com/Haivision/srt":{"titleInlineContent":[{"type":"text","text":"libsrt"}],"title":"libsrt","url":"https:\/\/github.com\/Haivision\/srt","identifier":"https:\/\/github.com\/Haivision\/srt","type":"link"}}}