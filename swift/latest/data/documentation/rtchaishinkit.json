{"kind":"symbol","topicSections":[{"title":"Classes","identifiers":["doc:\/\/RTCHaishinKit\/documentation\/RTCHaishinKit\/RTCLogger"],"anchor":"Classes","generated":true},{"title":"Structures","identifiers":["doc:\/\/RTCHaishinKit\/documentation\/RTCHaishinKit\/HTTPSessionFactory"],"anchor":"Structures","generated":true},{"title":"Variables","identifiers":["doc:\/\/RTCHaishinKit\/documentation\/RTCHaishinKit\/kRTCHaishinKitIdentifier"],"anchor":"Variables","generated":true}],"primaryContentSections":[{"kind":"content","content":[{"level":2,"text":"üîç Overview","type":"heading","anchor":"%F0%9F%94%8D-Overview"},{"type":"paragraph","inlineContent":[{"text":"RTCHaishinKit is WHIP\/WHEP protocols stack in Swift. It internally uses a library that is built from ","type":"text"},{"isActive":true,"type":"reference","identifier":"https:\/\/github.com\/paullouisageneau\/libdatachannel"},{"text":" and converted into an xcframework.","type":"text"}]},{"level":2,"text":"üé® Features","type":"heading","anchor":"%F0%9F%8E%A8-Features"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Publish(WHIP)","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"H264 and OPUS support."}],"type":"paragraph"}]}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Playback(WHEP)"}]},{"items":[{"content":[{"inlineContent":[{"text":"H264 and OPUS support.","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"}]}],"type":"unorderedList"},{"level":2,"text":"üìì Usage","type":"heading","anchor":"%F0%9F%93%93-Usage"},{"level":3,"text":"Logging","type":"heading","anchor":"Logging"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Defining a Swift wrapper method for "},{"type":"codeVoice","code":"rtcInitLogger"},{"type":"text","text":"."}]}]}],"type":"unorderedList"},{"code":["await RTCLogger.shared.setLevel(.debug)"],"syntax":"swift","type":"codeListing"},{"level":3,"text":"Session","type":"heading","anchor":"Session"},{"type":"paragraph","inlineContent":[{"text":"Currently designed to work with the Session API.","type":"text"}]},{"code":["import RTCHaishinKit","","await SessionBuilderFactory.shared.register(HTTPSessionFactory())"],"syntax":"swift","type":"codeListing"}]}],"identifier":{"url":"doc:\/\/RTCHaishinKit\/documentation\/RTCHaishinKit","interfaceLanguage":"swift"},"abstract":[{"text":"This module supports WHIP\/WHEP protocols.","type":"text"}],"metadata":{"externalID":"RTCHaishinKit","title":"RTCHaishinKit","modules":[{"name":"RTCHaishinKit"}],"roleHeading":"Framework","role":"collection","symbolKind":"module"},"schemaVersion":{"major":0,"minor":3,"patch":0},"variants":[{"paths":["\/documentation\/rtchaishinkit"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[[]]},"sections":[],"references":{"doc://RTCHaishinKit/documentation/RTCHaishinKit/RTCLogger":{"url":"\/documentation\/rtchaishinkit\/rtclogger","abstract":[{"text":"An actor for writing interpolated string messages to ","type":"text"},{"type":"codeVoice","code":"libdatachannel"},{"text":" logging system.","type":"text"}],"identifier":"doc:\/\/RTCHaishinKit\/documentation\/RTCHaishinKit\/RTCLogger","role":"symbol","navigatorTitle":[{"text":"RTCLogger","kind":"identifier"}],"kind":"symbol","type":"topic","title":"RTCLogger","fragments":[{"text":"actor","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RTCLogger","kind":"identifier"}]},"doc://RTCHaishinKit/documentation/RTCHaishinKit/HTTPSessionFactory":{"role":"symbol","url":"\/documentation\/rtchaishinkit\/httpsessionfactory","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"HTTPSessionFactory"}],"abstract":[],"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HTTPSessionFactory"}],"identifier":"doc:\/\/RTCHaishinKit\/documentation\/RTCHaishinKit\/HTTPSessionFactory","title":"HTTPSessionFactory"},"doc://RTCHaishinKit/documentation/RTCHaishinKit":{"url":"\/documentation\/rtchaishinkit","abstract":[{"text":"This module supports WHIP\/WHEP protocols.","type":"text"}],"type":"topic","role":"collection","identifier":"doc:\/\/RTCHaishinKit\/documentation\/RTCHaishinKit","kind":"symbol","title":"RTCHaishinKit"},"https://github.com/paullouisageneau/libdatachannel":{"titleInlineContent":[{"text":"libdatachannel","type":"text"}],"title":"libdatachannel","type":"link","url":"https:\/\/github.com\/paullouisageneau\/libdatachannel","identifier":"https:\/\/github.com\/paullouisageneau\/libdatachannel"},"doc://RTCHaishinKit/documentation/RTCHaishinKit/kRTCHaishinKitIdentifier":{"type":"topic","url":"\/documentation\/rtchaishinkit\/krtchaishinkitidentifier","kind":"symbol","role":"symbol","abstract":[{"text":"The identifier for the HaishinKit WebRTC integration.","type":"text"}],"title":"kRTCHaishinKitIdentifier","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"kRTCHaishinKitIdentifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"}],"identifier":"doc:\/\/RTCHaishinKit\/documentation\/RTCHaishinKit\/kRTCHaishinKitIdentifier"}}}