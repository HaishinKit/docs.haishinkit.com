{"interfaceLanguages":{"swift":[{"children":[{"type":"groupMarker","title":"Classes"},{"title":"ConsoleAppender","path":"\/documentation\/logboard\/consoleappender","type":"class","children":[{"type":"groupMarker","title":"Initializers"},{"title":"init()","path":"\/documentation\/logboard\/consoleappender\/init()","type":"init"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/logboard\/consoleappender\/append(_:level:format:arguments:file:function:line:)","title":"func append(LBLogger, level: LBLogger.Level, format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)","type":"method"},{"type":"method","path":"\/documentation\/logboard\/consoleappender\/append(_:level:message:file:function:line:)","title":"func append(LBLogger, level: LBLogger.Level, message: [Any], file: StaticString, function: StaticString, line: Int)"}]},{"type":"class","children":[{"type":"groupMarker","title":"Structures"},{"type":"struct","title":"LBLogger.Data","path":"\/documentation\/logboard\/lblogger\/data","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init?(Data)","path":"\/documentation\/logboard\/lblogger\/data\/init(_:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let date: Date","path":"\/documentation\/logboard\/lblogger\/data\/date","type":"property"},{"type":"property","title":"let file: String","path":"\/documentation\/logboard\/lblogger\/data\/file"},{"type":"property","title":"let function: String","path":"\/documentation\/logboard\/lblogger\/data\/function"},{"type":"property","title":"let identifier: String","path":"\/documentation\/logboard\/lblogger\/data\/identifier"},{"title":"let level: LBLogger.Level","path":"\/documentation\/logboard\/lblogger\/data\/level","type":"property"},{"type":"property","path":"\/documentation\/logboard\/lblogger\/data\/line","title":"let line: Int"},{"path":"\/documentation\/logboard\/lblogger\/data\/message","title":"let message: String","type":"property"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","title":"CustomStringConvertible Implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"title":"var description: String","path":"\/documentation\/logboard\/lblogger\/data\/description","type":"property"}],"path":"\/documentation\/logboard\/lblogger\/data\/customstringconvertible-implementations"}]},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/logboard\/lblogger\/init(_:)","type":"init","title":"init(String)"},{"title":"Instance Properties","type":"groupMarker"},{"type":"property","title":"var appender: any LBLoggerAppender","path":"\/documentation\/logboard\/lblogger\/appender"},{"title":"let identifier: String","path":"\/documentation\/logboard\/lblogger\/identifier","type":"property"},{"type":"property","title":"var level: LBLogger.Level","path":"\/documentation\/logboard\/lblogger\/level-swift.property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func debug(Any..., file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/lblogger\/debug(_:file:function:line:)","type":"method"},{"title":"func debug(format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/lblogger\/debug(format:arguments:file:function:line:)","type":"method"},{"title":"func error(Any..., file: StaticString, function: StaticString, line: Int)","type":"method","path":"\/documentation\/logboard\/lblogger\/error(_:file:function:line:)"},{"type":"method","path":"\/documentation\/logboard\/lblogger\/error(format:arguments:file:function:line:)","title":"func error(format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)"},{"title":"func info(Any..., file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/lblogger\/info(_:file:function:line:)","type":"method"},{"path":"\/documentation\/logboard\/lblogger\/info(format:arguments:file:function:line:)","type":"method","title":"func info(format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)"},{"path":"\/documentation\/logboard\/lblogger\/isenabledfor(level:)","type":"method","title":"func isEnabledFor(level: LBLogger.Level) -> Bool"},{"title":"func trace(Any..., file: StaticString, function: StaticString, line: Int)","type":"method","path":"\/documentation\/logboard\/lblogger\/trace(_:file:function:line:)"},{"path":"\/documentation\/logboard\/lblogger\/trace(format:arguments:file:function:line:)","title":"func trace(format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)","type":"method"},{"title":"func warn(Any..., file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/lblogger\/warn(_:file:function:line:)","type":"method"},{"type":"method","title":"func warn(format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/lblogger\/warn(format:arguments:file:function:line:)"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/logboard\/lblogger\/dateformatter","type":"property","title":"static var dateFormatter: DateFormatter"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/logboard\/lblogger\/with(_:)","title":"static func with(String) -> LBLogger","type":"method"},{"type":"groupMarker","title":"Enumerations"},{"title":"LBLogger.Level","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/debug","type":"case","title":"case debug"},{"title":"case error","path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/error","type":"case"},{"path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/info","type":"case","title":"case info"},{"title":"case trace","type":"case","path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/trace"},{"path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/warn","title":"case warn","type":"case"},{"type":"groupMarker","title":"Initializers"},{"title":"init?(rawValue: Int)","path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/init(rawvalue:)","type":"init"},{"title":"init?(string: String)","path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/init(string:)","type":"init"},{"type":"groupMarker","title":"Instance Properties"},{"title":"var description: String","path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/description","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/!=(_:_:)","type":"op"}],"title":"Equatable Implementations","type":"symbol"},{"type":"symbol","title":"RawRepresentable Implementations","path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/rawrepresentable-implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/hashvalue","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"type":"method","title":"func hash(into: inout Hasher)","path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/hash(into:)"}]}],"path":"\/documentation\/logboard\/lblogger\/level-swift.enum","type":"enum"}],"title":"LBLogger","path":"\/documentation\/logboard\/lblogger"},{"children":[{"title":"Initializers","type":"groupMarker"},{"type":"init","title":"init()","path":"\/documentation\/logboard\/multiappender\/init()"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/logboard\/multiappender\/appenders","title":"var appenders: [any LBLoggerAppender]","type":"property"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func append(LBLogger, level: LBLogger.Level, format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/multiappender\/append(_:level:format:arguments:file:function:line:)"},{"path":"\/documentation\/logboard\/multiappender\/append(_:level:message:file:function:line:)","type":"method","title":"func append(LBLogger, level: LBLogger.Level, message: [Any], file: StaticString, function: StaticString, line: Int)"}],"path":"\/documentation\/logboard\/multiappender","type":"class","title":"MultiAppender"},{"title":"NullAppender","type":"class","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func append(LBLogger, level: LBLogger.Level, format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)","type":"method","path":"\/documentation\/logboard\/nullappender\/append(_:level:format:arguments:file:function:line:)"},{"title":"func append(LBLogger, level: LBLogger.Level, message: [Any], file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/nullappender\/append(_:level:message:file:function:line:)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"title":"static let shared: NullAppender","path":"\/documentation\/logboard\/nullappender\/shared","type":"property"}],"path":"\/documentation\/logboard\/nullappender"},{"title":"OSLoggerAppender","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/logboard\/osloggerappender\/init(sybsystem:category:)","title":"init(sybsystem: String, category: String)"},{"type":"groupMarker","title":"Instance Methods"},{"title":"func append(LBLogger, level: LBLogger.Level, format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)","type":"method","path":"\/documentation\/logboard\/osloggerappender\/append(_:level:format:arguments:file:function:line:)"},{"path":"\/documentation\/logboard\/osloggerappender\/append(_:level:message:file:function:line:)","title":"func append(LBLogger, level: LBLogger.Level, message: [Any], file: StaticString, function: StaticString, line: Int)","type":"method"}],"path":"\/documentation\/logboard\/osloggerappender","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"type":"init","path":"\/documentation\/logboard\/socketappender\/init()","title":"init()"},{"title":"Instance Methods","type":"groupMarker"},{"type":"method","path":"\/documentation\/logboard\/socketappender\/append(_:level:format:arguments:file:function:line:)","title":"func append(LBLogger, level: LBLogger.Level, format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)"},{"path":"\/documentation\/logboard\/socketappender\/append(_:level:message:file:function:line:)","type":"method","title":"func append(LBLogger, level: LBLogger.Level, message: [Any], file: StaticString, function: StaticString, line: Int)"},{"path":"\/documentation\/logboard\/socketappender\/close()","title":"func close()","type":"method"},{"path":"\/documentation\/logboard\/socketappender\/connect(_:port:)","title":"func connect(String, port: Int)","type":"method"}],"title":"SocketAppender","path":"\/documentation\/logboard\/socketappender","type":"class"},{"type":"groupMarker","title":"Protocols"},{"type":"protocol","title":"LBLoggerAppender","children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/logboard\/lbloggerappender\/append(_:level:format:arguments:file:function:line:)","type":"method","title":"func append(LBLogger, level: LBLogger.Level, format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)"},{"type":"method","title":"func append(LBLogger, level: LBLogger.Level, message: [Any], file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/lbloggerappender\/append(_:level:message:file:function:line:)"}],"path":"\/documentation\/logboard\/lbloggerappender"}],"path":"\/documentation\/logboard","title":"Logboard","type":"module"},{"title":"HaishinKit","type":"module","path":"\/documentation\/haishinkit","children":[{"type":"groupMarker","title":"Articles"},{"path":"\/documentation\/haishinkit\/e-rtmp","title":"Enhanced RTMP","type":"article"},{"title":"Classes","type":"groupMarker"},{"type":"class","title":"AssetScreenObject","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var chromaKeyColor: CGColor?","path":"\/documentation\/haishinkit\/assetscreenobject\/chromakeycolor"},{"type":"property","title":"var isReading: Bool","path":"\/documentation\/haishinkit\/assetscreenobject\/isreading"},{"type":"property","path":"\/documentation\/haishinkit\/assetscreenobject\/videogravity","title":"var videoGravity: AVLayerVideoGravity"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func cancelReading()","path":"\/documentation\/haishinkit\/assetscreenobject\/cancelreading()","type":"method"},{"type":"method","title":"func makeBounds(CGSize) -> CGRect","path":"\/documentation\/haishinkit\/assetscreenobject\/makebounds(_:)"},{"title":"func makeImage(some ScreenRenderer) -> CGImage?","type":"method","path":"\/documentation\/haishinkit\/assetscreenobject\/makeimage(_:)"},{"path":"\/documentation\/haishinkit\/assetscreenobject\/startreading(_:)","type":"method","title":"func startReading(AVAsset) throws"}],"path":"\/documentation\/haishinkit\/assetscreenobject"},{"title":"AudioDeviceUnit","path":"\/documentation\/haishinkit\/audiodeviceunit","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/audiodeviceunit\/connection","type":"property","title":"var connection: AVCaptureConnection?"},{"type":"property","title":"var device: AVCaptureDevice?","path":"\/documentation\/haishinkit\/audiodeviceunit\/device"},{"title":"var input: AVCaptureInput?","path":"\/documentation\/haishinkit\/audiodeviceunit\/input","type":"property"},{"title":"var output: AudioDeviceUnit.Output?","type":"property","path":"\/documentation\/haishinkit\/audiodeviceunit\/output-swift.property"},{"path":"\/documentation\/haishinkit\/audiodeviceunit\/track","type":"property","title":"let track: UInt8"},{"type":"groupMarker","title":"Type Aliases"},{"title":"AudioDeviceUnit.Output","path":"\/documentation\/haishinkit\/audiodeviceunit\/output-swift.typealias","type":"typealias"}],"type":"class"},{"type":"class","title":"AudioPlayer","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/haishinkit\/audioplayer\/init(audioengine:)","title":"init(audioEngine: AVAudioEngine)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/audioplayer\/actor-implementations","type":"symbol","title":"Actor Implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"type":"method","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/haishinkit\/audioplayer\/assertisolated(_:file:line:)"},{"title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","path":"\/documentation\/haishinkit\/audioplayer\/assumeisolated(_:file:line:)","type":"method"},{"type":"method","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/haishinkit\/audioplayer\/preconditionisolated(_:file:line:)"}]}],"path":"\/documentation\/haishinkit\/audioplayer"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/hkincomingstream\/init(_:)","title":"init(some HKStream)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var isRunning: Bool","type":"property","path":"\/documentation\/haishinkit\/hkincomingstream\/isrunning"},{"title":"var soundTransfrom: SoundTransform?","path":"\/documentation\/haishinkit\/hkincomingstream\/soundtransfrom","type":"property"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/hkincomingstream\/append(_:)","title":"func append(CMSampleBuffer)","type":"method"},{"title":"func append(AVAudioBuffer, when: AVAudioTime)","path":"\/documentation\/haishinkit\/hkincomingstream\/append(_:when:)","type":"method"},{"type":"method","path":"\/documentation\/haishinkit\/hkincomingstream\/attachaudioplayer(_:)","title":"func attachAudioPlayer(AudioPlayer?) async"},{"title":"func setSoundTransform(SoundTransform) async","type":"method","path":"\/documentation\/haishinkit\/hkincomingstream\/setsoundtransform(_:)"},{"type":"groupMarker","title":"Default Implementations"},{"title":"Actor Implementations","path":"\/documentation\/haishinkit\/hkincomingstream\/actor-implementations","type":"symbol","children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/hkincomingstream\/assertisolated(_:file:line:)","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method"},{"path":"\/documentation\/haishinkit\/hkincomingstream\/assumeisolated(_:file:line:)","type":"method","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T"},{"title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/haishinkit\/hkincomingstream\/preconditionisolated(_:file:line:)","type":"method"}]},{"title":"AsyncRunner Implementations","path":"\/documentation\/haishinkit\/hkincomingstream\/asyncrunner-implementations","type":"symbol","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func startRunning()","path":"\/documentation\/haishinkit\/hkincomingstream\/startrunning()","type":"method"},{"title":"func stopRunning()","type":"method","path":"\/documentation\/haishinkit\/hkincomingstream\/stoprunning()"}]}],"type":"class","title":"HKIncomingStream","path":"\/documentation\/haishinkit\/hkincomingstream"},{"title":"HKOutgoingStream","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/haishinkit\/hkoutgoingstream\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"type":"property","title":"var audioInputFormat: CMFormatDescription?","path":"\/documentation\/haishinkit\/hkoutgoingstream\/audioinputformat"},{"type":"property","title":"var audioOutputStream: AsyncStream<(AVAudioBuffer, AVAudioTime)>","path":"\/documentation\/haishinkit\/hkoutgoingstream\/audiooutputstream"},{"type":"property","title":"var audioSettings: AudioCodecSettings","path":"\/documentation\/haishinkit\/hkoutgoingstream\/audiosettings"},{"title":"var isRunning: Bool","type":"property","path":"\/documentation\/haishinkit\/hkoutgoingstream\/isrunning"},{"title":"var videoInputBufferCounts: Int","path":"\/documentation\/haishinkit\/hkoutgoingstream\/videoinputbuffercounts","type":"property"},{"path":"\/documentation\/haishinkit\/hkoutgoingstream\/videoinputformat","type":"property","title":"var videoInputFormat: CMFormatDescription?"},{"title":"var videoInputStream: AsyncStream<CMSampleBuffer>","path":"\/documentation\/haishinkit\/hkoutgoingstream\/videoinputstream","type":"property"},{"path":"\/documentation\/haishinkit\/hkoutgoingstream\/videooutputstream","title":"var videoOutputStream: AsyncStream<CMSampleBuffer>","type":"property"},{"type":"property","title":"var videoSettings: VideoCodecSettings","path":"\/documentation\/haishinkit\/hkoutgoingstream\/videosettings"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/hkoutgoingstream\/append(_:)","type":"method","title":"func append(CMSampleBuffer)"},{"title":"func append(AVAudioBuffer, when: AVAudioTime)","type":"method","path":"\/documentation\/haishinkit\/hkoutgoingstream\/append(_:when:)"},{"title":"func append(video: CMSampleBuffer)","path":"\/documentation\/haishinkit\/hkoutgoingstream\/append(video:)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/hkoutgoingstream\/runner-implementations","title":"Runner Implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func startRunning()","type":"method","path":"\/documentation\/haishinkit\/hkoutgoingstream\/startrunning()"},{"title":"func stopRunning()","type":"method","path":"\/documentation\/haishinkit\/hkoutgoingstream\/stoprunning()"}],"type":"symbol"}],"path":"\/documentation\/haishinkit\/hkoutgoingstream","type":"class"},{"children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init()","path":"\/documentation\/haishinkit\/hkstreamrecorder\/init()"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/audiotrackid","title":"var audioTrackId: UInt8?","type":"property"},{"type":"property","title":"var isRecording: Bool","path":"\/documentation\/haishinkit\/hkstreamrecorder\/isrecording"},{"title":"var movieFragmentInterval: Double?","path":"\/documentation\/haishinkit\/hkstreamrecorder\/moviefragmentinterval","type":"property"},{"type":"property","path":"\/documentation\/haishinkit\/hkstreamrecorder\/moviesdirectory","title":"var moviesDirectory: URL"},{"title":"var outputURL: URL?","type":"property","path":"\/documentation\/haishinkit\/hkstreamrecorder\/outputurl"},{"type":"property","title":"var settings: [AVMediaType : [String : any Sendable]]","path":"\/documentation\/haishinkit\/hkstreamrecorder\/settings"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/videotrackid","type":"property","title":"var videoTrackId: UInt8?"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func selectTrack(UInt8?, mediaType: CMFormatDescription.MediaType)","path":"\/documentation\/haishinkit\/hkstreamrecorder\/selecttrack(_:mediatype:)"},{"title":"func setMovieFragmentInterval(Double?)","type":"method","path":"\/documentation\/haishinkit\/hkstreamrecorder\/setmoviefragmentinterval(_:)"},{"type":"method","path":"\/documentation\/haishinkit\/hkstreamrecorder\/setmoviefragmentinterval(moviefragmentinterval:)","title":"func setMovieFragmentInterval(movieFragmentInterval: Double?)"},{"type":"method","title":"func startRecording(URL?, settings: [AVMediaType : [String : any Sendable]]) async throws","path":"\/documentation\/haishinkit\/hkstreamrecorder\/startrecording(_:settings:)"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/stoprecording()","title":"func stopRecording() async throws -> URL","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/defaultsettings","title":"static let defaultSettings: [AVMediaType : [String : any Sendable]]","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/error","title":"HKStreamRecorder.Error","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/error\/failedtoappend(error:)","type":"case","title":"case failedToAppend(error: (any Error)?)"},{"title":"case failedToCreateAssetWriter(error: any Error)","type":"case","path":"\/documentation\/haishinkit\/hkstreamrecorder\/error\/failedtocreateassetwriter(error:)"},{"type":"case","title":"case failedToCreateAssetWriterInput(error: any Error)","path":"\/documentation\/haishinkit\/hkstreamrecorder\/error\/failedtocreateassetwriterinput(error:)"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/error\/failedtofinishwriting(error:)","title":"case failedToFinishWriting(error: (any Error)?)","type":"case"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/error\/filealreadyexists(outputurl:)","type":"case","title":"case fileAlreadyExists(outputURL: URL)"},{"type":"case","title":"case invalidState","path":"\/documentation\/haishinkit\/hkstreamrecorder\/error\/invalidstate"},{"title":"case notSupportedFileType(pathExtension: String)","type":"case","path":"\/documentation\/haishinkit\/hkstreamrecorder\/error\/notsupportedfiletype(pathextension:)"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/error\/error-implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var localizedDescription: String","path":"\/documentation\/haishinkit\/hkstreamrecorder\/error\/localizeddescription"}],"type":"symbol","title":"Error Implementations"}],"type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"type":"symbol","path":"\/documentation\/haishinkit\/hkstreamrecorder\/actor-implementations","title":"Actor Implementations","children":[{"type":"groupMarker","title":"Instance Methods"},{"title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method","path":"\/documentation\/haishinkit\/hkstreamrecorder\/assertisolated(_:file:line:)"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/assumeisolated(_:file:line:)","type":"method","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/preconditionisolated(_:file:line:)","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method"}]},{"children":[{"type":"groupMarker","title":"Instance Methods"},{"title":"func stream(some HKStream, didOutput: CMSampleBuffer)","path":"\/documentation\/haishinkit\/hkstreamrecorder\/stream(_:didoutput:)","type":"method"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/stream(_:didoutput:when:)","type":"method","title":"func stream(some HKStream, didOutput: AVAudioBuffer, when: AVAudioTime)"}],"path":"\/documentation\/haishinkit\/hkstreamrecorder\/hkstreamoutput-implementations","type":"symbol","title":"HKStreamOutput Implementations"},{"title":"MediaMixerOutput Implementations","children":[{"type":"groupMarker","title":"Instance Methods"},{"title":"func mixer(MediaMixer, didOutput: CMSampleBuffer)","path":"\/documentation\/haishinkit\/hkstreamrecorder\/mixer(_:didoutput:)","type":"method"},{"title":"func mixer(MediaMixer, didOutput: AVAudioPCMBuffer, when: AVAudioTime)","path":"\/documentation\/haishinkit\/hkstreamrecorder\/mixer(_:didoutput:when:)","type":"method"}],"type":"symbol","path":"\/documentation\/haishinkit\/hkstreamrecorder\/mediamixeroutput-implementations"}],"path":"\/documentation\/haishinkit\/hkstreamrecorder","type":"class","title":"HKStreamRecorder"},{"path":"\/documentation\/haishinkit\/hkstreamvideoadaptivebitratestrategy","type":"class","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/haishinkit\/hkstreamvideoadaptivebitratestrategy\/init(mamimumvideobitrate:)","type":"init","title":"init(mamimumVideoBitrate: Int)"},{"title":"Instance Properties","type":"groupMarker"},{"type":"property","title":"let mamimumAudioBitRate: Int","path":"\/documentation\/haishinkit\/hkstreamvideoadaptivebitratestrategy\/mamimumaudiobitrate"},{"path":"\/documentation\/haishinkit\/hkstreamvideoadaptivebitratestrategy\/mamimumvideobitrate","type":"property","title":"let mamimumVideoBitRate: Int"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func adjustBitrate(NetworkMonitorEvent, stream: some HKStream) async","path":"\/documentation\/haishinkit\/hkstreamvideoadaptivebitratestrategy\/adjustbitrate(_:stream:)"},{"type":"groupMarker","title":"Type Properties"},{"title":"static let statusCountsThreshold: Int","path":"\/documentation\/haishinkit\/hkstreamvideoadaptivebitratestrategy\/statuscountsthreshold","type":"property"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","title":"Actor Implementations","children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/hkstreamvideoadaptivebitratestrategy\/assertisolated(_:file:line:)","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method"},{"path":"\/documentation\/haishinkit\/hkstreamvideoadaptivebitratestrategy\/assumeisolated(_:file:line:)","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","type":"method"},{"title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method","path":"\/documentation\/haishinkit\/hkstreamvideoadaptivebitratestrategy\/preconditionisolated(_:file:line:)"}],"path":"\/documentation\/haishinkit\/hkstreamvideoadaptivebitratestrategy\/actor-implementations"}],"title":"HKStreamVideoAdaptiveBitRateStrategy"},{"path":"\/documentation\/haishinkit\/imagescreenobject","type":"class","title":"ImageScreenObject","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/imagescreenobject\/cgimage","title":"var cgImage: CGImage?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func makeBounds(CGSize) -> CGRect","path":"\/documentation\/haishinkit\/imagescreenobject\/makebounds(_:)","type":"method"},{"title":"func makeImage(some ScreenRenderer) -> CGImage?","path":"\/documentation\/haishinkit\/imagescreenobject\/makeimage(_:)","type":"method"}]},{"type":"class","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init(coder: NSCoder)","path":"\/documentation\/haishinkit\/mthkview\/init(coder:)"},{"title":"init(frame: CGRect)","type":"init","path":"\/documentation\/haishinkit\/mthkview\/init(frame:)"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/mthkview\/audiotrackid","type":"property","title":"var audioTrackId: UInt8?"},{"type":"property","title":"var videoGravity: AVLayerVideoGravity","path":"\/documentation\/haishinkit\/mthkview\/videogravity"},{"path":"\/documentation\/haishinkit\/mthkview\/videotrackid","title":"var videoTrackId: UInt8?","type":"property"},{"type":"groupMarker","title":"Instance Methods"},{"title":"func awakeFromNib()","path":"\/documentation\/haishinkit\/mthkview\/awakefromnib()","type":"method"},{"path":"\/documentation\/haishinkit\/mthkview\/draw(_:)","type":"method","title":"func draw(CGRect)"},{"title":"func registerVideoEffect(some VideoEffect) -> Bool","path":"\/documentation\/haishinkit\/mthkview\/registervideoeffect(_:)","type":"method"},{"type":"method","title":"func unregisterVideoEffect(some VideoEffect) -> Bool","path":"\/documentation\/haishinkit\/mthkview\/unregistervideoeffect(_:)"},{"title":"Default Implementations","type":"groupMarker"},{"title":"HKStreamOutput Implementations","type":"symbol","children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/mthkview\/stream(_:didoutput:)","type":"method","title":"func stream(some HKStream, didOutput: CMSampleBuffer)"},{"type":"method","path":"\/documentation\/haishinkit\/mthkview\/stream(_:didoutput:when:)","title":"func stream(some HKStream, didOutput: AVAudioBuffer, when: AVAudioTime)"}],"path":"\/documentation\/haishinkit\/mthkview\/hkstreamoutput-implementations"},{"type":"symbol","title":"MediaMixerOutput Implementations","path":"\/documentation\/haishinkit\/mthkview\/mediamixeroutput-implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"type":"method","title":"func mixer(MediaMixer, didOutput: CMSampleBuffer)","path":"\/documentation\/haishinkit\/mthkview\/mixer(_:didoutput:)"},{"title":"func mixer(MediaMixer, didOutput: AVAudioPCMBuffer, when: AVAudioTime)","type":"method","path":"\/documentation\/haishinkit\/mthkview\/mixer(_:didoutput:when:)"},{"path":"\/documentation\/haishinkit\/mthkview\/selecttrack(_:mediatype:)","type":"method","title":"func selectTrack(UInt8?, mediaType: CMFormatDescription.MediaType) async"}]}],"path":"\/documentation\/haishinkit\/mthkview","title":"MTHKView"},{"path":"\/documentation\/haishinkit\/mediamixer","title":"MediaMixer","children":[{"title":"Initializers","type":"groupMarker"},{"type":"init","title":"init(multiTrackAudioMixingEnabled: Bool, useManualCapture: Bool)","path":"\/documentation\/haishinkit\/mediamixer\/init(multitrackaudiomixingenabled:usemanualcapture:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var audioInputFormats: [UInt8 : AVAudioFormat]","type":"property","path":"\/documentation\/haishinkit\/mediamixer\/audioinputformats"},{"path":"\/documentation\/haishinkit\/mediamixer\/audiomixersettings","type":"property","title":"var audioMixerSettings: AudioMixerSettings"},{"title":"var frameRate: Float64","path":"\/documentation\/haishinkit\/mediamixer\/framerate","type":"property"},{"title":"var isCapturing: Bool","type":"property","path":"\/documentation\/haishinkit\/mediamixer\/iscapturing"},{"type":"property","title":"var isInterputted: AsyncStream<Bool>","path":"\/documentation\/haishinkit\/mediamixer\/isinterputted"},{"path":"\/documentation\/haishinkit\/mediamixer\/ismonitoringenabled","title":"var isMonitoringEnabled: Bool","type":"property"},{"type":"property","path":"\/documentation\/haishinkit\/mediamixer\/ismultitrackaudiomixingenabled","title":"var isMultiTrackAudioMixingEnabled: Bool"},{"title":"var isRunning: Bool","path":"\/documentation\/haishinkit\/mediamixer\/isrunning","type":"property"},{"path":"\/documentation\/haishinkit\/mediamixer\/istorchenabled","type":"property","title":"var isTorchEnabled: Bool"},{"path":"\/documentation\/haishinkit\/mediamixer\/screen","title":"var screen: Screen","type":"property"},{"title":"var sessionPreset: AVCaptureSession.Preset","path":"\/documentation\/haishinkit\/mediamixer\/sessionpreset","type":"property"},{"type":"property","title":"var videoInputFormats: [UInt8 : CMFormatDescription]","path":"\/documentation\/haishinkit\/mediamixer\/videoinputformats"},{"title":"var videoMixerSettings: VideoMixerSettings","path":"\/documentation\/haishinkit\/mediamixer\/videomixersettings","type":"property"},{"type":"property","title":"var videoOrientation: AVCaptureVideoOrientation","path":"\/documentation\/haishinkit\/mediamixer\/videoorientation"},{"type":"groupMarker","title":"Instance Methods"},{"title":"func addOutput(some MediaMixerOutput)","path":"\/documentation\/haishinkit\/mediamixer\/addoutput(_:)","type":"method"},{"type":"method","path":"\/documentation\/haishinkit\/mediamixer\/append(_:track:)","title":"func append(CMSampleBuffer, track: UInt8)"},{"type":"method","title":"func append(AVAudioBuffer, when: AVAudioTime, track: UInt8)","path":"\/documentation\/haishinkit\/mediamixer\/append(_:when:track:)"},{"title":"func attachAudio(AVCaptureDevice?, track: UInt8, configuration: AudioDeviceConfigurationBlock?) async throws","type":"method","path":"\/documentation\/haishinkit\/mediamixer\/attachaudio(_:track:configuration:)"},{"title":"func attachVideo(AVCaptureDevice?, track: UInt8, configuration: VideoDeviceConfigurationBlock?) async throws","path":"\/documentation\/haishinkit\/mediamixer\/attachvideo(_:track:configuration:)","type":"method"},{"path":"\/documentation\/haishinkit\/mediamixer\/configuration(_:)","type":"method","title":"func configuration((AVCaptureSession) throws -> Void) rethrows"},{"title":"func configuration(audio: UInt8, configuration: (AudioDeviceUnit) throws -> Void) throws","path":"\/documentation\/haishinkit\/mediamixer\/configuration(audio:configuration:)","type":"method"},{"path":"\/documentation\/haishinkit\/mediamixer\/configuration(video:configuration:)","type":"method","title":"func configuration(video: UInt8, configuration: (VideoDeviceUnit) throws -> Void) throws"},{"type":"method","title":"func removeOutput(some MediaMixerOutput)","path":"\/documentation\/haishinkit\/mediamixer\/removeoutput(_:)"},{"path":"\/documentation\/haishinkit\/mediamixer\/setaudiomixersettings(_:)","title":"func setAudioMixerSettings(AudioMixerSettings)","type":"method"},{"title":"func setFrameRate(Float64)","path":"\/documentation\/haishinkit\/mediamixer\/setframerate(_:)","type":"method"},{"title":"func setMonitoringEnabled(Bool)","type":"method","path":"\/documentation\/haishinkit\/mediamixer\/setmonitoringenabled(_:)"},{"title":"func setSessionPreset(AVCaptureSession.Preset)","type":"method","path":"\/documentation\/haishinkit\/mediamixer\/setsessionpreset(_:)"},{"title":"func setTorchEnabled(Bool)","path":"\/documentation\/haishinkit\/mediamixer\/settorchenabled(_:)","type":"method"},{"title":"func setVideoMixerSettings(VideoMixerSettings)","path":"\/documentation\/haishinkit\/mediamixer\/setvideomixersettings(_:)","type":"method"},{"type":"method","title":"func setVideoOrientation(AVCaptureVideoOrientation)","path":"\/documentation\/haishinkit\/mediamixer\/setvideoorientation(_:)"},{"title":"func startCapturing()","path":"\/documentation\/haishinkit\/mediamixer\/startcapturing()","type":"method"},{"path":"\/documentation\/haishinkit\/mediamixer\/stopcapturing()","title":"func stopCapturing()","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","title":"case deviceNotFound","path":"\/documentation\/haishinkit\/mediamixer\/error\/devicenotfound"},{"path":"\/documentation\/haishinkit\/mediamixer\/error\/failedtoattach(_:)","title":"case failedToAttach(any Error)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var localizedDescription: String","path":"\/documentation\/haishinkit\/mediamixer\/error\/localizeddescription","type":"property"}],"type":"symbol","path":"\/documentation\/haishinkit\/mediamixer\/error\/error-implementations","title":"Error Implementations"}],"path":"\/documentation\/haishinkit\/mediamixer\/error","title":"MediaMixer.Error","type":"enum"},{"type":"groupMarker","title":"Default Implementations"},{"title":"Actor Implementations","type":"symbol","children":[{"title":"Instance Methods","type":"groupMarker"},{"type":"method","path":"\/documentation\/haishinkit\/mediamixer\/assertisolated(_:file:line:)","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)"},{"title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","type":"method","path":"\/documentation\/haishinkit\/mediamixer\/assumeisolated(_:file:line:)"},{"type":"method","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/haishinkit\/mediamixer\/preconditionisolated(_:file:line:)"}],"path":"\/documentation\/haishinkit\/mediamixer\/actor-implementations"},{"type":"symbol","children":[{"type":"groupMarker","title":"Instance Methods"},{"title":"func startRunning()","type":"method","path":"\/documentation\/haishinkit\/mediamixer\/startrunning()"},{"title":"func stopRunning()","type":"method","path":"\/documentation\/haishinkit\/mediamixer\/stoprunning()"}],"path":"\/documentation\/haishinkit\/mediamixer\/asyncrunner-implementations","title":"AsyncRunner Implementations"}],"type":"class"},{"title":"NetworkMonitor","path":"\/documentation\/haishinkit\/networkmonitor","type":"class","children":[{"type":"groupMarker","title":"Initializers"},{"title":"init(some NetworkTransportReporter)","path":"\/documentation\/haishinkit\/networkmonitor\/init(_:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/networkmonitor\/event","type":"property","title":"var event: AsyncStream<NetworkMonitorEvent>"},{"title":"var isRunning: Bool","type":"property","path":"\/documentation\/haishinkit\/networkmonitor\/isrunning"},{"type":"groupMarker","title":"Enumerations"},{"path":"\/documentation\/haishinkit\/networkmonitor\/error","type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"type":"case","title":"case invalidState","path":"\/documentation\/haishinkit\/networkmonitor\/error\/invalidstate"},{"type":"groupMarker","title":"Default Implementations"},{"title":"Equatable Implementations","type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/haishinkit\/networkmonitor\/error\/!=(_:_:)"}],"path":"\/documentation\/haishinkit\/networkmonitor\/error\/equatable-implementations"},{"type":"symbol","path":"\/documentation\/haishinkit\/networkmonitor\/error\/error-implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"type":"property","title":"var localizedDescription: String","path":"\/documentation\/haishinkit\/networkmonitor\/error\/localizeddescription"}],"title":"Error Implementations"}],"title":"NetworkMonitor.Error"},{"type":"groupMarker","title":"Default Implementations"},{"title":"Actor Implementations","children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/networkmonitor\/assertisolated(_:file:line:)","type":"method","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)"},{"path":"\/documentation\/haishinkit\/networkmonitor\/assumeisolated(_:file:line:)","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","type":"method"},{"type":"method","path":"\/documentation\/haishinkit\/networkmonitor\/preconditionisolated(_:file:line:)","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)"}],"path":"\/documentation\/haishinkit\/networkmonitor\/actor-implementations","type":"symbol"},{"type":"symbol","path":"\/documentation\/haishinkit\/networkmonitor\/asyncrunner-implementations","children":[{"type":"groupMarker","title":"Instance Methods"},{"title":"func startRunning()","path":"\/documentation\/haishinkit\/networkmonitor\/startrunning()","type":"method"},{"path":"\/documentation\/haishinkit\/networkmonitor\/stoprunning()","type":"method","title":"func stopRunning()"}],"title":"AsyncRunner Implementations"}]},{"path":"\/documentation\/haishinkit\/piphkview","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init?(coder: NSCoder)","path":"\/documentation\/haishinkit\/piphkview\/init(coder:)"},{"path":"\/documentation\/haishinkit\/piphkview\/init(frame:)","type":"init","title":"init(frame: CGRect)"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/piphkview\/audiotrackid","type":"property","title":"var audioTrackId: UInt8?"},{"title":"var videoGravity: AVLayerVideoGravity","path":"\/documentation\/haishinkit\/piphkview\/videogravity","type":"property"},{"type":"property","title":"var videoTrackId: UInt8?","path":"\/documentation\/haishinkit\/piphkview\/videotrackid"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/haishinkit\/piphkview\/awakefromnib()","title":"func awakeFromNib()"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/piphkview\/defaultbackgroundcolor","type":"property","title":"static var defaultBackgroundColor: NSColor"},{"title":"Default Implementations","type":"groupMarker"},{"title":"HKStreamOutput Implementations","type":"symbol","path":"\/documentation\/haishinkit\/piphkview\/hkstreamoutput-implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/piphkview\/stream(_:didoutput:)","type":"method","title":"func stream(some HKStream, didOutput: CMSampleBuffer)"},{"title":"func stream(some HKStream, didOutput: AVAudioBuffer, when: AVAudioTime)","path":"\/documentation\/haishinkit\/piphkview\/stream(_:didoutput:when:)","type":"method"}]},{"type":"symbol","children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/piphkview\/mixer(_:didoutput:)","title":"func mixer(MediaMixer, didOutput: CMSampleBuffer)","type":"method"},{"path":"\/documentation\/haishinkit\/piphkview\/mixer(_:didoutput:when:)","title":"func mixer(MediaMixer, didOutput: AVAudioPCMBuffer, when: AVAudioTime)","type":"method"},{"path":"\/documentation\/haishinkit\/piphkview\/selecttrack(_:mediatype:)","type":"method","title":"func selectTrack(UInt8?, mediaType: CMFormatDescription.MediaType) async"}],"path":"\/documentation\/haishinkit\/piphkview\/mediamixeroutput-implementations","title":"MediaMixerOutput Implementations"}],"type":"class","title":"PiPHKView"},{"path":"\/documentation\/haishinkit\/rtmpconnection","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/init(swfurl:pageurl:flashver:timeout:requesttimeout:chunksize:qualityofservice:)","type":"init","title":"init(swfUrl: String?, pageUrl: String?, flashVer: String, timeout: Int, requestTimeout: UInt64, chunkSize: Int, qualityOfService: DispatchQoS)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let chunkSize: Int","path":"\/documentation\/haishinkit\/rtmpconnection\/chunksize","type":"property"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/connected","type":"property","title":"var connected: Bool"},{"title":"let flashVer: String","type":"property","path":"\/documentation\/haishinkit\/rtmpconnection\/flashver"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/objectencoding","type":"property","title":"let objectEncoding: RTMPObjectEncoding"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/pageurl","title":"let pageUrl: String?","type":"property"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/qualityofservice","type":"property","title":"let qualityOfService: DispatchQoS"},{"title":"let requestTimeout: UInt64","path":"\/documentation\/haishinkit\/rtmpconnection\/requesttimeout","type":"property"},{"type":"property","title":"var status: AsyncStream<RTMPStatus>","path":"\/documentation\/haishinkit\/rtmpconnection\/status"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/swfurl","type":"property","title":"let swfUrl: String?"},{"type":"property","path":"\/documentation\/haishinkit\/rtmpconnection\/timeout","title":"let timeout: Int"},{"type":"property","title":"var uri: URL?","path":"\/documentation\/haishinkit\/rtmpconnection\/uri"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func call(String, arguments: (any Sendable)?...) async throws -> RTMPResponse","path":"\/documentation\/haishinkit\/rtmpconnection\/call(_:arguments:)","type":"method"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/close()","type":"method","title":"func close() async throws"},{"title":"func connect(String, arguments: (any Sendable)?...) async throws -> RTMPResponse","path":"\/documentation\/haishinkit\/rtmpconnection\/connect(_:arguments:)","type":"method"},{"type":"groupMarker","title":"Type Properties"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/defaultcapabilities","type":"property","title":"static let defaultCapabilities: Int"},{"type":"property","path":"\/documentation\/haishinkit\/rtmpconnection\/defaultchunksizes","title":"static let defaultChunkSizeS: Int"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/defaultflashver","title":"static let defaultFlashVer: String","type":"property"},{"title":"static let defaultObjectEncoding: RTMPObjectEncoding","path":"\/documentation\/haishinkit\/rtmpconnection\/defaultobjectencoding","type":"property"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/defaultport","title":"static let defaultPort: Int","type":"property"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/defaultrequesttimeout","type":"property","title":"static let defaultRequestTimeout: UInt64"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/defaultsecureport","title":"static let defaultSecurePort: Int","type":"property"},{"title":"static let defaultTimeout: Int","type":"property","path":"\/documentation\/haishinkit\/rtmpconnection\/defaulttimeout"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/defaultwindowsizes","type":"property","title":"static let defaultWindowSizeS: Int64"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/supportedfourcclist","type":"property","title":"static let supportedFourCcList: [String]"},{"title":"static let supportedProtocols: Set<String>","path":"\/documentation\/haishinkit\/rtmpconnection\/supportedprotocols","type":"property"},{"type":"groupMarker","title":"Enumerations"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/code","title":"RTMPConnection.Code","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/code\/callbadversion","type":"case","title":"case callBadVersion"},{"title":"case callFailed","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/callfailed","type":"case"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/code\/callprohibited","title":"case callProhibited","type":"case"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/code\/connectappshutdown","type":"case","title":"case connectAppshutdown"},{"type":"case","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/connectclosed","title":"case connectClosed"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/code\/connectfailed","title":"case connectFailed","type":"case"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/code\/connectidletimeout","title":"case connectIdleTimeOut","type":"case"},{"type":"case","title":"case connectInvalidApp","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/connectinvalidapp"},{"title":"case connectNetworkChange","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/connectnetworkchange","type":"case"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/code\/connectrejected","type":"case","title":"case connectRejected"},{"title":"case connectSuccess","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/connectsuccess","type":"case"},{"title":"Initializers","type":"groupMarker"},{"type":"init","title":"init?(rawValue: String)","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/init(rawvalue:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var level: String","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/level","type":"property"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/code\/equatable-implementations","title":"Equatable Implementations","children":[{"type":"groupMarker","title":"Operators"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/!=(_:_:)","type":"op"}],"type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/hashvalue","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/code\/hash(into:)","type":"method","title":"func hash(into: inout Hasher)"}],"type":"symbol","title":"RawRepresentable Implementations","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/rawrepresentable-implementations"}],"type":"enum"},{"children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/error\/connectiontimedout","title":"case connectionTimedOut","type":"case"},{"title":"case invalidState","type":"case","path":"\/documentation\/haishinkit\/rtmpconnection\/error\/invalidstate"},{"title":"case requestFailed(response: RTMPResponse)","type":"case","path":"\/documentation\/haishinkit\/rtmpconnection\/error\/requestfailed(response:)"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/error\/requesttimedout","type":"case","title":"case requestTimedOut"},{"type":"case","path":"\/documentation\/haishinkit\/rtmpconnection\/error\/socketerroroccurred(_:)","title":"case socketErrorOccurred(any Error)"},{"title":"case unsupportedCommand(String)","path":"\/documentation\/haishinkit\/rtmpconnection\/error\/unsupportedcommand(_:)","type":"case"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","path":"\/documentation\/haishinkit\/rtmpconnection\/error\/error-implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var localizedDescription: String","type":"property","path":"\/documentation\/haishinkit\/rtmpconnection\/error\/localizeddescription"}],"title":"Error Implementations"}],"path":"\/documentation\/haishinkit\/rtmpconnection\/error","type":"enum","title":"RTMPConnection.Error"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method","path":"\/documentation\/haishinkit\/rtmpconnection\/assertisolated(_:file:line:)"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/assumeisolated(_:file:line:)","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","type":"method"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/preconditionisolated(_:file:line:)","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method"}],"title":"Actor Implementations","path":"\/documentation\/haishinkit\/rtmpconnection\/actor-implementations","type":"symbol"}],"title":"RTMPConnection","type":"class"},{"path":"\/documentation\/haishinkit\/rtmpsharedobject","title":"RTMPSharedObject","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/rtmpsharedobject\/data","type":"property","title":"var data: AMFObject"},{"type":"property","path":"\/documentation\/haishinkit\/rtmpsharedobject\/objectencoding","title":"let objectEncoding: RTMPObjectEncoding"},{"type":"groupMarker","title":"Instance Methods"},{"title":"func clear() async","path":"\/documentation\/haishinkit\/rtmpsharedobject\/clear()","type":"method"},{"path":"\/documentation\/haishinkit\/rtmpsharedobject\/close()","type":"method","title":"func close() async"},{"path":"\/documentation\/haishinkit\/rtmpsharedobject\/connect(_:)","type":"method","title":"func connect(RTMPConnection) async"},{"type":"method","title":"func setProperty(String, (any Sendable)?) async","path":"\/documentation\/haishinkit\/rtmpsharedobject\/setproperty(_:_:)"},{"type":"groupMarker","title":"Type Methods"},{"title":"static func getRemote(withName: String, remotePath: String, persistence: Bool) -> RTMPSharedObject","path":"\/documentation\/haishinkit\/rtmpsharedobject\/getremote(withname:remotepath:persistence:)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"type":"symbol","title":"Actor Implementations","path":"\/documentation\/haishinkit\/rtmpsharedobject\/actor-implementations","children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/rtmpsharedobject\/assertisolated(_:file:line:)","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method"},{"type":"method","path":"\/documentation\/haishinkit\/rtmpsharedobject\/assumeisolated(_:file:line:)","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T"},{"title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/haishinkit\/rtmpsharedobject\/preconditionisolated(_:file:line:)","type":"method"}]}],"type":"class"},{"children":[{"type":"groupMarker","title":"Initializers"},{"title":"init(connection: RTMPConnection, fcPublishName: String?)","type":"init","path":"\/documentation\/haishinkit\/rtmpstream\/init(connection:fcpublishname:)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var audioSampleAccess: Bool","path":"\/documentation\/haishinkit\/rtmpstream\/audiosampleaccess"},{"type":"property","title":"var audioTrackId: UInt8?","path":"\/documentation\/haishinkit\/rtmpstream\/audiotrackid"},{"title":"var currentFPS: UInt16","type":"property","path":"\/documentation\/haishinkit\/rtmpstream\/currentfps"},{"type":"property","path":"\/documentation\/haishinkit\/rtmpstream\/fcpublishname","title":"var fcPublishName: String?"},{"path":"\/documentation\/haishinkit\/rtmpstream\/info","type":"property","title":"var info: RTMPStreamInfo"},{"path":"\/documentation\/haishinkit\/rtmpstream\/metadata","title":"var metadata: AMFArray","type":"property"},{"title":"var objectEncoding: RTMPObjectEncoding","type":"property","path":"\/documentation\/haishinkit\/rtmpstream\/objectencoding"},{"path":"\/documentation\/haishinkit\/rtmpstream\/readystate","type":"property","title":"var readyState: HKStreamReadyState"},{"title":"var status: AsyncStream<RTMPStatus>","path":"\/documentation\/haishinkit\/rtmpstream\/status","type":"property"},{"title":"var videoSampleAccess: Bool","path":"\/documentation\/haishinkit\/rtmpstream\/videosampleaccess","type":"property"},{"path":"\/documentation\/haishinkit\/rtmpstream\/videotrackid","type":"property","title":"var videoTrackId: UInt8?"},{"title":"Instance Methods","type":"groupMarker"},{"type":"method","title":"func close() async throws -> RTMPResponse","path":"\/documentation\/haishinkit\/rtmpstream\/close()"},{"title":"func pause(Bool) async throws -> RTMPResponse","path":"\/documentation\/haishinkit\/rtmpstream\/pause(_:)","type":"method"},{"type":"method","path":"\/documentation\/haishinkit\/rtmpstream\/play(_:)","title":"func play((any Sendable)?...) async throws -> RTMPResponse"},{"path":"\/documentation\/haishinkit\/rtmpstream\/publish(_:type:)","title":"func publish(String?, type: RTMPStream.HowToPublish) async throws -> RTMPResponse","type":"method"},{"type":"method","path":"\/documentation\/haishinkit\/rtmpstream\/receiveaudio(_:)","title":"func receiveAudio(Bool) async throws"},{"title":"func receiveVideo(Bool) async throws","path":"\/documentation\/haishinkit\/rtmpstream\/receivevideo(_:)","type":"method"},{"title":"func seek(Double) async throws","type":"method","path":"\/documentation\/haishinkit\/rtmpstream\/seek(_:)"},{"path":"\/documentation\/haishinkit\/rtmpstream\/send(_:arguments:isresettimestamp:)","title":"func send(String, arguments: (any Sendable)?..., isResetTimestamp: Bool) throws","type":"method"},{"title":"func togglePause() async throws -> RTMPResponse","type":"method","path":"\/documentation\/haishinkit\/rtmpstream\/togglepause()"},{"title":"Enumerations","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code","title":"RTMPStream.Code","type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/bufferempty","title":"case bufferEmpty","type":"case"},{"title":"case bufferFlush","type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/code\/bufferflush"},{"title":"case bufferFull","type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/code\/bufferfull"},{"title":"case connectClosed","path":"\/documentation\/haishinkit\/rtmpstream\/code\/connectclosed","type":"case"},{"title":"case connectFailed","type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/code\/connectfailed"},{"type":"case","title":"case connectRejected","path":"\/documentation\/haishinkit\/rtmpstream\/code\/connectrejected"},{"type":"case","title":"case connectSuccess","path":"\/documentation\/haishinkit\/rtmpstream\/code\/connectsuccess"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/drmupdateneeded","type":"case","title":"case drmUpdateNeeded"},{"title":"case failed","type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/code\/failed"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/multicaststreamreset","type":"case","title":"case multicastStreamReset"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/pausenotify","type":"case","title":"case pauseNotify"},{"title":"case playFailed","path":"\/documentation\/haishinkit\/rtmpstream\/code\/playfailed","type":"case"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/playfilestructureinvalid","title":"case playFileStructureInvalid","type":"case"},{"title":"case playInsufficientBW","path":"\/documentation\/haishinkit\/rtmpstream\/code\/playinsufficientbw","type":"case"},{"type":"case","title":"case playNoSupportedTrackFound","path":"\/documentation\/haishinkit\/rtmpstream\/code\/playnosupportedtrackfound"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/playreset","type":"case","title":"case playReset"},{"type":"case","title":"case playStart","path":"\/documentation\/haishinkit\/rtmpstream\/code\/playstart"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/playstop","title":"case playStop","type":"case"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/playstreamnotfound","type":"case","title":"case playStreamNotFound"},{"title":"case playTransition","path":"\/documentation\/haishinkit\/rtmpstream\/code\/playtransition","type":"case"},{"title":"case playUnpublishNotify","path":"\/documentation\/haishinkit\/rtmpstream\/code\/playunpublishnotify","type":"case"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/publishbadname","title":"case publishBadName","type":"case"},{"title":"case publishIdle","path":"\/documentation\/haishinkit\/rtmpstream\/code\/publishidle","type":"case"},{"title":"case publishStart","path":"\/documentation\/haishinkit\/rtmpstream\/code\/publishstart","type":"case"},{"title":"case recordAlreadyExists","path":"\/documentation\/haishinkit\/rtmpstream\/code\/recordalreadyexists","type":"case"},{"title":"case recordDiskQuotaExceeded","path":"\/documentation\/haishinkit\/rtmpstream\/code\/recorddiskquotaexceeded","type":"case"},{"type":"case","title":"case recordFailed","path":"\/documentation\/haishinkit\/rtmpstream\/code\/recordfailed"},{"title":"case recordNoAccess","path":"\/documentation\/haishinkit\/rtmpstream\/code\/recordnoaccess","type":"case"},{"type":"case","title":"case recordStart","path":"\/documentation\/haishinkit\/rtmpstream\/code\/recordstart"},{"title":"case recordStop","path":"\/documentation\/haishinkit\/rtmpstream\/code\/recordstop","type":"case"},{"title":"case secondScreenStart","type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/code\/secondscreenstart"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/secondscreenstop","title":"case secondScreenStop","type":"case"},{"type":"case","title":"case seekFailed","path":"\/documentation\/haishinkit\/rtmpstream\/code\/seekfailed"},{"title":"case seekInvalidTime","type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/code\/seekinvalidtime"},{"title":"case seekNotify","path":"\/documentation\/haishinkit\/rtmpstream\/code\/seeknotify","type":"case"},{"type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/code\/stepnotify","title":"case stepNotify"},{"type":"case","title":"case unpauseNotify","path":"\/documentation\/haishinkit\/rtmpstream\/code\/unpausenotify"},{"type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/code\/unpublishsuccess","title":"case unpublishSuccess"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/videodimensionchange","type":"case","title":"case videoDimensionChange"},{"type":"groupMarker","title":"Initializers"},{"title":"init?(rawValue: String)","path":"\/documentation\/haishinkit\/rtmpstream\/code\/init(rawvalue:)","type":"init"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var level: String","path":"\/documentation\/haishinkit\/rtmpstream\/code\/level"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}],"title":"Equatable Implementations","path":"\/documentation\/haishinkit\/rtmpstream\/code\/equatable-implementations","type":"symbol"},{"type":"symbol","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/haishinkit\/rtmpstream\/code\/hashvalue","title":"var hashValue: Int"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/hash(into:)","type":"method","title":"func hash(into: inout Hasher)"}],"title":"RawRepresentable Implementations","path":"\/documentation\/haishinkit\/rtmpstream\/code\/rawrepresentable-implementations"}]},{"type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"type":"case","title":"case invalidState","path":"\/documentation\/haishinkit\/rtmpstream\/error\/invalidstate"},{"path":"\/documentation\/haishinkit\/rtmpstream\/error\/requestfailed(response:)","type":"case","title":"case requestFailed(response: RTMPResponse)"},{"title":"case requestTimedOut","path":"\/documentation\/haishinkit\/rtmpstream\/error\/requesttimedout","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Error Implementations","type":"symbol","path":"\/documentation\/haishinkit\/rtmpstream\/error\/error-implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var localizedDescription: String","path":"\/documentation\/haishinkit\/rtmpstream\/error\/localizeddescription"}]}],"path":"\/documentation\/haishinkit\/rtmpstream\/error","title":"RTMPStream.Error"},{"path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"type":"case","title":"case append","path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish\/append"},{"title":"case appendWithGap","path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish\/appendwithgap","type":"case"},{"title":"case live","path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish\/live","type":"case"},{"type":"case","title":"case record","path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish\/record"},{"type":"groupMarker","title":"Initializers"},{"title":"init?(rawValue: String)","path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish\/init(rawvalue:)","type":"init"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish\/equatable-implementations","title":"Equatable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish\/!=(_:_:)"}]},{"title":"RawRepresentable Implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Properties"},{"title":"var hashValue: Int","path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish\/hashvalue","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"type":"method","title":"func hash(into: inout Hasher)","path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish\/hash(into:)"}],"path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish\/rawrepresentable-implementations"}],"type":"enum","title":"RTMPStream.HowToPublish"},{"title":"Default Implementations","type":"groupMarker"},{"type":"symbol","path":"\/documentation\/haishinkit\/rtmpstream\/actor-implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"type":"method","path":"\/documentation\/haishinkit\/rtmpstream\/assertisolated(_:file:line:)","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)"},{"title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","path":"\/documentation\/haishinkit\/rtmpstream\/assumeisolated(_:file:line:)","type":"method"},{"type":"method","path":"\/documentation\/haishinkit\/rtmpstream\/preconditionisolated(_:file:line:)","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)"}],"title":"Actor Implementations"},{"title":"HKStream Implementations","path":"\/documentation\/haishinkit\/rtmpstream\/hkstream-implementations","type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var audioSettings: AudioCodecSettings","path":"\/documentation\/haishinkit\/rtmpstream\/audiosettings","type":"property"},{"path":"\/documentation\/haishinkit\/rtmpstream\/soundtransform","type":"property","title":"var soundTransform: SoundTransform?"},{"title":"var videoSettings: VideoCodecSettings","path":"\/documentation\/haishinkit\/rtmpstream\/videosettings","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/rtmpstream\/addoutput(_:)","type":"method","title":"func addOutput(some HKStreamOutput)"},{"title":"func append(CMSampleBuffer)","path":"\/documentation\/haishinkit\/rtmpstream\/append(_:)","type":"method"},{"path":"\/documentation\/haishinkit\/rtmpstream\/append(_:when:)","title":"func append(AVAudioBuffer, when: AVAudioTime)","type":"method"},{"title":"func attachAudioPlayer(AudioPlayer?) async","path":"\/documentation\/haishinkit\/rtmpstream\/attachaudioplayer(_:)","type":"method"},{"title":"func dispatch(NetworkMonitorEvent) async","type":"method","path":"\/documentation\/haishinkit\/rtmpstream\/dispatch(_:)"},{"type":"method","path":"\/documentation\/haishinkit\/rtmpstream\/removeoutput(_:)","title":"func removeOutput(some HKStreamOutput)"},{"type":"method","path":"\/documentation\/haishinkit\/rtmpstream\/setaudiosettings(_:)","title":"func setAudioSettings(AudioCodecSettings)"},{"title":"func setBitrateStorategy((some HKStreamBitRateStrategy)?)","path":"\/documentation\/haishinkit\/rtmpstream\/setbitratestorategy(_:)","type":"method"},{"path":"\/documentation\/haishinkit\/rtmpstream\/setsoundtransform(_:)","title":"func setSoundTransform(SoundTransform) async","type":"method"},{"path":"\/documentation\/haishinkit\/rtmpstream\/setvideoinputbuffercounts(_:)","title":"func setVideoInputBufferCounts(Int)","type":"method"},{"type":"method","title":"func setVideoSettings(VideoCodecSettings)","path":"\/documentation\/haishinkit\/rtmpstream\/setvideosettings(_:)"}]},{"type":"symbol","title":"MediaMixerOutput Implementations","path":"\/documentation\/haishinkit\/rtmpstream\/mediamixeroutput-implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/rtmpstream\/mixer(_:didoutput:)","type":"method","title":"func mixer(MediaMixer, didOutput: CMSampleBuffer)"},{"type":"method","title":"func mixer(MediaMixer, didOutput: AVAudioPCMBuffer, when: AVAudioTime)","path":"\/documentation\/haishinkit\/rtmpstream\/mixer(_:didoutput:when:)"},{"title":"func selectTrack(UInt8?, mediaType: CMFormatDescription.MediaType)","path":"\/documentation\/haishinkit\/rtmpstream\/selecttrack(_:mediatype:)","type":"method"}]}],"type":"class","title":"RTMPStream","path":"\/documentation\/haishinkit\/rtmpstream"},{"path":"\/documentation\/haishinkit\/screen","title":"Screen","type":"class","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init()","type":"init","path":"\/documentation\/haishinkit\/screen\/init()"},{"title":"Instance Properties","type":"groupMarker"},{"type":"property","title":"var backgroundColor: CGColor","path":"\/documentation\/haishinkit\/screen\/backgroundcolor"},{"title":"var childCounts: Int","type":"property","path":"\/documentation\/haishinkit\/screen\/childcounts"},{"path":"\/documentation\/haishinkit\/screen\/delegate","title":"var delegate: (any ScreenDelegate)?","type":"property"},{"type":"property","title":"var size: CGSize","path":"\/documentation\/haishinkit\/screen\/size-swift.property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func addChild(ScreenObject?) throws","type":"method","path":"\/documentation\/haishinkit\/screen\/addchild(_:)"},{"path":"\/documentation\/haishinkit\/screen\/registervideoeffect(_:)","type":"method","title":"func registerVideoEffect(some VideoEffect) -> Bool"},{"type":"method","path":"\/documentation\/haishinkit\/screen\/removechild(_:)","title":"func removeChild(ScreenObject?)"},{"title":"func unregisterVideoEffect(some VideoEffect) -> Bool","path":"\/documentation\/haishinkit\/screen\/unregistervideoeffect(_:)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/screen\/size-swift.type.property","type":"property","title":"static let size: CGSize"}]},{"path":"\/documentation\/haishinkit\/screenactor","title":"ScreenActor","children":[{"title":"Type Properties","type":"groupMarker"},{"type":"property","path":"\/documentation\/haishinkit\/screenactor\/shared","title":"static let shared: ScreenActor"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Actor Implementations","type":"symbol","path":"\/documentation\/haishinkit\/screenactor\/actor-implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"type":"method","path":"\/documentation\/haishinkit\/screenactor\/assertisolated(_:file:line:)","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)"},{"path":"\/documentation\/haishinkit\/screenactor\/assumeisolated(_:file:line:)","type":"method","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T"},{"path":"\/documentation\/haishinkit\/screenactor\/preconditionisolated(_:file:line:)","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method"}]},{"type":"symbol","children":[{"type":"groupMarker","title":"Type Properties"},{"type":"property","path":"\/documentation\/haishinkit\/screenactor\/sharedunownedexecutor","title":"static var sharedUnownedExecutor: UnownedSerialExecutor"}],"path":"\/documentation\/haishinkit\/screenactor\/globalactor-implementations","title":"GlobalActor Implementations"}],"type":"class"},{"type":"class","title":"ScreenObject","path":"\/documentation\/haishinkit\/screenobject","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/haishinkit\/screenobject\/init()","type":"init","title":"init()"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var bounds: CGRect","path":"\/documentation\/haishinkit\/screenobject\/bounds","type":"property"},{"type":"property","title":"var cornerRadius: CGFloat","path":"\/documentation\/haishinkit\/screenobject\/cornerradius"},{"title":"var horizontalAlignment: ScreenObject.HorizontalAlignment","path":"\/documentation\/haishinkit\/screenobject\/horizontalalignment-swift.property","type":"property"},{"type":"property","path":"\/documentation\/haishinkit\/screenobject\/isvisible","title":"var isVisible: Bool"},{"path":"\/documentation\/haishinkit\/screenobject\/layoutmargin","type":"property","title":"var layoutMargin: NSEdgeInsets"},{"type":"property","title":"var parent: ScreenObjectContainer?","path":"\/documentation\/haishinkit\/screenobject\/parent"},{"title":"var size: CGSize","type":"property","path":"\/documentation\/haishinkit\/screenobject\/size"},{"type":"property","path":"\/documentation\/haishinkit\/screenobject\/verticalalignment-swift.property","title":"var verticalAlignment: ScreenObject.VerticalAlignment"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func invalidateLayout()","path":"\/documentation\/haishinkit\/screenobject\/invalidatelayout()","type":"method"},{"title":"func makeBounds(CGSize) -> CGRect","path":"\/documentation\/haishinkit\/screenobject\/makebounds(_:)","type":"method"},{"path":"\/documentation\/haishinkit\/screenobject\/makeimage(_:)","title":"func makeImage(some ScreenRenderer) -> CGImage?","type":"method"},{"type":"groupMarker","title":"Enumerations"},{"type":"enum","path":"\/documentation\/haishinkit\/screenobject\/horizontalalignment-swift.enum","title":"ScreenObject.HorizontalAlignment","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"title":"case center","type":"case","path":"\/documentation\/haishinkit\/screenobject\/horizontalalignment-swift.enum\/center"},{"path":"\/documentation\/haishinkit\/screenobject\/horizontalalignment-swift.enum\/left","title":"case left","type":"case"},{"path":"\/documentation\/haishinkit\/screenobject\/horizontalalignment-swift.enum\/right","type":"case","title":"case right"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/screenobject\/horizontalalignment-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"type":"symbol","title":"Equatable Implementations","path":"\/documentation\/haishinkit\/screenobject\/horizontalalignment-swift.enum\/equatable-implementations"}]},{"children":[{"type":"groupMarker","title":"Enumeration Cases"},{"title":"case bottom","type":"case","path":"\/documentation\/haishinkit\/screenobject\/verticalalignment-swift.enum\/bottom"},{"title":"case middle","path":"\/documentation\/haishinkit\/screenobject\/verticalalignment-swift.enum\/middle","type":"case"},{"path":"\/documentation\/haishinkit\/screenobject\/verticalalignment-swift.enum\/top","type":"case","title":"case top"},{"title":"Default Implementations","type":"groupMarker"},{"type":"symbol","path":"\/documentation\/haishinkit\/screenobject\/verticalalignment-swift.enum\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/haishinkit\/screenobject\/verticalalignment-swift.enum\/!=(_:_:)","type":"op"}],"title":"Equatable Implementations"}],"title":"ScreenObject.VerticalAlignment","type":"enum","path":"\/documentation\/haishinkit\/screenobject\/verticalalignment-swift.enum"},{"title":"Default Implementations","type":"groupMarker"},{"type":"symbol","path":"\/documentation\/haishinkit\/screenobject\/equatable-implementations","title":"Equatable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/haishinkit\/screenobject\/!=(_:_:)"},{"title":"static func == (ScreenObject, ScreenObject) -> Bool","type":"op","path":"\/documentation\/haishinkit\/screenobject\/==(_:_:)"}]},{"path":"\/documentation\/haishinkit\/screenobject\/hashable-implementations","type":"symbol","title":"Hashable Implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"type":"method","title":"func hash(into: inout Hasher)","path":"\/documentation\/haishinkit\/screenobject\/hash(into:)"}]}]},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/screenobjectcontainer\/childcounts","title":"var childCounts: Int","type":"property"},{"type":"groupMarker","title":"Instance Methods"},{"title":"func addChild(ScreenObject?) throws","path":"\/documentation\/haishinkit\/screenobjectcontainer\/addchild(_:)","type":"method"},{"path":"\/documentation\/haishinkit\/screenobjectcontainer\/removechild(_:)","type":"method","title":"func removeChild(ScreenObject?)"},{"type":"groupMarker","title":"Enumerations"},{"children":[{"type":"groupMarker","title":"Enumeration Cases"},{"title":"case alreadyExists","path":"\/documentation\/haishinkit\/screenobjectcontainer\/error\/alreadyexists","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/screenobjectcontainer\/error\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}],"path":"\/documentation\/haishinkit\/screenobjectcontainer\/error\/equatable-implementations","type":"symbol"},{"title":"Error Implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"type":"property","title":"var localizedDescription: String","path":"\/documentation\/haishinkit\/screenobjectcontainer\/error\/localizeddescription"}],"type":"symbol","path":"\/documentation\/haishinkit\/screenobjectcontainer\/error\/error-implementations"}],"title":"ScreenObjectContainer.Error","path":"\/documentation\/haishinkit\/screenobjectcontainer\/error","type":"enum"}],"type":"class","path":"\/documentation\/haishinkit\/screenobjectcontainer","title":"ScreenObjectContainer"},{"title":"StreamScreenObject","path":"\/documentation\/haishinkit\/streamscreenobject","children":[{"title":"Instance Properties","type":"groupMarker"},{"type":"property","path":"\/documentation\/haishinkit\/streamscreenobject\/chromakeycolor","title":"var chromaKeyColor: CGColor?"},{"type":"property","title":"var videoGravity: AVLayerVideoGravity","path":"\/documentation\/haishinkit\/streamscreenobject\/videogravity"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/haishinkit\/streamscreenobject\/makebounds(_:)","title":"func makeBounds(CGSize) -> CGRect"},{"title":"func makeImage(some ScreenRenderer) -> CGImage?","path":"\/documentation\/haishinkit\/streamscreenobject\/makeimage(_:)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Instance Methods"},{"title":"func stream(some HKStream, didOutput: CMSampleBuffer)","type":"method","path":"\/documentation\/haishinkit\/streamscreenobject\/stream(_:didoutput:)"},{"type":"method","path":"\/documentation\/haishinkit\/streamscreenobject\/stream(_:didoutput:when:)","title":"func stream(some HKStream, didOutput: AVAudioBuffer, when: AVAudioTime)"}],"type":"symbol","title":"HKStreamOutput Implementations","path":"\/documentation\/haishinkit\/streamscreenobject\/hkstreamoutput-implementations"}],"type":"class"},{"title":"TSReader","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init()","path":"\/documentation\/haishinkit\/tsreader\/init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var output: AsyncStream<(UInt16, CMSampleBuffer)>","path":"\/documentation\/haishinkit\/tsreader\/output","type":"property"},{"type":"groupMarker","title":"Instance Methods"},{"title":"func clear()","type":"method","path":"\/documentation\/haishinkit\/tsreader\/clear()"},{"title":"func read(Data) -> Int","type":"method","path":"\/documentation\/haishinkit\/tsreader\/read(_:)"}],"path":"\/documentation\/haishinkit\/tsreader","type":"class"},{"path":"\/documentation\/haishinkit\/tswriter","title":"TSWriter","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/tswriter\/init(segmentduration:)","type":"init","title":"init(segmentDuration: Double)"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/tswriter\/audioformat","type":"property","title":"var audioFormat: AVAudioFormat?"},{"title":"var expectedMedias: Set<AVMediaType>","path":"\/documentation\/haishinkit\/tswriter\/expectedmedias","type":"property"},{"type":"property","title":"var output: AsyncStream<Data>","path":"\/documentation\/haishinkit\/tswriter\/output"},{"title":"var videoFormat: CMFormatDescription?","type":"property","path":"\/documentation\/haishinkit\/tswriter\/videoformat"},{"title":"Instance Methods","type":"groupMarker"},{"type":"method","path":"\/documentation\/haishinkit\/tswriter\/append(_:)","title":"func append(CMSampleBuffer)"},{"path":"\/documentation\/haishinkit\/tswriter\/append(_:when:)","title":"func append(AVAudioBuffer, when: AVAudioTime)","type":"method"},{"path":"\/documentation\/haishinkit\/tswriter\/clear()","type":"method","title":"func clear()"}],"type":"class"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/textscreenobject\/attributes","title":"var attributes: [NSAttributedString.Key : Any]?","type":"property"},{"path":"\/documentation\/haishinkit\/textscreenobject\/bounds","title":"var bounds: CGRect","type":"property"},{"path":"\/documentation\/haishinkit\/textscreenobject\/string","type":"property","title":"var string: String"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func makeBounds(CGSize) -> CGRect","path":"\/documentation\/haishinkit\/textscreenobject\/makebounds(_:)","type":"method"},{"path":"\/documentation\/haishinkit\/textscreenobject\/makeimage(_:)","type":"method","title":"func makeImage(some ScreenRenderer) -> CGImage?"}],"title":"TextScreenObject","type":"class","path":"\/documentation\/haishinkit\/textscreenobject"},{"path":"\/documentation\/haishinkit\/videodeviceunit","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videodeviceunit\/colorformat-swift.property","type":"property","title":"var colorFormat: OSType"},{"title":"var connection: AVCaptureConnection?","type":"property","path":"\/documentation\/haishinkit\/videodeviceunit\/connection"},{"path":"\/documentation\/haishinkit\/videodeviceunit\/device","type":"property","title":"var device: AVCaptureDevice?"},{"title":"var input: AVCaptureInput?","type":"property","path":"\/documentation\/haishinkit\/videodeviceunit\/input"},{"type":"property","path":"\/documentation\/haishinkit\/videodeviceunit\/isvideomirrored","title":"var isVideoMirrored: Bool"},{"title":"var output: VideoDeviceUnit.Output?","path":"\/documentation\/haishinkit\/videodeviceunit\/output-swift.property","type":"property"},{"path":"\/documentation\/haishinkit\/videodeviceunit\/track","title":"let track: UInt8","type":"property"},{"type":"property","title":"var videoOrientation: AVCaptureVideoOrientation","path":"\/documentation\/haishinkit\/videodeviceunit\/videoorientation"},{"type":"groupMarker","title":"Type Aliases"},{"title":"VideoDeviceUnit.Output","type":"typealias","path":"\/documentation\/haishinkit\/videodeviceunit\/output-swift.typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videodeviceunit\/colorformat-swift.type.property","title":"static let colorFormat: OSType","type":"property"}],"title":"VideoDeviceUnit","type":"class"},{"path":"\/documentation\/haishinkit\/videorotator","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init?()","type":"init","path":"\/documentation\/haishinkit\/videorotator\/init()"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videorotator\/rotate(buffer:)","title":"func rotate(buffer: CMSampleBuffer) -> Result<CMSampleBuffer, VideoRotator.Error>","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videorotator\/error","title":"VideoRotator.Error","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"title":"case cannotAllocatePixelBuffer(CVReturn)","path":"\/documentation\/haishinkit\/videorotator\/error\/cannotallocatepixelbuffer(_:)","type":"case"},{"title":"case noImageBuffer","type":"case","path":"\/documentation\/haishinkit\/videorotator\/error\/noimagebuffer"},{"title":"case noOrientationInfo","path":"\/documentation\/haishinkit\/videorotator\/error\/noorientationinfo","type":"case"},{"title":"case rotationFailure(OSStatus)","path":"\/documentation\/haishinkit\/videorotator\/error\/rotationfailure(_:)","type":"case"},{"title":"case unsupportedOrientation","path":"\/documentation\/haishinkit\/videorotator\/error\/unsupportedorientation","type":"case"},{"type":"groupMarker","title":"Default Implementations"},{"title":"Error Implementations","type":"symbol","path":"\/documentation\/haishinkit\/videorotator\/error\/error-implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"title":"var localizedDescription: String","type":"property","path":"\/documentation\/haishinkit\/videorotator\/error\/localizeddescription"}]}],"type":"enum"}],"type":"class","title":"VideoRotator"},{"children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/haishinkit\/videotrackscreenobject\/init()","type":"init","title":"init()"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var chromaKeyColor: CGColor?","type":"property","path":"\/documentation\/haishinkit\/videotrackscreenobject\/chromakeycolor"},{"path":"\/documentation\/haishinkit\/videotrackscreenobject\/framerate","type":"property","title":"var frameRate: Int"},{"path":"\/documentation\/haishinkit\/videotrackscreenobject\/track","title":"var track: UInt8","type":"property"},{"title":"var videoGravity: AVLayerVideoGravity","path":"\/documentation\/haishinkit\/videotrackscreenobject\/videogravity","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"type":"method","title":"func draw(some ScreenRenderer)","path":"\/documentation\/haishinkit\/videotrackscreenobject\/draw(_:)"},{"type":"method","title":"func makeBounds(CGSize) -> CGRect","path":"\/documentation\/haishinkit\/videotrackscreenobject\/makebounds(_:)"},{"title":"func makeImage(some ScreenRenderer) -> CGImage?","path":"\/documentation\/haishinkit\/videotrackscreenobject\/makeimage(_:)","type":"method"},{"type":"method","title":"func registerVideoEffect(some VideoEffect) -> Bool","path":"\/documentation\/haishinkit\/videotrackscreenobject\/registervideoeffect(_:)"},{"title":"func unregisterVideoEffect(some VideoEffect) -> Bool","type":"method","path":"\/documentation\/haishinkit\/videotrackscreenobject\/unregistervideoeffect(_:)"}],"title":"VideoTrackScreenObject","type":"class","path":"\/documentation\/haishinkit\/videotrackscreenobject"},{"title":"Protocols","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"title":"var isRunning: Bool","path":"\/documentation\/haishinkit\/asyncrunner\/isrunning","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func startRunning() async","path":"\/documentation\/haishinkit\/asyncrunner\/startrunning()","type":"method"},{"title":"func stopRunning() async","type":"method","path":"\/documentation\/haishinkit\/asyncrunner\/stoprunning()"}],"title":"AsyncRunner","type":"protocol","path":"\/documentation\/haishinkit\/asyncrunner"},{"path":"\/documentation\/haishinkit\/chromakeyprocessable","type":"protocol","children":[{"type":"groupMarker","title":"Instance Properties"},{"title":"var chromaKeyColor: CGColor?","type":"property","path":"\/documentation\/haishinkit\/chromakeyprocessable\/chromakeycolor"}],"title":"ChromaKeyProcessable"},{"type":"protocol","title":"HKStream","children":[{"title":"Instance Properties","type":"groupMarker"},{"type":"property","title":"var audioSettings: AudioCodecSettings","path":"\/documentation\/haishinkit\/hkstream\/audiosettings"},{"type":"property","title":"var readyState: HKStreamReadyState","path":"\/documentation\/haishinkit\/hkstream\/readystate"},{"path":"\/documentation\/haishinkit\/hkstream\/soundtransform","title":"var soundTransform: SoundTransform?","type":"property"},{"type":"property","title":"var videoSettings: VideoCodecSettings","path":"\/documentation\/haishinkit\/hkstream\/videosettings"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/hkstream\/addoutput(_:)","title":"func addOutput(some HKStreamOutput)","type":"method"},{"path":"\/documentation\/haishinkit\/hkstream\/append(_:)","type":"method","title":"func append(CMSampleBuffer)"},{"type":"method","title":"func append(AVAudioBuffer, when: AVAudioTime)","path":"\/documentation\/haishinkit\/hkstream\/append(_:when:)"},{"title":"func attachAudioPlayer(AudioPlayer?) async","type":"method","path":"\/documentation\/haishinkit\/hkstream\/attachaudioplayer(_:)"},{"title":"func dispatch(NetworkMonitorEvent) async","path":"\/documentation\/haishinkit\/hkstream\/dispatch(_:)","type":"method"},{"path":"\/documentation\/haishinkit\/hkstream\/removeoutput(_:)","title":"func removeOutput(some HKStreamOutput)","type":"method"},{"path":"\/documentation\/haishinkit\/hkstream\/setaudiosettings(_:)","type":"method","title":"func setAudioSettings(AudioCodecSettings)"},{"title":"func setBitrateStorategy((some HKStreamBitRateStrategy)?)","type":"method","path":"\/documentation\/haishinkit\/hkstream\/setbitratestorategy(_:)"},{"title":"func setSoundTransform(SoundTransform) async","type":"method","path":"\/documentation\/haishinkit\/hkstream\/setsoundtransform(_:)"},{"path":"\/documentation\/haishinkit\/hkstream\/setvideoinputbuffercounts(_:)","title":"func setVideoInputBufferCounts(Int)","type":"method"},{"path":"\/documentation\/haishinkit\/hkstream\/setvideosettings(_:)","title":"func setVideoSettings(VideoCodecSettings)","type":"method"}],"path":"\/documentation\/haishinkit\/hkstream"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"type":"property","title":"var mamimumAudioBitRate: Int","path":"\/documentation\/haishinkit\/hkstreambitratestrategy\/mamimumaudiobitrate"},{"title":"var mamimumVideoBitRate: Int","type":"property","path":"\/documentation\/haishinkit\/hkstreambitratestrategy\/mamimumvideobitrate"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/haishinkit\/hkstreambitratestrategy\/adjustbitrate(_:stream:)","title":"func adjustBitrate(NetworkMonitorEvent, stream: some HKStream) async"}],"type":"protocol","title":"HKStreamBitRateStrategy","path":"\/documentation\/haishinkit\/hkstreambitratestrategy"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func stream(some HKStream, didOutput: CMSampleBuffer)","type":"method","path":"\/documentation\/haishinkit\/hkstreamoutput\/stream(_:didoutput:)"},{"path":"\/documentation\/haishinkit\/hkstreamoutput\/stream(_:didoutput:when:)","type":"method","title":"func stream(some HKStream, didOutput: AVAudioBuffer, when: AVAudioTime)"}],"path":"\/documentation\/haishinkit\/hkstreamoutput","type":"protocol","title":"HKStreamOutput"},{"type":"protocol","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/mediamixeroutput\/audiotrackid","title":"var audioTrackId: UInt8?","type":"property"},{"type":"property","title":"var videoTrackId: UInt8?","path":"\/documentation\/haishinkit\/mediamixeroutput\/videotrackid"},{"title":"Instance Methods","type":"groupMarker"},{"type":"method","title":"func mixer(MediaMixer, didOutput: CMSampleBuffer)","path":"\/documentation\/haishinkit\/mediamixeroutput\/mixer(_:didoutput:)"},{"type":"method","path":"\/documentation\/haishinkit\/mediamixeroutput\/mixer(_:didoutput:when:)","title":"func mixer(MediaMixer, didOutput: AVAudioPCMBuffer, when: AVAudioTime)"},{"type":"method","title":"func selectTrack(UInt8?, mediaType: CMFormatDescription.MediaType) async","path":"\/documentation\/haishinkit\/mediamixeroutput\/selecttrack(_:mediatype:)"}],"title":"MediaMixerOutput","path":"\/documentation\/haishinkit\/mediamixeroutput"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/networkconnection\/connected","title":"var connected: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/networkconnection\/close()","type":"method","title":"func close() async throws"}],"type":"protocol","title":"NetworkConnection","path":"\/documentation\/haishinkit\/networkconnection"},{"path":"\/documentation\/haishinkit\/networktransportreporter","type":"protocol","title":"NetworkTransportReporter","children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/networktransportreporter\/makenetworkmonitor()","type":"method","title":"func makeNetworkMonitor() async -> NetworkMonitor"},{"path":"\/documentation\/haishinkit\/networktransportreporter\/makenetworktransportreport()","title":"func makeNetworkTransportReport() async -> NetworkTransportReport","type":"method"}]},{"title":"Runner","type":"protocol","path":"\/documentation\/haishinkit\/runner","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/runner\/isrunning","type":"property","title":"var isRunning: Bool"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/runner\/startrunning()","title":"func startRunning()","type":"method"},{"title":"func stopRunning()","path":"\/documentation\/haishinkit\/runner\/stoprunning()","type":"method"}]},{"title":"ScreenDelegate","children":[{"title":"Instance Methods","type":"groupMarker"},{"type":"method","title":"func screen(Screen, willLayout: CMTime)","path":"\/documentation\/haishinkit\/screendelegate\/screen(_:willlayout:)"}],"path":"\/documentation\/haishinkit\/screendelegate","type":"protocol"},{"path":"\/documentation\/haishinkit\/screenrenderer","type":"protocol","title":"ScreenRenderer","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var backgroundColor: CGColor","path":"\/documentation\/haishinkit\/screenrenderer\/backgroundcolor","type":"property"},{"title":"var bounds: CGRect","path":"\/documentation\/haishinkit\/screenrenderer\/bounds","type":"property"},{"title":"var context: CIContext","path":"\/documentation\/haishinkit\/screenrenderer\/context","type":"property"},{"type":"property","title":"var presentationTimeStamp: CMTime","path":"\/documentation\/haishinkit\/screenrenderer\/presentationtimestamp"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/screenrenderer\/draw(_:)","title":"func draw(ScreenObject)","type":"method"},{"type":"method","title":"func layout(ScreenObject)","path":"\/documentation\/haishinkit\/screenrenderer\/layout(_:)"},{"path":"\/documentation\/haishinkit\/screenrenderer\/settarget(_:)","title":"func setTarget(CVPixelBuffer?)","type":"method"}]},{"children":[{"type":"groupMarker","title":"Instance Methods"},{"title":"func execute(CIImage) -> CIImage","path":"\/documentation\/haishinkit\/videoeffect\/execute(_:)","type":"method"}],"title":"VideoEffect","type":"protocol","path":"\/documentation\/haishinkit\/videoeffect"},{"type":"groupMarker","title":"Structures"},{"title":"AMFArray","children":[{"title":"Initializers","type":"groupMarker"},{"type":"init","title":"init(count: Int)","path":"\/documentation\/haishinkit\/amfarray\/init(count:)"},{"path":"\/documentation\/haishinkit\/amfarray\/init(data:)","title":"init(data: [(any Sendable)?])","type":"init"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/haishinkit\/amfarray\/length","title":"var length: Int"},{"title":"Subscripts","type":"groupMarker"},{"title":"subscript(Any) -> (any Sendable)?","type":"subscript","path":"\/documentation\/haishinkit\/amfarray\/subscript(_:)"},{"type":"groupMarker","title":"Default Implementations"},{"title":"CustomDebugStringConvertible Implementations","path":"\/documentation\/haishinkit\/amfarray\/customdebugstringconvertible-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/haishinkit\/amfarray\/debugdescription","title":"var debugDescription: String"}]},{"type":"symbol","title":"Equatable Implementations","path":"\/documentation\/haishinkit\/amfarray\/equatable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","path":"\/documentation\/haishinkit\/amfarray\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"},{"path":"\/documentation\/haishinkit\/amfarray\/==(_:_:)","type":"op","title":"static func == (AMFArray, AMFArray) -> Bool"}]},{"title":"ExpressibleByArrayLiteral Implementations","type":"symbol","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/haishinkit\/amfarray\/init(arrayliteral:)","type":"init","title":"init(arrayLiteral: (any Sendable)?...)"}],"path":"\/documentation\/haishinkit\/amfarray\/expressiblebyarrayliteral-implementations"}],"type":"struct","path":"\/documentation\/haishinkit\/amfarray"},{"title":"AMFTypedObject","type":"struct","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/amftypedobject\/data","type":"property","title":"let data: AMFObject"},{"title":"let typeName: String","path":"\/documentation\/haishinkit\/amftypedobject\/typename","type":"property"}],"path":"\/documentation\/haishinkit\/amftypedobject"},{"title":"AMFUndefined","path":"\/documentation\/haishinkit\/amfundefined","type":"struct","children":[{"type":"groupMarker","title":"Instance Properties"},{"title":"var description: String","type":"property","path":"\/documentation\/haishinkit\/amfundefined\/description"}]},{"path":"\/documentation\/haishinkit\/amfxml","type":"struct","title":"AMFXML","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/haishinkit\/amfxml\/init(data:)","title":"init(data: String)","type":"init"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/amfxml\/description","type":"property","title":"var description: String"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/amfxml\/equatable-implementations","title":"Equatable Implementations","type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/amfxml\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"},{"type":"op","path":"\/documentation\/haishinkit\/amfxml\/==(_:_:)","title":"static func == (AMFXML, AMFXML) -> Bool"}]}]},{"title":"AMFXMLDocument","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(data: String)","path":"\/documentation\/haishinkit\/amfxmldocument\/init(data:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var description: String","path":"\/documentation\/haishinkit\/amfxmldocument\/description","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"type":"symbol","title":"Equatable Implementations","path":"\/documentation\/haishinkit\/amfxmldocument\/equatable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/haishinkit\/amfxmldocument\/!=(_:_:)"},{"type":"op","title":"static func == (AMFXMLDocument, AMFXMLDocument) -> Bool","path":"\/documentation\/haishinkit\/amfxmldocument\/==(_:_:)"}]}],"path":"\/documentation\/haishinkit\/amfxmldocument","type":"struct"},{"children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init(bitRate: Int, downmix: Bool, channelMap: [Int]?, sampleRate: Float64, format: AudioCodecSettings.Format)","path":"\/documentation\/haishinkit\/audiocodecsettings\/init(bitrate:downmix:channelmap:samplerate:format:)"},{"path":"\/documentation\/haishinkit\/audiocodecsettings\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"type":"groupMarker","title":"Instance Properties"},{"title":"var bitRate: Int","type":"property","path":"\/documentation\/haishinkit\/audiocodecsettings\/bitrate"},{"path":"\/documentation\/haishinkit\/audiocodecsettings\/channelmap","type":"property","title":"var channelMap: [Int]?"},{"type":"property","title":"var downmix: Bool","path":"\/documentation\/haishinkit\/audiocodecsettings\/downmix"},{"title":"var format: AudioCodecSettings.Format","type":"property","path":"\/documentation\/haishinkit\/audiocodecsettings\/format-swift.property"},{"type":"property","title":"let sampleRate: Float64","path":"\/documentation\/haishinkit\/audiocodecsettings\/samplerate"},{"type":"groupMarker","title":"Type Properties"},{"path":"\/documentation\/haishinkit\/audiocodecsettings\/default","type":"property","title":"static let `default`: AudioCodecSettings"},{"type":"property","path":"\/documentation\/haishinkit\/audiocodecsettings\/defaultbitrate","title":"static let defaultBitRate: Int"},{"type":"property","title":"static let maximumNumberOfChannels: UInt32","path":"\/documentation\/haishinkit\/audiocodecsettings\/maximumnumberofchannels"},{"type":"groupMarker","title":"Enumerations"},{"title":"AudioCodecSettings.Format","path":"\/documentation\/haishinkit\/audiocodecsettings\/format-swift.enum","type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"type":"case","title":"case aac","path":"\/documentation\/haishinkit\/audiocodecsettings\/format-swift.enum\/aac"},{"path":"\/documentation\/haishinkit\/audiocodecsettings\/format-swift.enum\/opus","type":"case","title":"case opus"},{"path":"\/documentation\/haishinkit\/audiocodecsettings\/format-swift.enum\/pcm","type":"case","title":"case pcm"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/audiocodecsettings\/format-swift.enum\/init(from:)","type":"init","title":"init(from: any Decoder) throws"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Operators"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/haishinkit\/audiocodecsettings\/format-swift.enum\/!=(_:_:)","type":"op"}],"type":"symbol","title":"Equatable Implementations","path":"\/documentation\/haishinkit\/audiocodecsettings\/format-swift.enum\/equatable-implementations"}]}],"path":"\/documentation\/haishinkit\/audiocodecsettings","type":"struct","title":"AudioCodecSettings"},{"path":"\/documentation\/haishinkit\/audiomixersettings","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(sampleRate: Float64, channels: UInt32, isMuted: Bool, mainTrack: UInt8, tracks: [UInt8 : AudioMixerTrackSettings])","type":"init","path":"\/documentation\/haishinkit\/audiomixersettings\/init(samplerate:channels:ismuted:maintrack:tracks:)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"let channels: UInt32","path":"\/documentation\/haishinkit\/audiomixersettings\/channels"},{"title":"var isMuted: Bool","path":"\/documentation\/haishinkit\/audiomixersettings\/ismuted","type":"property"},{"path":"\/documentation\/haishinkit\/audiomixersettings\/maintrack","title":"var mainTrack: UInt8","type":"property"},{"title":"var maximumNumberOfChannels: UInt32","path":"\/documentation\/haishinkit\/audiomixersettings\/maximumnumberofchannels","type":"property"},{"type":"property","path":"\/documentation\/haishinkit\/audiomixersettings\/samplerate","title":"let sampleRate: Float64"},{"path":"\/documentation\/haishinkit\/audiomixersettings\/tracks","type":"property","title":"var tracks: [UInt8 : AudioMixerTrackSettings]"},{"title":"Type Properties","type":"groupMarker"},{"type":"property","title":"static let `default`: AudioMixerSettings","path":"\/documentation\/haishinkit\/audiomixersettings\/default"},{"path":"\/documentation\/haishinkit\/audiomixersettings\/maximumsamplerate","type":"property","title":"static let maximumSampleRate: Float64"}],"title":"AudioMixerSettings","type":"struct"},{"children":[{"type":"groupMarker","title":"Initializers"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/haishinkit\/audiomixertracksettings\/init(from:)","type":"init"},{"path":"\/documentation\/haishinkit\/audiomixertracksettings\/init(volume:ismuted:downmix:channelmap:)","title":"init(volume: Float, isMuted: Bool, downmix: Bool, channelMap: [Int]?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/audiomixertracksettings\/channelmap","type":"property","title":"var channelMap: [Int]?"},{"type":"property","path":"\/documentation\/haishinkit\/audiomixertracksettings\/downmix","title":"var downmix: Bool"},{"path":"\/documentation\/haishinkit\/audiomixertracksettings\/ismuted","type":"property","title":"var isMuted: Bool"},{"title":"var volume: Float","type":"property","path":"\/documentation\/haishinkit\/audiomixertracksettings\/volume"},{"title":"Type Properties","type":"groupMarker"},{"title":"static let `default`: AudioMixerTrackSettings","path":"\/documentation\/haishinkit\/audiomixertracksettings\/default","type":"property"}],"path":"\/documentation\/haishinkit\/audiomixertracksettings","title":"AudioMixerTrackSettings","type":"struct"},{"title":"HKAtomic","path":"\/documentation\/haishinkit\/hkatomic","children":[{"type":"groupMarker","title":"Initializers"},{"title":"init(A)","path":"\/documentation\/haishinkit\/hkatomic\/init(_:)","type":"init"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var value: A","path":"\/documentation\/haishinkit\/hkatomic\/value"},{"title":"Instance Methods","type":"groupMarker"},{"type":"method","title":"func mutate((inout A) -> Void)","path":"\/documentation\/haishinkit\/hkatomic\/mutate(_:)"}],"type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"let currentBytesInPerSecond: Int","type":"property","path":"\/documentation\/haishinkit\/networkmonitorreport\/currentbytesinpersecond"},{"title":"let currentBytesOutPerSecond: Int","type":"property","path":"\/documentation\/haishinkit\/networkmonitorreport\/currentbytesoutpersecond"},{"path":"\/documentation\/haishinkit\/networkmonitorreport\/currentqueuebytesout","type":"property","title":"let currentQueueBytesOut: Int"},{"path":"\/documentation\/haishinkit\/networkmonitorreport\/totalbytesin","type":"property","title":"let totalBytesIn: Int"},{"path":"\/documentation\/haishinkit\/networkmonitorreport\/totalbytesout","title":"let totalBytesOut: Int","type":"property"}],"type":"struct","title":"NetworkMonitorReport","path":"\/documentation\/haishinkit\/networkmonitorreport"},{"title":"NetworkTransportReport","path":"\/documentation\/haishinkit\/networktransportreport","type":"struct","children":[{"title":"Initializers","type":"groupMarker"},{"type":"init","title":"init(queueBytesOut: Int, totalBytesIn: Int, totalBytesOut: Int)","path":"\/documentation\/haishinkit\/networktransportreport\/init(queuebytesout:totalbytesin:totalbytesout:)"},{"type":"groupMarker","title":"Instance Properties"},{"title":"let queueBytesOut: Int","type":"property","path":"\/documentation\/haishinkit\/networktransportreport\/queuebytesout"},{"title":"let totalBytesIn: Int","path":"\/documentation\/haishinkit\/networktransportreport\/totalbytesin","type":"property"},{"type":"property","path":"\/documentation\/haishinkit\/networktransportreport\/totalbytesout","title":"let totalBytesOut: Int"}]},{"type":"struct","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/rtmpresponse\/arguments","title":"let arguments: [(any Sendable)?]","type":"property"},{"type":"property","path":"\/documentation\/haishinkit\/rtmpresponse\/status","title":"let status: RTMPStatus?"}],"path":"\/documentation\/haishinkit\/rtmpresponse","title":"RTMPResponse"},{"title":"RTMPStatus","type":"struct","path":"\/documentation\/haishinkit\/rtmpstatus","children":[{"title":"Instance Properties","type":"groupMarker"},{"type":"property","path":"\/documentation\/haishinkit\/rtmpstatus\/code","title":"let code: String"},{"path":"\/documentation\/haishinkit\/rtmpstatus\/description","title":"let description: String","type":"property"},{"title":"let level: String","path":"\/documentation\/haishinkit\/rtmpstatus\/level","type":"property"},{"title":"Subscripts","type":"groupMarker"},{"type":"subscript","title":"subscript(dynamicMember _: String) -> Double?","path":"\/documentation\/haishinkit\/rtmpstatus\/subscript(dynamicmember:)-7qc0b"},{"path":"\/documentation\/haishinkit\/rtmpstatus\/subscript(dynamicmember:)-9sprr","type":"subscript","title":"subscript(dynamicMember _: String) -> String?"}]},{"title":"RTMPStreamInfo","children":[{"title":"Instance Properties","type":"groupMarker"},{"type":"property","path":"\/documentation\/haishinkit\/rtmpstreaminfo\/bytecount","title":"var byteCount: Int"},{"type":"property","title":"var currentBytesPerSecond: Int","path":"\/documentation\/haishinkit\/rtmpstreaminfo\/currentbytespersecond"},{"path":"\/documentation\/haishinkit\/rtmpstreaminfo\/resourcename","title":"var resourceName: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/rtmpstreaminfo\/customdebugstringconvertible-implementations","type":"symbol","title":"CustomDebugStringConvertible Implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"title":"var debugDescription: String","type":"property","path":"\/documentation\/haishinkit\/rtmpstreaminfo\/debugdescription"}]}],"type":"struct","path":"\/documentation\/haishinkit\/rtmpstreaminfo"},{"children":[{"title":"Initializers","type":"groupMarker"},{"type":"init","title":"init(volume: Float, pan: Float)","path":"\/documentation\/haishinkit\/soundtransform\/init(volume:pan:)"},{"type":"groupMarker","title":"Instance Properties"},{"title":"var pan: Float","path":"\/documentation\/haishinkit\/soundtransform\/pan","type":"property"},{"path":"\/documentation\/haishinkit\/soundtransform\/volume","type":"property","title":"var volume: Float"},{"type":"groupMarker","title":"Type Properties"},{"path":"\/documentation\/haishinkit\/soundtransform\/defaultpan","type":"property","title":"static let defaultPan: Float"},{"path":"\/documentation\/haishinkit\/soundtransform\/defaultvolume","type":"property","title":"static let defaultVolume: Float"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/soundtransform\/customdebugstringconvertible-implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var debugDescription: String","type":"property","path":"\/documentation\/haishinkit\/soundtransform\/debugdescription"}],"type":"symbol","title":"CustomDebugStringConvertible Implementations"},{"children":[{"title":"Operators","type":"groupMarker"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/haishinkit\/soundtransform\/!=(_:_:)"}],"type":"symbol","path":"\/documentation\/haishinkit\/soundtransform\/equatable-implementations","title":"Equatable Implementations"}],"path":"\/documentation\/haishinkit\/soundtransform","title":"SoundTransform","type":"struct"},{"path":"\/documentation\/haishinkit\/vtsessionoption","type":"struct","title":"VTSessionOption","children":[{"type":"groupMarker","title":"Default Implementations"},{"children":[{"type":"groupMarker","title":"Operators"},{"type":"op","path":"\/documentation\/haishinkit\/vtsessionoption\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"},{"path":"\/documentation\/haishinkit\/vtsessionoption\/==(_:_:)","title":"static func == (VTSessionOption, VTSessionOption) -> Bool","type":"op"}],"path":"\/documentation\/haishinkit\/vtsessionoption\/equatable-implementations","type":"symbol","title":"Equatable Implementations"},{"type":"symbol","title":"Hashable Implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"type":"method","title":"func hash(into: inout Hasher)","path":"\/documentation\/haishinkit\/vtsessionoption\/hash(into:)"}],"path":"\/documentation\/haishinkit\/vtsessionoption\/hashable-implementations"}]},{"type":"struct","path":"\/documentation\/haishinkit\/videocodecsettings","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/haishinkit\/videocodecsettings\/init(from:)","type":"init"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/init(videosize:bitrate:profilelevel:scalingmode:bitratemode:maxkeyframeintervalduration:allowframereordering:dataratelimits:ishardwareencoderenabled:)","type":"init","title":"init(videoSize: CGSize, bitRate: Int, profileLevel: String, scalingMode: VideoCodecSettings.ScalingMode, bitRateMode: VideoCodecSettings.BitRateMode, maxKeyFrameIntervalDuration: Int32, allowFrameReordering: Bool?, dataRateLimits: [Double]?, isHardwareEncoderEnabled: Bool)"},{"type":"groupMarker","title":"Instance Properties"},{"title":"var allowFrameReordering: Bool?","path":"\/documentation\/haishinkit\/videocodecsettings\/allowframereordering","type":"property"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/bitrate","type":"property","title":"var bitRate: Int"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.property","type":"property","title":"var bitRateMode: VideoCodecSettings.BitRateMode"},{"type":"property","path":"\/documentation\/haishinkit\/videocodecsettings\/dataratelimits","title":"var dataRateLimits: [Double]?"},{"title":"var frameInterval: Double","type":"property","path":"\/documentation\/haishinkit\/videocodecsettings\/frameinterval"},{"type":"property","path":"\/documentation\/haishinkit\/videocodecsettings\/ishardwareencoderenabled","title":"var isHardwareEncoderEnabled: Bool"},{"type":"property","title":"var maxKeyFrameIntervalDuration: Int32","path":"\/documentation\/haishinkit\/videocodecsettings\/maxkeyframeintervalduration"},{"title":"var profileLevel: String","path":"\/documentation\/haishinkit\/videocodecsettings\/profilelevel","type":"property"},{"title":"var scalingMode: VideoCodecSettings.ScalingMode","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.property","type":"property"},{"title":"var videoSize: CGSize","path":"\/documentation\/haishinkit\/videocodecsettings\/videosize","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"title":"static let `default`: VideoCodecSettings","path":"\/documentation\/haishinkit\/videocodecsettings\/default","type":"property"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/frameinterval01","type":"property","title":"static let frameInterval01: Double"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/frameinterval05","title":"static let frameInterval05: Double","type":"property"},{"type":"property","title":"static let frameInterval10: Double","path":"\/documentation\/haishinkit\/videocodecsettings\/frameinterval10"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/frameinterval30","type":"property","title":"static let frameInterval30: Double"},{"type":"groupMarker","title":"Enumerations"},{"title":"VideoCodecSettings.BitRateMode","path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case average","type":"case","path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/average"},{"type":"case","title":"case constant","path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/constant"},{"type":"groupMarker","title":"Initializers"},{"title":"init?(rawValue: String)","type":"init","path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/init(rawvalue:)"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Operators"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/!=(_:_:)"}],"path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/rawrepresentable-implementations","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init(from: any Decoder) throws","path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/init(from:)"},{"type":"groupMarker","title":"Instance Properties"},{"title":"var hashValue: Int","path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/hashvalue","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"type":"symbol","title":"RawRepresentable Implementations"}],"type":"enum"},{"type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/cropsourcetocleanaperture","type":"case","title":"case cropSourceToCleanAperture"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/letterbox","title":"case letterbox","type":"case"},{"title":"case normal","type":"case","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/normal"},{"type":"case","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/trim","title":"case trim"},{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init?(rawValue: String)","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/init(rawvalue:)"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","type":"symbol","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/!=(_:_:)","type":"op"}]},{"type":"symbol","title":"RawRepresentable Implementations","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/init(from:)","type":"init","title":"init(from: any Decoder) throws"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/hashvalue","type":"property","title":"var hashValue: Int"},{"title":"Instance Methods","type":"groupMarker"},{"type":"method","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/encode(to:)","title":"func encode(to: any Encoder) throws"},{"type":"method","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)"}],"path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/rawrepresentable-implementations"}],"path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum","title":"VideoCodecSettings.ScalingMode"}],"title":"VideoCodecSettings"},{"type":"struct","path":"\/documentation\/haishinkit\/videomixersettings","title":"VideoMixerSettings","children":[{"title":"Initializers","type":"groupMarker"},{"type":"init","path":"\/documentation\/haishinkit\/videomixersettings\/init(from:)","title":"init(from: any Decoder) throws"},{"title":"init(mode: VideoMixerSettings.Mode, isMuted: Bool, mainTrack: UInt8)","type":"init","path":"\/documentation\/haishinkit\/videomixersettings\/init(mode:ismuted:maintrack:)"},{"type":"groupMarker","title":"Instance Properties"},{"title":"var isMuted: Bool","type":"property","path":"\/documentation\/haishinkit\/videomixersettings\/ismuted"},{"path":"\/documentation\/haishinkit\/videomixersettings\/maintrack","type":"property","title":"var mainTrack: UInt8"},{"type":"property","path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.property","title":"var mode: VideoMixerSettings.Mode"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videomixersettings\/default","title":"static let `default`: VideoMixerSettings","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"title":"VideoMixerSettings.Mode","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/offscreen","title":"case offscreen","type":"case"},{"path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/passthrough","type":"case","title":"case passthrough"},{"type":"groupMarker","title":"Initializers"},{"title":"init?(rawValue: String)","path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/init(rawvalue:)","type":"init"},{"type":"groupMarker","title":"Default Implementations"},{"title":"Equatable Implementations","type":"symbol","path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"type":"op","path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"}]},{"type":"symbol","path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","children":[{"type":"groupMarker","title":"Initializers"},{"title":"init(from: any Decoder) throws","type":"init","path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/init(from:)"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/hashvalue","type":"property","title":"var hashValue: Int"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/encode(to:)","title":"func encode(to: any Encoder) throws"},{"path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}]}],"type":"enum","path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum"}]},{"type":"groupMarker","title":"Variables"},{"path":"\/documentation\/haishinkit\/kamfundefined","type":"var","title":"let kAMFUndefined: AMFUndefined"},{"type":"var","title":"let kHaishinKitIdentifier: String","path":"\/documentation\/haishinkit\/khaishinkitidentifier"},{"title":"Type Aliases","type":"groupMarker"},{"title":"AMFObject","path":"\/documentation\/haishinkit\/amfobject","type":"typealias"},{"type":"typealias","path":"\/documentation\/haishinkit\/audiodeviceconfigurationblock","title":"AudioDeviceConfigurationBlock"},{"type":"typealias","title":"VideoDeviceConfigurationBlock","path":"\/documentation\/haishinkit\/videodeviceconfigurationblock"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"title":"static func device(withLocalizedName: String, mediaType: AVMediaType) -> AVCaptureDevice?","path":"\/documentation\/haishinkit\/deviceutil\/device(withlocalizedname:mediatype:)","type":"method"}],"type":"enum","title":"DeviceUtil","path":"\/documentation\/haishinkit\/deviceutil"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/hkstreamreadystate\/idle","title":"case idle","type":"case"},{"title":"case play","path":"\/documentation\/haishinkit\/hkstreamreadystate\/play","type":"case"},{"type":"case","path":"\/documentation\/haishinkit\/hkstreamreadystate\/playing","title":"case playing"},{"path":"\/documentation\/haishinkit\/hkstreamreadystate\/publish","type":"case","title":"case publish"},{"title":"case publishing","path":"\/documentation\/haishinkit\/hkstreamreadystate\/publishing","type":"case"},{"title":"Initializers","type":"groupMarker"},{"type":"init","title":"init?(rawValue: Int)","path":"\/documentation\/haishinkit\/hkstreamreadystate\/init(rawvalue:)"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/hkstreamreadystate\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}],"type":"symbol","title":"Equatable Implementations","path":"\/documentation\/haishinkit\/hkstreamreadystate\/equatable-implementations"},{"type":"symbol","title":"RawRepresentable Implementations","path":"\/documentation\/haishinkit\/hkstreamreadystate\/rawrepresentable-implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"title":"var hashValue: Int","type":"property","path":"\/documentation\/haishinkit\/hkstreamreadystate\/hashvalue"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func hash(into: inout Hasher)","path":"\/documentation\/haishinkit\/hkstreamreadystate\/hash(into:)","type":"method"}]}],"path":"\/documentation\/haishinkit\/hkstreamreadystate","title":"HKStreamReadyState","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/networkmonitorevent\/publishinsufficientbwoccured(report:)","type":"case","title":"case publishInsufficientBWOccured(report: NetworkMonitorReport)"},{"title":"case reset","path":"\/documentation\/haishinkit\/networkmonitorevent\/reset","type":"case"},{"type":"case","title":"case status(report: NetworkMonitorReport)","path":"\/documentation\/haishinkit\/networkmonitorevent\/status(report:)"}],"path":"\/documentation\/haishinkit\/networkmonitorevent","title":"NetworkMonitorEvent","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"type":"case","title":"case amf0","path":"\/documentation\/haishinkit\/rtmpobjectencoding\/amf0"},{"type":"case","path":"\/documentation\/haishinkit\/rtmpobjectencoding\/amf3","title":"case amf3"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: UInt8)","path":"\/documentation\/haishinkit\/rtmpobjectencoding\/init(rawvalue:)","type":"init"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"type":"groupMarker","title":"Operators"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/haishinkit\/rtmpobjectencoding\/!=(_:_:)","type":"op"}],"type":"symbol","path":"\/documentation\/haishinkit\/rtmpobjectencoding\/equatable-implementations","title":"Equatable Implementations"},{"title":"RawRepresentable Implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"type":"property","title":"var hashValue: Int","path":"\/documentation\/haishinkit\/rtmpobjectencoding\/hashvalue"},{"title":"Instance Methods","type":"groupMarker"},{"type":"method","title":"func hash(into: inout Hasher)","path":"\/documentation\/haishinkit\/rtmpobjectencoding\/hash(into:)"}],"path":"\/documentation\/haishinkit\/rtmpobjectencoding\/rawrepresentable-implementations","type":"symbol"}],"path":"\/documentation\/haishinkit\/rtmpobjectencoding","title":"RTMPObjectEncoding","type":"enum"},{"title":"Extended Modules","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/coremedia","title":"CoreMedia","type":"extension","children":[{"title":"Extended Classes","type":"groupMarker"},{"type":"extension","children":[{"type":"groupMarker","title":"Instance Properties"},{"title":"var isCompressed: Bool","path":"\/documentation\/haishinkit\/coremedia\/cmformatdescription\/iscompressed","type":"property"}],"path":"\/documentation\/haishinkit\/coremedia\/cmformatdescription","title":"CMFormatDescription"}]}]},{"type":"module","children":[{"title":"Classes","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Initializers"},{"title":"init(MoQTSetupRole, requestTimeOut: UInt64)","path":"\/documentation\/moqthaishinkit\/moqtconnection\/init(_:requesttimeout:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"type":"property","title":"var objectStream: AsyncStream<MoQTObject>","path":"\/documentation\/moqthaishinkit\/moqtconnection\/objectstream"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/requesttimeout","title":"let requestTimeout: UInt64","type":"property"},{"type":"property","title":"let role: MoQTSetupRole","path":"\/documentation\/moqthaishinkit\/moqtconnection\/role"},{"title":"Instance Methods","type":"groupMarker"},{"type":"method","title":"func annouce([String], authInfo: String?) async throws -> Result<MoQTAnnounceOk, MoQTAnnounceError>","path":"\/documentation\/moqthaishinkit\/moqtconnection\/annouce(_:authinfo:)"},{"title":"func close() async","type":"method","path":"\/documentation\/moqthaishinkit\/moqtconnection\/close()"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/connect(_:)","type":"method","title":"func connect(String) async throws -> MoQTServerSetup"},{"type":"method","title":"func send([MoQTObject], header: MoQTStreamHeaderSubgroup) async throws","path":"\/documentation\/moqthaishinkit\/moqtconnection\/send(_:header:)"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/subscribe(_:name:authinfo:)","title":"func subscribe([String], name: String, authInfo: String?) async throws -> Result<MoQTSubscribeOk, MoQTSubscribeError>","type":"method"},{"type":"method","title":"func subscribeAnnouces([String], authInfo: String?) async throws -> Result<MoQTSubscribeAnnouncesOk, MoQTSubscribeAnnouncesError>","path":"\/documentation\/moqthaishinkit\/moqtconnection\/subscribeannouces(_:authinfo:)"},{"title":"Type Properties","type":"groupMarker"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtconnection\/defaultport","title":"static let defaultPort: Int"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/defaultrequesttimeout","title":"static let defaultRequestTimeout: UInt64","type":"property"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtconnection\/supportedprotocols","title":"static let supportedProtocols: [String]"},{"title":"static let supportedVersions: [MoQTVersion]","path":"\/documentation\/moqthaishinkit\/moqtconnection\/supportedversions","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Enumeration Cases"},{"title":"case connectionTimedOut","path":"\/documentation\/moqthaishinkit\/moqtconnection\/error\/connectiontimedout","type":"case"},{"title":"case invalidState","path":"\/documentation\/moqthaishinkit\/moqtconnection\/error\/invalidstate","type":"case"},{"title":"case requestTimedOut","path":"\/documentation\/moqthaishinkit\/moqtconnection\/error\/requesttimedout","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/error\/socketerroroccurred(_:)","type":"case","title":"case socketErrorOccurred(any Error)"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/error\/unknownresponse","type":"case","title":"case unknownResponse"},{"title":"case unsupportedCommand(String)","path":"\/documentation\/moqthaishinkit\/moqtconnection\/error\/unsupportedcommand(_:)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Error Implementations","type":"symbol","path":"\/documentation\/moqthaishinkit\/moqtconnection\/error\/error-implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var localizedDescription: String","type":"property","path":"\/documentation\/moqthaishinkit\/moqtconnection\/error\/localizeddescription"}]}],"path":"\/documentation\/moqthaishinkit\/moqtconnection\/error","title":"MoQTConnection.Error","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Actor Implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/moqthaishinkit\/moqtconnection\/assertisolated(_:file:line:)","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)"},{"type":"method","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","path":"\/documentation\/moqthaishinkit\/moqtconnection\/assumeisolated(_:file:line:)"},{"type":"method","path":"\/documentation\/moqthaishinkit\/moqtconnection\/preconditionisolated(_:file:line:)","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)"}],"path":"\/documentation\/moqthaishinkit\/moqtconnection\/actor-implementations"}],"path":"\/documentation\/moqthaishinkit\/moqtconnection","title":"MoQTConnection","type":"class"},{"title":"Protocols","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtcontrolmessage","type":"protocol","title":"MoQTControlMessage","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var payload: Data","path":"\/documentation\/moqthaishinkit\/moqtcontrolmessage\/payload","type":"property"},{"type":"property","title":"var type: MoQTMessageType","path":"\/documentation\/moqthaishinkit\/moqtcontrolmessage\/type"}]},{"type":"groupMarker","title":"Structures"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var payload: Data","path":"\/documentation\/moqthaishinkit\/moqtannounce\/payload","type":"property"},{"path":"\/documentation\/moqthaishinkit\/moqtannounce\/subscribeparameters","title":"let subscribeParameters: [MoQTVersionSpecificParameter]","type":"property"},{"type":"property","title":"let trackNamespace: [String]","path":"\/documentation\/moqthaishinkit\/moqtannounce\/tracknamespace"},{"path":"\/documentation\/moqthaishinkit\/moqtannounce\/type","type":"property","title":"let type: MoQTMessageType"}],"type":"struct","path":"\/documentation\/moqthaishinkit\/moqtannounce","title":"MoQTAnnounce"},{"path":"\/documentation\/moqthaishinkit\/moqtannounceerror","title":"MoQTAnnounceError","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/moqthaishinkit\/moqtannounceerror\/code","title":"let code: Int","type":"property"},{"title":"var payload: Data","path":"\/documentation\/moqthaishinkit\/moqtannounceerror\/payload","type":"property"},{"type":"property","title":"let reasonPhrase: String","path":"\/documentation\/moqthaishinkit\/moqtannounceerror\/reasonphrase"},{"title":"let trackNamespace: [String]","path":"\/documentation\/moqthaishinkit\/moqtannounceerror\/tracknamespace","type":"property"},{"path":"\/documentation\/moqthaishinkit\/moqtannounceerror\/type","type":"property","title":"let type: MoQTMessageType"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtannounceerror\/error-implementations","type":"symbol","title":"Error Implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtannounceerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}]}],"type":"struct"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"title":"var payload: Data","path":"\/documentation\/moqthaishinkit\/moqtannounceok\/payload","type":"property"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtannounceok\/tracknamespace","title":"let trackNamespace: [String]"},{"title":"let type: MoQTMessageType","path":"\/documentation\/moqthaishinkit\/moqtannounceok\/type","type":"property"}],"title":"MoQTAnnounceOk","path":"\/documentation\/moqthaishinkit\/moqtannounceok","type":"struct"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/moqthaishinkit\/moqtgoaway\/newsessionuri","type":"property","title":"let newSessionURI: String"},{"type":"property","title":"var payload: Data","path":"\/documentation\/moqthaishinkit\/moqtgoaway\/payload"},{"type":"property","title":"let type: MoQTMessageType","path":"\/documentation\/moqthaishinkit\/moqtgoaway\/type"}],"type":"struct","title":"MoQTGoaway","path":"\/documentation\/moqthaishinkit\/moqtgoaway"},{"title":"MoQTObject","children":[{"title":"Initializers","type":"groupMarker"},{"type":"init","title":"init(id: Int, status: Int?, data: Data)","path":"\/documentation\/moqthaishinkit\/moqtobject\/init(id:status:data:)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"let data: Data","path":"\/documentation\/moqthaishinkit\/moqtobject\/data"},{"title":"let id: Int","path":"\/documentation\/moqthaishinkit\/moqtobject\/id","type":"property"},{"type":"property","title":"let status: Int?","path":"\/documentation\/moqthaishinkit\/moqtobject\/status"}],"path":"\/documentation\/moqthaishinkit\/moqtobject","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtserversetup\/payload","title":"var payload: Data","type":"property"},{"path":"\/documentation\/moqthaishinkit\/moqtserversetup\/selectedversion","type":"property","title":"let selectedVersion: Int"},{"type":"property","title":"let setupParameters: [MoQTSetupParameter]","path":"\/documentation\/moqthaishinkit\/moqtserversetup\/setupparameters"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtserversetup\/type","title":"let type: MoQTMessageType"}],"type":"struct","title":"MoQTServerSetup","path":"\/documentation\/moqthaishinkit\/moqtserversetup"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"let key: MoQTSetupParameterType","path":"\/documentation\/moqthaishinkit\/moqtsetupparameter\/key"},{"type":"property","title":"let value: (any Sendable)","path":"\/documentation\/moqthaishinkit\/moqtsetupparameter\/value"}],"type":"struct","title":"MoQTSetupParameter","path":"\/documentation\/moqthaishinkit\/moqtsetupparameter"},{"path":"\/documentation\/moqthaishinkit\/moqtstreamheadersubgroup","title":"MoQTStreamHeaderSubgroup","type":"struct","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtstreamheadersubgroup\/init(trackalias:groupid:subgroupid:publisherpriority:)","type":"init","title":"init(trackAlias: Int, groupId: Int, subgroupId: Int, publisherPriority: Int)"},{"title":"Instance Properties","type":"groupMarker"},{"type":"property","title":"let groupId: Int","path":"\/documentation\/moqthaishinkit\/moqtstreamheadersubgroup\/groupid"},{"title":"var payload: Data","type":"property","path":"\/documentation\/moqthaishinkit\/moqtstreamheadersubgroup\/payload"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtstreamheadersubgroup\/publisherpriority","title":"let publisherPriority: Int"},{"title":"let subgroupId: Int","path":"\/documentation\/moqthaishinkit\/moqtstreamheadersubgroup\/subgroupid","type":"property"},{"path":"\/documentation\/moqthaishinkit\/moqtstreamheadersubgroup\/trackalias","type":"property","title":"let trackAlias: Int"},{"path":"\/documentation\/moqthaishinkit\/moqtstreamheadersubgroup\/type","type":"property","title":"let type: MoQTDataStreamType"}]},{"title":"MoQTSubscribe","path":"\/documentation\/moqthaishinkit\/moqtsubscribe","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/endgroup","type":"property","title":"let endGroup: Int?"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/endobject","title":"let endObject: Int?","type":"property"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.property","title":"let filterType: MoQTSubscribe.FilterType","type":"property"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.property","title":"let groupOrder: MoQTSubscribe.GroupOrder"},{"title":"var payload: Data","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/payload","type":"property"},{"title":"let startGroup: Int?","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/startgroup","type":"property"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/startobject","type":"property","title":"let startObject: Int?"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/subscribeid","title":"let subscribeId: Int","type":"property"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/subscribeparameters","title":"let subscribeParameters: [MoQTVersionSpecificParameter]"},{"title":"let subscribePriority: Int","type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/subscribepriority"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/trackalias","title":"let trackAlias: Int","type":"property"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/trackname","type":"property","title":"let trackName: String"},{"title":"let trackNamespace: [String]","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/tracknamespace","type":"property"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/type","title":"let type: MoQTMessageType"},{"title":"Enumerations","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum","title":"MoQTSubscribe.FilterType","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case absoluteRange","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/absoluterange","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/absolutestart","title":"case absoluteStart","type":"case"},{"type":"case","title":"case latestGroup","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/latestgroup"},{"title":"case latestObject","type":"case","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/latestobject"},{"title":"Initializers","type":"groupMarker"},{"type":"init","title":"init?(rawValue: Int)","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/init(rawvalue:)"},{"type":"groupMarker","title":"Default Implementations"},{"title":"Equatable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/!=(_:_:)","type":"op"}],"type":"symbol","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/equatable-implementations"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"type":"symbol"}],"type":"enum"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"type":"case","title":"case ascending","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/ascending"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/descending","title":"case descending","type":"case"},{"type":"case","title":"case original","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/original"},{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/init(rawvalue:)","title":"init?(rawValue: Int)"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/equatable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/!=(_:_:)","type":"op"}],"title":"Equatable Implementations"},{"title":"RawRepresentable Implementations","type":"symbol","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/rawrepresentable-implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var hashValue: Int","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/hashvalue"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func hash(into: inout Hasher)","type":"method","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/hash(into:)"}]}],"title":"MoQTSubscribe.GroupOrder","type":"enum"}],"type":"struct"},{"title":"MoQTSubscribeAnnounces","children":[{"title":"Instance Properties","type":"groupMarker"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounces\/parameters","title":"let parameters: [MoQTVersionSpecificParameter]"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounces\/payload","title":"var payload: Data","type":"property"},{"title":"let trackNamespacePrefix: [String]","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounces\/tracknamespaceprefix","type":"property"},{"type":"property","title":"let type: MoQTMessageType","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounces\/type"}],"path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounces","type":"struct"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounceserror","type":"struct","children":[{"title":"Instance Properties","type":"groupMarker"},{"type":"property","title":"let errorCode: Int","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounceserror\/errorcode"},{"type":"property","title":"var payload: Data","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounceserror\/payload"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounceserror\/reasonphrase","type":"property","title":"let reasonPhrase: String"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounceserror\/tracknamespaceprefix","title":"let trackNamespacePrefix: [String]","type":"property"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounceserror\/type","title":"let type: MoQTMessageType","type":"property"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","title":"Error Implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var localizedDescription: String","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounceserror\/localizeddescription"}],"path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounceserror\/error-implementations"}],"title":"MoQTSubscribeAnnouncesError"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var payload: Data","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannouncesok\/payload"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeannouncesok\/tracknamespaceprefix","title":"let trackNamespacePrefix: [String]","type":"property"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeannouncesok\/type","type":"property","title":"let type: MoQTMessageType"}],"path":"\/documentation\/moqthaishinkit\/moqtsubscribeannouncesok","title":"MoQTSubscribeAnnouncesOk","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror\/code","title":"let code: Int","type":"property"},{"title":"var payload: Data","path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror\/payload","type":"property"},{"type":"property","title":"let reasonPhrase: String","path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror\/reasonphrase"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror\/subscribeid","title":"let subscribeId: Int"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror\/trackalias","type":"property","title":"let trackAlias: Int"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror\/type","type":"property","title":"let type: MoQTMessageType"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror\/localizeddescription","type":"property","title":"var localizedDescription: String"}],"title":"Error Implementations","path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror\/error-implementations"}],"title":"MoQTSubscribeError","type":"struct","path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror"},{"type":"struct","path":"\/documentation\/moqthaishinkit\/moqtsubscribeok","title":"MoQTSubscribeOk","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"let contentExists: Bool","type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/contentexists"},{"title":"let expires: Int","path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/expires","type":"property"},{"type":"property","title":"let groupOrder: MoQTSubscribe.GroupOrder","path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/grouporder"},{"title":"let largestGroupId: Int?","path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/largestgroupid","type":"property"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/largestobjectid","title":"let largestObjectId: Int?","type":"property"},{"title":"var payload: Data","type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/payload"},{"type":"property","title":"let subscribeId: Int","path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/subscribeid"},{"type":"property","title":"let subscribeParameters: [MoQTVersionSpecificParameter]","path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/subscribeparameters"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/type","type":"property","title":"let type: MoQTMessageType"}]},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"type":"property","title":"let key: MoQTVersionSpecificType","path":"\/documentation\/moqthaishinkit\/moqtversionspecificparameter\/key"},{"type":"property","title":"let value: (any Sendable)","path":"\/documentation\/moqthaishinkit\/moqtversionspecificparameter\/value"}],"path":"\/documentation\/moqthaishinkit\/moqtversionspecificparameter","type":"struct","title":"MoQTVersionSpecificParameter"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Enumeration Cases"},{"title":"case fetchHeader","path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/fetchheader","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/objectdatagram","type":"case","title":"case objectDatagram"},{"title":"case streamHeaderSubgroup","path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/streamheadersubgroup","type":"case"},{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/!=(_:_:)","type":"op"}],"path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"type":"property","title":"var hashValue: Int","path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/hashvalue"},{"type":"groupMarker","title":"Instance Methods"},{"title":"func hash(into: inout Hasher)","path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/hash(into:)","type":"method"}],"path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/rawrepresentable-implementations","title":"RawRepresentable Implementations"}],"title":"MoQTDataStreamType","path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case announce","type":"case","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/announce"},{"type":"case","title":"case announceCancel","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/announcecancel"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/announceerror","title":"case announceError","type":"case"},{"title":"case announceOk","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/announceok","type":"case"},{"title":"case clientSetup","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/clientsetup","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/goaway","title":"case goaway","type":"case"},{"type":"case","title":"case serverSetup","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/serversetup"},{"title":"case subscribe","type":"case","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/subscribe"},{"title":"case subscribeAnnounuces","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/subscribeannounuces","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/subscribeannounuceserror","title":"case subscribeAnnounucesError","type":"case"},{"title":"case subscribeAnnounucesOk","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/subscribeannounucesok","type":"case"},{"title":"case subscribeDone","type":"case","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/subscribedone"},{"type":"case","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/subscribeerror","title":"case subscribeError"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/subscribeok","title":"case subscribeOk","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/subscribeupdate","title":"case subscribeUpdate","type":"case"},{"type":"case","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/trackstatus","title":"case trackStatus"},{"title":"case trackStatusRequest","type":"case","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/trackstatusrequest"},{"title":"case unannounce","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/unannounce","type":"case"},{"type":"case","title":"case unsubscribe","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/unsubscribe"},{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/equatable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/!=(_:_:)","type":"op"}],"title":"Equatable Implementations","type":"symbol"},{"title":"RawRepresentable Implementations","type":"symbol","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/rawrepresentable-implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/hashvalue","title":"var hashValue: Int"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/hash(into:)","type":"method","title":"func hash(into: inout Hasher)"}]}],"type":"enum","path":"\/documentation\/moqthaishinkit\/moqtmessagetype","title":"MoQTMessageType"},{"path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case maxSubscribeId","path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/maxsubscribeid","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/path","type":"case","title":"case path"},{"type":"case","title":"case role","path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/role"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/init(rawvalue:)","type":"init","title":"init?(rawValue: Int)"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/equatable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"title":"Equatable Implementations","type":"symbol"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/hashvalue","title":"var hashValue: Int"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"title":"RawRepresentable Implementations","type":"symbol","path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/rawrepresentable-implementations"}],"type":"enum","title":"MoQTSetupParameterType"},{"type":"enum","path":"\/documentation\/moqthaishinkit\/moqtsetuprole","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case pubSub","path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/pubsub","type":"case"},{"title":"case publisher","path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/publisher","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/subscriber","type":"case","title":"case subscriber"},{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init?(rawValue: Int)","path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/init(rawvalue:)"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"title":"Equatable Implementations","path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/equatable-implementations"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"title":"var hashValue: Int","path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/hashvalue","type":"property"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func hash(into: inout Hasher)","path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/hash(into:)"}],"type":"symbol","path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/rawrepresentable-implementations","title":"RawRepresentable Implementations"}],"title":"MoQTSetupRole"},{"children":[{"type":"groupMarker","title":"Enumeration Cases"},{"title":"case draft01","type":"case","path":"\/documentation\/moqthaishinkit\/moqtversion\/draft01"},{"type":"case","title":"case draft02","path":"\/documentation\/moqthaishinkit\/moqtversion\/draft02"},{"title":"case draft03","path":"\/documentation\/moqthaishinkit\/moqtversion\/draft03","type":"case"},{"type":"case","title":"case draft04","path":"\/documentation\/moqthaishinkit\/moqtversion\/draft04"},{"path":"\/documentation\/moqthaishinkit\/moqtversion\/draft05","type":"case","title":"case draft05"},{"path":"\/documentation\/moqthaishinkit\/moqtversion\/draft06","type":"case","title":"case draft06"},{"path":"\/documentation\/moqthaishinkit\/moqtversion\/draft07","title":"case draft07","type":"case"},{"title":"case draft07Exp","path":"\/documentation\/moqthaishinkit\/moqtversion\/draft07exp","type":"case"},{"type":"case","path":"\/documentation\/moqthaishinkit\/moqtversion\/draft07exp2","title":"case draft07Exp2"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: Int)","type":"init","path":"\/documentation\/moqthaishinkit\/moqtversion\/init(rawvalue:)"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/moqthaishinkit\/moqtversion\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}],"path":"\/documentation\/moqthaishinkit\/moqtversion\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"path":"\/documentation\/moqthaishinkit\/moqtversion\/rawrepresentable-implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtversion\/hashvalue","title":"var hashValue: Int"},{"type":"groupMarker","title":"Instance Methods"},{"title":"func hash(into: inout Hasher)","type":"method","path":"\/documentation\/moqthaishinkit\/moqtversion\/hash(into:)"}],"title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/moqthaishinkit\/moqtversion","type":"enum","title":"MoQTVersion"},{"type":"enum","path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype","title":"MoQTVersionSpecificType","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case authorizationInfo","path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/authorizationinfo","type":"case"},{"title":"case deliveryTimeout","path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/deliverytimeout","type":"case"},{"title":"case maxCacheDuration","type":"case","path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/maxcacheduration"},{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/init(rawvalue:)","type":"init","title":"init?(rawValue: Int)"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/equatable-implementations","title":"Equatable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"type":"symbol"},{"title":"RawRepresentable Implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/hashvalue","title":"var hashValue: Int"},{"title":"Instance Methods","type":"groupMarker"},{"type":"method","path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/hash(into:)","title":"func hash(into: inout Hasher)"}],"type":"symbol","path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/rawrepresentable-implementations"}]}],"title":"MoQTHaishinKit","path":"\/documentation\/moqthaishinkit"},{"type":"module","children":[{"type":"groupMarker","title":"Classes"},{"path":"\/documentation\/srthaishinkit\/srtconnection","type":"class","title":"SRTConnection","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init()","path":"\/documentation\/srthaishinkit\/srtconnection\/init()","type":"init"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var connected: Bool","path":"\/documentation\/srthaishinkit\/srtconnection\/connected"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtconnection\/performancedata","title":"var performanceData: SRTPerformanceData?"},{"title":"var uri: URL?","path":"\/documentation\/srthaishinkit\/srtconnection\/uri","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func close() async","path":"\/documentation\/srthaishinkit\/srtconnection\/close()","type":"method"},{"type":"method","path":"\/documentation\/srthaishinkit\/srtconnection\/connect(_:)","title":"func connect(URL?) async throws"},{"path":"\/documentation\/srthaishinkit\/srtconnection\/open(_:mode:)","type":"method","title":"func open(URL?, mode: SRTMode) async throws"},{"title":"Type Properties","type":"groupMarker"},{"type":"property","title":"static let version: String","path":"\/documentation\/srthaishinkit\/srtconnection\/version"},{"type":"groupMarker","title":"Enumerations"},{"type":"enum","path":"\/documentation\/srthaishinkit\/srtconnection\/error","title":"SRTConnection.Error","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","path":"\/documentation\/srthaishinkit\/srtconnection\/error\/failedtoconnect(_:reson:)","title":"case failedToConnect(String, reson: Int32)"},{"type":"case","title":"case invalidState","path":"\/documentation\/srthaishinkit\/srtconnection\/error\/invalidstate"},{"type":"case","title":"case unsupportedUri(URL?)","path":"\/documentation\/srthaishinkit\/srtconnection\/error\/unsupporteduri(_:)"},{"type":"groupMarker","title":"Default Implementations"},{"title":"Error Implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var localizedDescription: String","path":"\/documentation\/srthaishinkit\/srtconnection\/error\/localizeddescription","type":"property"}],"type":"symbol","path":"\/documentation\/srthaishinkit\/srtconnection\/error\/error-implementations"}]},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"type":"method","path":"\/documentation\/srthaishinkit\/srtconnection\/assertisolated(_:file:line:)","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)"},{"title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","type":"method","path":"\/documentation\/srthaishinkit\/srtconnection\/assumeisolated(_:file:line:)"},{"path":"\/documentation\/srthaishinkit\/srtconnection\/preconditionisolated(_:file:line:)","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method"}],"title":"Actor Implementations","type":"symbol","path":"\/documentation\/srthaishinkit\/srtconnection\/actor-implementations"}]},{"title":"SRTLogger","type":"class","path":"\/documentation\/srthaishinkit\/srtlogger","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/srthaishinkit\/srtlogger\/functionalareas","title":"var functionalAreas: Set<SRTLogFunctionalArea>","type":"property"},{"title":"var level: SRTLogLevel","type":"property","path":"\/documentation\/srthaishinkit\/srtlogger\/level"},{"title":"Instance Methods","type":"groupMarker"},{"type":"method","path":"\/documentation\/srthaishinkit\/srtlogger\/setfunctionalareas(_:)","title":"func setFunctionalAreas(Set<SRTLogFunctionalArea>)"},{"type":"method","title":"func setLevel(SRTLogLevel)","path":"\/documentation\/srthaishinkit\/srtlogger\/setlevel(_:)"},{"title":"Type Properties","type":"groupMarker"},{"title":"static let shared: SRTLogger","type":"property","path":"\/documentation\/srthaishinkit\/srtlogger\/shared"},{"title":"Default Implementations","type":"groupMarker"},{"type":"symbol","title":"Actor Implementations","path":"\/documentation\/srthaishinkit\/srtlogger\/actor-implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/srthaishinkit\/srtlogger\/assertisolated(_:file:line:)","type":"method"},{"title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","path":"\/documentation\/srthaishinkit\/srtlogger\/assumeisolated(_:file:line:)","type":"method"},{"path":"\/documentation\/srthaishinkit\/srtlogger\/preconditionisolated(_:file:line:)","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method"}]}]},{"type":"class","path":"\/documentation\/srthaishinkit\/srtstream","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init(connection: SRTConnection)","path":"\/documentation\/srthaishinkit\/srtstream\/init(connection:)"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/srthaishinkit\/srtstream\/audiotrackid","type":"property","title":"var audioTrackId: UInt8?"},{"path":"\/documentation\/srthaishinkit\/srtstream\/readystate","type":"property","title":"var readyState: HKStreamReadyState"},{"title":"var videoTrackId: UInt8?","type":"property","path":"\/documentation\/srthaishinkit\/srtstream\/videotrackid"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/srthaishinkit\/srtstream\/close()","type":"method","title":"func close() async"},{"path":"\/documentation\/srthaishinkit\/srtstream\/play(_:)","type":"method","title":"func play(String?) async"},{"title":"func publish(String?) async","path":"\/documentation\/srthaishinkit\/srtstream\/publish(_:)","type":"method"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"type":"groupMarker","title":"Instance Methods"},{"title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/srthaishinkit\/srtstream\/assertisolated(_:file:line:)","type":"method"},{"path":"\/documentation\/srthaishinkit\/srtstream\/assumeisolated(_:file:line:)","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","type":"method"},{"title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/srthaishinkit\/srtstream\/preconditionisolated(_:file:line:)","type":"method"}],"type":"symbol","path":"\/documentation\/srthaishinkit\/srtstream\/actor-implementations","title":"Actor Implementations"},{"type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var audioSettings: AudioCodecSettings","type":"property","path":"\/documentation\/srthaishinkit\/srtstream\/audiosettings"},{"type":"property","title":"var soundTransform: SoundTransform?","path":"\/documentation\/srthaishinkit\/srtstream\/soundtransform"},{"path":"\/documentation\/srthaishinkit\/srtstream\/videosettings","type":"property","title":"var videoSettings: VideoCodecSettings"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func addOutput(some HKStreamOutput)","path":"\/documentation\/srthaishinkit\/srtstream\/addoutput(_:)","type":"method"},{"title":"func append(CMSampleBuffer)","path":"\/documentation\/srthaishinkit\/srtstream\/append(_:)","type":"method"},{"type":"method","path":"\/documentation\/srthaishinkit\/srtstream\/append(_:when:)","title":"func append(AVAudioBuffer, when: AVAudioTime)"},{"path":"\/documentation\/srthaishinkit\/srtstream\/attachaudioplayer(_:)","type":"method","title":"func attachAudioPlayer(AudioPlayer?) async"},{"type":"method","title":"func dispatch(NetworkMonitorEvent) async","path":"\/documentation\/srthaishinkit\/srtstream\/dispatch(_:)"},{"path":"\/documentation\/srthaishinkit\/srtstream\/removeoutput(_:)","type":"method","title":"func removeOutput(some HKStreamOutput)"},{"title":"func setAudioSettings(AudioCodecSettings)","path":"\/documentation\/srthaishinkit\/srtstream\/setaudiosettings(_:)","type":"method"},{"title":"func setBitrateStorategy((some HKStreamBitRateStrategy)?)","path":"\/documentation\/srthaishinkit\/srtstream\/setbitratestorategy(_:)","type":"method"},{"title":"func setSoundTransform(SoundTransform) async","path":"\/documentation\/srthaishinkit\/srtstream\/setsoundtransform(_:)","type":"method"},{"path":"\/documentation\/srthaishinkit\/srtstream\/setvideoinputbuffercounts(_:)","title":"func setVideoInputBufferCounts(Int)","type":"method"},{"path":"\/documentation\/srthaishinkit\/srtstream\/setvideosettings(_:)","title":"func setVideoSettings(VideoCodecSettings)","type":"method"}],"title":"HKStream Implementations","path":"\/documentation\/srthaishinkit\/srtstream\/hkstream-implementations"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/srthaishinkit\/srtstream\/mixer(_:didoutput:)","type":"method","title":"func mixer(MediaMixer, didOutput: CMSampleBuffer)"},{"title":"func mixer(MediaMixer, didOutput: AVAudioPCMBuffer, when: AVAudioTime)","type":"method","path":"\/documentation\/srthaishinkit\/srtstream\/mixer(_:didoutput:when:)"},{"path":"\/documentation\/srthaishinkit\/srtstream\/selecttrack(_:mediatype:)","title":"func selectTrack(UInt8?, mediaType: CMFormatDescription.MediaType)","type":"method"}],"type":"symbol","title":"MediaMixerOutput Implementations","path":"\/documentation\/srthaishinkit\/srtstream\/mediamixeroutput-implementations"}],"title":"SRTStream"},{"title":"Structures","type":"groupMarker"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata","type":"struct","title":"SRTPerformanceData","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"let byteAvailRcvBuf: Int32","type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/byteavailrcvbuf"},{"title":"let byteAvailSndBuf: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/byteavailsndbuf","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytemss","type":"property","title":"let byteMSS: Int32"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytercvbuf","type":"property","title":"let byteRcvBuf: Int32"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytercvdrop","title":"let byteRcvDrop: UInt64","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytercvdroptotal","title":"let byteRcvDropTotal: UInt64","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytercvloss","title":"let byteRcvLoss: UInt64","type":"property"},{"title":"let byteRcvLossTotal: UInt64","type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytercvlosstotal"},{"title":"let byteRcvUndecrypt: UInt64","type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytercvundecrypt"},{"title":"let byteRcvUndecryptTotal: UInt64","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytercvundecrypttotal","type":"property"},{"title":"let byteRecv: UInt64","type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/byterecv"},{"title":"let byteRecvTotal: UInt64","path":"\/documentation\/srthaishinkit\/srtperformancedata\/byterecvtotal","type":"property"},{"title":"let byteRetrans: UInt64","type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/byteretrans"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/byteretranstotal","type":"property","title":"let byteRetransTotal: UInt64"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytesent","title":"let byteSent: UInt64","type":"property"},{"title":"let byteSentTotal: UInt64","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytesenttotal","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytesndbuf","title":"let byteSndBuf: Int32","type":"property"},{"type":"property","title":"let byteSndDrop: UInt64","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytesnddrop"},{"title":"let byteSndDropTotal: UInt64","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytesnddroptotal","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/mbpsbandwidth","type":"property","title":"let mbpsBandwidth: Double"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/mbpsmaxbw","title":"let mbpsMaxBW: Double"},{"title":"let mbpsRecvRate: Double","path":"\/documentation\/srthaishinkit\/srtperformancedata\/mbpsrecvrate","type":"property"},{"type":"property","title":"let mbpsSendRate: Double","path":"\/documentation\/srthaishinkit\/srtperformancedata\/mbpssendrate"},{"title":"let msRTT: Double","type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/msrtt"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/msrcvbuf","title":"let msRcvBuf: Int32","type":"property"},{"title":"let msRcvTsbPdDelay: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/msrcvtsbpddelay","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/mssndbuf","title":"let msSndBuf: Int32","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/mssndtsbpddelay","type":"property","title":"let msSndTsbPdDelay: Int32"},{"type":"property","title":"let msTimeStamp: Int64","path":"\/documentation\/srthaishinkit\/srtperformancedata\/mstimestamp"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktcongestionwindow","title":"let pktCongestionWindow: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktflightsize","title":"let pktFlightSize: Int32"},{"title":"let pktFlowWindow: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktflowwindow","type":"property"},{"title":"let pktRcvAvgBelatedTime: Double","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvavgbelatedtime","type":"property"},{"type":"property","title":"let pktRcvBelated: Int64","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvbelated"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvbuf","type":"property","title":"let pktRcvBuf: Int32"},{"title":"let pktRcvDrop: Int32","type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvdrop"},{"title":"let pktRcvDropTotal: Int32","type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvdroptotal"},{"type":"property","title":"let pktRcvFilterExtra: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvfilterextra"},{"type":"property","title":"let pktRcvFilterExtraTotal: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvfilterextratotal"},{"type":"property","title":"let pktRcvFilterLoss: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvfilterloss"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvfilterlosstotal","title":"let pktRcvFilterLossTotal: Int32","type":"property"},{"type":"property","title":"let pktRcvFilterSupply: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvfiltersupply"},{"type":"property","title":"let pktRcvFilterSupplyTotal: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvfiltersupplytotal"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvloss","title":"let pktRcvLoss: Int32","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvlosstotal","type":"property","title":"let pktRcvLossTotal: Int32"},{"title":"let pktRcvRetrans: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvretrans","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvundecrypt","type":"property","title":"let pktRcvUndecrypt: Int32"},{"title":"let pktRcvUndecryptTotal: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvundecrypttotal","type":"property"},{"title":"let pktRecv: Int64","type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrecv"},{"title":"let pktRecvACK: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrecvack","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrecvacktotal","type":"property","title":"let pktRecvACKTotal: Int32"},{"type":"property","title":"let pktRecvNAK: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrecvnak"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrecvnaktotal","type":"property","title":"let pktRecvNAKTotal: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrecvtotal","title":"let pktRecvTotal: Int64"},{"title":"let pktReorderDistance: Int32","type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktreorderdistance"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktreordertolerance","type":"property","title":"let pktReorderTolerance: Int32"},{"type":"property","title":"let pktRetrans: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktretrans"},{"type":"property","title":"let pktRetransTotal: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktretranstotal"},{"type":"property","title":"let pktSent: Int64","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsent"},{"type":"property","title":"let pktSentACK: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsentack"},{"title":"let pktSentACKTotal: Int32","type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsentacktotal"},{"title":"let pktSentNAK: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsentnak","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsentnaktotal","type":"property","title":"let pktSentNAKTotal: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsenttotal","title":"let pktSentTotal: Int64"},{"type":"property","title":"let pktSndBuf: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsndbuf"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsnddrop","type":"property","title":"let pktSndDrop: Int32"},{"title":"let pktSndDropTotal: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsnddroptotal","type":"property"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsndfilterextra","title":"let pktSndFilterExtra: Int32"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsndfilterextratotal","type":"property","title":"let pktSndFilterExtraTotal: Int32"},{"type":"property","title":"let pktSndLoss: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsndloss"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsndlosstotal","type":"property","title":"let pktSndLossTotal: Int32"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/uspktsndperiod","type":"property","title":"let usPktSndPeriod: Double"},{"title":"let usSndDuration: Int64","path":"\/documentation\/srthaishinkit\/srtperformancedata\/ussndduration","type":"property"},{"title":"let usSndDurationTotal: Int64","type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/ussnddurationtotal"}]},{"type":"groupMarker","title":"Enumerations"},{"type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/apictrl","type":"case","title":"case apiCtrl"},{"title":"case apiRecv","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/apirecv","type":"case"},{"title":"case apiSend","type":"case","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/apisend"},{"title":"case applog","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/applog","type":"case"},{"title":"case bstats","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/bstats","type":"case"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/bufrecv","type":"case","title":"case bufRecv"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/bufsend","type":"case","title":"case bufSend"},{"type":"case","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/chanrecv","title":"case chanRecv"},{"title":"case chnMgmt","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/chnmgmt","type":"case"},{"title":"case chnSend","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/chnsend","type":"case"},{"title":"case congest","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/congest","type":"case"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/control","title":"case control","type":"case"},{"type":"case","title":"case data","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/data"},{"type":"case","title":"case epollApi","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/epollapi"},{"title":"case epollUpd","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/epollupd","type":"case"},{"title":"case general","type":"case","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/general"},{"title":"case grpMgmt","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/grpmgmt","type":"case"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/grprecv","type":"case","title":"case grpRecv"},{"type":"case","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/grpsend","title":"case grpSend"},{"title":"case haicrypt","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/haicrypt","type":"case"},{"title":"case `internal`","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/internal","type":"case"},{"type":"case","title":"case pfilter","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/pfilter"},{"type":"case","title":"case queCtrl","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/quectrl"},{"title":"case queMgmt","type":"case","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/quemgmt"},{"type":"case","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/querecv","title":"case queRecv"},{"type":"case","title":"case queSend","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/quesend"},{"title":"case rsrc","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/rsrc","type":"case"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/tsbpd","type":"case","title":"case tsbpd"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: Int32)","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/init(rawvalue:)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"type":"op","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"}],"type":"symbol","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/equatable-implementations"},{"type":"symbol","title":"RawRepresentable Implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/hashvalue","type":"property","title":"var hashValue: Int"},{"title":"Instance Methods","type":"groupMarker"},{"type":"method","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/hash(into:)","title":"func hash(into: inout Hasher)"}],"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/rawrepresentable-implementations"}],"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea","title":"SRTLogFunctionalArea"},{"path":"\/documentation\/srthaishinkit\/srtloglevel","title":"SRTLogLevel","type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"title":"case crit","path":"\/documentation\/srthaishinkit\/srtloglevel\/crit","type":"case"},{"type":"case","title":"case debug","path":"\/documentation\/srthaishinkit\/srtloglevel\/debug"},{"path":"\/documentation\/srthaishinkit\/srtloglevel\/error","type":"case","title":"case error"},{"path":"\/documentation\/srthaishinkit\/srtloglevel\/notice","type":"case","title":"case notice"},{"type":"case","title":"case warning","path":"\/documentation\/srthaishinkit\/srtloglevel\/warning"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/srthaishinkit\/srtloglevel\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/srthaishinkit\/srtloglevel\/!=(_:_:)","type":"op"}],"title":"Equatable Implementations","type":"symbol"}]},{"path":"\/documentation\/srthaishinkit\/srtmode","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"title":"case caller","path":"\/documentation\/srthaishinkit\/srtmode\/caller","type":"case"},{"title":"case listener","path":"\/documentation\/srthaishinkit\/srtmode\/listener","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/srthaishinkit\/srtmode\/init(rawvalue:)","type":"init","title":"init?(rawValue: String)"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/srthaishinkit\/srtmode\/equatable-implementations","title":"Equatable Implementations","type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/srthaishinkit\/srtmode\/!=(_:_:)"}]},{"title":"RawRepresentable Implementations","path":"\/documentation\/srthaishinkit\/srtmode\/rawrepresentable-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Properties"},{"title":"var hashValue: Int","path":"\/documentation\/srthaishinkit\/srtmode\/hashvalue","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"type":"method","path":"\/documentation\/srthaishinkit\/srtmode\/hash(into:)","title":"func hash(into: inout Hasher)"}]}],"type":"enum","title":"SRTMode"}],"path":"\/documentation\/srthaishinkit","title":"SRTHaishinKit"}]},"schemaVersion":{"patch":2,"major":0,"minor":1},"includedArchiveIdentifiers":["Logboard","HaishinKit","MoQTHaishinKit","SRTHaishinKit"]}