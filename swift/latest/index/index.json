{"schemaVersion":{"major":0,"minor":1,"patch":2},"includedArchiveIdentifiers":["Logboard","HaishinKit","SRTHaishinKit","MoQTHaishinKit","RTMPHaishinKit"],"interfaceLanguages":{"swift":[{"type":"module","title":"HaishinKit","path":"\/documentation","children":[{"children":[{"title":"Classes","type":"groupMarker"},{"title":"ConsoleAppender","path":"\/documentation\/logboard\/consoleappender","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/logboard\/consoleappender\/init()","title":"init()"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/logboard\/consoleappender\/append(_:level:format:arguments:file:function:line:)","title":"func append(LBLogger, level: LBLogger.Level, format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)"},{"type":"method","path":"\/documentation\/logboard\/consoleappender\/append(_:level:message:file:function:line:)","title":"func append(LBLogger, level: LBLogger.Level, message: [Any], file: StaticString, function: StaticString, line: Int)"}],"type":"class"},{"title":"LBLogger","path":"\/documentation\/logboard\/lblogger","children":[{"title":"Structures","type":"groupMarker"},{"path":"\/documentation\/logboard\/lblogger\/data","title":"LBLogger.Data","type":"struct","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init?(Data)","path":"\/documentation\/logboard\/lblogger\/data\/init(_:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let date: Date","path":"\/documentation\/logboard\/lblogger\/data\/date","type":"property"},{"title":"let file: String","path":"\/documentation\/logboard\/lblogger\/data\/file","type":"property"},{"title":"let function: String","path":"\/documentation\/logboard\/lblogger\/data\/function","type":"property"},{"title":"let identifier: String","path":"\/documentation\/logboard\/lblogger\/data\/identifier","type":"property"},{"title":"let level: LBLogger.Level","path":"\/documentation\/logboard\/lblogger\/data\/level","type":"property"},{"title":"let line: Int","path":"\/documentation\/logboard\/lblogger\/data\/line","type":"property"},{"title":"let message: String","path":"\/documentation\/logboard\/lblogger\/data\/message","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/logboard\/lblogger\/data\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/logboard\/lblogger\/data\/description","title":"var description: String","type":"property"}]}]},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/logboard\/lblogger\/init(_:)","title":"init(String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/logboard\/lblogger\/appender","title":"var appender: any LBLoggerAppender","type":"property"},{"path":"\/documentation\/logboard\/lblogger\/identifier","title":"let identifier: String","type":"property"},{"path":"\/documentation\/logboard\/lblogger\/level-swift.property","title":"var level: LBLogger.Level","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/logboard\/lblogger\/debug(_:file:function:line:)","title":"func debug(Any..., file: StaticString, function: StaticString, line: Int)","type":"method"},{"path":"\/documentation\/logboard\/lblogger\/debug(format:arguments:file:function:line:)","title":"func debug(format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)","type":"method"},{"path":"\/documentation\/logboard\/lblogger\/error(_:file:function:line:)","title":"func error(Any..., file: StaticString, function: StaticString, line: Int)","type":"method"},{"path":"\/documentation\/logboard\/lblogger\/error(format:arguments:file:function:line:)","title":"func error(format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)","type":"method"},{"path":"\/documentation\/logboard\/lblogger\/info(_:file:function:line:)","type":"method","title":"func info(Any..., file: StaticString, function: StaticString, line: Int)"},{"path":"\/documentation\/logboard\/lblogger\/info(format:arguments:file:function:line:)","type":"method","title":"func info(format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)"},{"path":"\/documentation\/logboard\/lblogger\/isenabledfor(level:)","type":"method","title":"func isEnabledFor(level: LBLogger.Level) -> Bool"},{"path":"\/documentation\/logboard\/lblogger\/trace(_:file:function:line:)","type":"method","title":"func trace(Any..., file: StaticString, function: StaticString, line: Int)"},{"path":"\/documentation\/logboard\/lblogger\/trace(format:arguments:file:function:line:)","type":"method","title":"func trace(format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)"},{"path":"\/documentation\/logboard\/lblogger\/warn(_:file:function:line:)","type":"method","title":"func warn(Any..., file: StaticString, function: StaticString, line: Int)"},{"path":"\/documentation\/logboard\/lblogger\/warn(format:arguments:file:function:line:)","type":"method","title":"func warn(format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)"},{"type":"groupMarker","title":"Type Properties"},{"path":"\/documentation\/logboard\/lblogger\/dateformatter","type":"property","title":"static var dateFormatter: DateFormatter"},{"type":"groupMarker","title":"Type Methods"},{"path":"\/documentation\/logboard\/lblogger\/with(_:)","type":"method","title":"static func with(String) -> LBLogger"},{"type":"groupMarker","title":"Enumerations"},{"path":"\/documentation\/logboard\/lblogger\/level-swift.enum","type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case debug","path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/debug","type":"case"},{"title":"case error","path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/error","type":"case"},{"title":"case info","path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/info","type":"case"},{"title":"case trace","path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/trace","type":"case"},{"title":"case warn","path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/warn","type":"case"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: Int)","type":"init","path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/init(rawvalue:)"},{"title":"init?(string: String)","type":"init","path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/init(string:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var description: String","type":"property","path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/description"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/equatable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}],"type":"symbol"},{"title":"RawRepresentable Implementations","path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/rawrepresentable-implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"type":"symbol"}],"title":"LBLogger.Level"}],"type":"class"},{"type":"class","path":"\/documentation\/logboard\/multiappender","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/logboard\/multiappender\/init()","type":"init","title":"init()"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/logboard\/multiappender\/appenders","type":"property","title":"var appenders: [any LBLoggerAppender]"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/logboard\/multiappender\/append(_:level:format:arguments:file:function:line:)","type":"method","title":"func append(LBLogger, level: LBLogger.Level, format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)"},{"path":"\/documentation\/logboard\/multiappender\/append(_:level:message:file:function:line:)","type":"method","title":"func append(LBLogger, level: LBLogger.Level, message: [Any], file: StaticString, function: StaticString, line: Int)"}],"title":"MultiAppender"},{"type":"class","path":"\/documentation\/logboard\/nullappender","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/logboard\/nullappender\/append(_:level:format:arguments:file:function:line:)","title":"func append(LBLogger, level: LBLogger.Level, format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)"},{"type":"method","path":"\/documentation\/logboard\/nullappender\/append(_:level:message:file:function:line:)","title":"func append(LBLogger, level: LBLogger.Level, message: [Any], file: StaticString, function: StaticString, line: Int)"},{"type":"groupMarker","title":"Type Properties"},{"type":"property","path":"\/documentation\/logboard\/nullappender\/shared","title":"static let shared: NullAppender"}],"title":"NullAppender"},{"type":"class","path":"\/documentation\/logboard\/osloggerappender","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init(sybsystem: String, category: String)","path":"\/documentation\/logboard\/osloggerappender\/init(sybsystem:category:)"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func append(LBLogger, level: LBLogger.Level, format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/osloggerappender\/append(_:level:format:arguments:file:function:line:)"},{"type":"method","title":"func append(LBLogger, level: LBLogger.Level, message: [Any], file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/osloggerappender\/append(_:level:message:file:function:line:)"}],"title":"OSLoggerAppender"},{"type":"class","path":"\/documentation\/logboard\/socketappender","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init()","path":"\/documentation\/logboard\/socketappender\/init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func append(LBLogger, level: LBLogger.Level, format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/socketappender\/append(_:level:format:arguments:file:function:line:)","type":"method"},{"title":"func append(LBLogger, level: LBLogger.Level, message: [Any], file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/socketappender\/append(_:level:message:file:function:line:)","type":"method"},{"title":"func close()","path":"\/documentation\/logboard\/socketappender\/close()","type":"method"},{"title":"func connect(String, port: Int)","path":"\/documentation\/logboard\/socketappender\/connect(_:port:)","type":"method"}],"title":"SocketAppender"},{"type":"groupMarker","title":"Protocols"},{"type":"protocol","path":"\/documentation\/logboard\/lbloggerappender","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func append(LBLogger, level: LBLogger.Level, format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/lbloggerappender\/append(_:level:format:arguments:file:function:line:)","type":"method"},{"title":"func append(LBLogger, level: LBLogger.Level, message: [Any], file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/lbloggerappender\/append(_:level:message:file:function:line:)","type":"method"}],"title":"LBLoggerAppender"}],"title":"Logboard","path":"\/documentation\/logboard","type":"module"},{"title":"HaishinKit","path":"\/documentation\/haishinkit","children":[{"title":"Articles","type":"groupMarker"},{"title":"FAQ","path":"\/documentation\/haishinkit\/faq","type":"article"},{"title":"Offscreen rendering api.","path":"\/documentation\/haishinkit\/offscreen","type":"article"},{"title":"Classes","type":"groupMarker"},{"title":"AssetScreenObject","path":"\/documentation\/haishinkit\/assetscreenobject","type":"class","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/assetscreenobject\/chromakeycolor","type":"property","title":"var chromaKeyColor: CGColor?"},{"path":"\/documentation\/haishinkit\/assetscreenobject\/isreading","type":"property","title":"var isReading: Bool"},{"path":"\/documentation\/haishinkit\/assetscreenobject\/videogravity","type":"property","title":"var videoGravity: AVLayerVideoGravity"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/assetscreenobject\/cancelreading()","type":"method","title":"func cancelReading()"},{"path":"\/documentation\/haishinkit\/assetscreenobject\/makebounds(_:)","type":"method","title":"func makeBounds(CGSize) -> CGRect"},{"path":"\/documentation\/haishinkit\/assetscreenobject\/makeimage(_:)","type":"method","title":"func makeImage(some ScreenRenderer) -> CGImage?"},{"path":"\/documentation\/haishinkit\/assetscreenobject\/startreading(_:)","type":"method","title":"func startReading(AVAsset) throws"}]},{"title":"AudioDeviceUnit","path":"\/documentation\/haishinkit\/audiodeviceunit","type":"class","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/audiodeviceunit\/connection","type":"property","title":"var connection: AVCaptureConnection?"},{"path":"\/documentation\/haishinkit\/audiodeviceunit\/device","type":"property","title":"var device: AVCaptureDevice?"},{"path":"\/documentation\/haishinkit\/audiodeviceunit\/input","type":"property","title":"var input: AVCaptureInput?"},{"path":"\/documentation\/haishinkit\/audiodeviceunit\/output-swift.property","type":"property","title":"var output: AudioDeviceUnit.Output?"},{"path":"\/documentation\/haishinkit\/audiodeviceunit\/track","type":"property","title":"let track: UInt8"},{"type":"groupMarker","title":"Type Aliases"},{"path":"\/documentation\/haishinkit\/audiodeviceunit\/output-swift.typealias","type":"typealias","title":"AudioDeviceUnit.Output"}]},{"title":"AudioPlayer","path":"\/documentation\/haishinkit\/audioplayer","type":"class","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/audioplayer\/init(audioengine:)","title":"init(audioEngine: AVAudioEngine)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/audioplayer\/actor-implementations","title":"Actor Implementations","type":"symbol","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method","path":"\/documentation\/haishinkit\/audioplayer\/assertisolated(_:file:line:)"},{"title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","type":"method","path":"\/documentation\/haishinkit\/audioplayer\/assumeisolated(_:file:line:)"},{"title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method","path":"\/documentation\/haishinkit\/audioplayer\/preconditionisolated(_:file:line:)"}]}]},{"title":"ImageScreenObject","path":"\/documentation\/haishinkit\/imagescreenobject","type":"class","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var cgImage: CGImage?","path":"\/documentation\/haishinkit\/imagescreenobject\/cgimage","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func makeBounds(CGSize) -> CGRect","path":"\/documentation\/haishinkit\/imagescreenobject\/makebounds(_:)","type":"method"},{"title":"func makeImage(some ScreenRenderer) -> CGImage?","path":"\/documentation\/haishinkit\/imagescreenobject\/makeimage(_:)","type":"method"}]},{"title":"MTHKView","path":"\/documentation\/haishinkit\/mthkview","type":"class","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(coder: NSCoder)","path":"\/documentation\/haishinkit\/mthkview\/init(coder:)","type":"init"},{"title":"init(frame: CGRect)","path":"\/documentation\/haishinkit\/mthkview\/init(frame:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var audioTrackId: UInt8?","path":"\/documentation\/haishinkit\/mthkview\/audiotrackid","type":"property"},{"title":"var videoGravity: AVLayerVideoGravity","path":"\/documentation\/haishinkit\/mthkview\/videogravity","type":"property"},{"title":"var videoTrackId: UInt8?","path":"\/documentation\/haishinkit\/mthkview\/videotrackid","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func awakeFromNib()","path":"\/documentation\/haishinkit\/mthkview\/awakefromnib()","type":"method"},{"title":"func draw(CGRect)","path":"\/documentation\/haishinkit\/mthkview\/draw(_:)","type":"method"},{"title":"func registerVideoEffect(some VideoEffect) -> Bool","path":"\/documentation\/haishinkit\/mthkview\/registervideoeffect(_:)","type":"method"},{"title":"func unregisterVideoEffect(some VideoEffect) -> Bool","path":"\/documentation\/haishinkit\/mthkview\/unregistervideoeffect(_:)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"title":"MediaMixerOutput Implementations","children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/mthkview\/mixer(_:didoutput:)","type":"method","title":"func mixer(MediaMixer, didOutput: CMSampleBuffer)"},{"path":"\/documentation\/haishinkit\/mthkview\/mixer(_:didoutput:when:)","type":"method","title":"func mixer(MediaMixer, didOutput: AVAudioPCMBuffer, when: AVAudioTime)"},{"path":"\/documentation\/haishinkit\/mthkview\/selecttrack(_:mediatype:)","type":"method","title":"func selectTrack(UInt8?, mediaType: CMFormatDescription.MediaType) async"}],"path":"\/documentation\/haishinkit\/mthkview\/mediamixeroutput-implementations","type":"symbol"},{"title":"StreamOutput Implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/mthkview\/stream(_:didoutput:)","title":"func stream(some StreamConvertible, didOutput: CMSampleBuffer)","type":"method"},{"path":"\/documentation\/haishinkit\/mthkview\/stream(_:didoutput:when:)","title":"func stream(some StreamConvertible, didOutput: AVAudioBuffer, when: AVAudioTime)","type":"method"}],"path":"\/documentation\/haishinkit\/mthkview\/streamoutput-implementations","type":"symbol"}]},{"title":"MediaMixer","path":"\/documentation\/haishinkit\/mediamixer","type":"class","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(multiTrackAudioMixingEnabled: Bool)","path":"\/documentation\/haishinkit\/mediamixer\/init(multitrackaudiomixingenabled:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var audioInputFormats: [UInt8 : AVAudioFormat]","path":"\/documentation\/haishinkit\/mediamixer\/audioinputformats","type":"property"},{"title":"var audioMixerSettings: AudioMixerSettings","path":"\/documentation\/haishinkit\/mediamixer\/audiomixersettings","type":"property"},{"title":"var frameRate: Float64","path":"\/documentation\/haishinkit\/mediamixer\/framerate","type":"property"},{"title":"var isCapturing: Bool","path":"\/documentation\/haishinkit\/mediamixer\/iscapturing","type":"property"},{"title":"var isInterputted: AsyncStream<Bool>","path":"\/documentation\/haishinkit\/mediamixer\/isinterputted","type":"property"},{"title":"var isMonitoringEnabled: Bool","path":"\/documentation\/haishinkit\/mediamixer\/ismonitoringenabled","type":"property"},{"title":"var isMultiTrackAudioMixingEnabled: Bool","path":"\/documentation\/haishinkit\/mediamixer\/ismultitrackaudiomixingenabled","type":"property"},{"title":"var isRunning: Bool","path":"\/documentation\/haishinkit\/mediamixer\/isrunning","type":"property"},{"title":"var isTorchEnabled: Bool","path":"\/documentation\/haishinkit\/mediamixer\/istorchenabled","type":"property"},{"title":"var screen: Screen","path":"\/documentation\/haishinkit\/mediamixer\/screen","type":"property"},{"title":"var sessionPreset: AVCaptureSession.Preset","path":"\/documentation\/haishinkit\/mediamixer\/sessionpreset","type":"property"},{"title":"var videoInputFormats: [UInt8 : CMFormatDescription]","path":"\/documentation\/haishinkit\/mediamixer\/videoinputformats","type":"property"},{"title":"var videoMixerSettings: VideoMixerSettings","path":"\/documentation\/haishinkit\/mediamixer\/videomixersettings","type":"property"},{"title":"var videoOrientation: AVCaptureVideoOrientation","path":"\/documentation\/haishinkit\/mediamixer\/videoorientation","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func addOutput(some MediaMixerOutput)","path":"\/documentation\/haishinkit\/mediamixer\/addoutput(_:)","type":"method"},{"title":"func append(CMSampleBuffer, track: UInt8)","path":"\/documentation\/haishinkit\/mediamixer\/append(_:track:)","type":"method"},{"title":"func append(AVAudioBuffer, when: AVAudioTime, track: UInt8)","path":"\/documentation\/haishinkit\/mediamixer\/append(_:when:track:)","type":"method"},{"title":"func attachAudio(AVCaptureDevice?, track: UInt8, configuration: AudioDeviceConfigurationBlock?) async throws","path":"\/documentation\/haishinkit\/mediamixer\/attachaudio(_:track:configuration:)","type":"method"},{"title":"func attachVideo(AVCaptureDevice?, track: UInt8, configuration: VideoDeviceConfigurationBlock?) async throws","path":"\/documentation\/haishinkit\/mediamixer\/attachvideo(_:track:configuration:)","type":"method"},{"title":"func configuration((AVCaptureSession) throws -> Void) rethrows","path":"\/documentation\/haishinkit\/mediamixer\/configuration(_:)","type":"method"},{"title":"func configuration(audio: UInt8, configuration: (AudioDeviceUnit) throws -> Void) throws","path":"\/documentation\/haishinkit\/mediamixer\/configuration(audio:configuration:)","type":"method"},{"title":"func configuration(video: UInt8, configuration: (VideoDeviceUnit) throws -> Void) throws","path":"\/documentation\/haishinkit\/mediamixer\/configuration(video:configuration:)","type":"method"},{"title":"func removeOutput(some MediaMixerOutput)","path":"\/documentation\/haishinkit\/mediamixer\/removeoutput(_:)","type":"method"},{"title":"func setAudioMixerSettings(AudioMixerSettings)","path":"\/documentation\/haishinkit\/mediamixer\/setaudiomixersettings(_:)","type":"method"},{"title":"func setFrameRate(Float64) throws","path":"\/documentation\/haishinkit\/mediamixer\/setframerate(_:)","type":"method"},{"title":"func setMonitoringEnabled(Bool)","path":"\/documentation\/haishinkit\/mediamixer\/setmonitoringenabled(_:)","type":"method"},{"title":"func setSessionPreset(AVCaptureSession.Preset)","path":"\/documentation\/haishinkit\/mediamixer\/setsessionpreset(_:)","type":"method"},{"title":"func setTorchEnabled(Bool)","path":"\/documentation\/haishinkit\/mediamixer\/settorchenabled(_:)","type":"method"},{"title":"func setVideoMixerSettings(VideoMixerSettings)","path":"\/documentation\/haishinkit\/mediamixer\/setvideomixersettings(_:)","type":"method"},{"title":"func setVideoOrientation(AVCaptureVideoOrientation)","path":"\/documentation\/haishinkit\/mediamixer\/setvideoorientation(_:)","type":"method"},{"title":"func startCapturing()","path":"\/documentation\/haishinkit\/mediamixer\/startcapturing()","type":"method"},{"title":"func stopCapturing()","path":"\/documentation\/haishinkit\/mediamixer\/stopcapturing()","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case deviceNotFound","path":"\/documentation\/haishinkit\/mediamixer\/error\/devicenotfound","type":"case"},{"title":"case failedToAttach(any Error)","path":"\/documentation\/haishinkit\/mediamixer\/error\/failedtoattach(_:)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Error Implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var localizedDescription: String","path":"\/documentation\/haishinkit\/mediamixer\/error\/localizeddescription"}],"path":"\/documentation\/haishinkit\/mediamixer\/error\/error-implementations","type":"symbol"}],"title":"MediaMixer.Error","path":"\/documentation\/haishinkit\/mediamixer\/error","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"type":"method","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/haishinkit\/mediamixer\/assertisolated(_:file:line:)"},{"type":"method","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","path":"\/documentation\/haishinkit\/mediamixer\/assumeisolated(_:file:line:)"},{"type":"method","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/haishinkit\/mediamixer\/preconditionisolated(_:file:line:)"}],"title":"Actor Implementations","path":"\/documentation\/haishinkit\/mediamixer\/actor-implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/mediamixer\/startrunning()","title":"func startRunning()","type":"method"},{"path":"\/documentation\/haishinkit\/mediamixer\/stoprunning()","title":"func stopRunning()","type":"method"}],"title":"AsyncRunner Implementations","path":"\/documentation\/haishinkit\/mediamixer\/asyncrunner-implementations","type":"symbol"}]},{"title":"PiPHKView","path":"\/documentation\/haishinkit\/piphkview","type":"class","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init?(coder: NSCoder)","type":"init","path":"\/documentation\/haishinkit\/piphkview\/init(coder:)"},{"title":"init(frame: CGRect)","type":"init","path":"\/documentation\/haishinkit\/piphkview\/init(frame:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var audioTrackId: UInt8?","type":"property","path":"\/documentation\/haishinkit\/piphkview\/audiotrackid"},{"title":"var videoGravity: AVLayerVideoGravity","type":"property","path":"\/documentation\/haishinkit\/piphkview\/videogravity"},{"title":"var videoTrackId: UInt8?","type":"property","path":"\/documentation\/haishinkit\/piphkview\/videotrackid"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func awakeFromNib()","type":"method","path":"\/documentation\/haishinkit\/piphkview\/awakefromnib()"},{"title":"Type Properties","type":"groupMarker"},{"title":"static var defaultBackgroundColor: NSColor","type":"property","path":"\/documentation\/haishinkit\/piphkview\/defaultbackgroundcolor"},{"title":"Default Implementations","type":"groupMarker"},{"title":"MediaMixerOutput Implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func mixer(MediaMixer, didOutput: CMSampleBuffer)","path":"\/documentation\/haishinkit\/piphkview\/mixer(_:didoutput:)"},{"type":"method","title":"func mixer(MediaMixer, didOutput: AVAudioPCMBuffer, when: AVAudioTime)","path":"\/documentation\/haishinkit\/piphkview\/mixer(_:didoutput:when:)"},{"type":"method","title":"func selectTrack(UInt8?, mediaType: CMFormatDescription.MediaType) async","path":"\/documentation\/haishinkit\/piphkview\/selecttrack(_:mediatype:)"}],"path":"\/documentation\/haishinkit\/piphkview\/mediamixeroutput-implementations"},{"title":"StreamOutput Implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/haishinkit\/piphkview\/stream(_:didoutput:)","title":"func stream(some StreamConvertible, didOutput: CMSampleBuffer)"},{"type":"method","path":"\/documentation\/haishinkit\/piphkview\/stream(_:didoutput:when:)","title":"func stream(some StreamConvertible, didOutput: AVAudioBuffer, when: AVAudioTime)"}],"path":"\/documentation\/haishinkit\/piphkview\/streamoutput-implementations"}]},{"title":"Screen","path":"\/documentation\/haishinkit\/screen","type":"class","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init()","path":"\/documentation\/haishinkit\/screen\/init()"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var backgroundColor: CGColor","path":"\/documentation\/haishinkit\/screen\/backgroundcolor"},{"type":"property","title":"var childCounts: Int","path":"\/documentation\/haishinkit\/screen\/childcounts"},{"type":"property","title":"var delegate: (any ScreenDelegate)?","path":"\/documentation\/haishinkit\/screen\/delegate"},{"type":"property","title":"var size: CGSize","path":"\/documentation\/haishinkit\/screen\/size-swift.property"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func addChild(ScreenObject?) throws","path":"\/documentation\/haishinkit\/screen\/addchild(_:)"},{"type":"method","title":"func registerVideoEffect(some VideoEffect) -> Bool","path":"\/documentation\/haishinkit\/screen\/registervideoeffect(_:)"},{"type":"method","title":"func removeChild(ScreenObject?)","path":"\/documentation\/haishinkit\/screen\/removechild(_:)"},{"type":"method","title":"func unregisterVideoEffect(some VideoEffect) -> Bool","path":"\/documentation\/haishinkit\/screen\/unregistervideoeffect(_:)"},{"type":"groupMarker","title":"Type Properties"},{"type":"property","title":"static let size: CGSize","path":"\/documentation\/haishinkit\/screen\/size-swift.type.property"}]},{"title":"ScreenActor","path":"\/documentation\/haishinkit\/screenactor","type":"class","children":[{"type":"groupMarker","title":"Type Properties"},{"type":"property","title":"static let shared: ScreenActor","path":"\/documentation\/haishinkit\/screenactor\/shared"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method","path":"\/documentation\/haishinkit\/screenactor\/assertisolated(_:file:line:)"},{"title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","type":"method","path":"\/documentation\/haishinkit\/screenactor\/assumeisolated(_:file:line:)"},{"title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method","path":"\/documentation\/haishinkit\/screenactor\/preconditionisolated(_:file:line:)"}],"title":"Actor Implementations","path":"\/documentation\/haishinkit\/screenactor\/actor-implementations"},{"type":"symbol","children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/screenactor\/sharedunownedexecutor","title":"static var sharedUnownedExecutor: UnownedSerialExecutor","type":"property"}],"title":"GlobalActor Implementations","path":"\/documentation\/haishinkit\/screenactor\/globalactor-implementations"}]},{"title":"ScreenObject","path":"\/documentation\/haishinkit\/screenobject","type":"class","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init()","type":"init","path":"\/documentation\/haishinkit\/screenobject\/init()"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var bounds: CGRect","type":"property","path":"\/documentation\/haishinkit\/screenobject\/bounds"},{"title":"var cornerRadius: CGFloat","type":"property","path":"\/documentation\/haishinkit\/screenobject\/cornerradius"},{"title":"var horizontalAlignment: ScreenObject.HorizontalAlignment","type":"property","path":"\/documentation\/haishinkit\/screenobject\/horizontalalignment-swift.property"},{"title":"var isVisible: Bool","type":"property","path":"\/documentation\/haishinkit\/screenobject\/isvisible"},{"title":"var layoutMargin: NSEdgeInsets","type":"property","path":"\/documentation\/haishinkit\/screenobject\/layoutmargin"},{"title":"var parent: ScreenObjectContainer?","type":"property","path":"\/documentation\/haishinkit\/screenobject\/parent"},{"title":"var size: CGSize","type":"property","path":"\/documentation\/haishinkit\/screenobject\/size"},{"title":"var verticalAlignment: ScreenObject.VerticalAlignment","type":"property","path":"\/documentation\/haishinkit\/screenobject\/verticalalignment-swift.property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func invalidateLayout()","type":"method","path":"\/documentation\/haishinkit\/screenobject\/invalidatelayout()"},{"title":"func makeBounds(CGSize) -> CGRect","type":"method","path":"\/documentation\/haishinkit\/screenobject\/makebounds(_:)"},{"title":"func makeImage(some ScreenRenderer) -> CGImage?","type":"method","path":"\/documentation\/haishinkit\/screenobject\/makeimage(_:)"},{"title":"Enumerations","type":"groupMarker"},{"title":"ScreenObject.HorizontalAlignment","type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","title":"case center","path":"\/documentation\/haishinkit\/screenobject\/horizontalalignment-swift.enum\/center"},{"type":"case","title":"case left","path":"\/documentation\/haishinkit\/screenobject\/horizontalalignment-swift.enum\/left"},{"type":"case","title":"case right","path":"\/documentation\/haishinkit\/screenobject\/horizontalalignment-swift.enum\/right"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","title":"Equatable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/screenobject\/horizontalalignment-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/haishinkit\/screenobject\/horizontalalignment-swift.enum\/equatable-implementations"}],"path":"\/documentation\/haishinkit\/screenobject\/horizontalalignment-swift.enum"},{"title":"ScreenObject.VerticalAlignment","type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/haishinkit\/screenobject\/verticalalignment-swift.enum\/bottom","type":"case","title":"case bottom"},{"path":"\/documentation\/haishinkit\/screenobject\/verticalalignment-swift.enum\/middle","type":"case","title":"case middle"},{"path":"\/documentation\/haishinkit\/screenobject\/verticalalignment-swift.enum\/top","type":"case","title":"case top"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/haishinkit\/screenobject\/verticalalignment-swift.enum\/equatable-implementations","type":"symbol","title":"Equatable Implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/haishinkit\/screenobject\/verticalalignment-swift.enum\/!=(_:_:)"}]}],"path":"\/documentation\/haishinkit\/screenobject\/verticalalignment-swift.enum"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/haishinkit\/screenobject\/!=(_:_:)","type":"op"},{"title":"static func == (ScreenObject, ScreenObject) -> Bool","path":"\/documentation\/haishinkit\/screenobject\/==(_:_:)","type":"op"}],"path":"\/documentation\/haishinkit\/screenobject\/equatable-implementations"},{"title":"Hashable Implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func hash(into: inout Hasher)","path":"\/documentation\/haishinkit\/screenobject\/hash(into:)"}],"path":"\/documentation\/haishinkit\/screenobject\/hashable-implementations"}]},{"title":"ScreenObjectContainer","path":"\/documentation\/haishinkit\/screenobjectcontainer","type":"class","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/haishinkit\/screenobjectcontainer\/childcounts","title":"var childCounts: Int"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/haishinkit\/screenobjectcontainer\/addchild(_:)","title":"func addChild(ScreenObject?) throws"},{"type":"method","path":"\/documentation\/haishinkit\/screenobjectcontainer\/removechild(_:)","title":"func removeChild(ScreenObject?)"},{"type":"groupMarker","title":"Enumerations"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case alreadyExists","path":"\/documentation\/haishinkit\/screenobjectcontainer\/error\/alreadyexists","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","path":"\/documentation\/haishinkit\/screenobjectcontainer\/error\/equatable-implementations","type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/haishinkit\/screenobjectcontainer\/error\/!=(_:_:)","type":"op"}]},{"title":"Error Implementations","path":"\/documentation\/haishinkit\/screenobjectcontainer\/error\/error-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var localizedDescription: String","path":"\/documentation\/haishinkit\/screenobjectcontainer\/error\/localizeddescription"}]}],"type":"enum","path":"\/documentation\/haishinkit\/screenobjectcontainer\/error","title":"ScreenObjectContainer.Error"}]},{"title":"SessionBuilderFactory","path":"\/documentation\/haishinkit\/sessionbuilderfactory","type":"class","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func make(URL?) throws -> SessionBuilder","path":"\/documentation\/haishinkit\/sessionbuilderfactory\/make(_:)","type":"method"},{"title":"func register(some SessionFactory)","path":"\/documentation\/haishinkit\/sessionbuilderfactory\/register(_:)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"title":"static let shared: SessionBuilderFactory","path":"\/documentation\/haishinkit\/sessionbuilderfactory\/shared","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"title":"SessionBuilderFactory.Error","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","title":"case illegalArgument","path":"\/documentation\/haishinkit\/sessionbuilderfactory\/error\/illegalargument"},{"type":"case","title":"case notFound","path":"\/documentation\/haishinkit\/sessionbuilderfactory\/error\/notfound"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","title":"Equatable Implementations","path":"\/documentation\/haishinkit\/sessionbuilderfactory\/error\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/haishinkit\/sessionbuilderfactory\/error\/!=(_:_:)"}]},{"type":"symbol","title":"Error Implementations","path":"\/documentation\/haishinkit\/sessionbuilderfactory\/error\/error-implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/haishinkit\/sessionbuilderfactory\/error\/localizeddescription","title":"var localizedDescription: String"}]}],"path":"\/documentation\/haishinkit\/sessionbuilderfactory\/error","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Actor Implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/haishinkit\/sessionbuilderfactory\/assertisolated(_:file:line:)","type":"method"},{"title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","path":"\/documentation\/haishinkit\/sessionbuilderfactory\/assumeisolated(_:file:line:)","type":"method"},{"title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/haishinkit\/sessionbuilderfactory\/preconditionisolated(_:file:line:)","type":"method"}],"path":"\/documentation\/haishinkit\/sessionbuilderfactory\/actor-implementations","type":"symbol"}]},{"title":"StreamRecorder","path":"\/documentation\/haishinkit\/streamrecorder","type":"class","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/haishinkit\/streamrecorder\/init()","title":"init()"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/haishinkit\/streamrecorder\/audiotrackid","title":"var audioTrackId: UInt8?"},{"type":"property","path":"\/documentation\/haishinkit\/streamrecorder\/isrecording","title":"var isRecording: Bool"},{"type":"property","path":"\/documentation\/haishinkit\/streamrecorder\/moviefragmentinterval","title":"var movieFragmentInterval: Double?"},{"type":"property","path":"\/documentation\/haishinkit\/streamrecorder\/moviesdirectory","title":"var moviesDirectory: URL"},{"type":"property","path":"\/documentation\/haishinkit\/streamrecorder\/outputurl","title":"var outputURL: URL?"},{"type":"property","path":"\/documentation\/haishinkit\/streamrecorder\/settings","title":"var settings: [AVMediaType : [String : any Sendable]]"},{"type":"property","path":"\/documentation\/haishinkit\/streamrecorder\/videotrackid","title":"var videoTrackId: UInt8?"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/haishinkit\/streamrecorder\/selecttrack(_:mediatype:)","title":"func selectTrack(UInt8?, mediaType: CMFormatDescription.MediaType)"},{"type":"method","path":"\/documentation\/haishinkit\/streamrecorder\/setmoviefragmentinterval(_:)","title":"func setMovieFragmentInterval(Double?)"},{"type":"method","path":"\/documentation\/haishinkit\/streamrecorder\/startrecording(_:settings:)","title":"func startRecording(URL?, settings: [AVMediaType : [String : any Sendable]]) async throws"},{"type":"method","path":"\/documentation\/haishinkit\/streamrecorder\/stoprecording()","title":"func stopRecording() async throws -> URL"},{"type":"groupMarker","title":"Type Properties"},{"type":"property","path":"\/documentation\/haishinkit\/streamrecorder\/defaultsettings","title":"static let defaultSettings: [AVMediaType : [String : any Sendable]]"},{"type":"groupMarker","title":"Enumerations"},{"type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case failedToAppend(error: (any Error)?)","path":"\/documentation\/haishinkit\/streamrecorder\/error\/failedtoappend(error:)","type":"case"},{"title":"case failedToCreateAssetWriter(error: any Error)","path":"\/documentation\/haishinkit\/streamrecorder\/error\/failedtocreateassetwriter(error:)","type":"case"},{"title":"case failedToCreateAssetWriterInput(error: any Error)","path":"\/documentation\/haishinkit\/streamrecorder\/error\/failedtocreateassetwriterinput(error:)","type":"case"},{"title":"case failedToFinishWriting(error: (any Error)?)","path":"\/documentation\/haishinkit\/streamrecorder\/error\/failedtofinishwriting(error:)","type":"case"},{"title":"case fileAlreadyExists(outputURL: URL)","path":"\/documentation\/haishinkit\/streamrecorder\/error\/filealreadyexists(outputurl:)","type":"case"},{"title":"case invalidState","path":"\/documentation\/haishinkit\/streamrecorder\/error\/invalidstate","type":"case"},{"title":"case notSupportedFileType(pathExtension: String)","path":"\/documentation\/haishinkit\/streamrecorder\/error\/notsupportedfiletype(pathextension:)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var localizedDescription: String","path":"\/documentation\/haishinkit\/streamrecorder\/error\/localizeddescription","type":"property"}],"title":"Error Implementations","path":"\/documentation\/haishinkit\/streamrecorder\/error\/error-implementations","type":"symbol"}],"path":"\/documentation\/haishinkit\/streamrecorder\/error","title":"StreamRecorder.Error"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/haishinkit\/streamrecorder\/assertisolated(_:file:line:)","type":"method"},{"title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","path":"\/documentation\/haishinkit\/streamrecorder\/assumeisolated(_:file:line:)","type":"method"},{"title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/haishinkit\/streamrecorder\/preconditionisolated(_:file:line:)","type":"method"}],"path":"\/documentation\/haishinkit\/streamrecorder\/actor-implementations","title":"Actor Implementations"},{"type":"symbol","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func mixer(MediaMixer, didOutput: CMSampleBuffer)","type":"method","path":"\/documentation\/haishinkit\/streamrecorder\/mixer(_:didoutput:)"},{"title":"func mixer(MediaMixer, didOutput: AVAudioPCMBuffer, when: AVAudioTime)","type":"method","path":"\/documentation\/haishinkit\/streamrecorder\/mixer(_:didoutput:when:)"}],"path":"\/documentation\/haishinkit\/streamrecorder\/mediamixeroutput-implementations","title":"MediaMixerOutput Implementations"},{"type":"symbol","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func stream(some StreamConvertible, didOutput: CMSampleBuffer)","path":"\/documentation\/haishinkit\/streamrecorder\/stream(_:didoutput:)","type":"method"},{"title":"func stream(some StreamConvertible, didOutput: AVAudioBuffer, when: AVAudioTime)","path":"\/documentation\/haishinkit\/streamrecorder\/stream(_:didoutput:when:)","type":"method"}],"path":"\/documentation\/haishinkit\/streamrecorder\/streamoutput-implementations","title":"StreamOutput Implementations"}]},{"title":"StreamScreenObject","path":"\/documentation\/haishinkit\/streamscreenobject","type":"class","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var chromaKeyColor: CGColor?","type":"property","path":"\/documentation\/haishinkit\/streamscreenobject\/chromakeycolor"},{"title":"var videoGravity: AVLayerVideoGravity","type":"property","path":"\/documentation\/haishinkit\/streamscreenobject\/videogravity"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func makeBounds(CGSize) -> CGRect","type":"method","path":"\/documentation\/haishinkit\/streamscreenobject\/makebounds(_:)"},{"title":"func makeImage(some ScreenRenderer) -> CGImage?","type":"method","path":"\/documentation\/haishinkit\/streamscreenobject\/makeimage(_:)"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func stream(some StreamConvertible, didOutput: CMSampleBuffer)","path":"\/documentation\/haishinkit\/streamscreenobject\/stream(_:didoutput:)"},{"type":"method","title":"func stream(some StreamConvertible, didOutput: AVAudioBuffer, when: AVAudioTime)","path":"\/documentation\/haishinkit\/streamscreenobject\/stream(_:didoutput:when:)"}],"title":"StreamOutput Implementations","type":"symbol","path":"\/documentation\/haishinkit\/streamscreenobject\/streamoutput-implementations"}]},{"title":"StreamVideoAdaptiveBitRateStrategy","path":"\/documentation\/haishinkit\/streamvideoadaptivebitratestrategy","type":"class","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(mamimumVideoBitrate: Int)","type":"init","path":"\/documentation\/haishinkit\/streamvideoadaptivebitratestrategy\/init(mamimumvideobitrate:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let mamimumAudioBitRate: Int","type":"property","path":"\/documentation\/haishinkit\/streamvideoadaptivebitratestrategy\/mamimumaudiobitrate"},{"title":"let mamimumVideoBitRate: Int","type":"property","path":"\/documentation\/haishinkit\/streamvideoadaptivebitratestrategy\/mamimumvideobitrate"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func adjustBitrate(NetworkMonitorEvent, stream: some StreamConvertible) async","type":"method","path":"\/documentation\/haishinkit\/streamvideoadaptivebitratestrategy\/adjustbitrate(_:stream:)"},{"title":"Type Properties","type":"groupMarker"},{"title":"static let statusCountsThreshold: Int","type":"property","path":"\/documentation\/haishinkit\/streamvideoadaptivebitratestrategy\/statuscountsthreshold"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Actor Implementations","type":"symbol","path":"\/documentation\/haishinkit\/streamvideoadaptivebitratestrategy\/actor-implementations","children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/streamvideoadaptivebitratestrategy\/assertisolated(_:file:line:)","type":"method","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)"},{"path":"\/documentation\/haishinkit\/streamvideoadaptivebitratestrategy\/assumeisolated(_:file:line:)","type":"method","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T"},{"path":"\/documentation\/haishinkit\/streamvideoadaptivebitratestrategy\/preconditionisolated(_:file:line:)","type":"method","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)"}]}]},{"title":"TextScreenObject","path":"\/documentation\/haishinkit\/textscreenobject","type":"class","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/textscreenobject\/attributes","title":"var attributes: [NSAttributedString.Key : Any]?","type":"property"},{"path":"\/documentation\/haishinkit\/textscreenobject\/bounds","title":"var bounds: CGRect","type":"property"},{"path":"\/documentation\/haishinkit\/textscreenobject\/string","title":"var string: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/textscreenobject\/makebounds(_:)","title":"func makeBounds(CGSize) -> CGRect","type":"method"},{"path":"\/documentation\/haishinkit\/textscreenobject\/makeimage(_:)","title":"func makeImage(some ScreenRenderer) -> CGImage?","type":"method"}]},{"title":"VideoDeviceUnit","path":"\/documentation\/haishinkit\/videodeviceunit","type":"class","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/haishinkit\/videodeviceunit\/colorformat-swift.property","title":"var colorFormat: OSType"},{"type":"property","path":"\/documentation\/haishinkit\/videodeviceunit\/connection","title":"var connection: AVCaptureConnection?"},{"type":"property","path":"\/documentation\/haishinkit\/videodeviceunit\/device","title":"var device: AVCaptureDevice?"},{"type":"property","path":"\/documentation\/haishinkit\/videodeviceunit\/framerate","title":"var frameRate: Float64"},{"type":"property","path":"\/documentation\/haishinkit\/videodeviceunit\/input","title":"var input: AVCaptureInput?"},{"type":"property","path":"\/documentation\/haishinkit\/videodeviceunit\/isvideomirrored","title":"var isVideoMirrored: Bool"},{"type":"property","path":"\/documentation\/haishinkit\/videodeviceunit\/output-swift.property","title":"var output: VideoDeviceUnit.Output?"},{"type":"property","path":"\/documentation\/haishinkit\/videodeviceunit\/track","title":"let track: UInt8"},{"type":"property","path":"\/documentation\/haishinkit\/videodeviceunit\/videoorientation","title":"var videoOrientation: AVCaptureVideoOrientation"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/haishinkit\/videodeviceunit\/setframerate(_:)","title":"func setFrameRate(Float64) throws"},{"type":"groupMarker","title":"Type Aliases"},{"type":"typealias","path":"\/documentation\/haishinkit\/videodeviceunit\/output-swift.typealias","title":"VideoDeviceUnit.Output"},{"type":"groupMarker","title":"Type Properties"},{"type":"property","path":"\/documentation\/haishinkit\/videodeviceunit\/colorformat-swift.type.property","title":"static let colorFormat: OSType"},{"type":"groupMarker","title":"Enumerations"},{"type":"enum","path":"\/documentation\/haishinkit\/videodeviceunit\/error","title":"VideoDeviceUnit.Error","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"type":"case","title":"case unsupportedFrameRate","path":"\/documentation\/haishinkit\/videodeviceunit\/error\/unsupportedframerate"},{"title":"Default Implementations","type":"groupMarker"},{"type":"symbol","title":"Equatable Implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/haishinkit\/videodeviceunit\/error\/!=(_:_:)"}],"path":"\/documentation\/haishinkit\/videodeviceunit\/error\/equatable-implementations"},{"type":"symbol","title":"Error Implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var localizedDescription: String","path":"\/documentation\/haishinkit\/videodeviceunit\/error\/localizeddescription"}],"path":"\/documentation\/haishinkit\/videodeviceunit\/error\/error-implementations"}]}]},{"title":"VideoRotator","path":"\/documentation\/haishinkit\/videorotator","type":"class","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videorotator\/init()","title":"init?()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videorotator\/rotate(buffer:)","title":"func rotate(buffer: CMSampleBuffer) -> Result<CMSampleBuffer, VideoRotator.Error>","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videorotator\/error","title":"VideoRotator.Error","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case cannotAllocatePixelBuffer(CVReturn)","path":"\/documentation\/haishinkit\/videorotator\/error\/cannotallocatepixelbuffer(_:)","type":"case"},{"title":"case noImageBuffer","path":"\/documentation\/haishinkit\/videorotator\/error\/noimagebuffer","type":"case"},{"title":"case noOrientationInfo","path":"\/documentation\/haishinkit\/videorotator\/error\/noorientationinfo","type":"case"},{"title":"case rotationFailure(OSStatus)","path":"\/documentation\/haishinkit\/videorotator\/error\/rotationfailure(_:)","type":"case"},{"title":"case unsupportedOrientation","path":"\/documentation\/haishinkit\/videorotator\/error\/unsupportedorientation","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var localizedDescription: String","path":"\/documentation\/haishinkit\/videorotator\/error\/localizeddescription","type":"property"}],"title":"Error Implementations","path":"\/documentation\/haishinkit\/videorotator\/error\/error-implementations","type":"symbol"}],"type":"enum"}]},{"title":"VideoTrackScreenObject","path":"\/documentation\/haishinkit\/videotrackscreenobject","type":"class","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init()","path":"\/documentation\/haishinkit\/videotrackscreenobject\/init()"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var chromaKeyColor: CGColor?","path":"\/documentation\/haishinkit\/videotrackscreenobject\/chromakeycolor"},{"type":"property","title":"var frameRate: Int","path":"\/documentation\/haishinkit\/videotrackscreenobject\/framerate"},{"type":"property","title":"var track: UInt8","path":"\/documentation\/haishinkit\/videotrackscreenobject\/track"},{"type":"property","title":"var videoGravity: AVLayerVideoGravity","path":"\/documentation\/haishinkit\/videotrackscreenobject\/videogravity"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func draw(some ScreenRenderer)","path":"\/documentation\/haishinkit\/videotrackscreenobject\/draw(_:)"},{"type":"method","title":"func makeBounds(CGSize) -> CGRect","path":"\/documentation\/haishinkit\/videotrackscreenobject\/makebounds(_:)"},{"type":"method","title":"func makeImage(some ScreenRenderer) -> CGImage?","path":"\/documentation\/haishinkit\/videotrackscreenobject\/makeimage(_:)"},{"type":"method","title":"func registerVideoEffect(some VideoEffect) -> Bool","path":"\/documentation\/haishinkit\/videotrackscreenobject\/registervideoeffect(_:)"},{"type":"method","title":"func unregisterVideoEffect(some VideoEffect) -> Bool","path":"\/documentation\/haishinkit\/videotrackscreenobject\/unregistervideoeffect(_:)"}]},{"title":"Protocols","type":"groupMarker"},{"title":"AsyncRunner","path":"\/documentation\/haishinkit\/asyncrunner","type":"protocol","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/haishinkit\/asyncrunner\/isrunning","title":"var isRunning: Bool"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/haishinkit\/asyncrunner\/startrunning()","title":"func startRunning() async"},{"type":"method","path":"\/documentation\/haishinkit\/asyncrunner\/stoprunning()","title":"func stopRunning() async"}]},{"title":"ChromaKeyProcessable","path":"\/documentation\/haishinkit\/chromakeyprocessable","type":"protocol","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var chromaKeyColor: CGColor?","path":"\/documentation\/haishinkit\/chromakeyprocessable\/chromakeycolor","type":"property"}]},{"title":"MediaMixerOutput","path":"\/documentation\/haishinkit\/mediamixeroutput","type":"protocol","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/mediamixeroutput\/audiotrackid","title":"var audioTrackId: UInt8?","type":"property"},{"path":"\/documentation\/haishinkit\/mediamixeroutput\/videotrackid","title":"var videoTrackId: UInt8?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/mediamixeroutput\/mixer(_:didoutput:)","title":"func mixer(MediaMixer, didOutput: CMSampleBuffer)","type":"method"},{"path":"\/documentation\/haishinkit\/mediamixeroutput\/mixer(_:didoutput:when:)","title":"func mixer(MediaMixer, didOutput: AVAudioPCMBuffer, when: AVAudioTime)","type":"method"},{"path":"\/documentation\/haishinkit\/mediamixeroutput\/selecttrack(_:mediatype:)","title":"func selectTrack(UInt8?, mediaType: CMFormatDescription.MediaType) async","type":"method"}]},{"title":"NetworkConnection","path":"\/documentation\/haishinkit\/networkconnection","type":"protocol","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/networkconnection\/connected","type":"property","title":"var connected: Bool"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/networkconnection\/close()","type":"method","title":"func close() async throws"}]},{"title":"Runner","path":"\/documentation\/haishinkit\/runner","type":"protocol","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/runner\/isrunning","title":"var isRunning: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/runner\/startrunning()","title":"func startRunning()","type":"method"},{"path":"\/documentation\/haishinkit\/runner\/stoprunning()","title":"func stopRunning()","type":"method"}]},{"title":"ScreenDelegate","path":"\/documentation\/haishinkit\/screendelegate","type":"protocol","children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/screendelegate\/screen(_:willlayout:)","title":"func screen(Screen, willLayout: CMTime)","type":"method"}]},{"title":"ScreenRenderer","path":"\/documentation\/haishinkit\/screenrenderer","type":"protocol","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var backgroundColor: CGColor","path":"\/documentation\/haishinkit\/screenrenderer\/backgroundcolor","type":"property"},{"title":"var bounds: CGRect","path":"\/documentation\/haishinkit\/screenrenderer\/bounds","type":"property"},{"title":"var context: CIContext","path":"\/documentation\/haishinkit\/screenrenderer\/context","type":"property"},{"title":"var presentationTimeStamp: CMTime","path":"\/documentation\/haishinkit\/screenrenderer\/presentationtimestamp","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func draw(ScreenObject)","path":"\/documentation\/haishinkit\/screenrenderer\/draw(_:)","type":"method"},{"title":"func layout(ScreenObject)","path":"\/documentation\/haishinkit\/screenrenderer\/layout(_:)","type":"method"},{"title":"func setTarget(CVPixelBuffer?)","path":"\/documentation\/haishinkit\/screenrenderer\/settarget(_:)","type":"method"}]},{"title":"Session","path":"\/documentation\/haishinkit\/session","type":"protocol","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/haishinkit\/session\/init(uri:)","title":"init(uri: URL)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/haishinkit\/session\/readystate","title":"var readyState: AsyncStream<SessionReadyState>"},{"type":"property","path":"\/documentation\/haishinkit\/session\/stream","title":"var stream: any StreamConvertible"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/haishinkit\/session\/connect(_:disconnected:)","title":"func connect(SessionMethod, disconnected: () -> Void) async throws"},{"type":"method","path":"\/documentation\/haishinkit\/session\/setmaxretrycount(_:)","title":"func setMaxRetryCount(Int)"}]},{"title":"SessionFactory","path":"\/documentation\/haishinkit\/sessionfactory","type":"protocol","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var supportedProtocols: Set<String>","path":"\/documentation\/haishinkit\/sessionfactory\/supportedprotocols","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func make(URL) -> any Session","path":"\/documentation\/haishinkit\/sessionfactory\/make(_:)","type":"method"}]},{"title":"StreamBitRateStrategy","path":"\/documentation\/haishinkit\/streambitratestrategy","type":"protocol","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var mamimumAudioBitRate: Int","path":"\/documentation\/haishinkit\/streambitratestrategy\/mamimumaudiobitrate","type":"property"},{"title":"var mamimumVideoBitRate: Int","path":"\/documentation\/haishinkit\/streambitratestrategy\/mamimumvideobitrate","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func adjustBitrate(NetworkMonitorEvent, stream: some StreamConvertible) async","path":"\/documentation\/haishinkit\/streambitratestrategy\/adjustbitrate(_:stream:)","type":"method"}]},{"title":"StreamConvertible","path":"\/documentation\/haishinkit\/streamconvertible","type":"protocol","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var audioSettings: AudioCodecSettings","path":"\/documentation\/haishinkit\/streamconvertible\/audiosettings","type":"property"},{"title":"var readyState: StreamReadyState","path":"\/documentation\/haishinkit\/streamconvertible\/readystate","type":"property"},{"title":"var soundTransform: SoundTransform?","path":"\/documentation\/haishinkit\/streamconvertible\/soundtransform","type":"property"},{"title":"var videoSettings: VideoCodecSettings","path":"\/documentation\/haishinkit\/streamconvertible\/videosettings","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func addOutput(some StreamOutput)","path":"\/documentation\/haishinkit\/streamconvertible\/addoutput(_:)","type":"method"},{"title":"func append(CMSampleBuffer)","path":"\/documentation\/haishinkit\/streamconvertible\/append(_:)","type":"method"},{"title":"func append(AVAudioBuffer, when: AVAudioTime)","path":"\/documentation\/haishinkit\/streamconvertible\/append(_:when:)","type":"method"},{"title":"func attachAudioPlayer(AudioPlayer?) async","path":"\/documentation\/haishinkit\/streamconvertible\/attachaudioplayer(_:)","type":"method"},{"title":"func dispatch(NetworkMonitorEvent) async","path":"\/documentation\/haishinkit\/streamconvertible\/dispatch(_:)","type":"method"},{"title":"func removeOutput(some StreamOutput)","path":"\/documentation\/haishinkit\/streamconvertible\/removeoutput(_:)","type":"method"},{"title":"func setAudioSettings(AudioCodecSettings) throws","path":"\/documentation\/haishinkit\/streamconvertible\/setaudiosettings(_:)","type":"method"},{"title":"func setBitRateStrategy((some StreamBitRateStrategy)?)","path":"\/documentation\/haishinkit\/streamconvertible\/setbitratestrategy(_:)","type":"method"},{"title":"func setSoundTransform(SoundTransform) async","path":"\/documentation\/haishinkit\/streamconvertible\/setsoundtransform(_:)","type":"method"},{"title":"func setVideoInputBufferCounts(Int)","path":"\/documentation\/haishinkit\/streamconvertible\/setvideoinputbuffercounts(_:)","type":"method"},{"title":"func setVideoSettings(VideoCodecSettings) throws","path":"\/documentation\/haishinkit\/streamconvertible\/setvideosettings(_:)","type":"method"}]},{"title":"StreamOutput","path":"\/documentation\/haishinkit\/streamoutput","type":"protocol","children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/streamoutput\/stream(_:didoutput:)","title":"func stream(some StreamConvertible, didOutput: CMSampleBuffer)","type":"method"},{"path":"\/documentation\/haishinkit\/streamoutput\/stream(_:didoutput:when:)","title":"func stream(some StreamConvertible, didOutput: AVAudioBuffer, when: AVAudioTime)","type":"method"}]},{"title":"VideoEffect","path":"\/documentation\/haishinkit\/videoeffect","type":"protocol","children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/videoeffect\/execute(_:)","type":"method","title":"func execute(CIImage) -> CIImage"}]},{"title":"Structures","type":"groupMarker"},{"title":"AudioCodecSettings","path":"\/documentation\/haishinkit\/audiocodecsettings","type":"struct","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(bitRate: Int, downmix: Bool, channelMap: [Int]?, sampleRate: Float64, format: AudioCodecSettings.Format)","type":"init","path":"\/documentation\/haishinkit\/audiocodecsettings\/init(bitrate:downmix:channelmap:samplerate:format:)"},{"title":"init(from: any Decoder) throws","type":"init","path":"\/documentation\/haishinkit\/audiocodecsettings\/init(from:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var bitRate: Int","type":"property","path":"\/documentation\/haishinkit\/audiocodecsettings\/bitrate"},{"title":"var channelMap: [Int]?","type":"property","path":"\/documentation\/haishinkit\/audiocodecsettings\/channelmap"},{"title":"var downmix: Bool","type":"property","path":"\/documentation\/haishinkit\/audiocodecsettings\/downmix"},{"title":"var format: AudioCodecSettings.Format","type":"property","path":"\/documentation\/haishinkit\/audiocodecsettings\/format-swift.property"},{"title":"let sampleRate: Float64","type":"property","path":"\/documentation\/haishinkit\/audiocodecsettings\/samplerate"},{"title":"Type Properties","type":"groupMarker"},{"title":"static let `default`: AudioCodecSettings","type":"property","path":"\/documentation\/haishinkit\/audiocodecsettings\/default"},{"title":"static let defaultBitRate: Int","type":"property","path":"\/documentation\/haishinkit\/audiocodecsettings\/defaultbitrate"},{"title":"static let maximumNumberOfChannels: UInt32","type":"property","path":"\/documentation\/haishinkit\/audiocodecsettings\/maximumnumberofchannels"},{"title":"Enumerations","type":"groupMarker"},{"title":"AudioCodecSettings.Format","type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"type":"case","title":"case aac","path":"\/documentation\/haishinkit\/audiocodecsettings\/format-swift.enum\/aac"},{"type":"case","title":"case opus","path":"\/documentation\/haishinkit\/audiocodecsettings\/format-swift.enum\/opus"},{"type":"case","title":"case pcm","path":"\/documentation\/haishinkit\/audiocodecsettings\/format-swift.enum\/pcm"},{"title":"Initializers","type":"groupMarker"},{"type":"init","title":"init(from: any Decoder) throws","path":"\/documentation\/haishinkit\/audiocodecsettings\/format-swift.enum\/init(from:)"},{"title":"Default Implementations","type":"groupMarker"},{"type":"symbol","title":"Equatable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/haishinkit\/audiocodecsettings\/format-swift.enum\/!=(_:_:)","type":"op"}],"path":"\/documentation\/haishinkit\/audiocodecsettings\/format-swift.enum\/equatable-implementations"}],"path":"\/documentation\/haishinkit\/audiocodecsettings\/format-swift.enum"}]},{"title":"AudioMixerSettings","path":"\/documentation\/haishinkit\/audiomixersettings","type":"struct","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/haishinkit\/audiomixersettings\/init(samplerate:channels:ismuted:maintrack:tracks:)","type":"init","title":"init(sampleRate: Float64, channels: UInt32, isMuted: Bool, mainTrack: UInt8, tracks: [UInt8 : AudioMixerTrackSettings])"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/audiomixersettings\/channels","type":"property","title":"let channels: UInt32"},{"path":"\/documentation\/haishinkit\/audiomixersettings\/ismuted","type":"property","title":"var isMuted: Bool"},{"path":"\/documentation\/haishinkit\/audiomixersettings\/maintrack","type":"property","title":"var mainTrack: UInt8"},{"path":"\/documentation\/haishinkit\/audiomixersettings\/maximumnumberofchannels","type":"property","title":"var maximumNumberOfChannels: UInt32"},{"path":"\/documentation\/haishinkit\/audiomixersettings\/samplerate","type":"property","title":"let sampleRate: Float64"},{"path":"\/documentation\/haishinkit\/audiomixersettings\/tracks","type":"property","title":"var tracks: [UInt8 : AudioMixerTrackSettings]"},{"type":"groupMarker","title":"Type Properties"},{"path":"\/documentation\/haishinkit\/audiomixersettings\/default","type":"property","title":"static let `default`: AudioMixerSettings"},{"path":"\/documentation\/haishinkit\/audiomixersettings\/maximumsamplerate","type":"property","title":"static let maximumSampleRate: Float64"}]},{"title":"AudioMixerTrackSettings","path":"\/documentation\/haishinkit\/audiomixertracksettings","type":"struct","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/haishinkit\/audiomixertracksettings\/init(from:)","type":"init","title":"init(from: any Decoder) throws"},{"path":"\/documentation\/haishinkit\/audiomixertracksettings\/init(volume:ismuted:downmix:channelmap:)","type":"init","title":"init(volume: Float, isMuted: Bool, downmix: Bool, channelMap: [Int]?)"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/audiomixertracksettings\/channelmap","type":"property","title":"var channelMap: [Int]?"},{"path":"\/documentation\/haishinkit\/audiomixertracksettings\/downmix","type":"property","title":"var downmix: Bool"},{"path":"\/documentation\/haishinkit\/audiomixertracksettings\/ismuted","type":"property","title":"var isMuted: Bool"},{"path":"\/documentation\/haishinkit\/audiomixertracksettings\/volume","type":"property","title":"var volume: Float"},{"type":"groupMarker","title":"Type Properties"},{"path":"\/documentation\/haishinkit\/audiomixertracksettings\/default","type":"property","title":"static let `default`: AudioMixerTrackSettings"}]},{"title":"NetworkMonitorReport","path":"\/documentation\/haishinkit\/networkmonitorreport","type":"struct","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"let currentBytesInPerSecond: Int","path":"\/documentation\/haishinkit\/networkmonitorreport\/currentbytesinpersecond"},{"type":"property","title":"let currentBytesOutPerSecond: Int","path":"\/documentation\/haishinkit\/networkmonitorreport\/currentbytesoutpersecond"},{"type":"property","title":"let currentQueueBytesOut: Int","path":"\/documentation\/haishinkit\/networkmonitorreport\/currentqueuebytesout"},{"type":"property","title":"let totalBytesIn: Int","path":"\/documentation\/haishinkit\/networkmonitorreport\/totalbytesin"},{"type":"property","title":"let totalBytesOut: Int","path":"\/documentation\/haishinkit\/networkmonitorreport\/totalbytesout"}]},{"title":"SessionBuilder","path":"\/documentation\/haishinkit\/sessionbuilder","type":"struct","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func build() async throws -> (any Session)?","path":"\/documentation\/haishinkit\/sessionbuilder\/build()","type":"method"}]},{"title":"SoundTransform","path":"\/documentation\/haishinkit\/soundtransform","type":"struct","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/haishinkit\/soundtransform\/init(volume:pan:)","title":"init(volume: Float, pan: Float)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/haishinkit\/soundtransform\/pan","title":"var pan: Float"},{"type":"property","path":"\/documentation\/haishinkit\/soundtransform\/volume","title":"var volume: Float"},{"type":"groupMarker","title":"Type Properties"},{"type":"property","path":"\/documentation\/haishinkit\/soundtransform\/defaultpan","title":"static let defaultPan: Float"},{"type":"property","path":"\/documentation\/haishinkit\/soundtransform\/defaultvolume","title":"static let defaultVolume: Float"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","path":"\/documentation\/haishinkit\/soundtransform\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/soundtransform\/debugdescription","title":"var debugDescription: String","type":"property"}]},{"type":"symbol","path":"\/documentation\/haishinkit\/soundtransform\/equatable-implementations","title":"Equatable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/haishinkit\/soundtransform\/!=(_:_:)","type":"op"}]}]},{"title":"VideoCodecSettings","path":"\/documentation\/haishinkit\/videocodecsettings","type":"struct","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/haishinkit\/videocodecsettings\/init(from:)","type":"init"},{"title":"init(videoSize: CGSize, bitRate: Int, profileLevel: String, scalingMode: VideoCodecSettings.ScalingMode, bitRateMode: VideoCodecSettings.BitRateMode, maxKeyFrameIntervalDuration: Int32, allowFrameReordering: Bool?, dataRateLimits: [Double]?, isHardwareAcceleratedEnabled: Bool)","path":"\/documentation\/haishinkit\/videocodecsettings\/init(videosize:bitrate:profilelevel:scalingmode:bitratemode:maxkeyframeintervalduration:allowframereordering:dataratelimits:ishardwareacceleratedenabled:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var allowFrameReordering: Bool?","path":"\/documentation\/haishinkit\/videocodecsettings\/allowframereordering","type":"property"},{"title":"var bitRate: Int","path":"\/documentation\/haishinkit\/videocodecsettings\/bitrate","type":"property"},{"title":"var bitRateMode: VideoCodecSettings.BitRateMode","path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.property","type":"property"},{"title":"var dataRateLimits: [Double]?","path":"\/documentation\/haishinkit\/videocodecsettings\/dataratelimits","type":"property"},{"title":"var frameInterval: Double","path":"\/documentation\/haishinkit\/videocodecsettings\/frameinterval","type":"property"},{"title":"var isHardwareAcceleratedEnabled: Bool","path":"\/documentation\/haishinkit\/videocodecsettings\/ishardwareacceleratedenabled","type":"property"},{"title":"var maxKeyFrameIntervalDuration: Int32","path":"\/documentation\/haishinkit\/videocodecsettings\/maxkeyframeintervalduration","type":"property"},{"type":"property","title":"var profileLevel: String","path":"\/documentation\/haishinkit\/videocodecsettings\/profilelevel"},{"type":"property","title":"var scalingMode: VideoCodecSettings.ScalingMode","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.property"},{"type":"property","title":"var videoSize: CGSize","path":"\/documentation\/haishinkit\/videocodecsettings\/videosize"},{"type":"groupMarker","title":"Type Properties"},{"type":"property","title":"static let `default`: VideoCodecSettings","path":"\/documentation\/haishinkit\/videocodecsettings\/default"},{"type":"property","title":"static let frameInterval01: Double","path":"\/documentation\/haishinkit\/videocodecsettings\/frameinterval01"},{"type":"property","title":"static let frameInterval05: Double","path":"\/documentation\/haishinkit\/videocodecsettings\/frameinterval05"},{"type":"property","title":"static let frameInterval10: Double","path":"\/documentation\/haishinkit\/videocodecsettings\/frameinterval10"},{"type":"property","title":"static let frameInterval30: Double","path":"\/documentation\/haishinkit\/videocodecsettings\/frameinterval30"},{"type":"groupMarker","title":"Enumerations"},{"type":"enum","title":"VideoCodecSettings.BitRateMode","path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case average","path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/average","type":"case"},{"title":"case constant","path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/constant","type":"case"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: String)","path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/init(rawvalue:)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/equatable-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}]},{"title":"RawRepresentable Implementations","path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/rawrepresentable-implementations","type":"symbol","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","type":"init","path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/init(from:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","type":"property","path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/hashvalue"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func encode(to: any Encoder) throws","type":"method","path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/encode(to:)"},{"title":"func hash(into: inout Hasher)","type":"method","path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/hash(into:)"}]}]},{"type":"enum","title":"VideoCodecSettings.ScalingMode","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/cropsourcetocleanaperture","title":"case cropSourceToCleanAperture","type":"case"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/letterbox","title":"case letterbox","type":"case"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/normal","title":"case normal","type":"case"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/trim","title":"case trim","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}]},{"path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/init(from:)","type":"init","title":"init(from: any Decoder) throws"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/hashvalue","type":"property","title":"var hashValue: Int"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/encode(to:)","type":"method","title":"func encode(to: any Encoder) throws"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/hash(into:)","type":"method","title":"func hash(into: inout Hasher)"}]}]}]},{"title":"VideoMixerSettings","path":"\/documentation\/haishinkit\/videomixersettings","type":"struct","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","type":"init","path":"\/documentation\/haishinkit\/videomixersettings\/init(from:)"},{"title":"init(mode: VideoMixerSettings.Mode, isMuted: Bool, mainTrack: UInt8)","type":"init","path":"\/documentation\/haishinkit\/videomixersettings\/init(mode:ismuted:maintrack:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var isMuted: Bool","type":"property","path":"\/documentation\/haishinkit\/videomixersettings\/ismuted"},{"title":"var mainTrack: UInt8","type":"property","path":"\/documentation\/haishinkit\/videomixersettings\/maintrack"},{"title":"var mode: VideoMixerSettings.Mode","type":"property","path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.property"},{"title":"Type Properties","type":"groupMarker"},{"title":"static let `default`: VideoMixerSettings","type":"property","path":"\/documentation\/haishinkit\/videomixersettings\/default"},{"title":"Enumerations","type":"groupMarker"},{"title":"VideoMixerSettings.Mode","type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case offscreen","type":"case","path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/offscreen"},{"title":"case passthrough","type":"case","path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/passthrough"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: String)","type":"init","path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/init(rawvalue:)"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"title":"Equatable Implementations","type":"symbol","path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/equatable-implementations"},{"children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","type":"init","path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/init(from:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","type":"property","path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/hashvalue"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func encode(to: any Encoder) throws","type":"method","path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/encode(to:)"},{"title":"func hash(into: inout Hasher)","type":"method","path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/hash(into:)"}],"title":"RawRepresentable Implementations","type":"symbol","path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/rawrepresentable-implementations"}],"path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum"}]},{"title":"Variables","type":"groupMarker"},{"title":"let kHaishinKitIdentifier: String","path":"\/documentation\/haishinkit\/khaishinkitidentifier","type":"var"},{"title":"Type Aliases","type":"groupMarker"},{"title":"AudioDeviceConfigurationBlock","path":"\/documentation\/haishinkit\/audiodeviceconfigurationblock","type":"typealias"},{"title":"VideoDeviceConfigurationBlock","path":"\/documentation\/haishinkit\/videodeviceconfigurationblock","type":"typealias"},{"title":"Enumerations","type":"groupMarker"},{"title":"DeviceUtil","path":"\/documentation\/haishinkit\/deviceutil","type":"enum","children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/deviceutil\/device(withlocalizedname:mediatype:)","title":"static func device(withLocalizedName: String, mediaType: AVMediaType) -> AVCaptureDevice?","type":"method"}]},{"title":"NetworkMonitorEvent","path":"\/documentation\/haishinkit\/networkmonitorevent","type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case publishInsufficientBWOccured(report: NetworkMonitorReport)","path":"\/documentation\/haishinkit\/networkmonitorevent\/publishinsufficientbwoccured(report:)","type":"case"},{"title":"case reset","path":"\/documentation\/haishinkit\/networkmonitorevent\/reset","type":"case"},{"title":"case status(report: NetworkMonitorReport)","path":"\/documentation\/haishinkit\/networkmonitorevent\/status(report:)","type":"case"}]},{"title":"SessionMethod","path":"\/documentation\/haishinkit\/sessionmethod","type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case ingest","path":"\/documentation\/haishinkit\/sessionmethod\/ingest","type":"case"},{"title":"case playback","path":"\/documentation\/haishinkit\/sessionmethod\/playback","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","path":"\/documentation\/haishinkit\/sessionmethod\/equatable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","path":"\/documentation\/haishinkit\/sessionmethod\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"}],"type":"symbol"}]},{"title":"SessionReadyState","path":"\/documentation\/haishinkit\/sessionreadystate","type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/sessionreadystate\/closed","title":"case closed","type":"case"},{"path":"\/documentation\/haishinkit\/sessionreadystate\/closing","title":"case closing","type":"case"},{"path":"\/documentation\/haishinkit\/sessionreadystate\/connecting","title":"case connecting","type":"case"},{"path":"\/documentation\/haishinkit\/sessionreadystate\/open","title":"case open","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/sessionreadystate\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/sessionreadystate\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/haishinkit\/sessionreadystate\/!=(_:_:)"}],"title":"Equatable Implementations","type":"symbol"},{"path":"\/documentation\/haishinkit\/sessionreadystate\/rawrepresentable-implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/sessionreadystate\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/sessionreadystate\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"title":"RawRepresentable Implementations","type":"symbol"}]},{"title":"StreamReadyState","path":"\/documentation\/haishinkit\/streamreadystate","type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case idle","type":"case","path":"\/documentation\/haishinkit\/streamreadystate\/idle"},{"title":"case play","type":"case","path":"\/documentation\/haishinkit\/streamreadystate\/play"},{"title":"case playing","type":"case","path":"\/documentation\/haishinkit\/streamreadystate\/playing"},{"title":"case publish","type":"case","path":"\/documentation\/haishinkit\/streamreadystate\/publish"},{"title":"case publishing","type":"case","path":"\/documentation\/haishinkit\/streamreadystate\/publishing"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: Int)","type":"init","path":"\/documentation\/haishinkit\/streamreadystate\/init(rawvalue:)"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","type":"symbol","path":"\/documentation\/haishinkit\/streamreadystate\/equatable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/haishinkit\/streamreadystate\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}]},{"title":"RawRepresentable Implementations","type":"symbol","path":"\/documentation\/haishinkit\/streamreadystate\/rawrepresentable-implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/streamreadystate\/hashvalue","title":"var hashValue: Int","type":"property"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/streamreadystate\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}]}]}],"type":"module"},{"title":"SRTHaishinKit","path":"\/documentation\/srthaishinkit","children":[{"type":"groupMarker","title":"Classes"},{"path":"\/documentation\/srthaishinkit\/srtconnection","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init()","path":"\/documentation\/srthaishinkit\/srtconnection\/init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var connected: Bool","path":"\/documentation\/srthaishinkit\/srtconnection\/connected","type":"property"},{"title":"var performanceData: SRTPerformanceData?","path":"\/documentation\/srthaishinkit\/srtconnection\/performancedata","type":"property"},{"title":"var uri: URL?","path":"\/documentation\/srthaishinkit\/srtconnection\/uri","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func close() async","path":"\/documentation\/srthaishinkit\/srtconnection\/close()","type":"method"},{"title":"func connect(URL?) async throws","path":"\/documentation\/srthaishinkit\/srtconnection\/connect(_:)","type":"method"},{"title":"func getSocketOption(SRTSocketOption.Name) async throws -> SRTSocketOption?","path":"\/documentation\/srthaishinkit\/srtconnection\/getsocketoption(_:)","type":"method"},{"title":"func setSocketOption(SRTSocketOption) async throws","path":"\/documentation\/srthaishinkit\/srtconnection\/setsocketoption(_:)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"title":"static let version: String","path":"\/documentation\/srthaishinkit\/srtconnection\/version","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"title":"SRTConnection.Error","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case failedToConnect(SRTRejectReason)","type":"case","path":"\/documentation\/srthaishinkit\/srtconnection\/error\/failedtoconnect(_:)"},{"title":"case invalidState","type":"case","path":"\/documentation\/srthaishinkit\/srtconnection\/error\/invalidstate"},{"title":"case unsupportedUri(URL?)","type":"case","path":"\/documentation\/srthaishinkit\/srtconnection\/error\/unsupporteduri(_:)"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Error Implementations","type":"symbol","path":"\/documentation\/srthaishinkit\/srtconnection\/error\/error-implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var localizedDescription: String","path":"\/documentation\/srthaishinkit\/srtconnection\/error\/localizeddescription"}]}],"path":"\/documentation\/srthaishinkit\/srtconnection\/error","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Actor Implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/srthaishinkit\/srtconnection\/assertisolated(_:file:line:)","type":"method"},{"title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","path":"\/documentation\/srthaishinkit\/srtconnection\/assumeisolated(_:file:line:)","type":"method"},{"title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/srthaishinkit\/srtconnection\/preconditionisolated(_:file:line:)","type":"method"}],"path":"\/documentation\/srthaishinkit\/srtconnection\/actor-implementations","type":"symbol"}],"type":"class","title":"SRTConnection"},{"path":"\/documentation\/srthaishinkit\/srtlogger","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/srthaishinkit\/srtlogger\/functionalareas","type":"property","title":"var functionalAreas: Set<SRTLogFunctionalArea>"},{"path":"\/documentation\/srthaishinkit\/srtlogger\/level","type":"property","title":"var level: SRTLogLevel"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/srthaishinkit\/srtlogger\/setfunctionalareas(_:)","type":"method","title":"func setFunctionalAreas(Set<SRTLogFunctionalArea>)"},{"path":"\/documentation\/srthaishinkit\/srtlogger\/setlevel(_:)","type":"method","title":"func setLevel(SRTLogLevel)"},{"type":"groupMarker","title":"Type Properties"},{"path":"\/documentation\/srthaishinkit\/srtlogger\/shared","type":"property","title":"static let shared: SRTLogger"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/srthaishinkit\/srtlogger\/actor-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/srthaishinkit\/srtlogger\/assertisolated(_:file:line:)","type":"method","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)"},{"path":"\/documentation\/srthaishinkit\/srtlogger\/assumeisolated(_:file:line:)","type":"method","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T"},{"path":"\/documentation\/srthaishinkit\/srtlogger\/preconditionisolated(_:file:line:)","type":"method","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)"}],"title":"Actor Implementations"}],"type":"class","title":"SRTLogger"},{"path":"\/documentation\/srthaishinkit\/srtstream","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(connection: SRTConnection)","path":"\/documentation\/srthaishinkit\/srtstream\/init(connection:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var audioTrackId: UInt8?","path":"\/documentation\/srthaishinkit\/srtstream\/audiotrackid","type":"property"},{"title":"var readyState: StreamReadyState","path":"\/documentation\/srthaishinkit\/srtstream\/readystate","type":"property"},{"title":"var videoTrackId: UInt8?","path":"\/documentation\/srthaishinkit\/srtstream\/videotrackid","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func close() async","path":"\/documentation\/srthaishinkit\/srtstream\/close()","type":"method"},{"title":"func play(String?) async","path":"\/documentation\/srthaishinkit\/srtstream\/play(_:)","type":"method"},{"title":"func publish(String?) async","path":"\/documentation\/srthaishinkit\/srtstream\/publish(_:)","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"title":"SRTStream.Error","path":"\/documentation\/srthaishinkit\/srtstream\/error","type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case unsupportedCodec","type":"case","path":"\/documentation\/srthaishinkit\/srtstream\/error\/unsupportedcodec"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","type":"symbol","path":"\/documentation\/srthaishinkit\/srtstream\/error\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/srthaishinkit\/srtstream\/error\/!=(_:_:)"}]},{"title":"Error Implementations","type":"symbol","path":"\/documentation\/srthaishinkit\/srtstream\/error\/error-implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var localizedDescription: String","type":"property","path":"\/documentation\/srthaishinkit\/srtstream\/error\/localizeddescription"}]}]},{"title":"Default Implementations","type":"groupMarker"},{"title":"Actor Implementations","path":"\/documentation\/srthaishinkit\/srtstream\/actor-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/srthaishinkit\/srtstream\/assertisolated(_:file:line:)","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)"},{"type":"method","path":"\/documentation\/srthaishinkit\/srtstream\/assumeisolated(_:file:line:)","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T"},{"type":"method","path":"\/documentation\/srthaishinkit\/srtstream\/preconditionisolated(_:file:line:)","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)"}]},{"title":"MediaMixerOutput Implementations","path":"\/documentation\/srthaishinkit\/srtstream\/mediamixeroutput-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/srthaishinkit\/srtstream\/mixer(_:didoutput:)","type":"method","title":"func mixer(MediaMixer, didOutput: CMSampleBuffer)"},{"path":"\/documentation\/srthaishinkit\/srtstream\/mixer(_:didoutput:when:)","type":"method","title":"func mixer(MediaMixer, didOutput: AVAudioPCMBuffer, when: AVAudioTime)"},{"path":"\/documentation\/srthaishinkit\/srtstream\/selecttrack(_:mediatype:)","type":"method","title":"func selectTrack(UInt8?, mediaType: CMFormatDescription.MediaType)"}]},{"title":"StreamConvertible Implementations","path":"\/documentation\/srthaishinkit\/srtstream\/streamconvertible-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var audioSettings: AudioCodecSettings","path":"\/documentation\/srthaishinkit\/srtstream\/audiosettings"},{"type":"property","title":"var soundTransform: SoundTransform?","path":"\/documentation\/srthaishinkit\/srtstream\/soundtransform"},{"type":"property","title":"var videoSettings: VideoCodecSettings","path":"\/documentation\/srthaishinkit\/srtstream\/videosettings"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func addOutput(some StreamOutput)","path":"\/documentation\/srthaishinkit\/srtstream\/addoutput(_:)"},{"type":"method","title":"func append(CMSampleBuffer)","path":"\/documentation\/srthaishinkit\/srtstream\/append(_:)"},{"type":"method","title":"func append(AVAudioBuffer, when: AVAudioTime)","path":"\/documentation\/srthaishinkit\/srtstream\/append(_:when:)"},{"type":"method","title":"func attachAudioPlayer(AudioPlayer?) async","path":"\/documentation\/srthaishinkit\/srtstream\/attachaudioplayer(_:)"},{"type":"method","title":"func dispatch(NetworkMonitorEvent) async","path":"\/documentation\/srthaishinkit\/srtstream\/dispatch(_:)"},{"type":"method","title":"func removeOutput(some StreamOutput)","path":"\/documentation\/srthaishinkit\/srtstream\/removeoutput(_:)"},{"type":"method","title":"func setAudioSettings(AudioCodecSettings) throws","path":"\/documentation\/srthaishinkit\/srtstream\/setaudiosettings(_:)"},{"type":"method","title":"func setBitRateStrategy((some StreamBitRateStrategy)?)","path":"\/documentation\/srthaishinkit\/srtstream\/setbitratestrategy(_:)"},{"type":"method","title":"func setSoundTransform(SoundTransform) async","path":"\/documentation\/srthaishinkit\/srtstream\/setsoundtransform(_:)"},{"type":"method","title":"func setVideoInputBufferCounts(Int)","path":"\/documentation\/srthaishinkit\/srtstream\/setvideoinputbuffercounts(_:)"},{"type":"method","title":"func setVideoSettings(VideoCodecSettings) throws","path":"\/documentation\/srthaishinkit\/srtstream\/setvideosettings(_:)"}]}],"type":"class","title":"SRTStream"},{"type":"groupMarker","title":"Structures"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/byteavailrcvbuf","title":"let byteAvailRcvBuf: Int32","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/byteavailsndbuf","title":"let byteAvailSndBuf: Int32","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytemss","title":"let byteMSS: Int32","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytercvbuf","title":"let byteRcvBuf: Int32","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytercvdrop","title":"let byteRcvDrop: UInt64","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytercvdroptotal","title":"let byteRcvDropTotal: UInt64","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytercvloss","title":"let byteRcvLoss: UInt64","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytercvlosstotal","title":"let byteRcvLossTotal: UInt64","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytercvundecrypt","title":"let byteRcvUndecrypt: UInt64","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytercvundecrypttotal","title":"let byteRcvUndecryptTotal: UInt64","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/byterecv","title":"let byteRecv: UInt64","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/byterecvtotal","title":"let byteRecvTotal: UInt64","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/byteretrans","title":"let byteRetrans: UInt64","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/byteretranstotal","title":"let byteRetransTotal: UInt64","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytesent","title":"let byteSent: UInt64","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytesenttotal","title":"let byteSentTotal: UInt64","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytesndbuf","title":"let byteSndBuf: Int32","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytesnddrop","title":"let byteSndDrop: UInt64","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytesnddroptotal","title":"let byteSndDropTotal: UInt64","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/mbpsbandwidth","title":"let mbpsBandwidth: Double","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/mbpsmaxbw","title":"let mbpsMaxBW: Double","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/mbpsrecvrate","title":"let mbpsRecvRate: Double","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/mbpssendrate","title":"let mbpsSendRate: Double","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/msrtt","title":"let msRTT: Double","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/msrcvbuf","title":"let msRcvBuf: Int32","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/msrcvtsbpddelay","title":"let msRcvTsbPdDelay: Int32","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/mssndbuf","title":"let msSndBuf: Int32","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/mssndtsbpddelay","title":"let msSndTsbPdDelay: Int32","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/mstimestamp","title":"let msTimeStamp: Int64","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktcongestionwindow","title":"let pktCongestionWindow: Int32","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktflightsize","title":"let pktFlightSize: Int32","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktflowwindow","title":"let pktFlowWindow: Int32","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvavgbelatedtime","title":"let pktRcvAvgBelatedTime: Double","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvbelated","title":"let pktRcvBelated: Int64","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvbuf","title":"let pktRcvBuf: Int32","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvdrop","title":"let pktRcvDrop: Int32","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvdroptotal","title":"let pktRcvDropTotal: Int32","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvfilterextra","title":"let pktRcvFilterExtra: Int32","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvfilterextratotal","title":"let pktRcvFilterExtraTotal: Int32","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvfilterloss","title":"let pktRcvFilterLoss: Int32","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvfilterlosstotal","title":"let pktRcvFilterLossTotal: Int32","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvfiltersupply","title":"let pktRcvFilterSupply: Int32","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvfiltersupplytotal","title":"let pktRcvFilterSupplyTotal: Int32","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvloss","title":"let pktRcvLoss: Int32","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvlosstotal","title":"let pktRcvLossTotal: Int32","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvretrans","title":"let pktRcvRetrans: Int32","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvundecrypt","title":"let pktRcvUndecrypt: Int32","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvundecrypttotal","title":"let pktRcvUndecryptTotal: Int32","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrecv","title":"let pktRecv: Int64","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrecvack","title":"let pktRecvACK: Int32","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrecvacktotal","title":"let pktRecvACKTotal: Int32","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrecvnak","title":"let pktRecvNAK: Int32","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrecvnaktotal","title":"let pktRecvNAKTotal: Int32","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrecvtotal","title":"let pktRecvTotal: Int64","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktreorderdistance","title":"let pktReorderDistance: Int32","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktreordertolerance","title":"let pktReorderTolerance: Int32","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktretrans","title":"let pktRetrans: Int32","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktretranstotal","title":"let pktRetransTotal: Int32","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsent","title":"let pktSent: Int64","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsentack","title":"let pktSentACK: Int32","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsentacktotal","title":"let pktSentACKTotal: Int32","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsentnak","title":"let pktSentNAK: Int32","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsentnaktotal","title":"let pktSentNAKTotal: Int32","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsenttotal","title":"let pktSentTotal: Int64","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsndbuf","title":"let pktSndBuf: Int32","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsnddrop","title":"let pktSndDrop: Int32","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsnddroptotal","title":"let pktSndDropTotal: Int32","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsndfilterextra","title":"let pktSndFilterExtra: Int32","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsndfilterextratotal","title":"let pktSndFilterExtraTotal: Int32","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsndloss","title":"let pktSndLoss: Int32","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsndlosstotal","title":"let pktSndLossTotal: Int32","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/uspktsndperiod","title":"let usPktSndPeriod: Double","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/ussndduration","title":"let usSndDuration: Int64","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/ussnddurationtotal","title":"let usSndDurationTotal: Int64","type":"property"}],"type":"struct","title":"SRTPerformanceData"},{"path":"\/documentation\/srthaishinkit\/srtsessionfactory","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init()","path":"\/documentation\/srthaishinkit\/srtsessionfactory\/init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let supportedProtocols: Set<String>","path":"\/documentation\/srthaishinkit\/srtsessionfactory\/supportedprotocols","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func make(URL) -> any Session","path":"\/documentation\/srthaishinkit\/srtsessionfactory\/make(_:)","type":"method"}],"type":"struct","title":"SRTSessionFactory"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption","children":[{"title":"Structures","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init(rawValue: String, symbol: SRT_SOCKOPT, restriction: SRTSocketOption.Restriction?, type: SRTSocketOption.CType)","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/init(rawvalue:symbol:restriction:type:)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"let rawValue: String","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/rawvalue-swift.property"},{"type":"groupMarker","title":"Type Aliases"},{"type":"typealias","title":"SRTSocketOption.Name.RawValue","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/rawvalue-swift.typealias"},{"type":"groupMarker","title":"Type Properties"},{"type":"property","title":"static let bindtodevice: SRTSocketOption.Name","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/bindtodevice"},{"type":"property","title":"static let congestion: SRTSocketOption.Name","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/congestion"},{"type":"property","title":"static let conntimeo: SRTSocketOption.Name","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/conntimeo"},{"type":"property","title":"static let drifttracer: SRTSocketOption.Name","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/drifttracer"},{"type":"property","title":"static let enforcedencryption: SRTSocketOption.Name","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/enforcedencryption"},{"type":"property","title":"static let event: SRTSocketOption.Name","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/event"},{"type":"property","title":"static let fc: SRTSocketOption.Name","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/fc"},{"type":"property","title":"static let groupconnect: SRTSocketOption.Name","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/groupconnect"},{"type":"property","title":"static let groupminstabletimeo: SRTSocketOption.Name","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/groupminstabletimeo"},{"type":"property","title":"static let grouptype: SRTSocketOption.Name","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/grouptype"},{"type":"property","title":"static let inputbw: SRTSocketOption.Name","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/inputbw"},{"type":"property","title":"static let iptos: SRTSocketOption.Name","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/iptos"},{"type":"property","title":"static let ipttl: SRTSocketOption.Name","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/ipttl"},{"type":"property","title":"static let ipv6only: SRTSocketOption.Name","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/ipv6only"},{"type":"property","title":"static let isn: SRTSocketOption.Name","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/isn"},{"type":"property","title":"static let kmpreannounce: SRTSocketOption.Name","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/kmpreannounce"},{"type":"property","title":"static let kmrefreshrate: SRTSocketOption.Name","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/kmrefreshrate"},{"type":"property","title":"static let kmstate: SRTSocketOption.Name","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/kmstate"},{"type":"property","title":"static let latency: SRTSocketOption.Name","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/latency"},{"type":"property","title":"static let lossmaxttl: SRTSocketOption.Name","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/lossmaxttl"},{"type":"property","title":"static let maxbw: SRTSocketOption.Name","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/maxbw"},{"type":"property","title":"static let messageapi: SRTSocketOption.Name","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/messageapi"},{"type":"property","title":"static let mininputbw: SRTSocketOption.Name","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/mininputbw"},{"type":"property","title":"static let minversion: SRTSocketOption.Name","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/minversion"},{"type":"property","title":"static let mss: SRTSocketOption.Name","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/mss"},{"type":"property","title":"static let nakreport: SRTSocketOption.Name","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/nakreport"},{"type":"property","title":"static let oheadbw: SRTSocketOption.Name","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/oheadbw"},{"type":"property","title":"static let packetfilter: SRTSocketOption.Name","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/packetfilter"},{"type":"property","title":"static let passphrase: SRTSocketOption.Name","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/passphrase"},{"type":"property","title":"static let pbkeylen: SRTSocketOption.Name","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/pbkeylen"},{"type":"property","title":"static let peeridletimeo: SRTSocketOption.Name","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/peeridletimeo"},{"type":"property","title":"static let peerlatency: SRTSocketOption.Name","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/peerlatency"},{"type":"property","title":"static let peerversion: SRTSocketOption.Name","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/peerversion"},{"type":"property","title":"static let rcvbuf: SRTSocketOption.Name","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/rcvbuf"},{"type":"property","title":"static let rcvdata: SRTSocketOption.Name","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/rcvdata"},{"type":"property","title":"static let rcvlatency: SRTSocketOption.Name","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/rcvlatency"},{"type":"property","title":"static let rcvsyn: SRTSocketOption.Name","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/rcvsyn"},{"type":"property","title":"static let rcvtimeo: SRTSocketOption.Name","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/rcvtimeo"},{"type":"property","title":"static let rendezvous: SRTSocketOption.Name","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/rendezvous"},{"type":"property","title":"static let retransmitalgo: SRTSocketOption.Name","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/retransmitalgo"},{"type":"property","title":"static let reuseaddr: SRTSocketOption.Name","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/reuseaddr"},{"type":"property","title":"static let sender: SRTSocketOption.Name","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/sender"},{"type":"property","title":"static let sndbuf: SRTSocketOption.Name","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/sndbuf"},{"type":"property","title":"static let snddata: SRTSocketOption.Name","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/snddata"},{"type":"property","title":"static let snddropdelay: SRTSocketOption.Name","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/snddropdelay"},{"type":"property","title":"static let sndkmstate: SRTSocketOption.Name","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/sndkmstate"},{"type":"property","title":"static let sndsyn: SRTSocketOption.Name","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/sndsyn"},{"type":"property","title":"static let sndtimeo: SRTSocketOption.Name","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/sndtimeo"},{"type":"property","title":"static let state: SRTSocketOption.Name","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/state"},{"type":"property","title":"static let streamid: SRTSocketOption.Name","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/streamid"},{"type":"property","title":"static let tlpktdrop: SRTSocketOption.Name","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/tlpktdrop"},{"type":"property","title":"static let transtype: SRTSocketOption.Name","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/transtype"},{"type":"property","title":"static let tsbpdmode: SRTSocketOption.Name","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/tsbpdmode"},{"type":"property","title":"static let udpRcvbuf: SRTSocketOption.Name","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/udprcvbuf"},{"type":"property","title":"static let udpSndbuf: SRTSocketOption.Name","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/udpsndbuf"},{"type":"property","title":"static let version: SRTSocketOption.Name","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/version"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/init(rawvalue:)","title":"init?(rawValue: String)"}],"type":"symbol","title":"RawRepresentable Implementations","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/rawrepresentable-implementations"}],"title":"SRTSocketOption.Name","type":"struct","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct"},{"title":"Initializers","type":"groupMarker"},{"title":"init(name: SRTSocketOption.Name, value: String) throws","type":"init","path":"\/documentation\/srthaishinkit\/srtsocketoption\/init(name:value:)-3uyvp"},{"title":"init(name: SRTSocketOption.Name, value: Int) throws","type":"init","path":"\/documentation\/srthaishinkit\/srtsocketoption\/init(name:value:)-66kiu"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var boolValue: Bool","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/boolvalue"},{"title":"var intValue: Int","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/intvalue"},{"title":"let name: SRTSocketOption.Name","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.property"},{"title":"var stringValue: String","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/stringvalue"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case bool","path":"\/documentation\/srthaishinkit\/srtsocketoption\/ctype\/bool","type":"case"},{"title":"case int32","path":"\/documentation\/srthaishinkit\/srtsocketoption\/ctype\/int32","type":"case"},{"title":"case int64","path":"\/documentation\/srthaishinkit\/srtsocketoption\/ctype\/int64","type":"case"},{"title":"case string","path":"\/documentation\/srthaishinkit\/srtsocketoption\/ctype\/string","type":"case"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: Int)","path":"\/documentation\/srthaishinkit\/srtsocketoption\/ctype\/init(rawvalue:)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","path":"\/documentation\/srthaishinkit\/srtsocketoption\/ctype\/equatable-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/srthaishinkit\/srtsocketoption\/ctype\/!=(_:_:)"}]},{"title":"RawRepresentable Implementations","path":"\/documentation\/srthaishinkit\/srtsocketoption\/ctype\/rawrepresentable-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/ctype\/hashvalue","type":"property","title":"var hashValue: Int"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/ctype\/hash(into:)","type":"method","title":"func hash(into: inout Hasher)"}]}],"title":"SRTSocketOption.CType","type":"enum","path":"\/documentation\/srthaishinkit\/srtsocketoption\/ctype"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case invalidArgument(String)","path":"\/documentation\/srthaishinkit\/srtsocketoption\/error\/invalidargument(_:)","type":"case"},{"title":"case invalidOption(String)","path":"\/documentation\/srthaishinkit\/srtsocketoption\/error\/invalidoption(_:)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Error Implementations","path":"\/documentation\/srthaishinkit\/srtsocketoption\/error\/error-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/error\/localizeddescription","type":"property","title":"var localizedDescription: String"}]}],"title":"SRTSocketOption.Error","type":"enum","path":"\/documentation\/srthaishinkit\/srtsocketoption\/error"},{"children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/restriction\/post","type":"case","title":"case post"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/restriction\/pre","type":"case","title":"case pre"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/restriction\/prebind","type":"case","title":"case preBind"},{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/restriction\/init(rawvalue:)","type":"init","title":"init?(rawValue: Int)"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/restriction\/equatable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/srthaishinkit\/srtsocketoption\/restriction\/!=(_:_:)"}],"type":"symbol","title":"Equatable Implementations"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/restriction\/rawrepresentable-implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var hashValue: Int","path":"\/documentation\/srthaishinkit\/srtsocketoption\/restriction\/hashvalue"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func hash(into: inout Hasher)","path":"\/documentation\/srthaishinkit\/srtsocketoption\/restriction\/hash(into:)"}],"type":"symbol","title":"RawRepresentable Implementations"}],"title":"SRTSocketOption.Restriction","type":"enum","path":"\/documentation\/srthaishinkit\/srtsocketoption\/restriction"}],"type":"struct","title":"SRTSocketOption"},{"type":"groupMarker","title":"Variables"},{"path":"\/documentation\/srthaishinkit\/ksrthaishinkitidentifier","type":"var","title":"let kSRTHaishinKitIdentifier: String"},{"type":"groupMarker","title":"Enumerations"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea","title":"SRTLogFunctionalArea","type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","title":"case apiCtrl","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/apictrl"},{"type":"case","title":"case apiRecv","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/apirecv"},{"type":"case","title":"case apiSend","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/apisend"},{"type":"case","title":"case applog","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/applog"},{"type":"case","title":"case bstats","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/bstats"},{"type":"case","title":"case bufRecv","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/bufrecv"},{"type":"case","title":"case bufSend","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/bufsend"},{"type":"case","title":"case chanRecv","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/chanrecv"},{"type":"case","title":"case chnMgmt","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/chnmgmt"},{"type":"case","title":"case chnSend","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/chnsend"},{"type":"case","title":"case congest","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/congest"},{"type":"case","title":"case control","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/control"},{"type":"case","title":"case data","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/data"},{"type":"case","title":"case epollApi","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/epollapi"},{"type":"case","title":"case epollUpd","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/epollupd"},{"type":"case","title":"case general","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/general"},{"type":"case","title":"case grpMgmt","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/grpmgmt"},{"type":"case","title":"case grpRecv","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/grprecv"},{"type":"case","title":"case grpSend","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/grpsend"},{"type":"case","title":"case haicrypt","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/haicrypt"},{"type":"case","title":"case `internal`","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/internal"},{"type":"case","title":"case pfilter","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/pfilter"},{"type":"case","title":"case queCtrl","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/quectrl"},{"type":"case","title":"case queMgmt","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/quemgmt"},{"type":"case","title":"case queRecv","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/querecv"},{"type":"case","title":"case queSend","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/quesend"},{"type":"case","title":"case rsrc","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/rsrc"},{"type":"case","title":"case tsbpd","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/tsbpd"},{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init?(rawValue: Int32)","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/init(rawvalue:)"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/!=(_:_:)","type":"op"}],"type":"symbol","title":"Equatable Implementations","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/equatable-implementations"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"type":"property","title":"var hashValue: Int","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/hashvalue"},{"title":"Instance Methods","type":"groupMarker"},{"type":"method","title":"func hash(into: inout Hasher)","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/hash(into:)"}],"type":"symbol","title":"RawRepresentable Implementations","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/rawrepresentable-implementations"}]},{"path":"\/documentation\/srthaishinkit\/srtloglevel","title":"SRTLogLevel","type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","title":"case crit","path":"\/documentation\/srthaishinkit\/srtloglevel\/crit"},{"type":"case","title":"case debug","path":"\/documentation\/srthaishinkit\/srtloglevel\/debug"},{"type":"case","title":"case error","path":"\/documentation\/srthaishinkit\/srtloglevel\/error"},{"type":"case","title":"case notice","path":"\/documentation\/srthaishinkit\/srtloglevel\/notice"},{"type":"case","title":"case warning","path":"\/documentation\/srthaishinkit\/srtloglevel\/warning"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/srthaishinkit\/srtloglevel\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}],"title":"Equatable Implementations","path":"\/documentation\/srthaishinkit\/srtloglevel\/equatable-implementations"}]},{"path":"\/documentation\/srthaishinkit\/srtrejectreason","title":"SRTRejectReason","type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case backlog","path":"\/documentation\/srthaishinkit\/srtrejectreason\/backlog","type":"case"},{"title":"case badsecret","path":"\/documentation\/srthaishinkit\/srtrejectreason\/badsecret","type":"case"},{"title":"case close","path":"\/documentation\/srthaishinkit\/srtrejectreason\/close","type":"case"},{"title":"case congestion","path":"\/documentation\/srthaishinkit\/srtrejectreason\/congestion","type":"case"},{"title":"case crypto","path":"\/documentation\/srthaishinkit\/srtrejectreason\/crypto","type":"case"},{"title":"case filter","path":"\/documentation\/srthaishinkit\/srtrejectreason\/filter","type":"case"},{"title":"case group","path":"\/documentation\/srthaishinkit\/srtrejectreason\/group","type":"case"},{"title":"case ipe","path":"\/documentation\/srthaishinkit\/srtrejectreason\/ipe","type":"case"},{"title":"case messageapi","path":"\/documentation\/srthaishinkit\/srtrejectreason\/messageapi","type":"case"},{"title":"case peer","path":"\/documentation\/srthaishinkit\/srtrejectreason\/peer","type":"case"},{"title":"case rdvcookie","path":"\/documentation\/srthaishinkit\/srtrejectreason\/rdvcookie","type":"case"},{"title":"case resource","path":"\/documentation\/srthaishinkit\/srtrejectreason\/resource","type":"case"},{"title":"case rogue","path":"\/documentation\/srthaishinkit\/srtrejectreason\/rogue","type":"case"},{"title":"case system","path":"\/documentation\/srthaishinkit\/srtrejectreason\/system","type":"case"},{"title":"case timeout","path":"\/documentation\/srthaishinkit\/srtrejectreason\/timeout","type":"case"},{"title":"case unknown","path":"\/documentation\/srthaishinkit\/srtrejectreason\/unknown","type":"case"},{"title":"case unsecure","path":"\/documentation\/srthaishinkit\/srtrejectreason\/unsecure","type":"case"},{"title":"case version","path":"\/documentation\/srthaishinkit\/srtrejectreason\/version","type":"case"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: Int)","path":"\/documentation\/srthaishinkit\/srtrejectreason\/init(rawvalue:)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","path":"\/documentation\/srthaishinkit\/srtrejectreason\/equatable-implementations","type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/srthaishinkit\/srtrejectreason\/!=(_:_:)"}]},{"title":"RawRepresentable Implementations","path":"\/documentation\/srthaishinkit\/srtrejectreason\/rawrepresentable-implementations","type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","type":"property","path":"\/documentation\/srthaishinkit\/srtrejectreason\/hashvalue"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func hash(into: inout Hasher)","type":"method","path":"\/documentation\/srthaishinkit\/srtrejectreason\/hash(into:)"}]}]}],"type":"module"},{"title":"MoQTHaishinKit","path":"\/documentation\/moqthaishinkit","children":[{"title":"Classes","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection","title":"MoQTConnection","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(MoQTSetupRole, requestTimeOut: UInt64)","type":"init","path":"\/documentation\/moqthaishinkit\/moqtconnection\/init(_:requesttimeout:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var objectStream: AsyncStream<MoQTObject>","type":"property","path":"\/documentation\/moqthaishinkit\/moqtconnection\/objectstream"},{"title":"let requestTimeout: UInt64","type":"property","path":"\/documentation\/moqthaishinkit\/moqtconnection\/requesttimeout"},{"title":"let role: MoQTSetupRole","type":"property","path":"\/documentation\/moqthaishinkit\/moqtconnection\/role"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func annouce([String], authInfo: String?) async throws -> Result<MoQTAnnounceOk, MoQTAnnounceError>","type":"method","path":"\/documentation\/moqthaishinkit\/moqtconnection\/annouce(_:authinfo:)"},{"title":"func close() async","type":"method","path":"\/documentation\/moqthaishinkit\/moqtconnection\/close()"},{"title":"func connect(String) async throws -> MoQTServerSetup","type":"method","path":"\/documentation\/moqthaishinkit\/moqtconnection\/connect(_:)"},{"title":"func send([MoQTObject], header: MoQTStreamHeaderSubgroup) async throws","type":"method","path":"\/documentation\/moqthaishinkit\/moqtconnection\/send(_:header:)"},{"title":"func subscribe([String], name: String, authInfo: String?) async throws -> Result<MoQTSubscribeOk, MoQTSubscribeError>","type":"method","path":"\/documentation\/moqthaishinkit\/moqtconnection\/subscribe(_:name:authinfo:)"},{"title":"func subscribeAnnouces([String], authInfo: String?) async throws -> Result<MoQTSubscribeAnnouncesOk, MoQTSubscribeAnnouncesError>","type":"method","path":"\/documentation\/moqthaishinkit\/moqtconnection\/subscribeannouces(_:authinfo:)"},{"title":"Type Properties","type":"groupMarker"},{"title":"static let defaultPort: Int","type":"property","path":"\/documentation\/moqthaishinkit\/moqtconnection\/defaultport"},{"title":"static let defaultRequestTimeout: UInt64","type":"property","path":"\/documentation\/moqthaishinkit\/moqtconnection\/defaultrequesttimeout"},{"title":"static let supportedProtocols: [String]","type":"property","path":"\/documentation\/moqthaishinkit\/moqtconnection\/supportedprotocols"},{"title":"static let supportedVersions: [MoQTVersion]","type":"property","path":"\/documentation\/moqthaishinkit\/moqtconnection\/supportedversions"},{"title":"Enumerations","type":"groupMarker"},{"title":"MoQTConnection.Error","type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/error\/connectiontimedout","title":"case connectionTimedOut","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/error\/invalidstate","title":"case invalidState","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/error\/requesttimedout","title":"case requestTimedOut","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/error\/socketerroroccurred(_:)","title":"case socketErrorOccurred(any Error)","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/error\/unknownresponse","title":"case unknownResponse","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/error\/unsupportedcommand(_:)","title":"case unsupportedCommand(String)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/error\/error-implementations","title":"Error Implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/error\/localizeddescription","type":"property","title":"var localizedDescription: String"}]}],"path":"\/documentation\/moqthaishinkit\/moqtconnection\/error"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Actor Implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/moqthaishinkit\/moqtconnection\/assertisolated(_:file:line:)","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)"},{"type":"method","path":"\/documentation\/moqthaishinkit\/moqtconnection\/assumeisolated(_:file:line:)","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T"},{"type":"method","path":"\/documentation\/moqthaishinkit\/moqtconnection\/preconditionisolated(_:file:line:)","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)"}],"path":"\/documentation\/moqthaishinkit\/moqtconnection\/actor-implementations"}],"type":"class"},{"title":"Protocols","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtcontrolmessage","title":"MoQTControlMessage","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var payload: Data","type":"property","path":"\/documentation\/moqthaishinkit\/moqtcontrolmessage\/payload"},{"title":"var type: MoQTMessageType","type":"property","path":"\/documentation\/moqthaishinkit\/moqtcontrolmessage\/type"}],"type":"protocol"},{"title":"Structures","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtannounce","title":"MoQTAnnounce","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var payload: Data","path":"\/documentation\/moqthaishinkit\/moqtannounce\/payload"},{"type":"property","title":"let subscribeParameters: [MoQTVersionSpecificParameter]","path":"\/documentation\/moqthaishinkit\/moqtannounce\/subscribeparameters"},{"type":"property","title":"let trackNamespace: [String]","path":"\/documentation\/moqthaishinkit\/moqtannounce\/tracknamespace"},{"type":"property","title":"let type: MoQTMessageType","path":"\/documentation\/moqthaishinkit\/moqtannounce\/type"}],"type":"struct"},{"path":"\/documentation\/moqthaishinkit\/moqtannounceerror","title":"MoQTAnnounceError","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"let code: Int","path":"\/documentation\/moqthaishinkit\/moqtannounceerror\/code","type":"property"},{"title":"var payload: Data","path":"\/documentation\/moqthaishinkit\/moqtannounceerror\/payload","type":"property"},{"title":"let reasonPhrase: String","path":"\/documentation\/moqthaishinkit\/moqtannounceerror\/reasonphrase","type":"property"},{"title":"let trackNamespace: [String]","path":"\/documentation\/moqthaishinkit\/moqtannounceerror\/tracknamespace","type":"property"},{"title":"let type: MoQTMessageType","path":"\/documentation\/moqthaishinkit\/moqtannounceerror\/type","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Error Implementations","path":"\/documentation\/moqthaishinkit\/moqtannounceerror\/error-implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtannounceerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"type":"symbol"}],"type":"struct"},{"path":"\/documentation\/moqthaishinkit\/moqtannounceok","title":"MoQTAnnounceOk","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/moqthaishinkit\/moqtannounceok\/payload","type":"property","title":"var payload: Data"},{"path":"\/documentation\/moqthaishinkit\/moqtannounceok\/tracknamespace","type":"property","title":"let trackNamespace: [String]"},{"path":"\/documentation\/moqthaishinkit\/moqtannounceok\/type","type":"property","title":"let type: MoQTMessageType"}],"type":"struct"},{"path":"\/documentation\/moqthaishinkit\/moqtgoaway","title":"MoQTGoaway","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"let newSessionURI: String","path":"\/documentation\/moqthaishinkit\/moqtgoaway\/newsessionuri","type":"property"},{"title":"var payload: Data","path":"\/documentation\/moqthaishinkit\/moqtgoaway\/payload","type":"property"},{"title":"let type: MoQTMessageType","path":"\/documentation\/moqthaishinkit\/moqtgoaway\/type","type":"property"}],"type":"struct"},{"path":"\/documentation\/moqthaishinkit\/moqtobject","title":"MoQTObject","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtobject\/init(id:status:data:)","title":"init(id: Int, status: Int?, data: Data)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtobject\/data","title":"let data: Data","type":"property"},{"path":"\/documentation\/moqthaishinkit\/moqtobject\/id","title":"let id: Int","type":"property"},{"path":"\/documentation\/moqthaishinkit\/moqtobject\/status","title":"let status: Int?","type":"property"}],"type":"struct"},{"path":"\/documentation\/moqthaishinkit\/moqtserversetup","title":"MoQTServerSetup","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtserversetup\/payload","title":"var payload: Data"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtserversetup\/selectedversion","title":"let selectedVersion: Int"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtserversetup\/setupparameters","title":"let setupParameters: [MoQTSetupParameter]"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtserversetup\/type","title":"let type: MoQTMessageType"}],"type":"struct"},{"path":"\/documentation\/moqthaishinkit\/moqtsetupparameter","title":"MoQTSetupParameter","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"let key: MoQTSetupParameterType","path":"\/documentation\/moqthaishinkit\/moqtsetupparameter\/key","type":"property"},{"title":"let value: any Sendable","path":"\/documentation\/moqthaishinkit\/moqtsetupparameter\/value","type":"property"}],"type":"struct"},{"path":"\/documentation\/moqthaishinkit\/moqtstreamheadersubgroup","title":"MoQTStreamHeaderSubgroup","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(trackAlias: Int, groupId: Int, subgroupId: Int, publisherPriority: Int)","path":"\/documentation\/moqthaishinkit\/moqtstreamheadersubgroup\/init(trackalias:groupid:subgroupid:publisherpriority:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let groupId: Int","path":"\/documentation\/moqthaishinkit\/moqtstreamheadersubgroup\/groupid","type":"property"},{"title":"var payload: Data","path":"\/documentation\/moqthaishinkit\/moqtstreamheadersubgroup\/payload","type":"property"},{"title":"let publisherPriority: Int","path":"\/documentation\/moqthaishinkit\/moqtstreamheadersubgroup\/publisherpriority","type":"property"},{"title":"let subgroupId: Int","path":"\/documentation\/moqthaishinkit\/moqtstreamheadersubgroup\/subgroupid","type":"property"},{"title":"let trackAlias: Int","path":"\/documentation\/moqthaishinkit\/moqtstreamheadersubgroup\/trackalias","type":"property"},{"title":"let type: MoQTDataStreamType","path":"\/documentation\/moqthaishinkit\/moqtstreamheadersubgroup\/type","type":"property"}],"type":"struct"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe","title":"MoQTSubscribe","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"let endGroup: Int?","type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/endgroup"},{"title":"let endObject: Int?","type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/endobject"},{"title":"let filterType: MoQTSubscribe.FilterType","type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.property"},{"title":"let groupOrder: MoQTSubscribe.GroupOrder","type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.property"},{"title":"var payload: Data","type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/payload"},{"title":"let startGroup: Int?","type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/startgroup"},{"title":"let startObject: Int?","type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/startobject"},{"title":"let subscribeId: Int","type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/subscribeid"},{"title":"let subscribeParameters: [MoQTVersionSpecificParameter]","type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/subscribeparameters"},{"title":"let subscribePriority: Int","type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/subscribepriority"},{"title":"let trackAlias: Int","type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/trackalias"},{"title":"let trackName: String","type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/trackname"},{"title":"let trackNamespace: [String]","type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/tracknamespace"},{"title":"let type: MoQTMessageType","type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/type"},{"title":"Enumerations","type":"groupMarker"},{"title":"MoQTSubscribe.FilterType","type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/absoluterange","type":"case","title":"case absoluteRange"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/absolutestart","type":"case","title":"case absoluteStart"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/latestgroup","type":"case","title":"case latestGroup"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/latestobject","type":"case","title":"case latestObject"},{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/init(rawvalue:)","type":"init","title":"init?(rawValue: Int)"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/equatable-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/!=(_:_:)"}],"title":"Equatable Implementations"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/rawrepresentable-implementations","type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/hashvalue"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func hash(into: inout Hasher)","type":"method","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/hash(into:)"}],"title":"RawRepresentable Implementations"}],"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum"},{"title":"MoQTSubscribe.GroupOrder","type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case ascending","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/ascending","type":"case"},{"title":"case descending","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/descending","type":"case"},{"title":"case original","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/original","type":"case"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: Int)","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/init(rawvalue:)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/!=(_:_:)"}],"title":"Equatable Implementations","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/equatable-implementations","type":"symbol"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var hashValue: Int","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/hashvalue"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func hash(into: inout Hasher)","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/hash(into:)"}],"title":"RawRepresentable Implementations","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/rawrepresentable-implementations","type":"symbol"}],"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum"}],"type":"struct"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounces","title":"MoQTSubscribeAnnounces","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounces\/parameters","type":"property","title":"let parameters: [MoQTVersionSpecificParameter]"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounces\/payload","type":"property","title":"var payload: Data"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounces\/tracknamespaceprefix","type":"property","title":"let trackNamespacePrefix: [String]"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounces\/type","type":"property","title":"let type: MoQTMessageType"}],"type":"struct"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounceserror","title":"MoQTSubscribeAnnouncesError","children":[{"title":"Instance Properties","type":"groupMarker"},{"type":"property","title":"let errorCode: Int","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounceserror\/errorcode"},{"type":"property","title":"var payload: Data","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounceserror\/payload"},{"type":"property","title":"let reasonPhrase: String","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounceserror\/reasonphrase"},{"type":"property","title":"let trackNamespacePrefix: [String]","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounceserror\/tracknamespaceprefix"},{"type":"property","title":"let type: MoQTMessageType","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounceserror\/type"},{"title":"Default Implementations","type":"groupMarker"},{"type":"symbol","title":"Error Implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var localizedDescription: String","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounceserror\/localizeddescription","type":"property"}],"path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounceserror\/error-implementations"}],"type":"struct"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeannouncesok","title":"MoQTSubscribeAnnouncesOk","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeannouncesok\/payload","title":"var payload: Data","type":"property"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeannouncesok\/tracknamespaceprefix","title":"let trackNamespacePrefix: [String]","type":"property"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeannouncesok\/type","title":"let type: MoQTMessageType","type":"property"}],"type":"struct"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror","title":"MoQTSubscribeError","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror\/code","title":"let code: Int","type":"property"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror\/payload","title":"var payload: Data","type":"property"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror\/reasonphrase","title":"let reasonPhrase: String","type":"property"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror\/subscribeid","title":"let subscribeId: Int","type":"property"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror\/trackalias","title":"let trackAlias: Int","type":"property"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror\/type","title":"let type: MoQTMessageType","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror\/error-implementations","title":"Error Implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror\/localizeddescription","title":"var localizedDescription: String"}],"type":"symbol"}],"type":"struct"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeok","title":"MoQTSubscribeOk","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/contentexists","type":"property","title":"let contentExists: Bool"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/expires","type":"property","title":"let expires: Int"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/grouporder","type":"property","title":"let groupOrder: MoQTSubscribe.GroupOrder"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/largestgroupid","type":"property","title":"let largestGroupId: Int?"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/largestobjectid","type":"property","title":"let largestObjectId: Int?"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/payload","type":"property","title":"var payload: Data"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/subscribeid","type":"property","title":"let subscribeId: Int"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/subscribeparameters","type":"property","title":"let subscribeParameters: [MoQTVersionSpecificParameter]"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/type","type":"property","title":"let type: MoQTMessageType"}],"type":"struct"},{"path":"\/documentation\/moqthaishinkit\/moqtversionspecificparameter","title":"MoQTVersionSpecificParameter","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtversionspecificparameter\/key","title":"let key: MoQTVersionSpecificType"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtversionspecificparameter\/value","title":"let value: any Sendable"}],"type":"struct"},{"title":"Enumerations","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype","title":"MoQTDataStreamType","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/fetchheader","title":"case fetchHeader","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/objectdatagram","title":"case objectDatagram","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/streamheadersubgroup","title":"case streamHeaderSubgroup","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/equatable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/!=(_:_:)"}],"title":"Equatable Implementations","type":"symbol"},{"path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/rawrepresentable-implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/hashvalue","type":"property","title":"var hashValue: Int"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/hash(into:)","type":"method","title":"func hash(into: inout Hasher)"}],"title":"RawRepresentable Implementations","type":"symbol"}],"type":"enum"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype","title":"MoQTMessageType","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/announce","title":"case announce","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/announcecancel","title":"case announceCancel","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/announceerror","title":"case announceError","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/announceok","title":"case announceOk","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/clientsetup","title":"case clientSetup","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/goaway","title":"case goaway","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/serversetup","title":"case serverSetup","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/subscribe","title":"case subscribe","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/subscribeannounuces","title":"case subscribeAnnounuces","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/subscribeannounuceserror","title":"case subscribeAnnounucesError","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/subscribeannounucesok","title":"case subscribeAnnounucesOk","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/subscribedone","title":"case subscribeDone","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/subscribeerror","title":"case subscribeError","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/subscribeok","title":"case subscribeOk","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/subscribeupdate","title":"case subscribeUpdate","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/trackstatus","title":"case trackStatus","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/trackstatusrequest","title":"case trackStatusRequest","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/unannounce","title":"case unannounce","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/unsubscribe","title":"case unsubscribe","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/equatable-implementations","title":"Equatable Implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/!=(_:_:)"}],"type":"symbol"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/hashvalue","type":"property","title":"var hashValue: Int"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/hash(into:)","type":"method","title":"func hash(into: inout Hasher)"}],"type":"symbol"}],"type":"enum"},{"path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype","title":"MoQTSetupParameterType","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/maxsubscribeid","type":"case","title":"case maxSubscribeId"},{"path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/path","type":"case","title":"case path"},{"path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/role","type":"case","title":"case role"},{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/init(rawvalue:)","type":"init","title":"init?(rawValue: Int)"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/equatable-implementations","type":"symbol","title":"Equatable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}]},{"path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/rawrepresentable-implementations","type":"symbol","title":"RawRepresentable Implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/hashvalue","type":"property","title":"var hashValue: Int"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/hash(into:)","type":"method","title":"func hash(into: inout Hasher)"}]}],"type":"enum"},{"path":"\/documentation\/moqthaishinkit\/moqtsetuprole","title":"MoQTSetupRole","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/pubsub","title":"case pubSub","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/publisher","title":"case publisher","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/subscriber","title":"case subscriber","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/equatable-implementations","title":"Equatable Implementations","type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}]},{"path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","type":"property","path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/hashvalue"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func hash(into: inout Hasher)","type":"method","path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/hash(into:)"}]}],"type":"enum"},{"path":"\/documentation\/moqthaishinkit\/moqtversion","title":"MoQTVersion","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtversion\/draft01","title":"case draft01","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtversion\/draft02","title":"case draft02","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtversion\/draft03","title":"case draft03","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtversion\/draft04","title":"case draft04","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtversion\/draft05","title":"case draft05","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtversion\/draft06","title":"case draft06","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtversion\/draft07","title":"case draft07","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtversion\/draft07exp","title":"case draft07Exp","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtversion\/draft07exp2","title":"case draft07Exp2","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtversion\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtversion\/equatable-implementations","title":"Equatable Implementations","type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/moqthaishinkit\/moqtversion\/!=(_:_:)","type":"op"}]},{"path":"\/documentation\/moqthaishinkit\/moqtversion\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","type":"property","path":"\/documentation\/moqthaishinkit\/moqtversion\/hashvalue"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func hash(into: inout Hasher)","type":"method","path":"\/documentation\/moqthaishinkit\/moqtversion\/hash(into:)"}]}],"type":"enum"},{"path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype","title":"MoQTVersionSpecificType","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/authorizationinfo","type":"case","title":"case authorizationInfo"},{"path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/deliverytimeout","type":"case","title":"case deliveryTimeout"},{"path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/maxcacheduration","type":"case","title":"case maxCacheDuration"},{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/init(rawvalue:)","type":"init","title":"init?(rawValue: Int)"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"type":"symbol","title":"Equatable Implementations"},{"path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/rawrepresentable-implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","type":"property","path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/hashvalue"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func hash(into: inout Hasher)","type":"method","path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/hash(into:)"}],"type":"symbol","title":"RawRepresentable Implementations"}],"type":"enum"}],"type":"module"},{"title":"RTMPHaishinKit","path":"\/documentation\/rtmphaishinkit","children":[{"title":"Articles","type":"groupMarker"},{"path":"\/documentation\/rtmphaishinkit\/e-rtmp","title":"Enhanced RTMP","type":"article"},{"title":"Classes","type":"groupMarker"},{"path":"\/documentation\/rtmphaishinkit\/rtmpconnection","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(swfUrl: String?, pageUrl: String?, flashVer: String, fourCcList: [String]?, videoFourCcInfoMap: AMFObject?, audioFourCcInfoMap: AMFObject?, capsEx: Int, timeout: Int, requestTimeout: UInt64, chunkSize: Int, qualityOfService: DispatchQoS)","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/init(swfurl:pageurl:flashver:fourcclist:videofourccinfomap:audiofourccinfomap:capsex:timeout:requesttimeout:chunksize:qualityofservice:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let audioFourCcInfoMap: AMFObject?","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/audiofourccinfomap","type":"property"},{"title":"let capsEx: Int","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/capsex","type":"property"},{"title":"let chunkSize: Int","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/chunksize","type":"property"},{"title":"var connected: Bool","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/connected","type":"property"},{"title":"let flashVer: String","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/flashver","type":"property"},{"title":"let fourCcList: [String]?","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/fourcclist","type":"property"},{"title":"let objectEncoding: RTMPObjectEncoding","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/objectencoding","type":"property"},{"title":"let pageUrl: String?","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/pageurl","type":"property"},{"title":"let qualityOfService: DispatchQoS","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/qualityofservice","type":"property"},{"title":"let requestTimeout: UInt64","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/requesttimeout","type":"property"},{"title":"var status: AsyncStream<RTMPStatus>","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/status","type":"property"},{"title":"let swfUrl: String?","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/swfurl","type":"property"},{"title":"let timeout: Int","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/timeout","type":"property"},{"title":"var uri: URL?","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/uri","type":"property"},{"title":"let videoFourCcInfoMap: AMFObject?","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/videofourccinfomap","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func call(String, arguments: (any Sendable)?...) async throws -> RTMPResponse","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/call(_:arguments:)","type":"method"},{"title":"func close() async throws","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/close()","type":"method"},{"title":"func connect(String, arguments: (any Sendable)?...) async throws -> RTMPResponse","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/connect(_:arguments:)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"title":"static let defaultCapabilities: Int","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/defaultcapabilities","type":"property"},{"title":"static let defaultChunkSizeS: Int","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/defaultchunksizes","type":"property"},{"title":"static let defaultFlashVer: String","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/defaultflashver","type":"property"},{"title":"static let defaultObjectEncoding: RTMPObjectEncoding","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/defaultobjectencoding","type":"property"},{"title":"static let defaultPort: Int","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/defaultport","type":"property"},{"title":"static let defaultRequestTimeout: UInt64","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/defaultrequesttimeout","type":"property"},{"title":"static let defaultSecurePort: Int","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/defaultsecureport","type":"property"},{"title":"static let defaultTimeout: Int","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/defaulttimeout","type":"property"},{"title":"static let defaultWindowSizeS: Int64","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/defaultwindowsizes","type":"property"},{"title":"static let supportedAudioFourCcInfoMap: AMFObject","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/supportedaudiofourccinfomap","type":"property"},{"title":"static let supportedFourCcList: [String]","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/supportedfourcclist","type":"property"},{"title":"static let supportedProtocols: Set<String>","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/supportedprotocols","type":"property"},{"title":"static let supportedVideoFourCcInfoMap: AMFObject","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/supportedvideofourccinfomap","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"title":"RTMPConnection.Code","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/code","type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/code\/callbadversion","type":"case","title":"case callBadVersion"},{"path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/code\/callfailed","type":"case","title":"case callFailed"},{"path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/code\/callprohibited","type":"case","title":"case callProhibited"},{"path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/code\/connectappshutdown","type":"case","title":"case connectAppshutdown"},{"path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/code\/connectclosed","type":"case","title":"case connectClosed"},{"path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/code\/connectfailed","type":"case","title":"case connectFailed"},{"path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/code\/connectidletimeout","type":"case","title":"case connectIdleTimeOut"},{"path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/code\/connectinvalidapp","type":"case","title":"case connectInvalidApp"},{"path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/code\/connectnetworkchange","type":"case","title":"case connectNetworkChange"},{"path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/code\/connectrejected","type":"case","title":"case connectRejected"},{"path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/code\/connectsuccess","type":"case","title":"case connectSuccess"},{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/code\/init(rawvalue:)","type":"init","title":"init?(rawValue: String)"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/code\/level","type":"property","title":"var level: String"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/code\/equatable-implementations","type":"symbol","title":"Equatable Implementations","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/code\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}]},{"path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/code\/rawrepresentable-implementations","type":"symbol","title":"RawRepresentable Implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/code\/hashvalue","type":"property","title":"var hashValue: Int"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/code\/hash(into:)","type":"method","title":"func hash(into: inout Hasher)"}]}]},{"title":"RTMPConnection.Error","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/error","type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case connectionTimedOut","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/error\/connectiontimedout","type":"case"},{"title":"case invalidState","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/error\/invalidstate","type":"case"},{"title":"case requestFailed(response: RTMPResponse)","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/error\/requestfailed(response:)","type":"case"},{"title":"case requestTimedOut","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/error\/requesttimedout","type":"case"},{"title":"case socketErrorOccurred((any Error)?)","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/error\/socketerroroccurred(_:)","type":"case"},{"title":"case unsupportedCommand(String)","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/error\/unsupportedcommand(_:)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var localizedDescription: String","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/error\/localizeddescription","type":"property"}],"title":"Error Implementations","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/error\/error-implementations","type":"symbol"}]},{"title":"Default Implementations","type":"groupMarker"},{"title":"Actor Implementations","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/actor-implementations","type":"symbol","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/assertisolated(_:file:line:)","type":"method"},{"title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/assumeisolated(_:file:line:)","type":"method"},{"title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/preconditionisolated(_:file:line:)","type":"method"}]}],"title":"RTMPConnection","type":"class"},{"path":"\/documentation\/rtmphaishinkit\/rtmpsharedobject","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var data: AMFObject","type":"property","path":"\/documentation\/rtmphaishinkit\/rtmpsharedobject\/data"},{"title":"let objectEncoding: RTMPObjectEncoding","type":"property","path":"\/documentation\/rtmphaishinkit\/rtmpsharedobject\/objectencoding"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func clear() async","type":"method","path":"\/documentation\/rtmphaishinkit\/rtmpsharedobject\/clear()"},{"title":"func close() async","type":"method","path":"\/documentation\/rtmphaishinkit\/rtmpsharedobject\/close()"},{"title":"func connect(RTMPConnection) async","type":"method","path":"\/documentation\/rtmphaishinkit\/rtmpsharedobject\/connect(_:)"},{"title":"func setProperty(String, (any Sendable)?) async","type":"method","path":"\/documentation\/rtmphaishinkit\/rtmpsharedobject\/setproperty(_:_:)"},{"title":"Type Methods","type":"groupMarker"},{"title":"static func getRemote(withName: String, remotePath: String, persistence: Bool) -> RTMPSharedObject","type":"method","path":"\/documentation\/rtmphaishinkit\/rtmpsharedobject\/getremote(withname:remotepath:persistence:)"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Actor Implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/rtmphaishinkit\/rtmpsharedobject\/assertisolated(_:file:line:)","type":"method"},{"title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","path":"\/documentation\/rtmphaishinkit\/rtmpsharedobject\/assumeisolated(_:file:line:)","type":"method"},{"title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/rtmphaishinkit\/rtmpsharedobject\/preconditionisolated(_:file:line:)","type":"method"}],"type":"symbol","path":"\/documentation\/rtmphaishinkit\/rtmpsharedobject\/actor-implementations"}],"title":"RTMPSharedObject","type":"class"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/init(connection:fcpublishname:)","title":"init(connection: RTMPConnection, fcPublishName: String?)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/audiosampleaccess","title":"var audioSampleAccess: Bool"},{"type":"property","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/audiotrackid","title":"var audioTrackId: UInt8?"},{"type":"property","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/currentfps","title":"var currentFPS: UInt16"},{"type":"property","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/fcpublishname","title":"var fcPublishName: String?"},{"type":"property","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/info","title":"var info: RTMPStreamInfo"},{"type":"property","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/metadata","title":"var metadata: AMFArray"},{"type":"property","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/objectencoding","title":"var objectEncoding: RTMPObjectEncoding"},{"type":"property","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/readystate","title":"var readyState: StreamReadyState"},{"type":"property","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/status","title":"var status: AsyncStream<RTMPStatus>"},{"type":"property","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/videosampleaccess","title":"var videoSampleAccess: Bool"},{"type":"property","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/videotrackid","title":"var videoTrackId: UInt8?"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/close()","title":"func close() async throws -> RTMPResponse"},{"type":"method","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/pause(_:)","title":"func pause(Bool) async throws -> RTMPResponse"},{"type":"method","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/play(_:)","title":"func play((any Sendable)?...) async throws -> RTMPResponse"},{"type":"method","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/publish(_:type:)","title":"func publish(String?, type: RTMPStream.HowToPublish) async throws -> RTMPResponse"},{"type":"method","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/receiveaudio(_:)","title":"func receiveAudio(Bool) async throws"},{"type":"method","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/receivevideo(_:)","title":"func receiveVideo(Bool) async throws"},{"type":"method","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/seek(_:)","title":"func seek(Double) async throws"},{"type":"method","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/send(_:arguments:isresettimestamp:)","title":"func send(String, arguments: (any Sendable)?..., isResetTimestamp: Bool) throws"},{"type":"method","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/togglepause()","title":"func togglePause() async throws -> RTMPResponse"},{"type":"groupMarker","title":"Enumerations"},{"type":"enum","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","title":"case bufferEmpty","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/bufferempty"},{"type":"case","title":"case bufferFlush","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/bufferflush"},{"type":"case","title":"case bufferFull","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/bufferfull"},{"type":"case","title":"case connectClosed","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/connectclosed"},{"type":"case","title":"case connectFailed","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/connectfailed"},{"type":"case","title":"case connectRejected","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/connectrejected"},{"type":"case","title":"case connectSuccess","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/connectsuccess"},{"type":"case","title":"case drmUpdateNeeded","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/drmupdateneeded"},{"type":"case","title":"case failed","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/failed"},{"type":"case","title":"case multicastStreamReset","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/multicaststreamreset"},{"type":"case","title":"case pauseNotify","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/pausenotify"},{"type":"case","title":"case playFailed","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/playfailed"},{"type":"case","title":"case playFileStructureInvalid","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/playfilestructureinvalid"},{"type":"case","title":"case playInsufficientBW","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/playinsufficientbw"},{"type":"case","title":"case playNoSupportedTrackFound","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/playnosupportedtrackfound"},{"type":"case","title":"case playReset","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/playreset"},{"type":"case","title":"case playStart","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/playstart"},{"type":"case","title":"case playStop","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/playstop"},{"type":"case","title":"case playStreamNotFound","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/playstreamnotfound"},{"type":"case","title":"case playTransition","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/playtransition"},{"type":"case","title":"case playUnpublishNotify","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/playunpublishnotify"},{"type":"case","title":"case publishBadName","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/publishbadname"},{"type":"case","title":"case publishIdle","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/publishidle"},{"type":"case","title":"case publishStart","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/publishstart"},{"type":"case","title":"case recordAlreadyExists","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/recordalreadyexists"},{"type":"case","title":"case recordDiskQuotaExceeded","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/recorddiskquotaexceeded"},{"type":"case","title":"case recordFailed","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/recordfailed"},{"type":"case","title":"case recordNoAccess","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/recordnoaccess"},{"type":"case","title":"case recordStart","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/recordstart"},{"type":"case","title":"case recordStop","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/recordstop"},{"type":"case","title":"case secondScreenStart","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/secondscreenstart"},{"type":"case","title":"case secondScreenStop","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/secondscreenstop"},{"type":"case","title":"case seekFailed","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/seekfailed"},{"type":"case","title":"case seekInvalidTime","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/seekinvalidtime"},{"type":"case","title":"case seekNotify","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/seeknotify"},{"type":"case","title":"case stepNotify","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/stepnotify"},{"type":"case","title":"case unpauseNotify","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/unpausenotify"},{"type":"case","title":"case unpublishSuccess","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/unpublishsuccess"},{"type":"case","title":"case videoDimensionChange","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/videodimensionchange"},{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init?(rawValue: String)","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/init(rawvalue:)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var level: String","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/level"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","title":"Equatable Implementations","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/!=(_:_:)"}]},{"type":"symbol","title":"RawRepresentable Implementations","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/rawrepresentable-implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","type":"property","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/hashvalue"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func hash(into: inout Hasher)","type":"method","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/hash(into:)"}]}],"title":"RTMPStream.Code"},{"type":"enum","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/error","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/error\/invalidstate","title":"case invalidState","type":"case"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/error\/requestfailed(response:)","title":"case requestFailed(response: RTMPResponse)","type":"case"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/error\/requesttimedout","title":"case requestTimedOut","type":"case"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/error\/unsupportedcodec","title":"case unsupportedCodec","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/error\/error-implementations","title":"Error Implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var localizedDescription: String","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/error\/localizeddescription","type":"property"}],"type":"symbol"}],"title":"RTMPStream.Error"},{"type":"enum","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/howtopublish","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/howtopublish\/append","type":"case","title":"case append"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/howtopublish\/appendwithgap","type":"case","title":"case appendWithGap"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/howtopublish\/live","type":"case","title":"case live"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/howtopublish\/record","type":"case","title":"case record"},{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/howtopublish\/init(rawvalue:)","type":"init","title":"init?(rawValue: String)"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/howtopublish\/equatable-implementations","type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/howtopublish\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"title":"Equatable Implementations"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/howtopublish\/rawrepresentable-implementations","type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/howtopublish\/hashvalue","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func hash(into: inout Hasher)","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/howtopublish\/hash(into:)","type":"method"}],"title":"RawRepresentable Implementations"}],"title":"RTMPStream.HowToPublish"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/actor-implementations","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/assertisolated(_:file:line:)"},{"type":"method","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/assumeisolated(_:file:line:)"},{"type":"method","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/preconditionisolated(_:file:line:)"}],"title":"Actor Implementations"},{"type":"symbol","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/mediamixeroutput-implementations","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/mixer(_:didoutput:)","title":"func mixer(MediaMixer, didOutput: CMSampleBuffer)"},{"type":"method","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/mixer(_:didoutput:when:)","title":"func mixer(MediaMixer, didOutput: AVAudioPCMBuffer, when: AVAudioTime)"},{"type":"method","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/selecttrack(_:mediatype:)","title":"func selectTrack(UInt8?, mediaType: CMFormatDescription.MediaType)"}],"title":"MediaMixerOutput Implementations"},{"type":"symbol","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/streamconvertible-implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var audioSettings: AudioCodecSettings","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/audiosettings","type":"property"},{"title":"var soundTransform: SoundTransform?","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/soundtransform","type":"property"},{"title":"var videoSettings: VideoCodecSettings","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/videosettings","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func addOutput(some StreamOutput)","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/addoutput(_:)","type":"method"},{"title":"func append(CMSampleBuffer)","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/append(_:)","type":"method"},{"title":"func append(AVAudioBuffer, when: AVAudioTime)","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/append(_:when:)","type":"method"},{"title":"func attachAudioPlayer(AudioPlayer?) async","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/attachaudioplayer(_:)","type":"method"},{"title":"func dispatch(NetworkMonitorEvent) async","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/dispatch(_:)","type":"method"},{"title":"func removeOutput(some StreamOutput)","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/removeoutput(_:)","type":"method"},{"title":"func setAudioSettings(AudioCodecSettings) throws","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/setaudiosettings(_:)","type":"method"},{"title":"func setBitRateStrategy((some StreamBitRateStrategy)?)","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/setbitratestrategy(_:)","type":"method"},{"title":"func setSoundTransform(SoundTransform) async","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/setsoundtransform(_:)","type":"method"},{"title":"func setVideoInputBufferCounts(Int)","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/setvideoinputbuffercounts(_:)","type":"method"},{"title":"func setVideoSettings(VideoCodecSettings) throws","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/setvideosettings(_:)","type":"method"}],"title":"StreamConvertible Implementations"}],"title":"RTMPStream","type":"class"},{"title":"Structures","type":"groupMarker"},{"path":"\/documentation\/rtmphaishinkit\/amfarray","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init(count: Int)","path":"\/documentation\/rtmphaishinkit\/amfarray\/init(count:)"},{"type":"init","title":"init(data: [(any Sendable)?])","path":"\/documentation\/rtmphaishinkit\/amfarray\/init(data:)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var length: Int","path":"\/documentation\/rtmphaishinkit\/amfarray\/length"},{"type":"groupMarker","title":"Subscripts"},{"type":"subscript","title":"subscript(Any) -> (any Sendable)?","path":"\/documentation\/rtmphaishinkit\/amfarray\/subscript(_:)"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var debugDescription: String","path":"\/documentation\/rtmphaishinkit\/amfarray\/debugdescription"}],"title":"CustomDebugStringConvertible Implementations","path":"\/documentation\/rtmphaishinkit\/amfarray\/customdebugstringconvertible-implementations"},{"type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/rtmphaishinkit\/amfarray\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/rtmphaishinkit\/amfarray\/==(_:_:)","title":"static func == (AMFArray, AMFArray) -> Bool","type":"op"}],"title":"Equatable Implementations","path":"\/documentation\/rtmphaishinkit\/amfarray\/equatable-implementations"},{"type":"symbol","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(arrayLiteral: (any Sendable)?...)","type":"init","path":"\/documentation\/rtmphaishinkit\/amfarray\/init(arrayliteral:)"}],"title":"ExpressibleByArrayLiteral Implementations","path":"\/documentation\/rtmphaishinkit\/amfarray\/expressiblebyarrayliteral-implementations"}],"title":"AMFArray","type":"struct"},{"path":"\/documentation\/rtmphaishinkit\/amftypedobject","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/rtmphaishinkit\/amftypedobject\/data","title":"let data: AMFObject"},{"type":"property","path":"\/documentation\/rtmphaishinkit\/amftypedobject\/typename","title":"let typeName: String"}],"title":"AMFTypedObject","type":"struct"},{"path":"\/documentation\/rtmphaishinkit\/amfundefined","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/rtmphaishinkit\/amfundefined\/description","type":"property","title":"var description: String"}],"title":"AMFUndefined","type":"struct"},{"path":"\/documentation\/rtmphaishinkit\/amfxml","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(data: String)","path":"\/documentation\/rtmphaishinkit\/amfxml\/init(data:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var description: String","path":"\/documentation\/rtmphaishinkit\/amfxml\/description","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","path":"\/documentation\/rtmphaishinkit\/amfxml\/equatable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/rtmphaishinkit\/amfxml\/!=(_:_:)"},{"type":"op","title":"static func == (AMFXML, AMFXML) -> Bool","path":"\/documentation\/rtmphaishinkit\/amfxml\/==(_:_:)"}],"type":"symbol"}],"title":"AMFXML","type":"struct"},{"path":"\/documentation\/rtmphaishinkit\/amfxmldocument","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(data: String)","path":"\/documentation\/rtmphaishinkit\/amfxmldocument\/init(data:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var description: String","path":"\/documentation\/rtmphaishinkit\/amfxmldocument\/description","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/rtmphaishinkit\/amfxmldocument\/!=(_:_:)"},{"title":"static func == (AMFXMLDocument, AMFXMLDocument) -> Bool","type":"op","path":"\/documentation\/rtmphaishinkit\/amfxmldocument\/==(_:_:)"}],"path":"\/documentation\/rtmphaishinkit\/amfxmldocument\/equatable-implementations","type":"symbol"}],"title":"AMFXMLDocument","type":"struct"},{"path":"\/documentation\/rtmphaishinkit\/hkatomic","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/rtmphaishinkit\/hkatomic\/init(_:)","type":"init","title":"init(A)"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/rtmphaishinkit\/hkatomic\/value","type":"property","title":"var value: A"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/rtmphaishinkit\/hkatomic\/mutate(_:)","type":"method","title":"func mutate((inout A) -> Void)"}],"title":"HKAtomic","type":"struct"},{"path":"\/documentation\/rtmphaishinkit\/rtmpresponse","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"let arguments: [(any Sendable)?]","type":"property","path":"\/documentation\/rtmphaishinkit\/rtmpresponse\/arguments"},{"title":"let status: RTMPStatus?","type":"property","path":"\/documentation\/rtmphaishinkit\/rtmpresponse\/status"}],"title":"RTMPResponse","type":"struct"},{"path":"\/documentation\/rtmphaishinkit\/rtmpsessionfactory","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/rtmphaishinkit\/rtmpsessionfactory\/init()","type":"init","title":"init()"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/rtmphaishinkit\/rtmpsessionfactory\/supportedprotocols","type":"property","title":"let supportedProtocols: Set<String>"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/rtmphaishinkit\/rtmpsessionfactory\/make(_:)","type":"method","title":"func make(URL) -> any Session"}],"title":"RTMPSessionFactory","type":"struct"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstatus","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"let code: String","path":"\/documentation\/rtmphaishinkit\/rtmpstatus\/code","type":"property"},{"title":"let description: String","path":"\/documentation\/rtmphaishinkit\/rtmpstatus\/description","type":"property"},{"title":"let level: String","path":"\/documentation\/rtmphaishinkit\/rtmpstatus\/level","type":"property"},{"title":"Subscripts","type":"groupMarker"},{"title":"subscript(dynamicMember _: String) -> Double?","path":"\/documentation\/rtmphaishinkit\/rtmpstatus\/subscript(dynamicmember:)-2uh36","type":"subscript"},{"title":"subscript(dynamicMember _: String) -> String?","path":"\/documentation\/rtmphaishinkit\/rtmpstatus\/subscript(dynamicmember:)-710qw","type":"subscript"}],"title":"RTMPStatus","type":"struct"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstreaminfo","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var byteCount: Int","path":"\/documentation\/rtmphaishinkit\/rtmpstreaminfo\/bytecount"},{"type":"property","title":"var currentBytesPerSecond: Int","path":"\/documentation\/rtmphaishinkit\/rtmpstreaminfo\/currentbytespersecond"},{"type":"property","title":"var resourceName: String?","path":"\/documentation\/rtmphaishinkit\/rtmpstreaminfo\/resourcename"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","title":"CustomDebugStringConvertible Implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstreaminfo\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/rtmphaishinkit\/rtmpstreaminfo\/customdebugstringconvertible-implementations"}],"title":"RTMPStreamInfo","type":"struct"},{"title":"Variables","type":"groupMarker"},{"path":"\/documentation\/rtmphaishinkit\/kamfundefined","title":"let kAMFUndefined: AMFUndefined","type":"var"},{"path":"\/documentation\/rtmphaishinkit\/krtmphaishinkitidentifier","title":"let kRTMPHaishinKitIdentifier: String","type":"var"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/rtmphaishinkit\/amfobject","title":"AMFObject","type":"typealias"},{"title":"Enumerations","type":"groupMarker"},{"path":"\/documentation\/rtmphaishinkit\/rtmpobjectencoding","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","title":"case amf0","path":"\/documentation\/rtmphaishinkit\/rtmpobjectencoding\/amf0"},{"type":"case","title":"case amf3","path":"\/documentation\/rtmphaishinkit\/rtmpobjectencoding\/amf3"},{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init?(rawValue: UInt8)","path":"\/documentation\/rtmphaishinkit\/rtmpobjectencoding\/init(rawvalue:)"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","title":"Equatable Implementations","path":"\/documentation\/rtmphaishinkit\/rtmpobjectencoding\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/rtmphaishinkit\/rtmpobjectencoding\/!=(_:_:)"}]},{"type":"symbol","title":"RawRepresentable Implementations","path":"\/documentation\/rtmphaishinkit\/rtmpobjectencoding\/rawrepresentable-implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/rtmphaishinkit\/rtmpobjectencoding\/hashvalue","type":"property","title":"var hashValue: Int"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/rtmphaishinkit\/rtmpobjectencoding\/hash(into:)","type":"method","title":"func hash(into: inout Hasher)"}]}],"title":"RTMPObjectEncoding","type":"enum"}],"type":"module"}]}]}}