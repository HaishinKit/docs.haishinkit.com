{"interfaceLanguages":{"swift":[{"title":"HaishinKit","type":"module","path":"\/documentation","children":[{"type":"module","children":[{"title":"Classes","type":"groupMarker"},{"title":"ConsoleAppender","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/logboard\/consoleappender\/init()","title":"init()"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/logboard\/consoleappender\/append(_:level:format:arguments:file:function:line:)","title":"func append(LBLogger, level: LBLogger.Level, format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)"},{"type":"method","path":"\/documentation\/logboard\/consoleappender\/append(_:level:message:file:function:line:)","title":"func append(LBLogger, level: LBLogger.Level, message: [Any], file: StaticString, function: StaticString, line: Int)"}],"path":"\/documentation\/logboard\/consoleappender","type":"class"},{"title":"LBLogger","children":[{"title":"Structures","type":"groupMarker"},{"title":"LBLogger.Data","path":"\/documentation\/logboard\/lblogger\/data","type":"struct","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/logboard\/lblogger\/data\/init(_:)","title":"init?(Data)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/logboard\/lblogger\/data\/date","title":"let date: Date"},{"type":"property","path":"\/documentation\/logboard\/lblogger\/data\/file","title":"let file: String"},{"type":"property","path":"\/documentation\/logboard\/lblogger\/data\/function","title":"let function: String"},{"type":"property","path":"\/documentation\/logboard\/lblogger\/data\/identifier","title":"let identifier: String"},{"type":"property","path":"\/documentation\/logboard\/lblogger\/data\/level","title":"let level: LBLogger.Level"},{"type":"property","path":"\/documentation\/logboard\/lblogger\/data\/line","title":"let line: Int"},{"type":"property","path":"\/documentation\/logboard\/lblogger\/data\/message","title":"let message: String"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","title":"CustomStringConvertible Implementations","path":"\/documentation\/logboard\/lblogger\/data\/customstringconvertible-implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var description: String","type":"property","path":"\/documentation\/logboard\/lblogger\/data\/description"}]}]},{"title":"Initializers","type":"groupMarker"},{"title":"init(String)","path":"\/documentation\/logboard\/lblogger\/init(_:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var appender: any LBLoggerAppender","path":"\/documentation\/logboard\/lblogger\/appender","type":"property"},{"title":"let identifier: String","path":"\/documentation\/logboard\/lblogger\/identifier","type":"property"},{"title":"var level: LBLogger.Level","path":"\/documentation\/logboard\/lblogger\/level-swift.property","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func debug(Any..., file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/lblogger\/debug(_:file:function:line:)","type":"method"},{"title":"func debug(format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/lblogger\/debug(format:arguments:file:function:line:)","type":"method"},{"title":"func error(Any..., file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/lblogger\/error(_:file:function:line:)","type":"method"},{"title":"func error(format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/lblogger\/error(format:arguments:file:function:line:)","type":"method"},{"title":"func info(Any..., file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/lblogger\/info(_:file:function:line:)","type":"method"},{"title":"func info(format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/lblogger\/info(format:arguments:file:function:line:)","type":"method"},{"title":"func isEnabledFor(level: LBLogger.Level) -> Bool","path":"\/documentation\/logboard\/lblogger\/isenabledfor(level:)","type":"method"},{"title":"func trace(Any..., file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/lblogger\/trace(_:file:function:line:)","type":"method"},{"title":"func trace(format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/lblogger\/trace(format:arguments:file:function:line:)","type":"method"},{"title":"func warn(Any..., file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/lblogger\/warn(_:file:function:line:)","type":"method"},{"title":"func warn(format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/lblogger\/warn(format:arguments:file:function:line:)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"title":"static var dateFormatter: DateFormatter","path":"\/documentation\/logboard\/lblogger\/dateformatter","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"title":"static func with(String) -> LBLogger","path":"\/documentation\/logboard\/lblogger\/with(_:)","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"title":"LBLogger.Level","path":"\/documentation\/logboard\/lblogger\/level-swift.enum","type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case debug","path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/debug","type":"case"},{"title":"case error","path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/error","type":"case"},{"title":"case info","path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/info","type":"case"},{"title":"case trace","path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/trace","type":"case"},{"title":"case warn","path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/warn","type":"case"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: Int)","path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/init(rawvalue:)","type":"init"},{"title":"init?(string: String)","path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/init(string:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var description: String","path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/description","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/equatable-implementations","type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/!=(_:_:)","type":"op"}]},{"title":"RawRepresentable Implementations","path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/rawrepresentable-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var hashValue: Int","path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/hashvalue"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func hash(into: inout Hasher)","path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/hash(into:)"}]}]}],"path":"\/documentation\/logboard\/lblogger","type":"class"},{"title":"MultiAppender","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init()","type":"init","path":"\/documentation\/logboard\/multiappender\/init()"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var appenders: [any LBLoggerAppender]","type":"property","path":"\/documentation\/logboard\/multiappender\/appenders"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func append(LBLogger, level: LBLogger.Level, format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)","type":"method","path":"\/documentation\/logboard\/multiappender\/append(_:level:format:arguments:file:function:line:)"},{"title":"func append(LBLogger, level: LBLogger.Level, message: [Any], file: StaticString, function: StaticString, line: Int)","type":"method","path":"\/documentation\/logboard\/multiappender\/append(_:level:message:file:function:line:)"}],"path":"\/documentation\/logboard\/multiappender","type":"class"},{"title":"NullAppender","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func append(LBLogger, level: LBLogger.Level, format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/nullappender\/append(_:level:format:arguments:file:function:line:)","type":"method"},{"title":"func append(LBLogger, level: LBLogger.Level, message: [Any], file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/nullappender\/append(_:level:message:file:function:line:)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"title":"static let shared: NullAppender","path":"\/documentation\/logboard\/nullappender\/shared","type":"property"}],"path":"\/documentation\/logboard\/nullappender","type":"class"},{"title":"OSLoggerAppender","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/logboard\/osloggerappender\/init(sybsystem:category:)","title":"init(sybsystem: String, category: String)"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/logboard\/osloggerappender\/append(_:level:format:arguments:file:function:line:)","title":"func append(LBLogger, level: LBLogger.Level, format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)"},{"type":"method","path":"\/documentation\/logboard\/osloggerappender\/append(_:level:message:file:function:line:)","title":"func append(LBLogger, level: LBLogger.Level, message: [Any], file: StaticString, function: StaticString, line: Int)"}],"path":"\/documentation\/logboard\/osloggerappender","type":"class"},{"title":"SocketAppender","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init()","type":"init","path":"\/documentation\/logboard\/socketappender\/init()"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func append(LBLogger, level: LBLogger.Level, format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)","type":"method","path":"\/documentation\/logboard\/socketappender\/append(_:level:format:arguments:file:function:line:)"},{"title":"func append(LBLogger, level: LBLogger.Level, message: [Any], file: StaticString, function: StaticString, line: Int)","type":"method","path":"\/documentation\/logboard\/socketappender\/append(_:level:message:file:function:line:)"},{"title":"func close()","type":"method","path":"\/documentation\/logboard\/socketappender\/close()"},{"title":"func connect(String, port: Int)","type":"method","path":"\/documentation\/logboard\/socketappender\/connect(_:port:)"}],"path":"\/documentation\/logboard\/socketappender","type":"class"},{"title":"Protocols","type":"groupMarker"},{"title":"LBLoggerAppender","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func append(LBLogger, level: LBLogger.Level, format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/lbloggerappender\/append(_:level:format:arguments:file:function:line:)"},{"type":"method","title":"func append(LBLogger, level: LBLogger.Level, message: [Any], file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/lbloggerappender\/append(_:level:message:file:function:line:)"}],"path":"\/documentation\/logboard\/lbloggerappender","type":"protocol"}],"title":"Logboard","path":"\/documentation\/logboard"},{"type":"module","children":[{"title":"Articles","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/e-rtmp","title":"Enhanced RTMP","type":"article"},{"title":"Classes","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/assetscreenobject","children":[{"title":"Instance Properties","type":"groupMarker"},{"type":"property","title":"var chromaKeyColor: CGColor?","path":"\/documentation\/haishinkit\/assetscreenobject\/chromakeycolor"},{"type":"property","title":"var isReading: Bool","path":"\/documentation\/haishinkit\/assetscreenobject\/isreading"},{"type":"property","title":"var videoGravity: AVLayerVideoGravity","path":"\/documentation\/haishinkit\/assetscreenobject\/videogravity"},{"title":"Instance Methods","type":"groupMarker"},{"type":"method","title":"func cancelReading()","path":"\/documentation\/haishinkit\/assetscreenobject\/cancelreading()"},{"type":"method","title":"func makeBounds(CGSize) -> CGRect","path":"\/documentation\/haishinkit\/assetscreenobject\/makebounds(_:)"},{"type":"method","title":"func makeImage(some ScreenRenderer) -> CGImage?","path":"\/documentation\/haishinkit\/assetscreenobject\/makeimage(_:)"},{"type":"method","title":"func startReading(AVAsset) throws","path":"\/documentation\/haishinkit\/assetscreenobject\/startreading(_:)"}],"title":"AssetScreenObject","type":"class"},{"path":"\/documentation\/haishinkit\/audiodeviceunit","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var connection: AVCaptureConnection?","path":"\/documentation\/haishinkit\/audiodeviceunit\/connection"},{"type":"property","title":"var device: AVCaptureDevice?","path":"\/documentation\/haishinkit\/audiodeviceunit\/device"},{"type":"property","title":"var input: AVCaptureInput?","path":"\/documentation\/haishinkit\/audiodeviceunit\/input"},{"type":"property","title":"var output: AudioDeviceUnit.Output?","path":"\/documentation\/haishinkit\/audiodeviceunit\/output-swift.property"},{"type":"property","title":"let track: UInt8","path":"\/documentation\/haishinkit\/audiodeviceunit\/track"},{"type":"groupMarker","title":"Type Aliases"},{"type":"typealias","title":"AudioDeviceUnit.Output","path":"\/documentation\/haishinkit\/audiodeviceunit\/output-swift.typealias"}],"title":"AudioDeviceUnit","type":"class"},{"path":"\/documentation\/haishinkit\/audioplayer","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/audioplayer\/init(audioengine:)","title":"init(audioEngine: AVAudioEngine)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/audioplayer\/actor-implementations","title":"Actor Implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/haishinkit\/audioplayer\/assertisolated(_:file:line:)"},{"type":"method","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","path":"\/documentation\/haishinkit\/audioplayer\/assumeisolated(_:file:line:)"},{"type":"method","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/haishinkit\/audioplayer\/preconditionisolated(_:file:line:)"}]}],"title":"AudioPlayer","type":"class"},{"path":"\/documentation\/haishinkit\/hkincomingstream","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(some HKStream)","type":"init","path":"\/documentation\/haishinkit\/hkincomingstream\/init(_:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var isRunning: Bool","type":"property","path":"\/documentation\/haishinkit\/hkincomingstream\/isrunning"},{"title":"var soundTransfrom: SoundTransform?","type":"property","path":"\/documentation\/haishinkit\/hkincomingstream\/soundtransfrom"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func append(CMSampleBuffer)","type":"method","path":"\/documentation\/haishinkit\/hkincomingstream\/append(_:)"},{"title":"func append(AVAudioBuffer, when: AVAudioTime)","type":"method","path":"\/documentation\/haishinkit\/hkincomingstream\/append(_:when:)"},{"title":"func attachAudioPlayer(AudioPlayer?) async","type":"method","path":"\/documentation\/haishinkit\/hkincomingstream\/attachaudioplayer(_:)"},{"title":"func setSoundTransform(SoundTransform) async","type":"method","path":"\/documentation\/haishinkit\/hkincomingstream\/setsoundtransform(_:)"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Actor Implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/hkincomingstream\/assertisolated(_:file:line:)","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method"},{"path":"\/documentation\/haishinkit\/hkincomingstream\/assumeisolated(_:file:line:)","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","type":"method"},{"title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method","path":"\/documentation\/haishinkit\/hkincomingstream\/preconditionisolated(_:file:line:)"}],"path":"\/documentation\/haishinkit\/hkincomingstream\/actor-implementations"},{"path":"\/documentation\/haishinkit\/hkincomingstream\/asyncrunner-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/haishinkit\/hkincomingstream\/startrunning()","title":"func startRunning()"},{"type":"method","path":"\/documentation\/haishinkit\/hkincomingstream\/stoprunning()","title":"func stopRunning()"}],"title":"AsyncRunner Implementations"}],"title":"HKIncomingStream","type":"class"},{"type":"class","path":"\/documentation\/haishinkit\/hkoutgoingstream","title":"HKOutgoingStream","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init()","path":"\/documentation\/haishinkit\/hkoutgoingstream\/init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var audioInputFormat: CMFormatDescription?","path":"\/documentation\/haishinkit\/hkoutgoingstream\/audioinputformat","type":"property"},{"title":"var audioOutputStream: AsyncStream<(AVAudioBuffer, AVAudioTime)>","path":"\/documentation\/haishinkit\/hkoutgoingstream\/audiooutputstream","type":"property"},{"title":"var audioSettings: AudioCodecSettings","path":"\/documentation\/haishinkit\/hkoutgoingstream\/audiosettings","type":"property"},{"title":"var isRunning: Bool","path":"\/documentation\/haishinkit\/hkoutgoingstream\/isrunning","type":"property"},{"title":"var videoInputBufferCounts: Int","path":"\/documentation\/haishinkit\/hkoutgoingstream\/videoinputbuffercounts","type":"property"},{"title":"var videoInputFormat: CMFormatDescription?","path":"\/documentation\/haishinkit\/hkoutgoingstream\/videoinputformat","type":"property"},{"title":"var videoInputStream: AsyncStream<CMSampleBuffer>","path":"\/documentation\/haishinkit\/hkoutgoingstream\/videoinputstream","type":"property"},{"title":"var videoOutputStream: AsyncStream<CMSampleBuffer>","path":"\/documentation\/haishinkit\/hkoutgoingstream\/videooutputstream","type":"property"},{"type":"property","path":"\/documentation\/haishinkit\/hkoutgoingstream\/videosettings","title":"var videoSettings: VideoCodecSettings"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/haishinkit\/hkoutgoingstream\/append(_:)","title":"func append(CMSampleBuffer)"},{"type":"method","path":"\/documentation\/haishinkit\/hkoutgoingstream\/append(_:when:)","title":"func append(AVAudioBuffer, when: AVAudioTime)"},{"type":"method","path":"\/documentation\/haishinkit\/hkoutgoingstream\/append(video:)","title":"func append(video: CMSampleBuffer)"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/hkoutgoingstream\/startrunning()","title":"func startRunning()","type":"method"},{"path":"\/documentation\/haishinkit\/hkoutgoingstream\/stoprunning()","title":"func stopRunning()","type":"method"}],"type":"symbol","path":"\/documentation\/haishinkit\/hkoutgoingstream\/runner-implementations","title":"Runner Implementations"}]},{"type":"class","path":"\/documentation\/haishinkit\/hkstreamrecorder","title":"HKStreamRecorder","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init()","path":"\/documentation\/haishinkit\/hkstreamrecorder\/init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var audioTrackId: UInt8?","path":"\/documentation\/haishinkit\/hkstreamrecorder\/audiotrackid","type":"property"},{"title":"var isRecording: Bool","path":"\/documentation\/haishinkit\/hkstreamrecorder\/isrecording","type":"property"},{"title":"var movieFragmentInterval: Double?","path":"\/documentation\/haishinkit\/hkstreamrecorder\/moviefragmentinterval","type":"property"},{"title":"var moviesDirectory: URL","path":"\/documentation\/haishinkit\/hkstreamrecorder\/moviesdirectory","type":"property"},{"title":"var outputURL: URL?","path":"\/documentation\/haishinkit\/hkstreamrecorder\/outputurl","type":"property"},{"title":"var settings: [AVMediaType : [String : any Sendable]]","path":"\/documentation\/haishinkit\/hkstreamrecorder\/settings","type":"property"},{"title":"var videoTrackId: UInt8?","path":"\/documentation\/haishinkit\/hkstreamrecorder\/videotrackid","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func selectTrack(UInt8?, mediaType: CMFormatDescription.MediaType)","path":"\/documentation\/haishinkit\/hkstreamrecorder\/selecttrack(_:mediatype:)","type":"method"},{"title":"func setMovieFragmentInterval(Double?)","path":"\/documentation\/haishinkit\/hkstreamrecorder\/setmoviefragmentinterval(_:)","type":"method"},{"title":"func setMovieFragmentInterval(movieFragmentInterval: Double?)","path":"\/documentation\/haishinkit\/hkstreamrecorder\/setmoviefragmentinterval(moviefragmentinterval:)","type":"method"},{"title":"func startRecording(URL?, settings: [AVMediaType : [String : any Sendable]]) async throws","path":"\/documentation\/haishinkit\/hkstreamrecorder\/startrecording(_:settings:)","type":"method"},{"title":"func stopRecording() async throws -> URL","path":"\/documentation\/haishinkit\/hkstreamrecorder\/stoprecording()","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"title":"static let defaultSettings: [AVMediaType : [String : any Sendable]]","path":"\/documentation\/haishinkit\/hkstreamrecorder\/defaultsettings","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"title":"HKStreamRecorder.Error","path":"\/documentation\/haishinkit\/hkstreamrecorder\/error","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","path":"\/documentation\/haishinkit\/hkstreamrecorder\/error\/failedtoappend(error:)","title":"case failedToAppend(error: (any Error)?)"},{"type":"case","path":"\/documentation\/haishinkit\/hkstreamrecorder\/error\/failedtocreateassetwriter(error:)","title":"case failedToCreateAssetWriter(error: any Error)"},{"type":"case","path":"\/documentation\/haishinkit\/hkstreamrecorder\/error\/failedtocreateassetwriterinput(error:)","title":"case failedToCreateAssetWriterInput(error: any Error)"},{"type":"case","path":"\/documentation\/haishinkit\/hkstreamrecorder\/error\/failedtofinishwriting(error:)","title":"case failedToFinishWriting(error: (any Error)?)"},{"type":"case","path":"\/documentation\/haishinkit\/hkstreamrecorder\/error\/filealreadyexists(outputurl:)","title":"case fileAlreadyExists(outputURL: URL)"},{"type":"case","path":"\/documentation\/haishinkit\/hkstreamrecorder\/error\/invalidstate","title":"case invalidState"},{"type":"case","path":"\/documentation\/haishinkit\/hkstreamrecorder\/error\/notsupportedfiletype(pathextension:)","title":"case notSupportedFileType(pathExtension: String)"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","path":"\/documentation\/haishinkit\/hkstreamrecorder\/error\/error-implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var localizedDescription: String","path":"\/documentation\/haishinkit\/hkstreamrecorder\/error\/localizeddescription"}],"title":"Error Implementations"}],"type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Actor Implementations","path":"\/documentation\/haishinkit\/hkstreamrecorder\/actor-implementations","children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/assertisolated(_:file:line:)","type":"method","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/assumeisolated(_:file:line:)","type":"method","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/preconditionisolated(_:file:line:)","type":"method","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)"}],"type":"symbol"},{"title":"HKStreamOutput Implementations","path":"\/documentation\/haishinkit\/hkstreamrecorder\/hkstreamoutput-implementations","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/haishinkit\/hkstreamrecorder\/stream(_:didoutput:)","title":"func stream(some HKStream, didOutput: CMSampleBuffer)"},{"type":"method","path":"\/documentation\/haishinkit\/hkstreamrecorder\/stream(_:didoutput:when:)","title":"func stream(some HKStream, didOutput: AVAudioBuffer, when: AVAudioTime)"}],"type":"symbol"},{"title":"MediaMixerOutput Implementations","path":"\/documentation\/haishinkit\/hkstreamrecorder\/mediamixeroutput-implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/mixer(_:didoutput:)","title":"func mixer(MediaMixer, didOutput: CMSampleBuffer)","type":"method"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/mixer(_:didoutput:when:)","title":"func mixer(MediaMixer, didOutput: AVAudioPCMBuffer, when: AVAudioTime)","type":"method"}],"type":"symbol"}]},{"type":"class","path":"\/documentation\/haishinkit\/hkstreamvideoadaptivebitratestrategy","title":"HKStreamVideoAdaptiveBitRateStrategy","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(mamimumVideoBitrate: Int)","path":"\/documentation\/haishinkit\/hkstreamvideoadaptivebitratestrategy\/init(mamimumvideobitrate:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let mamimumAudioBitRate: Int","path":"\/documentation\/haishinkit\/hkstreamvideoadaptivebitratestrategy\/mamimumaudiobitrate","type":"property"},{"title":"let mamimumVideoBitRate: Int","path":"\/documentation\/haishinkit\/hkstreamvideoadaptivebitratestrategy\/mamimumvideobitrate","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func adjustBitrate(NetworkMonitorEvent, stream: some HKStream) async","path":"\/documentation\/haishinkit\/hkstreamvideoadaptivebitratestrategy\/adjustbitrate(_:stream:)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"title":"static let statusCountsThreshold: Int","path":"\/documentation\/haishinkit\/hkstreamvideoadaptivebitratestrategy\/statuscountsthreshold","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Actor Implementations","path":"\/documentation\/haishinkit\/hkstreamvideoadaptivebitratestrategy\/actor-implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/haishinkit\/hkstreamvideoadaptivebitratestrategy\/assertisolated(_:file:line:)","type":"method"},{"title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","path":"\/documentation\/haishinkit\/hkstreamvideoadaptivebitratestrategy\/assumeisolated(_:file:line:)","type":"method"},{"title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/haishinkit\/hkstreamvideoadaptivebitratestrategy\/preconditionisolated(_:file:line:)","type":"method"}],"type":"symbol"}]},{"type":"class","path":"\/documentation\/haishinkit\/imagescreenobject","title":"ImageScreenObject","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/imagescreenobject\/cgimage","type":"property","title":"var cgImage: CGImage?"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/imagescreenobject\/makebounds(_:)","type":"method","title":"func makeBounds(CGSize) -> CGRect"},{"path":"\/documentation\/haishinkit\/imagescreenobject\/makeimage(_:)","type":"method","title":"func makeImage(some ScreenRenderer) -> CGImage?"}]},{"type":"class","path":"\/documentation\/haishinkit\/mthkview","title":"MTHKView","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(coder: NSCoder)","type":"init","path":"\/documentation\/haishinkit\/mthkview\/init(coder:)"},{"title":"init(frame: CGRect)","type":"init","path":"\/documentation\/haishinkit\/mthkview\/init(frame:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var audioTrackId: UInt8?","type":"property","path":"\/documentation\/haishinkit\/mthkview\/audiotrackid"},{"title":"var videoGravity: AVLayerVideoGravity","type":"property","path":"\/documentation\/haishinkit\/mthkview\/videogravity"},{"title":"var videoTrackId: UInt8?","type":"property","path":"\/documentation\/haishinkit\/mthkview\/videotrackid"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func awakeFromNib()","type":"method","path":"\/documentation\/haishinkit\/mthkview\/awakefromnib()"},{"title":"func draw(CGRect)","type":"method","path":"\/documentation\/haishinkit\/mthkview\/draw(_:)"},{"title":"func registerVideoEffect(some VideoEffect) -> Bool","type":"method","path":"\/documentation\/haishinkit\/mthkview\/registervideoeffect(_:)"},{"title":"func unregisterVideoEffect(some VideoEffect) -> Bool","type":"method","path":"\/documentation\/haishinkit\/mthkview\/unregistervideoeffect(_:)"},{"title":"Default Implementations","type":"groupMarker"},{"title":"HKStreamOutput Implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/mthkview\/stream(_:didoutput:)","type":"method","title":"func stream(some HKStream, didOutput: CMSampleBuffer)"},{"path":"\/documentation\/haishinkit\/mthkview\/stream(_:didoutput:when:)","type":"method","title":"func stream(some HKStream, didOutput: AVAudioBuffer, when: AVAudioTime)"}],"path":"\/documentation\/haishinkit\/mthkview\/hkstreamoutput-implementations"},{"title":"MediaMixerOutput Implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/mthkview\/mixer(_:didoutput:)","type":"method","title":"func mixer(MediaMixer, didOutput: CMSampleBuffer)"},{"path":"\/documentation\/haishinkit\/mthkview\/mixer(_:didoutput:when:)","type":"method","title":"func mixer(MediaMixer, didOutput: AVAudioPCMBuffer, when: AVAudioTime)"},{"path":"\/documentation\/haishinkit\/mthkview\/selecttrack(_:mediatype:)","type":"method","title":"func selectTrack(UInt8?, mediaType: CMFormatDescription.MediaType) async"}],"path":"\/documentation\/haishinkit\/mthkview\/mediamixeroutput-implementations"}]},{"type":"class","path":"\/documentation\/haishinkit\/mediamixer","title":"MediaMixer","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/haishinkit\/mediamixer\/init(multitrackaudiomixingenabled:usemanualcapture:)","title":"init(multiTrackAudioMixingEnabled: Bool, useManualCapture: Bool)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/haishinkit\/mediamixer\/audioinputformats","title":"var audioInputFormats: [UInt8 : AVAudioFormat]"},{"type":"property","path":"\/documentation\/haishinkit\/mediamixer\/audiomixersettings","title":"var audioMixerSettings: AudioMixerSettings"},{"type":"property","path":"\/documentation\/haishinkit\/mediamixer\/framerate","title":"var frameRate: Float64"},{"type":"property","path":"\/documentation\/haishinkit\/mediamixer\/iscapturing","title":"var isCapturing: Bool"},{"type":"property","path":"\/documentation\/haishinkit\/mediamixer\/isinterputted","title":"var isInterputted: AsyncStream<Bool>"},{"type":"property","path":"\/documentation\/haishinkit\/mediamixer\/ismonitoringenabled","title":"var isMonitoringEnabled: Bool"},{"type":"property","path":"\/documentation\/haishinkit\/mediamixer\/ismultitrackaudiomixingenabled","title":"var isMultiTrackAudioMixingEnabled: Bool"},{"type":"property","path":"\/documentation\/haishinkit\/mediamixer\/isrunning","title":"var isRunning: Bool"},{"type":"property","path":"\/documentation\/haishinkit\/mediamixer\/istorchenabled","title":"var isTorchEnabled: Bool"},{"type":"property","path":"\/documentation\/haishinkit\/mediamixer\/screen","title":"var screen: Screen"},{"type":"property","path":"\/documentation\/haishinkit\/mediamixer\/sessionpreset","title":"var sessionPreset: AVCaptureSession.Preset"},{"type":"property","path":"\/documentation\/haishinkit\/mediamixer\/videoinputformats","title":"var videoInputFormats: [UInt8 : CMFormatDescription]"},{"type":"property","path":"\/documentation\/haishinkit\/mediamixer\/videomixersettings","title":"var videoMixerSettings: VideoMixerSettings"},{"type":"property","path":"\/documentation\/haishinkit\/mediamixer\/videoorientation","title":"var videoOrientation: AVCaptureVideoOrientation"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/haishinkit\/mediamixer\/addoutput(_:)","title":"func addOutput(some MediaMixerOutput)"},{"type":"method","path":"\/documentation\/haishinkit\/mediamixer\/append(_:track:)","title":"func append(CMSampleBuffer, track: UInt8)"},{"type":"method","path":"\/documentation\/haishinkit\/mediamixer\/append(_:when:track:)","title":"func append(AVAudioBuffer, when: AVAudioTime, track: UInt8)"},{"type":"method","path":"\/documentation\/haishinkit\/mediamixer\/attachaudio(_:track:configuration:)","title":"func attachAudio(AVCaptureDevice?, track: UInt8, configuration: AudioDeviceConfigurationBlock?) async throws"},{"type":"method","path":"\/documentation\/haishinkit\/mediamixer\/attachvideo(_:track:configuration:)","title":"func attachVideo(AVCaptureDevice?, track: UInt8, configuration: VideoDeviceConfigurationBlock?) async throws"},{"type":"method","path":"\/documentation\/haishinkit\/mediamixer\/configuration(_:)","title":"func configuration((AVCaptureSession) throws -> Void) rethrows"},{"type":"method","path":"\/documentation\/haishinkit\/mediamixer\/configuration(audio:configuration:)","title":"func configuration(audio: UInt8, configuration: (AudioDeviceUnit) throws -> Void) throws"},{"type":"method","path":"\/documentation\/haishinkit\/mediamixer\/configuration(video:configuration:)","title":"func configuration(video: UInt8, configuration: (VideoDeviceUnit) throws -> Void) throws"},{"type":"method","path":"\/documentation\/haishinkit\/mediamixer\/removeoutput(_:)","title":"func removeOutput(some MediaMixerOutput)"},{"type":"method","path":"\/documentation\/haishinkit\/mediamixer\/setaudiomixersettings(_:)","title":"func setAudioMixerSettings(AudioMixerSettings)"},{"type":"method","path":"\/documentation\/haishinkit\/mediamixer\/setframerate(_:)","title":"func setFrameRate(Float64)"},{"type":"method","path":"\/documentation\/haishinkit\/mediamixer\/setmonitoringenabled(_:)","title":"func setMonitoringEnabled(Bool)"},{"type":"method","path":"\/documentation\/haishinkit\/mediamixer\/setsessionpreset(_:)","title":"func setSessionPreset(AVCaptureSession.Preset)"},{"type":"method","path":"\/documentation\/haishinkit\/mediamixer\/settorchenabled(_:)","title":"func setTorchEnabled(Bool)"},{"type":"method","path":"\/documentation\/haishinkit\/mediamixer\/setvideomixersettings(_:)","title":"func setVideoMixerSettings(VideoMixerSettings)"},{"type":"method","path":"\/documentation\/haishinkit\/mediamixer\/setvideoorientation(_:)","title":"func setVideoOrientation(AVCaptureVideoOrientation)"},{"type":"method","path":"\/documentation\/haishinkit\/mediamixer\/startcapturing()","title":"func startCapturing()"},{"type":"method","path":"\/documentation\/haishinkit\/mediamixer\/stopcapturing()","title":"func stopCapturing()"},{"type":"groupMarker","title":"Enumerations"},{"type":"enum","path":"\/documentation\/haishinkit\/mediamixer\/error","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case deviceNotFound","type":"case","path":"\/documentation\/haishinkit\/mediamixer\/error\/devicenotfound"},{"title":"case failedToAttach(any Error)","type":"case","path":"\/documentation\/haishinkit\/mediamixer\/error\/failedtoattach(_:)"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Error Implementations","type":"symbol","path":"\/documentation\/haishinkit\/mediamixer\/error\/error-implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/mediamixer\/error\/localizeddescription","title":"var localizedDescription: String","type":"property"}]}],"title":"MediaMixer.Error"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","path":"\/documentation\/haishinkit\/mediamixer\/actor-implementations","children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/mediamixer\/assertisolated(_:file:line:)","type":"method","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)"},{"path":"\/documentation\/haishinkit\/mediamixer\/assumeisolated(_:file:line:)","type":"method","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T"},{"path":"\/documentation\/haishinkit\/mediamixer\/preconditionisolated(_:file:line:)","type":"method","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)"}],"title":"Actor Implementations"},{"type":"symbol","path":"\/documentation\/haishinkit\/mediamixer\/asyncrunner-implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func startRunning()","type":"method","path":"\/documentation\/haishinkit\/mediamixer\/startrunning()"},{"title":"func stopRunning()","type":"method","path":"\/documentation\/haishinkit\/mediamixer\/stoprunning()"}],"title":"AsyncRunner Implementations"}]},{"type":"class","path":"\/documentation\/haishinkit\/networkmonitor","title":"NetworkMonitor","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/networkmonitor\/init(_:)","title":"init(some NetworkTransportReporter)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/networkmonitor\/event","title":"var event: AsyncStream<NetworkMonitorEvent>","type":"property"},{"path":"\/documentation\/haishinkit\/networkmonitor\/isrunning","title":"var isRunning: Bool","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case invalidState","path":"\/documentation\/haishinkit\/networkmonitor\/error\/invalidstate","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","path":"\/documentation\/haishinkit\/networkmonitor\/error\/equatable-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","path":"\/documentation\/haishinkit\/networkmonitor\/error\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"}]},{"title":"Error Implementations","path":"\/documentation\/haishinkit\/networkmonitor\/error\/error-implementations","type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var localizedDescription: String","type":"property","path":"\/documentation\/haishinkit\/networkmonitor\/error\/localizeddescription"}]}],"path":"\/documentation\/haishinkit\/networkmonitor\/error","title":"NetworkMonitor.Error","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/networkmonitor\/assertisolated(_:file:line:)","type":"method","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)"},{"path":"\/documentation\/haishinkit\/networkmonitor\/assumeisolated(_:file:line:)","type":"method","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T"},{"path":"\/documentation\/haishinkit\/networkmonitor\/preconditionisolated(_:file:line:)","type":"method","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)"}],"path":"\/documentation\/haishinkit\/networkmonitor\/actor-implementations","title":"Actor Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/networkmonitor\/startrunning()","title":"func startRunning()","type":"method"},{"path":"\/documentation\/haishinkit\/networkmonitor\/stoprunning()","title":"func stopRunning()","type":"method"}],"path":"\/documentation\/haishinkit\/networkmonitor\/asyncrunner-implementations","title":"AsyncRunner Implementations","type":"symbol"}]},{"type":"class","path":"\/documentation\/haishinkit\/piphkview","title":"PiPHKView","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/piphkview\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/haishinkit\/piphkview\/init(frame:)","title":"init(frame: CGRect)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/piphkview\/audiotrackid","title":"var audioTrackId: UInt8?","type":"property"},{"path":"\/documentation\/haishinkit\/piphkview\/videogravity","title":"var videoGravity: AVLayerVideoGravity","type":"property"},{"path":"\/documentation\/haishinkit\/piphkview\/videotrackid","title":"var videoTrackId: UInt8?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/piphkview\/awakefromnib()","title":"func awakeFromNib()","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/piphkview\/defaultbackgroundcolor","title":"static var defaultBackgroundColor: NSColor","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func stream(some HKStream, didOutput: CMSampleBuffer)","path":"\/documentation\/haishinkit\/piphkview\/stream(_:didoutput:)"},{"type":"method","title":"func stream(some HKStream, didOutput: AVAudioBuffer, when: AVAudioTime)","path":"\/documentation\/haishinkit\/piphkview\/stream(_:didoutput:when:)"}],"path":"\/documentation\/haishinkit\/piphkview\/hkstreamoutput-implementations","title":"HKStreamOutput Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func mixer(MediaMixer, didOutput: CMSampleBuffer)","type":"method","path":"\/documentation\/haishinkit\/piphkview\/mixer(_:didoutput:)"},{"title":"func mixer(MediaMixer, didOutput: AVAudioPCMBuffer, when: AVAudioTime)","type":"method","path":"\/documentation\/haishinkit\/piphkview\/mixer(_:didoutput:when:)"},{"title":"func selectTrack(UInt8?, mediaType: CMFormatDescription.MediaType) async","type":"method","path":"\/documentation\/haishinkit\/piphkview\/selecttrack(_:mediatype:)"}],"path":"\/documentation\/haishinkit\/piphkview\/mediamixeroutput-implementations","title":"MediaMixerOutput Implementations","type":"symbol"}]},{"type":"class","path":"\/documentation\/haishinkit\/rtmpconnection","title":"RTMPConnection","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/init(swfurl:pageurl:flashver:fourcclist:videofourccinfomap:audiofourccinfomap:capsex:timeout:requesttimeout:chunksize:qualityofservice:)","type":"init","title":"init(swfUrl: String?, pageUrl: String?, flashVer: String, fourCcList: [String]?, videoFourCcInfoMap: AMFObject?, audioFourCcInfoMap: AMFObject?, capsEx: Int, timeout: Int, requestTimeout: UInt64, chunkSize: Int, qualityOfService: DispatchQoS)"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/audiofourccinfomap","type":"property","title":"let audioFourCcInfoMap: AMFObject?"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/capsex","type":"property","title":"let capsEx: Int"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/chunksize","type":"property","title":"let chunkSize: Int"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/connected","type":"property","title":"var connected: Bool"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/flashver","type":"property","title":"let flashVer: String"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/fourcclist","type":"property","title":"let fourCcList: [String]?"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/objectencoding","type":"property","title":"let objectEncoding: RTMPObjectEncoding"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/pageurl","type":"property","title":"let pageUrl: String?"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/qualityofservice","type":"property","title":"let qualityOfService: DispatchQoS"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/requesttimeout","type":"property","title":"let requestTimeout: UInt64"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/status","type":"property","title":"var status: AsyncStream<RTMPStatus>"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/swfurl","type":"property","title":"let swfUrl: String?"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/timeout","type":"property","title":"let timeout: Int"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/uri","type":"property","title":"var uri: URL?"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/videofourccinfomap","type":"property","title":"let videoFourCcInfoMap: AMFObject?"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/call(_:arguments:)","type":"method","title":"func call(String, arguments: (any Sendable)?...) async throws -> RTMPResponse"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/close()","type":"method","title":"func close() async throws"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/connect(_:arguments:)","type":"method","title":"func connect(String, arguments: (any Sendable)?...) async throws -> RTMPResponse"},{"type":"groupMarker","title":"Type Properties"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/defaultcapabilities","type":"property","title":"static let defaultCapabilities: Int"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/defaultchunksizes","type":"property","title":"static let defaultChunkSizeS: Int"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/defaultflashver","type":"property","title":"static let defaultFlashVer: String"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/defaultobjectencoding","type":"property","title":"static let defaultObjectEncoding: RTMPObjectEncoding"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/defaultport","type":"property","title":"static let defaultPort: Int"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/defaultrequesttimeout","type":"property","title":"static let defaultRequestTimeout: UInt64"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/defaultsecureport","type":"property","title":"static let defaultSecurePort: Int"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/defaulttimeout","type":"property","title":"static let defaultTimeout: Int"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/defaultwindowsizes","type":"property","title":"static let defaultWindowSizeS: Int64"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/supportedaudiofourccinfomap","type":"property","title":"static let supportedAudioFourCcInfoMap: AMFObject"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/supportedfourcclist","type":"property","title":"static let supportedFourCcList: [String]"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/supportedprotocols","type":"property","title":"static let supportedProtocols: Set<String>"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/supportedvideofourccinfomap","type":"property","title":"static let supportedVideoFourCcInfoMap: AMFObject"},{"type":"groupMarker","title":"Enumerations"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/code","type":"enum","title":"RTMPConnection.Code","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/callbadversion","title":"case callBadVersion"},{"type":"case","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/callfailed","title":"case callFailed"},{"type":"case","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/callprohibited","title":"case callProhibited"},{"type":"case","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/connectappshutdown","title":"case connectAppshutdown"},{"type":"case","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/connectclosed","title":"case connectClosed"},{"type":"case","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/connectfailed","title":"case connectFailed"},{"type":"case","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/connectidletimeout","title":"case connectIdleTimeOut"},{"type":"case","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/connectinvalidapp","title":"case connectInvalidApp"},{"type":"case","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/connectnetworkchange","title":"case connectNetworkChange"},{"type":"case","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/connectrejected","title":"case connectRejected"},{"type":"case","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/connectsuccess","title":"case connectSuccess"},{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/init(rawvalue:)","title":"init?(rawValue: String)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/level","title":"var level: String"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/!=(_:_:)"}],"type":"symbol","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/equatable-implementations","title":"Equatable Implementations"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","type":"property","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/hashvalue"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func hash(into: inout Hasher)","type":"method","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/hash(into:)"}],"type":"symbol","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/rawrepresentable-implementations","title":"RawRepresentable Implementations"}]},{"path":"\/documentation\/haishinkit\/rtmpconnection\/error","type":"enum","title":"RTMPConnection.Error","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","title":"case connectionTimedOut","path":"\/documentation\/haishinkit\/rtmpconnection\/error\/connectiontimedout"},{"type":"case","title":"case invalidState","path":"\/documentation\/haishinkit\/rtmpconnection\/error\/invalidstate"},{"type":"case","title":"case requestFailed(response: RTMPResponse)","path":"\/documentation\/haishinkit\/rtmpconnection\/error\/requestfailed(response:)"},{"type":"case","title":"case requestTimedOut","path":"\/documentation\/haishinkit\/rtmpconnection\/error\/requesttimedout"},{"type":"case","title":"case socketErrorOccurred(any Error)","path":"\/documentation\/haishinkit\/rtmpconnection\/error\/socketerroroccurred(_:)"},{"type":"case","title":"case unsupportedCommand(String)","path":"\/documentation\/haishinkit\/rtmpconnection\/error\/unsupportedcommand(_:)"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","title":"Error Implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/error\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/haishinkit\/rtmpconnection\/error\/error-implementations"}]},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/actor-implementations","type":"symbol","title":"Actor Implementations","children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/assertisolated(_:file:line:)","type":"method","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/assumeisolated(_:file:line:)","type":"method","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/preconditionisolated(_:file:line:)","type":"method","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)"}]}]},{"type":"class","path":"\/documentation\/haishinkit\/rtmpsharedobject","title":"RTMPSharedObject","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/rtmpsharedobject\/data","title":"var data: AMFObject","type":"property"},{"path":"\/documentation\/haishinkit\/rtmpsharedobject\/objectencoding","title":"let objectEncoding: RTMPObjectEncoding","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/rtmpsharedobject\/clear()","title":"func clear() async","type":"method"},{"path":"\/documentation\/haishinkit\/rtmpsharedobject\/close()","title":"func close() async","type":"method"},{"path":"\/documentation\/haishinkit\/rtmpsharedobject\/connect(_:)","title":"func connect(RTMPConnection) async","type":"method"},{"path":"\/documentation\/haishinkit\/rtmpsharedobject\/setproperty(_:_:)","title":"func setProperty(String, (any Sendable)?) async","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/rtmpsharedobject\/getremote(withname:remotepath:persistence:)","title":"static func getRemote(withName: String, remotePath: String, persistence: Bool) -> RTMPSharedObject","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/rtmpsharedobject\/actor-implementations","title":"Actor Implementations","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/haishinkit\/rtmpsharedobject\/assertisolated(_:file:line:)","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)"},{"type":"method","path":"\/documentation\/haishinkit\/rtmpsharedobject\/assumeisolated(_:file:line:)","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T"},{"type":"method","path":"\/documentation\/haishinkit\/rtmpsharedobject\/preconditionisolated(_:file:line:)","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)"}],"type":"symbol"}]},{"type":"class","path":"\/documentation\/haishinkit\/rtmpstream","title":"RTMPStream","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/haishinkit\/rtmpstream\/init(connection:fcpublishname:)","type":"init","title":"init(connection: RTMPConnection, fcPublishName: String?)"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/rtmpstream\/audiosampleaccess","type":"property","title":"var audioSampleAccess: Bool"},{"path":"\/documentation\/haishinkit\/rtmpstream\/audiotrackid","type":"property","title":"var audioTrackId: UInt8?"},{"path":"\/documentation\/haishinkit\/rtmpstream\/currentfps","type":"property","title":"var currentFPS: UInt16"},{"path":"\/documentation\/haishinkit\/rtmpstream\/fcpublishname","type":"property","title":"var fcPublishName: String?"},{"path":"\/documentation\/haishinkit\/rtmpstream\/info","type":"property","title":"var info: RTMPStreamInfo"},{"path":"\/documentation\/haishinkit\/rtmpstream\/metadata","type":"property","title":"var metadata: AMFArray"},{"path":"\/documentation\/haishinkit\/rtmpstream\/objectencoding","type":"property","title":"var objectEncoding: RTMPObjectEncoding"},{"path":"\/documentation\/haishinkit\/rtmpstream\/readystate","type":"property","title":"var readyState: HKStreamReadyState"},{"path":"\/documentation\/haishinkit\/rtmpstream\/status","type":"property","title":"var status: AsyncStream<RTMPStatus>"},{"path":"\/documentation\/haishinkit\/rtmpstream\/videosampleaccess","type":"property","title":"var videoSampleAccess: Bool"},{"path":"\/documentation\/haishinkit\/rtmpstream\/videotrackid","type":"property","title":"var videoTrackId: UInt8?"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/rtmpstream\/close()","type":"method","title":"func close() async throws -> RTMPResponse"},{"path":"\/documentation\/haishinkit\/rtmpstream\/pause(_:)","type":"method","title":"func pause(Bool) async throws -> RTMPResponse"},{"path":"\/documentation\/haishinkit\/rtmpstream\/play(_:)","type":"method","title":"func play((any Sendable)?...) async throws -> RTMPResponse"},{"path":"\/documentation\/haishinkit\/rtmpstream\/publish(_:type:)","type":"method","title":"func publish(String?, type: RTMPStream.HowToPublish) async throws -> RTMPResponse"},{"path":"\/documentation\/haishinkit\/rtmpstream\/receiveaudio(_:)","type":"method","title":"func receiveAudio(Bool) async throws"},{"path":"\/documentation\/haishinkit\/rtmpstream\/receivevideo(_:)","type":"method","title":"func receiveVideo(Bool) async throws"},{"path":"\/documentation\/haishinkit\/rtmpstream\/seek(_:)","type":"method","title":"func seek(Double) async throws"},{"path":"\/documentation\/haishinkit\/rtmpstream\/send(_:arguments:isresettimestamp:)","type":"method","title":"func send(String, arguments: (any Sendable)?..., isResetTimestamp: Bool) throws"},{"path":"\/documentation\/haishinkit\/rtmpstream\/togglepause()","type":"method","title":"func togglePause() async throws -> RTMPResponse"},{"type":"groupMarker","title":"Enumerations"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code","type":"enum","title":"RTMPStream.Code","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case bufferEmpty","path":"\/documentation\/haishinkit\/rtmpstream\/code\/bufferempty","type":"case"},{"title":"case bufferFlush","path":"\/documentation\/haishinkit\/rtmpstream\/code\/bufferflush","type":"case"},{"title":"case bufferFull","path":"\/documentation\/haishinkit\/rtmpstream\/code\/bufferfull","type":"case"},{"title":"case connectClosed","path":"\/documentation\/haishinkit\/rtmpstream\/code\/connectclosed","type":"case"},{"title":"case connectFailed","path":"\/documentation\/haishinkit\/rtmpstream\/code\/connectfailed","type":"case"},{"title":"case connectRejected","path":"\/documentation\/haishinkit\/rtmpstream\/code\/connectrejected","type":"case"},{"title":"case connectSuccess","path":"\/documentation\/haishinkit\/rtmpstream\/code\/connectsuccess","type":"case"},{"title":"case drmUpdateNeeded","path":"\/documentation\/haishinkit\/rtmpstream\/code\/drmupdateneeded","type":"case"},{"title":"case failed","path":"\/documentation\/haishinkit\/rtmpstream\/code\/failed","type":"case"},{"title":"case multicastStreamReset","path":"\/documentation\/haishinkit\/rtmpstream\/code\/multicaststreamreset","type":"case"},{"title":"case pauseNotify","path":"\/documentation\/haishinkit\/rtmpstream\/code\/pausenotify","type":"case"},{"title":"case playFailed","path":"\/documentation\/haishinkit\/rtmpstream\/code\/playfailed","type":"case"},{"title":"case playFileStructureInvalid","path":"\/documentation\/haishinkit\/rtmpstream\/code\/playfilestructureinvalid","type":"case"},{"title":"case playInsufficientBW","path":"\/documentation\/haishinkit\/rtmpstream\/code\/playinsufficientbw","type":"case"},{"title":"case playNoSupportedTrackFound","path":"\/documentation\/haishinkit\/rtmpstream\/code\/playnosupportedtrackfound","type":"case"},{"title":"case playReset","path":"\/documentation\/haishinkit\/rtmpstream\/code\/playreset","type":"case"},{"title":"case playStart","path":"\/documentation\/haishinkit\/rtmpstream\/code\/playstart","type":"case"},{"title":"case playStop","path":"\/documentation\/haishinkit\/rtmpstream\/code\/playstop","type":"case"},{"title":"case playStreamNotFound","path":"\/documentation\/haishinkit\/rtmpstream\/code\/playstreamnotfound","type":"case"},{"title":"case playTransition","path":"\/documentation\/haishinkit\/rtmpstream\/code\/playtransition","type":"case"},{"title":"case playUnpublishNotify","path":"\/documentation\/haishinkit\/rtmpstream\/code\/playunpublishnotify","type":"case"},{"title":"case publishBadName","path":"\/documentation\/haishinkit\/rtmpstream\/code\/publishbadname","type":"case"},{"title":"case publishIdle","path":"\/documentation\/haishinkit\/rtmpstream\/code\/publishidle","type":"case"},{"title":"case publishStart","path":"\/documentation\/haishinkit\/rtmpstream\/code\/publishstart","type":"case"},{"title":"case recordAlreadyExists","path":"\/documentation\/haishinkit\/rtmpstream\/code\/recordalreadyexists","type":"case"},{"title":"case recordDiskQuotaExceeded","path":"\/documentation\/haishinkit\/rtmpstream\/code\/recorddiskquotaexceeded","type":"case"},{"title":"case recordFailed","path":"\/documentation\/haishinkit\/rtmpstream\/code\/recordfailed","type":"case"},{"title":"case recordNoAccess","path":"\/documentation\/haishinkit\/rtmpstream\/code\/recordnoaccess","type":"case"},{"title":"case recordStart","path":"\/documentation\/haishinkit\/rtmpstream\/code\/recordstart","type":"case"},{"title":"case recordStop","path":"\/documentation\/haishinkit\/rtmpstream\/code\/recordstop","type":"case"},{"title":"case secondScreenStart","path":"\/documentation\/haishinkit\/rtmpstream\/code\/secondscreenstart","type":"case"},{"title":"case secondScreenStop","path":"\/documentation\/haishinkit\/rtmpstream\/code\/secondscreenstop","type":"case"},{"title":"case seekFailed","path":"\/documentation\/haishinkit\/rtmpstream\/code\/seekfailed","type":"case"},{"title":"case seekInvalidTime","path":"\/documentation\/haishinkit\/rtmpstream\/code\/seekinvalidtime","type":"case"},{"title":"case seekNotify","path":"\/documentation\/haishinkit\/rtmpstream\/code\/seeknotify","type":"case"},{"title":"case stepNotify","path":"\/documentation\/haishinkit\/rtmpstream\/code\/stepnotify","type":"case"},{"title":"case unpauseNotify","path":"\/documentation\/haishinkit\/rtmpstream\/code\/unpausenotify","type":"case"},{"title":"case unpublishSuccess","path":"\/documentation\/haishinkit\/rtmpstream\/code\/unpublishsuccess","type":"case"},{"title":"case videoDimensionChange","path":"\/documentation\/haishinkit\/rtmpstream\/code\/videodimensionchange","type":"case"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: String)","path":"\/documentation\/haishinkit\/rtmpstream\/code\/init(rawvalue:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var level: String","path":"\/documentation\/haishinkit\/rtmpstream\/code\/level","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/haishinkit\/rtmpstream\/code\/!=(_:_:)","type":"op"}],"path":"\/documentation\/haishinkit\/rtmpstream\/code\/equatable-implementations","type":"symbol"},{"title":"RawRepresentable Implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","type":"property","path":"\/documentation\/haishinkit\/rtmpstream\/code\/hashvalue"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func hash(into: inout Hasher)","type":"method","path":"\/documentation\/haishinkit\/rtmpstream\/code\/hash(into:)"}],"path":"\/documentation\/haishinkit\/rtmpstream\/code\/rawrepresentable-implementations","type":"symbol"}]},{"path":"\/documentation\/haishinkit\/rtmpstream\/error","type":"enum","title":"RTMPStream.Error","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/rtmpstream\/error\/invalidstate","title":"case invalidState","type":"case"},{"path":"\/documentation\/haishinkit\/rtmpstream\/error\/requestfailed(response:)","title":"case requestFailed(response: RTMPResponse)","type":"case"},{"path":"\/documentation\/haishinkit\/rtmpstream\/error\/requesttimedout","title":"case requestTimedOut","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/rtmpstream\/error\/error-implementations","title":"Error Implementations","type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var localizedDescription: String","type":"property","path":"\/documentation\/haishinkit\/rtmpstream\/error\/localizeddescription"}]}]},{"path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish","type":"enum","title":"RTMPStream.HowToPublish","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish\/append","title":"case append"},{"type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish\/appendwithgap","title":"case appendWithGap"},{"type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish\/live","title":"case live"},{"type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish\/record","title":"case record"},{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish\/init(rawvalue:)","title":"init?(rawValue: String)"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish\/!=(_:_:)","type":"op"}],"title":"Equatable Implementations"},{"type":"symbol","path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish\/rawrepresentable-implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"title":"RawRepresentable Implementations"}]},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/haishinkit\/rtmpstream\/actor-implementations","type":"symbol","title":"Actor Implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method","path":"\/documentation\/haishinkit\/rtmpstream\/assertisolated(_:file:line:)"},{"title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","type":"method","path":"\/documentation\/haishinkit\/rtmpstream\/assumeisolated(_:file:line:)"},{"title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method","path":"\/documentation\/haishinkit\/rtmpstream\/preconditionisolated(_:file:line:)"}]},{"path":"\/documentation\/haishinkit\/rtmpstream\/hkstream-implementations","type":"symbol","title":"HKStream Implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var audioSettings: AudioCodecSettings","path":"\/documentation\/haishinkit\/rtmpstream\/audiosettings"},{"type":"property","title":"var soundTransform: SoundTransform?","path":"\/documentation\/haishinkit\/rtmpstream\/soundtransform"},{"type":"property","title":"var videoSettings: VideoCodecSettings","path":"\/documentation\/haishinkit\/rtmpstream\/videosettings"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func addOutput(some HKStreamOutput)","path":"\/documentation\/haishinkit\/rtmpstream\/addoutput(_:)"},{"type":"method","title":"func append(CMSampleBuffer)","path":"\/documentation\/haishinkit\/rtmpstream\/append(_:)"},{"type":"method","title":"func append(AVAudioBuffer, when: AVAudioTime)","path":"\/documentation\/haishinkit\/rtmpstream\/append(_:when:)"},{"type":"method","title":"func attachAudioPlayer(AudioPlayer?) async","path":"\/documentation\/haishinkit\/rtmpstream\/attachaudioplayer(_:)"},{"type":"method","title":"func dispatch(NetworkMonitorEvent) async","path":"\/documentation\/haishinkit\/rtmpstream\/dispatch(_:)"},{"type":"method","title":"func removeOutput(some HKStreamOutput)","path":"\/documentation\/haishinkit\/rtmpstream\/removeoutput(_:)"},{"type":"method","title":"func setAudioSettings(AudioCodecSettings)","path":"\/documentation\/haishinkit\/rtmpstream\/setaudiosettings(_:)"},{"type":"method","title":"func setBitrateStorategy((some HKStreamBitRateStrategy)?)","path":"\/documentation\/haishinkit\/rtmpstream\/setbitratestorategy(_:)"},{"type":"method","title":"func setSoundTransform(SoundTransform) async","path":"\/documentation\/haishinkit\/rtmpstream\/setsoundtransform(_:)"},{"type":"method","title":"func setVideoInputBufferCounts(Int)","path":"\/documentation\/haishinkit\/rtmpstream\/setvideoinputbuffercounts(_:)"},{"type":"method","title":"func setVideoSettings(VideoCodecSettings)","path":"\/documentation\/haishinkit\/rtmpstream\/setvideosettings(_:)"}]},{"path":"\/documentation\/haishinkit\/rtmpstream\/mediamixeroutput-implementations","type":"symbol","title":"MediaMixerOutput Implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func mixer(MediaMixer, didOutput: CMSampleBuffer)","path":"\/documentation\/haishinkit\/rtmpstream\/mixer(_:didoutput:)","type":"method"},{"title":"func mixer(MediaMixer, didOutput: AVAudioPCMBuffer, when: AVAudioTime)","path":"\/documentation\/haishinkit\/rtmpstream\/mixer(_:didoutput:when:)","type":"method"},{"title":"func selectTrack(UInt8?, mediaType: CMFormatDescription.MediaType)","path":"\/documentation\/haishinkit\/rtmpstream\/selecttrack(_:mediatype:)","type":"method"}]}]},{"type":"class","path":"\/documentation\/haishinkit\/screen","title":"Screen","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init()","path":"\/documentation\/haishinkit\/screen\/init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var backgroundColor: CGColor","path":"\/documentation\/haishinkit\/screen\/backgroundcolor","type":"property"},{"title":"var childCounts: Int","path":"\/documentation\/haishinkit\/screen\/childcounts","type":"property"},{"title":"var delegate: (any ScreenDelegate)?","path":"\/documentation\/haishinkit\/screen\/delegate","type":"property"},{"title":"var size: CGSize","path":"\/documentation\/haishinkit\/screen\/size-swift.property","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func addChild(ScreenObject?) throws","path":"\/documentation\/haishinkit\/screen\/addchild(_:)","type":"method"},{"title":"func registerVideoEffect(some VideoEffect) -> Bool","path":"\/documentation\/haishinkit\/screen\/registervideoeffect(_:)","type":"method"},{"title":"func removeChild(ScreenObject?)","path":"\/documentation\/haishinkit\/screen\/removechild(_:)","type":"method"},{"title":"func unregisterVideoEffect(some VideoEffect) -> Bool","path":"\/documentation\/haishinkit\/screen\/unregistervideoeffect(_:)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"title":"static let size: CGSize","path":"\/documentation\/haishinkit\/screen\/size-swift.type.property","type":"property"}]},{"type":"class","path":"\/documentation\/haishinkit\/screenactor","title":"ScreenActor","children":[{"type":"groupMarker","title":"Type Properties"},{"type":"property","title":"static let shared: ScreenActor","path":"\/documentation\/haishinkit\/screenactor\/shared"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","title":"Actor Implementations","path":"\/documentation\/haishinkit\/screenactor\/actor-implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method","path":"\/documentation\/haishinkit\/screenactor\/assertisolated(_:file:line:)"},{"title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","type":"method","path":"\/documentation\/haishinkit\/screenactor\/assumeisolated(_:file:line:)"},{"title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method","path":"\/documentation\/haishinkit\/screenactor\/preconditionisolated(_:file:line:)"}]},{"type":"symbol","title":"GlobalActor Implementations","path":"\/documentation\/haishinkit\/screenactor\/globalactor-implementations","children":[{"type":"groupMarker","title":"Type Properties"},{"path":"\/documentation\/haishinkit\/screenactor\/sharedunownedexecutor","type":"property","title":"static var sharedUnownedExecutor: UnownedSerialExecutor"}]}]},{"type":"class","path":"\/documentation\/haishinkit\/screenobject","title":"ScreenObject","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/screenobject\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/screenobject\/bounds","title":"var bounds: CGRect","type":"property"},{"path":"\/documentation\/haishinkit\/screenobject\/cornerradius","title":"var cornerRadius: CGFloat","type":"property"},{"path":"\/documentation\/haishinkit\/screenobject\/horizontalalignment-swift.property","title":"var horizontalAlignment: ScreenObject.HorizontalAlignment","type":"property"},{"path":"\/documentation\/haishinkit\/screenobject\/isvisible","title":"var isVisible: Bool","type":"property"},{"path":"\/documentation\/haishinkit\/screenobject\/layoutmargin","title":"var layoutMargin: NSEdgeInsets","type":"property"},{"path":"\/documentation\/haishinkit\/screenobject\/parent","title":"var parent: ScreenObjectContainer?","type":"property"},{"path":"\/documentation\/haishinkit\/screenobject\/size","title":"var size: CGSize","type":"property"},{"path":"\/documentation\/haishinkit\/screenobject\/verticalalignment-swift.property","title":"var verticalAlignment: ScreenObject.VerticalAlignment","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/screenobject\/invalidatelayout()","title":"func invalidateLayout()","type":"method"},{"path":"\/documentation\/haishinkit\/screenobject\/makebounds(_:)","title":"func makeBounds(CGSize) -> CGRect","type":"method"},{"path":"\/documentation\/haishinkit\/screenobject\/makeimage(_:)","title":"func makeImage(some ScreenRenderer) -> CGImage?","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/screenobject\/horizontalalignment-swift.enum","title":"ScreenObject.HorizontalAlignment","type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","title":"case center","path":"\/documentation\/haishinkit\/screenobject\/horizontalalignment-swift.enum\/center"},{"type":"case","title":"case left","path":"\/documentation\/haishinkit\/screenobject\/horizontalalignment-swift.enum\/left"},{"type":"case","title":"case right","path":"\/documentation\/haishinkit\/screenobject\/horizontalalignment-swift.enum\/right"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","title":"Equatable Implementations","path":"\/documentation\/haishinkit\/screenobject\/horizontalalignment-swift.enum\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/screenobject\/horizontalalignment-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}]}]},{"path":"\/documentation\/haishinkit\/screenobject\/verticalalignment-swift.enum","title":"ScreenObject.VerticalAlignment","type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/haishinkit\/screenobject\/verticalalignment-swift.enum\/bottom","type":"case","title":"case bottom"},{"path":"\/documentation\/haishinkit\/screenobject\/verticalalignment-swift.enum\/middle","type":"case","title":"case middle"},{"path":"\/documentation\/haishinkit\/screenobject\/verticalalignment-swift.enum\/top","type":"case","title":"case top"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/haishinkit\/screenobject\/verticalalignment-swift.enum\/equatable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/haishinkit\/screenobject\/verticalalignment-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"type":"symbol","title":"Equatable Implementations"}]},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/screenobject\/equatable-implementations","title":"Equatable Implementations","type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/screenobject\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/haishinkit\/screenobject\/==(_:_:)","title":"static func == (ScreenObject, ScreenObject) -> Bool","type":"op"}]},{"path":"\/documentation\/haishinkit\/screenobject\/hashable-implementations","title":"Hashable Implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func hash(into: inout Hasher)","path":"\/documentation\/haishinkit\/screenobject\/hash(into:)"}]}]},{"type":"class","path":"\/documentation\/haishinkit\/screenobjectcontainer","title":"ScreenObjectContainer","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/screenobjectcontainer\/childcounts","type":"property","title":"var childCounts: Int"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/screenobjectcontainer\/addchild(_:)","type":"method","title":"func addChild(ScreenObject?) throws"},{"path":"\/documentation\/haishinkit\/screenobjectcontainer\/removechild(_:)","type":"method","title":"func removeChild(ScreenObject?)"},{"type":"groupMarker","title":"Enumerations"},{"children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/haishinkit\/screenobjectcontainer\/error\/alreadyexists","type":"case","title":"case alreadyExists"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/haishinkit\/screenobjectcontainer\/error\/equatable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/haishinkit\/screenobjectcontainer\/error\/!=(_:_:)"}],"type":"symbol","title":"Equatable Implementations"},{"path":"\/documentation\/haishinkit\/screenobjectcontainer\/error\/error-implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var localizedDescription: String","path":"\/documentation\/haishinkit\/screenobjectcontainer\/error\/localizeddescription","type":"property"}],"type":"symbol","title":"Error Implementations"}],"path":"\/documentation\/haishinkit\/screenobjectcontainer\/error","type":"enum","title":"ScreenObjectContainer.Error"}]},{"type":"class","path":"\/documentation\/haishinkit\/streamscreenobject","title":"StreamScreenObject","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/haishinkit\/streamscreenobject\/chromakeycolor","title":"var chromaKeyColor: CGColor?"},{"type":"property","path":"\/documentation\/haishinkit\/streamscreenobject\/videogravity","title":"var videoGravity: AVLayerVideoGravity"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/haishinkit\/streamscreenobject\/makebounds(_:)","title":"func makeBounds(CGSize) -> CGRect"},{"type":"method","path":"\/documentation\/haishinkit\/streamscreenobject\/makeimage(_:)","title":"func makeImage(some ScreenRenderer) -> CGImage?"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","path":"\/documentation\/haishinkit\/streamscreenobject\/hkstreamoutput-implementations","title":"HKStreamOutput Implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/streamscreenobject\/stream(_:didoutput:)","title":"func stream(some HKStream, didOutput: CMSampleBuffer)","type":"method"},{"path":"\/documentation\/haishinkit\/streamscreenobject\/stream(_:didoutput:when:)","title":"func stream(some HKStream, didOutput: AVAudioBuffer, when: AVAudioTime)","type":"method"}]}]},{"title":"TSReader","path":"\/documentation\/haishinkit\/tsreader","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init()","path":"\/documentation\/haishinkit\/tsreader\/init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var output: AsyncStream<(UInt16, CMSampleBuffer)>","path":"\/documentation\/haishinkit\/tsreader\/output","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func clear()","path":"\/documentation\/haishinkit\/tsreader\/clear()","type":"method"},{"title":"func read(Data) -> Int","path":"\/documentation\/haishinkit\/tsreader\/read(_:)","type":"method"}],"type":"class"},{"title":"TSWriter","path":"\/documentation\/haishinkit\/tswriter","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/haishinkit\/tswriter\/init(segmentduration:)","type":"init","title":"init(segmentDuration: Double)"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/tswriter\/audioformat","type":"property","title":"var audioFormat: AVAudioFormat?"},{"path":"\/documentation\/haishinkit\/tswriter\/expectedmedias","type":"property","title":"var expectedMedias: Set<AVMediaType>"},{"path":"\/documentation\/haishinkit\/tswriter\/output","type":"property","title":"var output: AsyncStream<Data>"},{"path":"\/documentation\/haishinkit\/tswriter\/videoformat","type":"property","title":"var videoFormat: CMFormatDescription?"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/tswriter\/append(_:)","type":"method","title":"func append(CMSampleBuffer)"},{"path":"\/documentation\/haishinkit\/tswriter\/append(_:when:)","type":"method","title":"func append(AVAudioBuffer, when: AVAudioTime)"},{"path":"\/documentation\/haishinkit\/tswriter\/clear()","type":"method","title":"func clear()"}],"type":"class"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var attributes: [NSAttributedString.Key : Any]?","path":"\/documentation\/haishinkit\/textscreenobject\/attributes"},{"type":"property","title":"var bounds: CGRect","path":"\/documentation\/haishinkit\/textscreenobject\/bounds"},{"type":"property","title":"var string: String","path":"\/documentation\/haishinkit\/textscreenobject\/string"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func makeBounds(CGSize) -> CGRect","path":"\/documentation\/haishinkit\/textscreenobject\/makebounds(_:)"},{"type":"method","title":"func makeImage(some ScreenRenderer) -> CGImage?","path":"\/documentation\/haishinkit\/textscreenobject\/makeimage(_:)"}],"path":"\/documentation\/haishinkit\/textscreenobject","type":"class","title":"TextScreenObject"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var colorFormat: OSType","path":"\/documentation\/haishinkit\/videodeviceunit\/colorformat-swift.property"},{"type":"property","title":"var connection: AVCaptureConnection?","path":"\/documentation\/haishinkit\/videodeviceunit\/connection"},{"type":"property","title":"var device: AVCaptureDevice?","path":"\/documentation\/haishinkit\/videodeviceunit\/device"},{"type":"property","title":"var input: AVCaptureInput?","path":"\/documentation\/haishinkit\/videodeviceunit\/input"},{"type":"property","title":"var isVideoMirrored: Bool","path":"\/documentation\/haishinkit\/videodeviceunit\/isvideomirrored"},{"type":"property","title":"var output: VideoDeviceUnit.Output?","path":"\/documentation\/haishinkit\/videodeviceunit\/output-swift.property"},{"type":"property","title":"let track: UInt8","path":"\/documentation\/haishinkit\/videodeviceunit\/track"},{"type":"property","title":"var videoOrientation: AVCaptureVideoOrientation","path":"\/documentation\/haishinkit\/videodeviceunit\/videoorientation"},{"type":"groupMarker","title":"Type Aliases"},{"type":"typealias","title":"VideoDeviceUnit.Output","path":"\/documentation\/haishinkit\/videodeviceunit\/output-swift.typealias"},{"type":"groupMarker","title":"Type Properties"},{"type":"property","title":"static let colorFormat: OSType","path":"\/documentation\/haishinkit\/videodeviceunit\/colorformat-swift.type.property"}],"path":"\/documentation\/haishinkit\/videodeviceunit","type":"class","title":"VideoDeviceUnit"},{"children":[{"title":"Initializers","type":"groupMarker"},{"title":"init?()","path":"\/documentation\/haishinkit\/videorotator\/init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func rotate(buffer: CMSampleBuffer) -> Result<CMSampleBuffer, VideoRotator.Error>","path":"\/documentation\/haishinkit\/videorotator\/rotate(buffer:)","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"type":"enum","path":"\/documentation\/haishinkit\/videorotator\/error","title":"VideoRotator.Error","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","path":"\/documentation\/haishinkit\/videorotator\/error\/cannotallocatepixelbuffer(_:)","title":"case cannotAllocatePixelBuffer(CVReturn)"},{"type":"case","path":"\/documentation\/haishinkit\/videorotator\/error\/noimagebuffer","title":"case noImageBuffer"},{"type":"case","path":"\/documentation\/haishinkit\/videorotator\/error\/noorientationinfo","title":"case noOrientationInfo"},{"type":"case","path":"\/documentation\/haishinkit\/videorotator\/error\/rotationfailure(_:)","title":"case rotationFailure(OSStatus)"},{"type":"case","path":"\/documentation\/haishinkit\/videorotator\/error\/unsupportedorientation","title":"case unsupportedOrientation"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","path":"\/documentation\/haishinkit\/videorotator\/error\/error-implementations","title":"Error Implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/videorotator\/error\/localizeddescription","type":"property","title":"var localizedDescription: String"}]}]}],"path":"\/documentation\/haishinkit\/videorotator","type":"class","title":"VideoRotator"},{"title":"VideoTrackScreenObject","type":"class","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init()","type":"init","path":"\/documentation\/haishinkit\/videotrackscreenobject\/init()"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var chromaKeyColor: CGColor?","type":"property","path":"\/documentation\/haishinkit\/videotrackscreenobject\/chromakeycolor"},{"title":"var frameRate: Int","type":"property","path":"\/documentation\/haishinkit\/videotrackscreenobject\/framerate"},{"title":"var track: UInt8","type":"property","path":"\/documentation\/haishinkit\/videotrackscreenobject\/track"},{"title":"var videoGravity: AVLayerVideoGravity","type":"property","path":"\/documentation\/haishinkit\/videotrackscreenobject\/videogravity"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func draw(some ScreenRenderer)","type":"method","path":"\/documentation\/haishinkit\/videotrackscreenobject\/draw(_:)"},{"title":"func makeBounds(CGSize) -> CGRect","type":"method","path":"\/documentation\/haishinkit\/videotrackscreenobject\/makebounds(_:)"},{"title":"func makeImage(some ScreenRenderer) -> CGImage?","type":"method","path":"\/documentation\/haishinkit\/videotrackscreenobject\/makeimage(_:)"},{"title":"func registerVideoEffect(some VideoEffect) -> Bool","type":"method","path":"\/documentation\/haishinkit\/videotrackscreenobject\/registervideoeffect(_:)"},{"title":"func unregisterVideoEffect(some VideoEffect) -> Bool","type":"method","path":"\/documentation\/haishinkit\/videotrackscreenobject\/unregistervideoeffect(_:)"}],"path":"\/documentation\/haishinkit\/videotrackscreenobject"},{"title":"Protocols","type":"groupMarker"},{"title":"AsyncRunner","type":"protocol","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/asyncrunner\/isrunning","type":"property","title":"var isRunning: Bool"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/asyncrunner\/startrunning()","type":"method","title":"func startRunning() async"},{"path":"\/documentation\/haishinkit\/asyncrunner\/stoprunning()","type":"method","title":"func stopRunning() async"}],"path":"\/documentation\/haishinkit\/asyncrunner"},{"title":"ChromaKeyProcessable","type":"protocol","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/chromakeyprocessable\/chromakeycolor","type":"property","title":"var chromaKeyColor: CGColor?"}],"path":"\/documentation\/haishinkit\/chromakeyprocessable"},{"title":"HKStream","type":"protocol","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/haishinkit\/hkstream\/audiosettings","title":"var audioSettings: AudioCodecSettings"},{"type":"property","path":"\/documentation\/haishinkit\/hkstream\/readystate","title":"var readyState: HKStreamReadyState"},{"type":"property","path":"\/documentation\/haishinkit\/hkstream\/soundtransform","title":"var soundTransform: SoundTransform?"},{"type":"property","path":"\/documentation\/haishinkit\/hkstream\/videosettings","title":"var videoSettings: VideoCodecSettings"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/haishinkit\/hkstream\/addoutput(_:)","title":"func addOutput(some HKStreamOutput)"},{"type":"method","path":"\/documentation\/haishinkit\/hkstream\/append(_:)","title":"func append(CMSampleBuffer)"},{"type":"method","path":"\/documentation\/haishinkit\/hkstream\/append(_:when:)","title":"func append(AVAudioBuffer, when: AVAudioTime)"},{"type":"method","path":"\/documentation\/haishinkit\/hkstream\/attachaudioplayer(_:)","title":"func attachAudioPlayer(AudioPlayer?) async"},{"type":"method","path":"\/documentation\/haishinkit\/hkstream\/dispatch(_:)","title":"func dispatch(NetworkMonitorEvent) async"},{"type":"method","path":"\/documentation\/haishinkit\/hkstream\/removeoutput(_:)","title":"func removeOutput(some HKStreamOutput)"},{"type":"method","path":"\/documentation\/haishinkit\/hkstream\/setaudiosettings(_:)","title":"func setAudioSettings(AudioCodecSettings)"},{"type":"method","path":"\/documentation\/haishinkit\/hkstream\/setbitratestorategy(_:)","title":"func setBitrateStorategy((some HKStreamBitRateStrategy)?)"},{"type":"method","path":"\/documentation\/haishinkit\/hkstream\/setsoundtransform(_:)","title":"func setSoundTransform(SoundTransform) async"},{"type":"method","path":"\/documentation\/haishinkit\/hkstream\/setvideoinputbuffercounts(_:)","title":"func setVideoInputBufferCounts(Int)"},{"type":"method","path":"\/documentation\/haishinkit\/hkstream\/setvideosettings(_:)","title":"func setVideoSettings(VideoCodecSettings)"}],"path":"\/documentation\/haishinkit\/hkstream"},{"title":"HKStreamBitRateStrategy","type":"protocol","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/hkstreambitratestrategy\/mamimumaudiobitrate","type":"property","title":"var mamimumAudioBitRate: Int"},{"path":"\/documentation\/haishinkit\/hkstreambitratestrategy\/mamimumvideobitrate","type":"property","title":"var mamimumVideoBitRate: Int"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/hkstreambitratestrategy\/adjustbitrate(_:stream:)","type":"method","title":"func adjustBitrate(NetworkMonitorEvent, stream: some HKStream) async"}],"path":"\/documentation\/haishinkit\/hkstreambitratestrategy"},{"title":"HKStreamOutput","type":"protocol","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func stream(some HKStream, didOutput: CMSampleBuffer)","path":"\/documentation\/haishinkit\/hkstreamoutput\/stream(_:didoutput:)"},{"type":"method","title":"func stream(some HKStream, didOutput: AVAudioBuffer, when: AVAudioTime)","path":"\/documentation\/haishinkit\/hkstreamoutput\/stream(_:didoutput:when:)"}],"path":"\/documentation\/haishinkit\/hkstreamoutput"},{"title":"MediaMixerOutput","type":"protocol","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var audioTrackId: UInt8?","type":"property","path":"\/documentation\/haishinkit\/mediamixeroutput\/audiotrackid"},{"title":"var videoTrackId: UInt8?","type":"property","path":"\/documentation\/haishinkit\/mediamixeroutput\/videotrackid"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func mixer(MediaMixer, didOutput: CMSampleBuffer)","type":"method","path":"\/documentation\/haishinkit\/mediamixeroutput\/mixer(_:didoutput:)"},{"title":"func mixer(MediaMixer, didOutput: AVAudioPCMBuffer, when: AVAudioTime)","type":"method","path":"\/documentation\/haishinkit\/mediamixeroutput\/mixer(_:didoutput:when:)"},{"title":"func selectTrack(UInt8?, mediaType: CMFormatDescription.MediaType) async","type":"method","path":"\/documentation\/haishinkit\/mediamixeroutput\/selecttrack(_:mediatype:)"}],"path":"\/documentation\/haishinkit\/mediamixeroutput"},{"title":"NetworkConnection","type":"protocol","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/networkconnection\/connected","type":"property","title":"var connected: Bool"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/networkconnection\/close()","type":"method","title":"func close() async throws"}],"path":"\/documentation\/haishinkit\/networkconnection"},{"title":"NetworkTransportReporter","type":"protocol","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func makeNetworkMonitor() async -> NetworkMonitor","type":"method","path":"\/documentation\/haishinkit\/networktransportreporter\/makenetworkmonitor()"},{"title":"func makeNetworkTransportReport() async -> NetworkTransportReport","type":"method","path":"\/documentation\/haishinkit\/networktransportreporter\/makenetworktransportreport()"}],"path":"\/documentation\/haishinkit\/networktransportreporter"},{"title":"Runner","type":"protocol","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var isRunning: Bool","path":"\/documentation\/haishinkit\/runner\/isrunning"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func startRunning()","path":"\/documentation\/haishinkit\/runner\/startrunning()"},{"type":"method","title":"func stopRunning()","path":"\/documentation\/haishinkit\/runner\/stoprunning()"}],"path":"\/documentation\/haishinkit\/runner"},{"title":"ScreenDelegate","type":"protocol","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func screen(Screen, willLayout: CMTime)","path":"\/documentation\/haishinkit\/screendelegate\/screen(_:willlayout:)"}],"path":"\/documentation\/haishinkit\/screendelegate"},{"title":"ScreenRenderer","type":"protocol","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/screenrenderer\/backgroundcolor","title":"var backgroundColor: CGColor","type":"property"},{"path":"\/documentation\/haishinkit\/screenrenderer\/bounds","title":"var bounds: CGRect","type":"property"},{"path":"\/documentation\/haishinkit\/screenrenderer\/context","title":"var context: CIContext","type":"property"},{"path":"\/documentation\/haishinkit\/screenrenderer\/presentationtimestamp","title":"var presentationTimeStamp: CMTime","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/screenrenderer\/draw(_:)","title":"func draw(ScreenObject)","type":"method"},{"path":"\/documentation\/haishinkit\/screenrenderer\/layout(_:)","title":"func layout(ScreenObject)","type":"method"},{"path":"\/documentation\/haishinkit\/screenrenderer\/settarget(_:)","title":"func setTarget(CVPixelBuffer?)","type":"method"}],"path":"\/documentation\/haishinkit\/screenrenderer"},{"title":"VideoEffect","type":"protocol","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func execute(CIImage) -> CIImage","path":"\/documentation\/haishinkit\/videoeffect\/execute(_:)"}],"path":"\/documentation\/haishinkit\/videoeffect"},{"title":"Structures","type":"groupMarker"},{"title":"AMFArray","type":"struct","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(count: Int)","path":"\/documentation\/haishinkit\/amfarray\/init(count:)","type":"init"},{"title":"init(data: [(any Sendable)?])","path":"\/documentation\/haishinkit\/amfarray\/init(data:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var length: Int","path":"\/documentation\/haishinkit\/amfarray\/length","type":"property"},{"title":"Subscripts","type":"groupMarker"},{"title":"subscript(Any) -> (any Sendable)?","path":"\/documentation\/haishinkit\/amfarray\/subscript(_:)","type":"subscript"},{"title":"Default Implementations","type":"groupMarker"},{"title":"CustomDebugStringConvertible Implementations","path":"\/documentation\/haishinkit\/amfarray\/customdebugstringconvertible-implementations","type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/amfarray\/debugdescription","title":"var debugDescription: String","type":"property"}]},{"title":"Equatable Implementations","path":"\/documentation\/haishinkit\/amfarray\/equatable-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","path":"\/documentation\/haishinkit\/amfarray\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"},{"type":"op","path":"\/documentation\/haishinkit\/amfarray\/==(_:_:)","title":"static func == (AMFArray, AMFArray) -> Bool"}]},{"title":"ExpressibleByArrayLiteral Implementations","path":"\/documentation\/haishinkit\/amfarray\/expressiblebyarrayliteral-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/haishinkit\/amfarray\/init(arrayliteral:)","type":"init","title":"init(arrayLiteral: (any Sendable)?...)"}]}],"path":"\/documentation\/haishinkit\/amfarray"},{"title":"AMFTypedObject","type":"struct","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"let data: AMFObject","type":"property","path":"\/documentation\/haishinkit\/amftypedobject\/data"},{"title":"let typeName: String","type":"property","path":"\/documentation\/haishinkit\/amftypedobject\/typename"}],"path":"\/documentation\/haishinkit\/amftypedobject"},{"title":"AMFUndefined","type":"struct","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var description: String","type":"property","path":"\/documentation\/haishinkit\/amfundefined\/description"}],"path":"\/documentation\/haishinkit\/amfundefined"},{"title":"AMFXML","type":"struct","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(data: String)","type":"init","path":"\/documentation\/haishinkit\/amfxml\/init(data:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var description: String","type":"property","path":"\/documentation\/haishinkit\/amfxml\/description"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","type":"symbol","path":"\/documentation\/haishinkit\/amfxml\/equatable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/haishinkit\/amfxml\/!=(_:_:)"},{"type":"op","title":"static func == (AMFXML, AMFXML) -> Bool","path":"\/documentation\/haishinkit\/amfxml\/==(_:_:)"}]}],"path":"\/documentation\/haishinkit\/amfxml"},{"title":"AMFXMLDocument","type":"struct","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init(data: String)","path":"\/documentation\/haishinkit\/amfxmldocument\/init(data:)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var description: String","path":"\/documentation\/haishinkit\/amfxmldocument\/description"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/haishinkit\/amfxmldocument\/!=(_:_:)"},{"title":"static func == (AMFXMLDocument, AMFXMLDocument) -> Bool","type":"op","path":"\/documentation\/haishinkit\/amfxmldocument\/==(_:_:)"}],"type":"symbol","title":"Equatable Implementations","path":"\/documentation\/haishinkit\/amfxmldocument\/equatable-implementations"}],"path":"\/documentation\/haishinkit\/amfxmldocument"},{"title":"AudioCodecSettings","type":"struct","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/haishinkit\/audiocodecsettings\/init(bitrate:downmix:channelmap:samplerate:format:)","type":"init","title":"init(bitRate: Int, downmix: Bool, channelMap: [Int]?, sampleRate: Float64, format: AudioCodecSettings.Format)"},{"path":"\/documentation\/haishinkit\/audiocodecsettings\/init(from:)","type":"init","title":"init(from: any Decoder) throws"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/audiocodecsettings\/bitrate","type":"property","title":"var bitRate: Int"},{"path":"\/documentation\/haishinkit\/audiocodecsettings\/channelmap","type":"property","title":"var channelMap: [Int]?"},{"path":"\/documentation\/haishinkit\/audiocodecsettings\/downmix","type":"property","title":"var downmix: Bool"},{"path":"\/documentation\/haishinkit\/audiocodecsettings\/format-swift.property","type":"property","title":"var format: AudioCodecSettings.Format"},{"path":"\/documentation\/haishinkit\/audiocodecsettings\/samplerate","type":"property","title":"let sampleRate: Float64"},{"type":"groupMarker","title":"Type Properties"},{"path":"\/documentation\/haishinkit\/audiocodecsettings\/default","type":"property","title":"static let `default`: AudioCodecSettings"},{"path":"\/documentation\/haishinkit\/audiocodecsettings\/defaultbitrate","type":"property","title":"static let defaultBitRate: Int"},{"path":"\/documentation\/haishinkit\/audiocodecsettings\/maximumnumberofchannels","type":"property","title":"static let maximumNumberOfChannels: UInt32"},{"type":"groupMarker","title":"Enumerations"},{"path":"\/documentation\/haishinkit\/audiocodecsettings\/format-swift.enum","type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/haishinkit\/audiocodecsettings\/format-swift.enum\/aac","type":"case","title":"case aac"},{"path":"\/documentation\/haishinkit\/audiocodecsettings\/format-swift.enum\/opus","type":"case","title":"case opus"},{"path":"\/documentation\/haishinkit\/audiocodecsettings\/format-swift.enum\/pcm","type":"case","title":"case pcm"},{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/haishinkit\/audiocodecsettings\/format-swift.enum\/init(from:)","type":"init","title":"init(from: any Decoder) throws"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/haishinkit\/audiocodecsettings\/format-swift.enum\/equatable-implementations","type":"symbol","title":"Equatable Implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","path":"\/documentation\/haishinkit\/audiocodecsettings\/format-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"}]}],"title":"AudioCodecSettings.Format"}],"path":"\/documentation\/haishinkit\/audiocodecsettings"},{"title":"AudioMixerSettings","type":"struct","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/haishinkit\/audiomixersettings\/init(samplerate:channels:ismuted:maintrack:tracks:)","type":"init","title":"init(sampleRate: Float64, channels: UInt32, isMuted: Bool, mainTrack: UInt8, tracks: [UInt8 : AudioMixerTrackSettings])"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/audiomixersettings\/channels","type":"property","title":"let channels: UInt32"},{"path":"\/documentation\/haishinkit\/audiomixersettings\/ismuted","type":"property","title":"var isMuted: Bool"},{"path":"\/documentation\/haishinkit\/audiomixersettings\/maintrack","type":"property","title":"var mainTrack: UInt8"},{"path":"\/documentation\/haishinkit\/audiomixersettings\/maximumnumberofchannels","type":"property","title":"var maximumNumberOfChannels: UInt32"},{"path":"\/documentation\/haishinkit\/audiomixersettings\/samplerate","type":"property","title":"let sampleRate: Float64"},{"path":"\/documentation\/haishinkit\/audiomixersettings\/tracks","type":"property","title":"var tracks: [UInt8 : AudioMixerTrackSettings]"},{"type":"groupMarker","title":"Type Properties"},{"path":"\/documentation\/haishinkit\/audiomixersettings\/default","type":"property","title":"static let `default`: AudioMixerSettings"},{"path":"\/documentation\/haishinkit\/audiomixersettings\/maximumsamplerate","type":"property","title":"static let maximumSampleRate: Float64"}],"path":"\/documentation\/haishinkit\/audiomixersettings"},{"title":"AudioMixerTrackSettings","type":"struct","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/haishinkit\/audiomixertracksettings\/init(from:)","title":"init(from: any Decoder) throws"},{"type":"init","path":"\/documentation\/haishinkit\/audiomixertracksettings\/init(volume:ismuted:downmix:channelmap:)","title":"init(volume: Float, isMuted: Bool, downmix: Bool, channelMap: [Int]?)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/haishinkit\/audiomixertracksettings\/channelmap","title":"var channelMap: [Int]?"},{"type":"property","path":"\/documentation\/haishinkit\/audiomixertracksettings\/downmix","title":"var downmix: Bool"},{"type":"property","path":"\/documentation\/haishinkit\/audiomixertracksettings\/ismuted","title":"var isMuted: Bool"},{"type":"property","path":"\/documentation\/haishinkit\/audiomixertracksettings\/volume","title":"var volume: Float"},{"type":"groupMarker","title":"Type Properties"},{"type":"property","path":"\/documentation\/haishinkit\/audiomixertracksettings\/default","title":"static let `default`: AudioMixerTrackSettings"}],"path":"\/documentation\/haishinkit\/audiomixertracksettings"},{"title":"HKAtomic","type":"struct","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(A)","type":"init","path":"\/documentation\/haishinkit\/hkatomic\/init(_:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var value: A","type":"property","path":"\/documentation\/haishinkit\/hkatomic\/value"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func mutate((inout A) -> Void)","type":"method","path":"\/documentation\/haishinkit\/hkatomic\/mutate(_:)"}],"path":"\/documentation\/haishinkit\/hkatomic"},{"title":"NetworkMonitorReport","type":"struct","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"let currentBytesInPerSecond: Int","path":"\/documentation\/haishinkit\/networkmonitorreport\/currentbytesinpersecond","type":"property"},{"title":"let currentBytesOutPerSecond: Int","path":"\/documentation\/haishinkit\/networkmonitorreport\/currentbytesoutpersecond","type":"property"},{"title":"let currentQueueBytesOut: Int","path":"\/documentation\/haishinkit\/networkmonitorreport\/currentqueuebytesout","type":"property"},{"title":"let totalBytesIn: Int","path":"\/documentation\/haishinkit\/networkmonitorreport\/totalbytesin","type":"property"},{"title":"let totalBytesOut: Int","path":"\/documentation\/haishinkit\/networkmonitorreport\/totalbytesout","type":"property"}],"path":"\/documentation\/haishinkit\/networkmonitorreport"},{"title":"NetworkTransportReport","type":"struct","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/haishinkit\/networktransportreport\/init(queuebytesout:totalbytesin:totalbytesout:)","title":"init(queueBytesOut: Int, totalBytesIn: Int, totalBytesOut: Int)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/haishinkit\/networktransportreport\/queuebytesout","title":"let queueBytesOut: Int"},{"type":"property","path":"\/documentation\/haishinkit\/networktransportreport\/totalbytesin","title":"let totalBytesIn: Int"},{"type":"property","path":"\/documentation\/haishinkit\/networktransportreport\/totalbytesout","title":"let totalBytesOut: Int"}],"path":"\/documentation\/haishinkit\/networktransportreport"},{"title":"RTMPResponse","type":"struct","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"let arguments: [(any Sendable)?]","type":"property","path":"\/documentation\/haishinkit\/rtmpresponse\/arguments"},{"title":"let status: RTMPStatus?","type":"property","path":"\/documentation\/haishinkit\/rtmpresponse\/status"}],"path":"\/documentation\/haishinkit\/rtmpresponse"},{"title":"RTMPStatus","type":"struct","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"let code: String","type":"property","path":"\/documentation\/haishinkit\/rtmpstatus\/code"},{"title":"let description: String","type":"property","path":"\/documentation\/haishinkit\/rtmpstatus\/description"},{"title":"let level: String","type":"property","path":"\/documentation\/haishinkit\/rtmpstatus\/level"},{"title":"Subscripts","type":"groupMarker"},{"title":"subscript(dynamicMember _: String) -> Double?","type":"subscript","path":"\/documentation\/haishinkit\/rtmpstatus\/subscript(dynamicmember:)-7qc0b"},{"title":"subscript(dynamicMember _: String) -> String?","type":"subscript","path":"\/documentation\/haishinkit\/rtmpstatus\/subscript(dynamicmember:)-9sprr"}],"path":"\/documentation\/haishinkit\/rtmpstatus"},{"title":"RTMPStreamInfo","type":"struct","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var byteCount: Int","path":"\/documentation\/haishinkit\/rtmpstreaminfo\/bytecount"},{"type":"property","title":"var currentBytesPerSecond: Int","path":"\/documentation\/haishinkit\/rtmpstreaminfo\/currentbytespersecond"},{"type":"property","title":"var resourceName: String?","path":"\/documentation\/haishinkit\/rtmpstreaminfo\/resourcename"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/rtmpstreaminfo\/debugdescription","type":"property","title":"var debugDescription: String"}],"type":"symbol","title":"CustomDebugStringConvertible Implementations","path":"\/documentation\/haishinkit\/rtmpstreaminfo\/customdebugstringconvertible-implementations"}],"path":"\/documentation\/haishinkit\/rtmpstreaminfo"},{"title":"SoundTransform","type":"struct","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(volume: Float, pan: Float)","type":"init","path":"\/documentation\/haishinkit\/soundtransform\/init(volume:pan:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var pan: Float","type":"property","path":"\/documentation\/haishinkit\/soundtransform\/pan"},{"title":"var volume: Float","type":"property","path":"\/documentation\/haishinkit\/soundtransform\/volume"},{"title":"Type Properties","type":"groupMarker"},{"title":"static let defaultPan: Float","type":"property","path":"\/documentation\/haishinkit\/soundtransform\/defaultpan"},{"title":"static let defaultVolume: Float","type":"property","path":"\/documentation\/haishinkit\/soundtransform\/defaultvolume"},{"title":"Default Implementations","type":"groupMarker"},{"title":"CustomDebugStringConvertible Implementations","type":"symbol","path":"\/documentation\/haishinkit\/soundtransform\/customdebugstringconvertible-implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"type":"property","title":"var debugDescription: String","path":"\/documentation\/haishinkit\/soundtransform\/debugdescription"}]},{"title":"Equatable Implementations","type":"symbol","path":"\/documentation\/haishinkit\/soundtransform\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/haishinkit\/soundtransform\/!=(_:_:)"}]}],"path":"\/documentation\/haishinkit\/soundtransform"},{"title":"VTSessionOption","type":"struct","children":[{"title":"Default Implementations","type":"groupMarker"},{"type":"symbol","path":"\/documentation\/haishinkit\/vtsessionoption\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/haishinkit\/vtsessionoption\/!=(_:_:)"},{"title":"static func == (VTSessionOption, VTSessionOption) -> Bool","type":"op","path":"\/documentation\/haishinkit\/vtsessionoption\/==(_:_:)"}],"title":"Equatable Implementations"},{"type":"symbol","path":"\/documentation\/haishinkit\/vtsessionoption\/hashable-implementations","children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/vtsessionoption\/hash(into:)","type":"method","title":"func hash(into: inout Hasher)"}],"title":"Hashable Implementations"}],"path":"\/documentation\/haishinkit\/vtsessionoption"},{"title":"VideoCodecSettings","type":"struct","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/init(videosize:bitrate:profilelevel:scalingmode:bitratemode:maxkeyframeintervalduration:allowframereordering:dataratelimits:ishardwareencoderenabled:)","title":"init(videoSize: CGSize, bitRate: Int, profileLevel: String, scalingMode: VideoCodecSettings.ScalingMode, bitRateMode: VideoCodecSettings.BitRateMode, maxKeyFrameIntervalDuration: Int32, allowFrameReordering: Bool?, dataRateLimits: [Double]?, isHardwareEncoderEnabled: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/allowframereordering","title":"var allowFrameReordering: Bool?","type":"property"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/bitrate","title":"var bitRate: Int","type":"property"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.property","title":"var bitRateMode: VideoCodecSettings.BitRateMode","type":"property"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/dataratelimits","title":"var dataRateLimits: [Double]?","type":"property"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/frameinterval","title":"var frameInterval: Double","type":"property"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/ishardwareencoderenabled","title":"var isHardwareEncoderEnabled: Bool","type":"property"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/maxkeyframeintervalduration","title":"var maxKeyFrameIntervalDuration: Int32","type":"property"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/profilelevel","title":"var profileLevel: String","type":"property"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.property","title":"var scalingMode: VideoCodecSettings.ScalingMode","type":"property"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/videosize","title":"var videoSize: CGSize","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/default","title":"static let `default`: VideoCodecSettings","type":"property"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/frameinterval01","title":"static let frameInterval01: Double","type":"property"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/frameinterval05","title":"static let frameInterval05: Double","type":"property"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/frameinterval10","title":"static let frameInterval10: Double","type":"property"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/frameinterval30","title":"static let frameInterval30: Double","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/average","title":"case average","type":"case"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/constant","title":"case constant","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}],"path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/init(from:)","type":"init","title":"init(from: any Decoder) throws"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/hashvalue","type":"property","title":"var hashValue: Int"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/encode(to:)","type":"method","title":"func encode(to: any Encoder) throws"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/hash(into:)","type":"method","title":"func hash(into: inout Hasher)"}],"path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum","title":"VideoCodecSettings.BitRateMode","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case cropSourceToCleanAperture","type":"case","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/cropsourcetocleanaperture"},{"title":"case letterbox","type":"case","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/letterbox"},{"title":"case normal","type":"case","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/normal"},{"title":"case trim","type":"case","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/trim"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: String)","type":"init","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/init(rawvalue:)"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/!=(_:_:)"}],"path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/equatable-implementations"},{"title":"RawRepresentable Implementations","type":"symbol","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/init(from:)","title":"init(from: any Decoder) throws"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/hashvalue","title":"var hashValue: Int"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/encode(to:)","title":"func encode(to: any Encoder) throws"},{"type":"method","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)"}],"path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/rawrepresentable-implementations"}],"path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum","title":"VideoCodecSettings.ScalingMode","type":"enum"}],"path":"\/documentation\/haishinkit\/videocodecsettings"},{"title":"VideoMixerSettings","type":"struct","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/haishinkit\/videomixersettings\/init(from:)","type":"init"},{"title":"init(mode: VideoMixerSettings.Mode, isMuted: Bool, mainTrack: UInt8)","path":"\/documentation\/haishinkit\/videomixersettings\/init(mode:ismuted:maintrack:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var isMuted: Bool","path":"\/documentation\/haishinkit\/videomixersettings\/ismuted","type":"property"},{"title":"var mainTrack: UInt8","path":"\/documentation\/haishinkit\/videomixersettings\/maintrack","type":"property"},{"title":"var mode: VideoMixerSettings.Mode","path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.property","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"title":"static let `default`: VideoMixerSettings","path":"\/documentation\/haishinkit\/videomixersettings\/default","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"title":"VideoMixerSettings.Mode","path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","title":"case offscreen","path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/offscreen"},{"type":"case","title":"case passthrough","path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/passthrough"},{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init?(rawValue: String)","path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/init(rawvalue:)"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/!=(_:_:)","type":"op"}],"title":"Equatable Implementations","path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/equatable-implementations"},{"type":"symbol","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init(from: any Decoder) throws","path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/init(from:)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var hashValue: Int","path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/hashvalue"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func encode(to: any Encoder) throws","path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/encode(to:)"},{"type":"method","title":"func hash(into: inout Hasher)","path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/hash(into:)"}],"title":"RawRepresentable Implementations","path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/rawrepresentable-implementations"}],"type":"enum"}],"path":"\/documentation\/haishinkit\/videomixersettings"},{"title":"Variables","type":"groupMarker"},{"title":"let kAMFUndefined: AMFUndefined","type":"var","path":"\/documentation\/haishinkit\/kamfundefined"},{"title":"let kHaishinKitIdentifier: String","type":"var","path":"\/documentation\/haishinkit\/khaishinkitidentifier"},{"title":"Type Aliases","type":"groupMarker"},{"title":"AMFObject","type":"typealias","path":"\/documentation\/haishinkit\/amfobject"},{"title":"AudioDeviceConfigurationBlock","type":"typealias","path":"\/documentation\/haishinkit\/audiodeviceconfigurationblock"},{"title":"VideoDeviceConfigurationBlock","type":"typealias","path":"\/documentation\/haishinkit\/videodeviceconfigurationblock"},{"title":"Enumerations","type":"groupMarker"},{"title":"DeviceUtil","type":"enum","children":[{"type":"groupMarker","title":"Type Methods"},{"path":"\/documentation\/haishinkit\/deviceutil\/device(withlocalizedname:mediatype:)","type":"method","title":"static func device(withLocalizedName: String, mediaType: AVMediaType) -> AVCaptureDevice?"}],"path":"\/documentation\/haishinkit\/deviceutil"},{"title":"HKStreamReadyState","type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case idle","path":"\/documentation\/haishinkit\/hkstreamreadystate\/idle","type":"case"},{"title":"case play","path":"\/documentation\/haishinkit\/hkstreamreadystate\/play","type":"case"},{"title":"case playing","path":"\/documentation\/haishinkit\/hkstreamreadystate\/playing","type":"case"},{"title":"case publish","path":"\/documentation\/haishinkit\/hkstreamreadystate\/publish","type":"case"},{"title":"case publishing","path":"\/documentation\/haishinkit\/hkstreamreadystate\/publishing","type":"case"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: Int)","path":"\/documentation\/haishinkit\/hkstreamreadystate\/init(rawvalue:)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","path":"\/documentation\/haishinkit\/hkstreamreadystate\/equatable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/haishinkit\/hkstreamreadystate\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}],"type":"symbol"},{"title":"RawRepresentable Implementations","path":"\/documentation\/haishinkit\/hkstreamreadystate\/rawrepresentable-implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","type":"property","path":"\/documentation\/haishinkit\/hkstreamreadystate\/hashvalue"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func hash(into: inout Hasher)","type":"method","path":"\/documentation\/haishinkit\/hkstreamreadystate\/hash(into:)"}],"type":"symbol"}],"path":"\/documentation\/haishinkit\/hkstreamreadystate"},{"title":"NetworkMonitorEvent","type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/haishinkit\/networkmonitorevent\/publishinsufficientbwoccured(report:)","title":"case publishInsufficientBWOccured(report: NetworkMonitorReport)","type":"case"},{"path":"\/documentation\/haishinkit\/networkmonitorevent\/reset","title":"case reset","type":"case"},{"path":"\/documentation\/haishinkit\/networkmonitorevent\/status(report:)","title":"case status(report: NetworkMonitorReport)","type":"case"}],"path":"\/documentation\/haishinkit\/networkmonitorevent"},{"title":"RTMPObjectEncoding","type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","path":"\/documentation\/haishinkit\/rtmpobjectencoding\/amf0","title":"case amf0"},{"type":"case","path":"\/documentation\/haishinkit\/rtmpobjectencoding\/amf3","title":"case amf3"},{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/haishinkit\/rtmpobjectencoding\/init(rawvalue:)","title":"init?(rawValue: UInt8)"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/haishinkit\/rtmpobjectencoding\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}],"path":"\/documentation\/haishinkit\/rtmpobjectencoding\/equatable-implementations","title":"Equatable Implementations"},{"type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","type":"property","path":"\/documentation\/haishinkit\/rtmpobjectencoding\/hashvalue"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func hash(into: inout Hasher)","type":"method","path":"\/documentation\/haishinkit\/rtmpobjectencoding\/hash(into:)"}],"path":"\/documentation\/haishinkit\/rtmpobjectencoding\/rawrepresentable-implementations","title":"RawRepresentable Implementations"}],"path":"\/documentation\/haishinkit\/rtmpobjectencoding"},{"title":"Extended Modules","type":"groupMarker"},{"title":"CoreMedia","type":"extension","children":[{"title":"Extended Classes","type":"groupMarker"},{"title":"CMFormatDescription","type":"extension","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/coremedia\/cmformatdescription\/iscompressed","type":"property","title":"var isCompressed: Bool"}],"path":"\/documentation\/haishinkit\/coremedia\/cmformatdescription"}],"path":"\/documentation\/haishinkit\/coremedia"}],"title":"HaishinKit","path":"\/documentation\/haishinkit"},{"title":"MoQTHaishinKit","path":"\/documentation\/moqthaishinkit","children":[{"title":"Classes","type":"groupMarker"},{"title":"MoQTConnection","path":"\/documentation\/moqthaishinkit\/moqtconnection","type":"class","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(MoQTSetupRole, requestTimeOut: UInt64)","path":"\/documentation\/moqthaishinkit\/moqtconnection\/init(_:requesttimeout:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var objectStream: AsyncStream<MoQTObject>","path":"\/documentation\/moqthaishinkit\/moqtconnection\/objectstream","type":"property"},{"title":"let requestTimeout: UInt64","path":"\/documentation\/moqthaishinkit\/moqtconnection\/requesttimeout","type":"property"},{"title":"let role: MoQTSetupRole","path":"\/documentation\/moqthaishinkit\/moqtconnection\/role","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func annouce([String], authInfo: String?) async throws -> Result<MoQTAnnounceOk, MoQTAnnounceError>","path":"\/documentation\/moqthaishinkit\/moqtconnection\/annouce(_:authinfo:)","type":"method"},{"title":"func close() async","path":"\/documentation\/moqthaishinkit\/moqtconnection\/close()","type":"method"},{"title":"func connect(String) async throws -> MoQTServerSetup","path":"\/documentation\/moqthaishinkit\/moqtconnection\/connect(_:)","type":"method"},{"title":"func send([MoQTObject], header: MoQTStreamHeaderSubgroup) async throws","path":"\/documentation\/moqthaishinkit\/moqtconnection\/send(_:header:)","type":"method"},{"title":"func subscribe([String], name: String, authInfo: String?) async throws -> Result<MoQTSubscribeOk, MoQTSubscribeError>","path":"\/documentation\/moqthaishinkit\/moqtconnection\/subscribe(_:name:authinfo:)","type":"method"},{"title":"func subscribeAnnouces([String], authInfo: String?) async throws -> Result<MoQTSubscribeAnnouncesOk, MoQTSubscribeAnnouncesError>","path":"\/documentation\/moqthaishinkit\/moqtconnection\/subscribeannouces(_:authinfo:)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"title":"static let defaultPort: Int","path":"\/documentation\/moqthaishinkit\/moqtconnection\/defaultport","type":"property"},{"title":"static let defaultRequestTimeout: UInt64","path":"\/documentation\/moqthaishinkit\/moqtconnection\/defaultrequesttimeout","type":"property"},{"title":"static let supportedProtocols: [String]","path":"\/documentation\/moqthaishinkit\/moqtconnection\/supportedprotocols","type":"property"},{"title":"static let supportedVersions: [MoQTVersion]","path":"\/documentation\/moqthaishinkit\/moqtconnection\/supportedversions","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"title":"MoQTConnection.Error","path":"\/documentation\/moqthaishinkit\/moqtconnection\/error","type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/error\/connectiontimedout","type":"case","title":"case connectionTimedOut"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/error\/invalidstate","type":"case","title":"case invalidState"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/error\/requesttimedout","type":"case","title":"case requestTimedOut"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/error\/socketerroroccurred(_:)","type":"case","title":"case socketErrorOccurred(any Error)"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/error\/unknownresponse","type":"case","title":"case unknownResponse"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/error\/unsupportedcommand(_:)","type":"case","title":"case unsupportedCommand(String)"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/error\/error-implementations","type":"symbol","title":"Error Implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtconnection\/error\/localizeddescription","title":"var localizedDescription: String"}]}]},{"title":"Default Implementations","type":"groupMarker"},{"title":"Actor Implementations","path":"\/documentation\/moqthaishinkit\/moqtconnection\/actor-implementations","type":"symbol","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/moqthaishinkit\/moqtconnection\/assertisolated(_:file:line:)","type":"method"},{"title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","path":"\/documentation\/moqthaishinkit\/moqtconnection\/assumeisolated(_:file:line:)","type":"method"},{"title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/moqthaishinkit\/moqtconnection\/preconditionisolated(_:file:line:)","type":"method"}]}]},{"title":"Protocols","type":"groupMarker"},{"title":"MoQTControlMessage","path":"\/documentation\/moqthaishinkit\/moqtcontrolmessage","type":"protocol","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var payload: Data","path":"\/documentation\/moqthaishinkit\/moqtcontrolmessage\/payload","type":"property"},{"title":"var type: MoQTMessageType","path":"\/documentation\/moqthaishinkit\/moqtcontrolmessage\/type","type":"property"}]},{"title":"Structures","type":"groupMarker"},{"title":"MoQTAnnounce","path":"\/documentation\/moqthaishinkit\/moqtannounce","type":"struct","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtannounce\/payload","title":"var payload: Data"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtannounce\/subscribeparameters","title":"let subscribeParameters: [MoQTVersionSpecificParameter]"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtannounce\/tracknamespace","title":"let trackNamespace: [String]"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtannounce\/type","title":"let type: MoQTMessageType"}]},{"title":"MoQTAnnounceError","path":"\/documentation\/moqthaishinkit\/moqtannounceerror","type":"struct","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"let code: Int","type":"property","path":"\/documentation\/moqthaishinkit\/moqtannounceerror\/code"},{"title":"var payload: Data","type":"property","path":"\/documentation\/moqthaishinkit\/moqtannounceerror\/payload"},{"title":"let reasonPhrase: String","type":"property","path":"\/documentation\/moqthaishinkit\/moqtannounceerror\/reasonphrase"},{"title":"let trackNamespace: [String]","type":"property","path":"\/documentation\/moqthaishinkit\/moqtannounceerror\/tracknamespace"},{"title":"let type: MoQTMessageType","type":"property","path":"\/documentation\/moqthaishinkit\/moqtannounceerror\/type"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Error Implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/moqthaishinkit\/moqtannounceerror\/localizeddescription","type":"property","title":"var localizedDescription: String"}],"path":"\/documentation\/moqthaishinkit\/moqtannounceerror\/error-implementations"}]},{"title":"MoQTAnnounceOk","path":"\/documentation\/moqthaishinkit\/moqtannounceok","type":"struct","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var payload: Data","path":"\/documentation\/moqthaishinkit\/moqtannounceok\/payload"},{"type":"property","title":"let trackNamespace: [String]","path":"\/documentation\/moqthaishinkit\/moqtannounceok\/tracknamespace"},{"type":"property","title":"let type: MoQTMessageType","path":"\/documentation\/moqthaishinkit\/moqtannounceok\/type"}]},{"title":"MoQTGoaway","path":"\/documentation\/moqthaishinkit\/moqtgoaway","type":"struct","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/moqthaishinkit\/moqtgoaway\/newsessionuri","type":"property","title":"let newSessionURI: String"},{"path":"\/documentation\/moqthaishinkit\/moqtgoaway\/payload","type":"property","title":"var payload: Data"},{"path":"\/documentation\/moqthaishinkit\/moqtgoaway\/type","type":"property","title":"let type: MoQTMessageType"}]},{"title":"MoQTObject","path":"\/documentation\/moqthaishinkit\/moqtobject","type":"struct","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtobject\/init(id:status:data:)","title":"init(id: Int, status: Int?, data: Data)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtobject\/data","title":"let data: Data","type":"property"},{"path":"\/documentation\/moqthaishinkit\/moqtobject\/id","title":"let id: Int","type":"property"},{"path":"\/documentation\/moqthaishinkit\/moqtobject\/status","title":"let status: Int?","type":"property"}]},{"title":"MoQTServerSetup","path":"\/documentation\/moqthaishinkit\/moqtserversetup","type":"struct","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var payload: Data","path":"\/documentation\/moqthaishinkit\/moqtserversetup\/payload","type":"property"},{"title":"let selectedVersion: Int","path":"\/documentation\/moqthaishinkit\/moqtserversetup\/selectedversion","type":"property"},{"title":"let setupParameters: [MoQTSetupParameter]","path":"\/documentation\/moqthaishinkit\/moqtserversetup\/setupparameters","type":"property"},{"title":"let type: MoQTMessageType","path":"\/documentation\/moqthaishinkit\/moqtserversetup\/type","type":"property"}]},{"title":"MoQTSetupParameter","path":"\/documentation\/moqthaishinkit\/moqtsetupparameter","type":"struct","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/moqthaishinkit\/moqtsetupparameter\/key","type":"property","title":"let key: MoQTSetupParameterType"},{"path":"\/documentation\/moqthaishinkit\/moqtsetupparameter\/value","type":"property","title":"let value: any Sendable"}]},{"title":"MoQTStreamHeaderSubgroup","path":"\/documentation\/moqthaishinkit\/moqtstreamheadersubgroup","type":"struct","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/moqthaishinkit\/moqtstreamheadersubgroup\/init(trackalias:groupid:subgroupid:publisherpriority:)","type":"init","title":"init(trackAlias: Int, groupId: Int, subgroupId: Int, publisherPriority: Int)"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/moqthaishinkit\/moqtstreamheadersubgroup\/groupid","type":"property","title":"let groupId: Int"},{"path":"\/documentation\/moqthaishinkit\/moqtstreamheadersubgroup\/payload","type":"property","title":"var payload: Data"},{"path":"\/documentation\/moqthaishinkit\/moqtstreamheadersubgroup\/publisherpriority","type":"property","title":"let publisherPriority: Int"},{"path":"\/documentation\/moqthaishinkit\/moqtstreamheadersubgroup\/subgroupid","type":"property","title":"let subgroupId: Int"},{"path":"\/documentation\/moqthaishinkit\/moqtstreamheadersubgroup\/trackalias","type":"property","title":"let trackAlias: Int"},{"path":"\/documentation\/moqthaishinkit\/moqtstreamheadersubgroup\/type","type":"property","title":"let type: MoQTDataStreamType"}]},{"title":"MoQTSubscribe","path":"\/documentation\/moqthaishinkit\/moqtsubscribe","type":"struct","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/endgroup","title":"let endGroup: Int?"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/endobject","title":"let endObject: Int?"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.property","title":"let filterType: MoQTSubscribe.FilterType"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.property","title":"let groupOrder: MoQTSubscribe.GroupOrder"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/payload","title":"var payload: Data"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/startgroup","title":"let startGroup: Int?"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/startobject","title":"let startObject: Int?"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/subscribeid","title":"let subscribeId: Int"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/subscribeparameters","title":"let subscribeParameters: [MoQTVersionSpecificParameter]"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/subscribepriority","title":"let subscribePriority: Int"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/trackalias","title":"let trackAlias: Int"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/trackname","title":"let trackName: String"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/tracknamespace","title":"let trackNamespace: [String]"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/type","title":"let type: MoQTMessageType"},{"type":"groupMarker","title":"Enumerations"},{"type":"enum","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum","title":"MoQTSubscribe.FilterType","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/absoluterange","title":"case absoluteRange","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/absolutestart","title":"case absoluteStart","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/latestgroup","title":"case latestGroup","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/latestobject","title":"case latestObject","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/!=(_:_:)"}],"title":"Equatable Implementations","type":"symbol"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/rawrepresentable-implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/hashvalue","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func hash(into: inout Hasher)","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/hash(into:)","type":"method"}],"title":"RawRepresentable Implementations","type":"symbol"}]},{"type":"enum","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum","title":"MoQTSubscribe.GroupOrder","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/ascending","title":"case ascending","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/descending","title":"case descending","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/original","title":"case original","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/!=(_:_:)"}],"title":"Equatable Implementations","type":"symbol"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/rawrepresentable-implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/hashvalue","title":"var hashValue: Int"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)"}],"title":"RawRepresentable Implementations","type":"symbol"}]}]},{"title":"MoQTSubscribeAnnounces","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounces","type":"struct","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"let parameters: [MoQTVersionSpecificParameter]","type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounces\/parameters"},{"title":"var payload: Data","type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounces\/payload"},{"title":"let trackNamespacePrefix: [String]","type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounces\/tracknamespaceprefix"},{"title":"let type: MoQTMessageType","type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounces\/type"}]},{"title":"MoQTSubscribeAnnouncesError","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounceserror","type":"struct","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounceserror\/errorcode","type":"property","title":"let errorCode: Int"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounceserror\/payload","type":"property","title":"var payload: Data"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounceserror\/reasonphrase","type":"property","title":"let reasonPhrase: String"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounceserror\/tracknamespaceprefix","type":"property","title":"let trackNamespacePrefix: [String]"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounceserror\/type","type":"property","title":"let type: MoQTMessageType"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounceserror\/error-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var localizedDescription: String","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounceserror\/localizeddescription"}],"title":"Error Implementations"}]},{"title":"MoQTSubscribeAnnouncesOk","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannouncesok","type":"struct","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var payload: Data","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannouncesok\/payload","type":"property"},{"title":"let trackNamespacePrefix: [String]","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannouncesok\/tracknamespaceprefix","type":"property"},{"title":"let type: MoQTMessageType","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannouncesok\/type","type":"property"}]},{"title":"MoQTSubscribeError","path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror","type":"struct","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"let code: Int","path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror\/code"},{"type":"property","title":"var payload: Data","path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror\/payload"},{"type":"property","title":"let reasonPhrase: String","path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror\/reasonphrase"},{"type":"property","title":"let subscribeId: Int","path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror\/subscribeid"},{"type":"property","title":"let trackAlias: Int","path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror\/trackalias"},{"type":"property","title":"let type: MoQTMessageType","path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror\/type"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","title":"Error Implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var localizedDescription: String","path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror\/localizeddescription","type":"property"}],"path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror\/error-implementations"}]},{"title":"MoQTSubscribeOk","path":"\/documentation\/moqthaishinkit\/moqtsubscribeok","type":"struct","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/contentexists","title":"let contentExists: Bool"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/expires","title":"let expires: Int"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/grouporder","title":"let groupOrder: MoQTSubscribe.GroupOrder"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/largestgroupid","title":"let largestGroupId: Int?"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/largestobjectid","title":"let largestObjectId: Int?"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/payload","title":"var payload: Data"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/subscribeid","title":"let subscribeId: Int"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/subscribeparameters","title":"let subscribeParameters: [MoQTVersionSpecificParameter]"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/type","title":"let type: MoQTMessageType"}]},{"title":"MoQTVersionSpecificParameter","path":"\/documentation\/moqthaishinkit\/moqtversionspecificparameter","type":"struct","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"let key: MoQTVersionSpecificType","path":"\/documentation\/moqthaishinkit\/moqtversionspecificparameter\/key"},{"type":"property","title":"let value: any Sendable","path":"\/documentation\/moqthaishinkit\/moqtversionspecificparameter\/value"}]},{"title":"Enumerations","type":"groupMarker"},{"title":"MoQTDataStreamType","path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype","type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case fetchHeader","type":"case","path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/fetchheader"},{"title":"case objectDatagram","type":"case","path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/objectdatagram"},{"title":"case streamHeaderSubgroup","type":"case","path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/streamheadersubgroup"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: Int)","type":"init","path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/init(rawvalue:)"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/!=(_:_:)"}],"type":"symbol","path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/equatable-implementations"},{"title":"RawRepresentable Implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/hashvalue","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func hash(into: inout Hasher)","path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/hash(into:)","type":"method"}],"type":"symbol","path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/rawrepresentable-implementations"}]},{"title":"MoQTMessageType","path":"\/documentation\/moqthaishinkit\/moqtmessagetype","type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/announce","type":"case","title":"case announce"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/announcecancel","type":"case","title":"case announceCancel"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/announceerror","type":"case","title":"case announceError"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/announceok","type":"case","title":"case announceOk"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/clientsetup","type":"case","title":"case clientSetup"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/goaway","type":"case","title":"case goaway"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/serversetup","type":"case","title":"case serverSetup"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/subscribe","type":"case","title":"case subscribe"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/subscribeannounuces","type":"case","title":"case subscribeAnnounuces"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/subscribeannounuceserror","type":"case","title":"case subscribeAnnounucesError"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/subscribeannounucesok","type":"case","title":"case subscribeAnnounucesOk"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/subscribedone","type":"case","title":"case subscribeDone"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/subscribeerror","type":"case","title":"case subscribeError"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/subscribeok","type":"case","title":"case subscribeOk"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/subscribeupdate","type":"case","title":"case subscribeUpdate"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/trackstatus","type":"case","title":"case trackStatus"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/trackstatusrequest","type":"case","title":"case trackStatusRequest"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/unannounce","type":"case","title":"case unannounce"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/unsubscribe","type":"case","title":"case unsubscribe"},{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/init(rawvalue:)","type":"init","title":"init?(rawValue: Int)"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/equatable-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}],"title":"Equatable Implementations"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/rawrepresentable-implementations","type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"title":"RawRepresentable Implementations"}]},{"title":"MoQTSetupParameterType","path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype","type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/maxsubscribeid","type":"case","title":"case maxSubscribeId"},{"path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/path","type":"case","title":"case path"},{"path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/role","type":"case","title":"case role"},{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/init(rawvalue:)","type":"init","title":"init?(rawValue: Int)"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"type":"groupMarker","title":"Operators"},{"type":"op","path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"}],"path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/equatable-implementations","type":"symbol","title":"Equatable Implementations"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var hashValue: Int","path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/hashvalue"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func hash(into: inout Hasher)","path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/hash(into:)"}],"path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/rawrepresentable-implementations","type":"symbol","title":"RawRepresentable Implementations"}]},{"title":"MoQTSetupRole","path":"\/documentation\/moqthaishinkit\/moqtsetuprole","type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/pubsub","title":"case pubSub"},{"type":"case","path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/publisher","title":"case publisher"},{"type":"case","path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/subscriber","title":"case subscriber"},{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/init(rawvalue:)","title":"init?(rawValue: Int)"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"title":"Equatable Implementations"},{"type":"symbol","path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/rawrepresentable-implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","type":"property","path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/hashvalue"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func hash(into: inout Hasher)","type":"method","path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/hash(into:)"}],"title":"RawRepresentable Implementations"}]},{"title":"MoQTVersion","path":"\/documentation\/moqthaishinkit\/moqtversion","type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/moqthaishinkit\/moqtversion\/draft01","type":"case","title":"case draft01"},{"path":"\/documentation\/moqthaishinkit\/moqtversion\/draft02","type":"case","title":"case draft02"},{"path":"\/documentation\/moqthaishinkit\/moqtversion\/draft03","type":"case","title":"case draft03"},{"path":"\/documentation\/moqthaishinkit\/moqtversion\/draft04","type":"case","title":"case draft04"},{"path":"\/documentation\/moqthaishinkit\/moqtversion\/draft05","type":"case","title":"case draft05"},{"path":"\/documentation\/moqthaishinkit\/moqtversion\/draft06","type":"case","title":"case draft06"},{"path":"\/documentation\/moqthaishinkit\/moqtversion\/draft07","type":"case","title":"case draft07"},{"path":"\/documentation\/moqthaishinkit\/moqtversion\/draft07exp","type":"case","title":"case draft07Exp"},{"path":"\/documentation\/moqthaishinkit\/moqtversion\/draft07exp2","type":"case","title":"case draft07Exp2"},{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/moqthaishinkit\/moqtversion\/init(rawvalue:)","type":"init","title":"init?(rawValue: Int)"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/moqthaishinkit\/moqtversion\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}],"path":"\/documentation\/moqthaishinkit\/moqtversion\/equatable-implementations","type":"symbol","title":"Equatable Implementations"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","type":"property","path":"\/documentation\/moqthaishinkit\/moqtversion\/hashvalue"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func hash(into: inout Hasher)","type":"method","path":"\/documentation\/moqthaishinkit\/moqtversion\/hash(into:)"}],"path":"\/documentation\/moqthaishinkit\/moqtversion\/rawrepresentable-implementations","type":"symbol","title":"RawRepresentable Implementations"}]},{"title":"MoQTVersionSpecificType","path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype","type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/authorizationinfo","title":"case authorizationInfo","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/deliverytimeout","title":"case deliveryTimeout","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/maxcacheduration","title":"case maxCacheDuration","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/!=(_:_:)","type":"op"}],"title":"Equatable Implementations","type":"symbol"},{"path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/rawrepresentable-implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/hashvalue","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func hash(into: inout Hasher)","path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/hash(into:)","type":"method"}],"title":"RawRepresentable Implementations","type":"symbol"}]}],"type":"module"},{"title":"SRTHaishinKit","path":"\/documentation\/srthaishinkit","children":[{"title":"Classes","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/srthaishinkit\/srtconnection\/init()","title":"init()"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtconnection\/connected","title":"var connected: Bool"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtconnection\/performancedata","title":"var performanceData: SRTPerformanceData?"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtconnection\/uri","title":"var uri: URL?"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/srthaishinkit\/srtconnection\/close()","title":"func close() async"},{"type":"method","path":"\/documentation\/srthaishinkit\/srtconnection\/connect(_:)","title":"func connect(URL?) async throws"},{"type":"method","path":"\/documentation\/srthaishinkit\/srtconnection\/getsocketoption(_:)","title":"func getSocketOption(SRTSocketOption.Name) async throws -> SRTSocketOption?"},{"type":"method","path":"\/documentation\/srthaishinkit\/srtconnection\/open(_:mode:)","title":"func open(URL?, mode: SRTMode) async throws"},{"type":"method","path":"\/documentation\/srthaishinkit\/srtconnection\/setsocketoption(_:)","title":"func setSocketOption(SRTSocketOption) async throws"},{"type":"groupMarker","title":"Type Properties"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtconnection\/version","title":"static let version: String"},{"type":"groupMarker","title":"Enumerations"},{"type":"enum","path":"\/documentation\/srthaishinkit\/srtconnection\/error","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/srthaishinkit\/srtconnection\/error\/failedtoconnect(_:reson:)","type":"case","title":"case failedToConnect(String, reson: Int32)"},{"path":"\/documentation\/srthaishinkit\/srtconnection\/error\/invalidstate","type":"case","title":"case invalidState"},{"path":"\/documentation\/srthaishinkit\/srtconnection\/error\/unsupporteduri(_:)","type":"case","title":"case unsupportedUri(URL?)"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/srthaishinkit\/srtconnection\/error\/error-implementations","type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/srthaishinkit\/srtconnection\/error\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"title":"Error Implementations"}],"title":"SRTConnection.Error"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","path":"\/documentation\/srthaishinkit\/srtconnection\/actor-implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method","path":"\/documentation\/srthaishinkit\/srtconnection\/assertisolated(_:file:line:)"},{"title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","type":"method","path":"\/documentation\/srthaishinkit\/srtconnection\/assumeisolated(_:file:line:)"},{"title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method","path":"\/documentation\/srthaishinkit\/srtconnection\/preconditionisolated(_:file:line:)"}],"title":"Actor Implementations"}],"path":"\/documentation\/srthaishinkit\/srtconnection","title":"SRTConnection","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var functionalAreas: Set<SRTLogFunctionalArea>","path":"\/documentation\/srthaishinkit\/srtlogger\/functionalareas","type":"property"},{"title":"var level: SRTLogLevel","path":"\/documentation\/srthaishinkit\/srtlogger\/level","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func setFunctionalAreas(Set<SRTLogFunctionalArea>)","path":"\/documentation\/srthaishinkit\/srtlogger\/setfunctionalareas(_:)","type":"method"},{"title":"func setLevel(SRTLogLevel)","path":"\/documentation\/srthaishinkit\/srtlogger\/setlevel(_:)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"title":"static let shared: SRTLogger","path":"\/documentation\/srthaishinkit\/srtlogger\/shared","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/srthaishinkit\/srtlogger\/assertisolated(_:file:line:)","type":"method","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)"},{"path":"\/documentation\/srthaishinkit\/srtlogger\/assumeisolated(_:file:line:)","type":"method","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T"},{"path":"\/documentation\/srthaishinkit\/srtlogger\/preconditionisolated(_:file:line:)","type":"method","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)"}],"title":"Actor Implementations","path":"\/documentation\/srthaishinkit\/srtlogger\/actor-implementations","type":"symbol"}],"path":"\/documentation\/srthaishinkit\/srtlogger","title":"SRTLogger","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(connection: SRTConnection)","path":"\/documentation\/srthaishinkit\/srtstream\/init(connection:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var audioTrackId: UInt8?","path":"\/documentation\/srthaishinkit\/srtstream\/audiotrackid","type":"property"},{"title":"var readyState: HKStreamReadyState","path":"\/documentation\/srthaishinkit\/srtstream\/readystate","type":"property"},{"title":"var videoTrackId: UInt8?","path":"\/documentation\/srthaishinkit\/srtstream\/videotrackid","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func close() async","path":"\/documentation\/srthaishinkit\/srtstream\/close()","type":"method"},{"title":"func play(String?) async","path":"\/documentation\/srthaishinkit\/srtstream\/play(_:)","type":"method"},{"title":"func publish(String?) async","path":"\/documentation\/srthaishinkit\/srtstream\/publish(_:)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/srthaishinkit\/srtstream\/assertisolated(_:file:line:)","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method"},{"path":"\/documentation\/srthaishinkit\/srtstream\/assumeisolated(_:file:line:)","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","type":"method"},{"path":"\/documentation\/srthaishinkit\/srtstream\/preconditionisolated(_:file:line:)","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method"}],"title":"Actor Implementations","path":"\/documentation\/srthaishinkit\/srtstream\/actor-implementations","type":"symbol"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtstream\/audiosettings","title":"var audioSettings: AudioCodecSettings"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtstream\/soundtransform","title":"var soundTransform: SoundTransform?"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtstream\/videosettings","title":"var videoSettings: VideoCodecSettings"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/srthaishinkit\/srtstream\/addoutput(_:)","title":"func addOutput(some HKStreamOutput)"},{"type":"method","path":"\/documentation\/srthaishinkit\/srtstream\/append(_:)","title":"func append(CMSampleBuffer)"},{"type":"method","path":"\/documentation\/srthaishinkit\/srtstream\/append(_:when:)","title":"func append(AVAudioBuffer, when: AVAudioTime)"},{"type":"method","path":"\/documentation\/srthaishinkit\/srtstream\/attachaudioplayer(_:)","title":"func attachAudioPlayer(AudioPlayer?) async"},{"type":"method","path":"\/documentation\/srthaishinkit\/srtstream\/dispatch(_:)","title":"func dispatch(NetworkMonitorEvent) async"},{"type":"method","path":"\/documentation\/srthaishinkit\/srtstream\/removeoutput(_:)","title":"func removeOutput(some HKStreamOutput)"},{"type":"method","path":"\/documentation\/srthaishinkit\/srtstream\/setaudiosettings(_:)","title":"func setAudioSettings(AudioCodecSettings)"},{"type":"method","path":"\/documentation\/srthaishinkit\/srtstream\/setbitratestorategy(_:)","title":"func setBitrateStorategy((some HKStreamBitRateStrategy)?)"},{"type":"method","path":"\/documentation\/srthaishinkit\/srtstream\/setsoundtransform(_:)","title":"func setSoundTransform(SoundTransform) async"},{"type":"method","path":"\/documentation\/srthaishinkit\/srtstream\/setvideoinputbuffercounts(_:)","title":"func setVideoInputBufferCounts(Int)"},{"type":"method","path":"\/documentation\/srthaishinkit\/srtstream\/setvideosettings(_:)","title":"func setVideoSettings(VideoCodecSettings)"}],"title":"HKStream Implementations","path":"\/documentation\/srthaishinkit\/srtstream\/hkstream-implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func mixer(MediaMixer, didOutput: CMSampleBuffer)","type":"method","path":"\/documentation\/srthaishinkit\/srtstream\/mixer(_:didoutput:)"},{"title":"func mixer(MediaMixer, didOutput: AVAudioPCMBuffer, when: AVAudioTime)","type":"method","path":"\/documentation\/srthaishinkit\/srtstream\/mixer(_:didoutput:when:)"},{"title":"func selectTrack(UInt8?, mediaType: CMFormatDescription.MediaType)","type":"method","path":"\/documentation\/srthaishinkit\/srtstream\/selecttrack(_:mediatype:)"}],"title":"MediaMixerOutput Implementations","path":"\/documentation\/srthaishinkit\/srtstream\/mediamixeroutput-implementations","type":"symbol"}],"path":"\/documentation\/srthaishinkit\/srtstream","title":"SRTStream","type":"class"},{"title":"Structures","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/byteavailrcvbuf","title":"let byteAvailRcvBuf: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/byteavailsndbuf","title":"let byteAvailSndBuf: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytemss","title":"let byteMSS: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytercvbuf","title":"let byteRcvBuf: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytercvdrop","title":"let byteRcvDrop: UInt64"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytercvdroptotal","title":"let byteRcvDropTotal: UInt64"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytercvloss","title":"let byteRcvLoss: UInt64"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytercvlosstotal","title":"let byteRcvLossTotal: UInt64"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytercvundecrypt","title":"let byteRcvUndecrypt: UInt64"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytercvundecrypttotal","title":"let byteRcvUndecryptTotal: UInt64"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/byterecv","title":"let byteRecv: UInt64"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/byterecvtotal","title":"let byteRecvTotal: UInt64"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/byteretrans","title":"let byteRetrans: UInt64"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/byteretranstotal","title":"let byteRetransTotal: UInt64"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytesent","title":"let byteSent: UInt64"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytesenttotal","title":"let byteSentTotal: UInt64"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytesndbuf","title":"let byteSndBuf: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytesnddrop","title":"let byteSndDrop: UInt64"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytesnddroptotal","title":"let byteSndDropTotal: UInt64"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/mbpsbandwidth","title":"let mbpsBandwidth: Double"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/mbpsmaxbw","title":"let mbpsMaxBW: Double"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/mbpsrecvrate","title":"let mbpsRecvRate: Double"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/mbpssendrate","title":"let mbpsSendRate: Double"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/msrtt","title":"let msRTT: Double"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/msrcvbuf","title":"let msRcvBuf: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/msrcvtsbpddelay","title":"let msRcvTsbPdDelay: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/mssndbuf","title":"let msSndBuf: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/mssndtsbpddelay","title":"let msSndTsbPdDelay: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/mstimestamp","title":"let msTimeStamp: Int64"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktcongestionwindow","title":"let pktCongestionWindow: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktflightsize","title":"let pktFlightSize: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktflowwindow","title":"let pktFlowWindow: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvavgbelatedtime","title":"let pktRcvAvgBelatedTime: Double"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvbelated","title":"let pktRcvBelated: Int64"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvbuf","title":"let pktRcvBuf: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvdrop","title":"let pktRcvDrop: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvdroptotal","title":"let pktRcvDropTotal: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvfilterextra","title":"let pktRcvFilterExtra: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvfilterextratotal","title":"let pktRcvFilterExtraTotal: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvfilterloss","title":"let pktRcvFilterLoss: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvfilterlosstotal","title":"let pktRcvFilterLossTotal: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvfiltersupply","title":"let pktRcvFilterSupply: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvfiltersupplytotal","title":"let pktRcvFilterSupplyTotal: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvloss","title":"let pktRcvLoss: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvlosstotal","title":"let pktRcvLossTotal: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvretrans","title":"let pktRcvRetrans: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvundecrypt","title":"let pktRcvUndecrypt: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvundecrypttotal","title":"let pktRcvUndecryptTotal: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrecv","title":"let pktRecv: Int64"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrecvack","title":"let pktRecvACK: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrecvacktotal","title":"let pktRecvACKTotal: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrecvnak","title":"let pktRecvNAK: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrecvnaktotal","title":"let pktRecvNAKTotal: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrecvtotal","title":"let pktRecvTotal: Int64"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktreorderdistance","title":"let pktReorderDistance: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktreordertolerance","title":"let pktReorderTolerance: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktretrans","title":"let pktRetrans: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktretranstotal","title":"let pktRetransTotal: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsent","title":"let pktSent: Int64"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsentack","title":"let pktSentACK: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsentacktotal","title":"let pktSentACKTotal: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsentnak","title":"let pktSentNAK: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsentnaktotal","title":"let pktSentNAKTotal: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsenttotal","title":"let pktSentTotal: Int64"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsndbuf","title":"let pktSndBuf: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsnddrop","title":"let pktSndDrop: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsnddroptotal","title":"let pktSndDropTotal: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsndfilterextra","title":"let pktSndFilterExtra: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsndfilterextratotal","title":"let pktSndFilterExtraTotal: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsndloss","title":"let pktSndLoss: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsndlosstotal","title":"let pktSndLossTotal: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/uspktsndperiod","title":"let usPktSndPeriod: Double"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/ussndduration","title":"let usSndDuration: Int64"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/ussnddurationtotal","title":"let usSndDurationTotal: Int64"}],"path":"\/documentation\/srthaishinkit\/srtperformancedata","title":"SRTPerformanceData","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct","title":"SRTSocketOption.Name","type":"struct","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(rawValue: String, symbol: SRT_SOCKOPT, restriction: SRTSocketOption.Restriction?, type: SRTSocketOption.CType)","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/init(rawvalue:symbol:restriction:type:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let rawValue: String","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/rawvalue-swift.property","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"title":"SRTSocketOption.Name.RawValue","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/rawvalue-swift.typealias","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"title":"static let bindtodevice: SRTSocketOption.Name","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/bindtodevice","type":"property"},{"title":"static let congestion: SRTSocketOption.Name","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/congestion","type":"property"},{"title":"static let conntimeo: SRTSocketOption.Name","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/conntimeo","type":"property"},{"title":"static let drifttracer: SRTSocketOption.Name","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/drifttracer","type":"property"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/enforcedencryption","title":"static let enforcedencryption: SRTSocketOption.Name"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/event","title":"static let event: SRTSocketOption.Name"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/fc","title":"static let fc: SRTSocketOption.Name"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/groupconnect","title":"static let groupconnect: SRTSocketOption.Name"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/groupminstabletimeo","title":"static let groupminstabletimeo: SRTSocketOption.Name"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/grouptype","title":"static let grouptype: SRTSocketOption.Name"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/inputbw","title":"static let inputbw: SRTSocketOption.Name"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/iptos","title":"static let iptos: SRTSocketOption.Name"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/ipttl","title":"static let ipttl: SRTSocketOption.Name"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/ipv6only","title":"static let ipv6only: SRTSocketOption.Name"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/isn","title":"static let isn: SRTSocketOption.Name"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/kmpreannounce","title":"static let kmpreannounce: SRTSocketOption.Name"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/kmrefreshrate","title":"static let kmrefreshrate: SRTSocketOption.Name"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/kmstate","title":"static let kmstate: SRTSocketOption.Name"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/latency","title":"static let latency: SRTSocketOption.Name"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/lossmaxttl","title":"static let lossmaxttl: SRTSocketOption.Name"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/maxbw","title":"static let maxbw: SRTSocketOption.Name"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/messageapi","title":"static let messageapi: SRTSocketOption.Name"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/mininputbw","title":"static let mininputbw: SRTSocketOption.Name"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/minversion","title":"static let minversion: SRTSocketOption.Name"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/mss","title":"static let mss: SRTSocketOption.Name"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/nakreport","title":"static let nakreport: SRTSocketOption.Name"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/oheadbw","title":"static let oheadbw: SRTSocketOption.Name"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/packetfilter","title":"static let packetfilter: SRTSocketOption.Name"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/passphrase","title":"static let passphrase: SRTSocketOption.Name"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/pbkeylen","title":"static let pbkeylen: SRTSocketOption.Name"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/peeridletimeo","title":"static let peeridletimeo: SRTSocketOption.Name"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/peerlatency","title":"static let peerlatency: SRTSocketOption.Name"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/peerversion","title":"static let peerversion: SRTSocketOption.Name"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/rcvbuf","title":"static let rcvbuf: SRTSocketOption.Name"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/rcvdata","title":"static let rcvdata: SRTSocketOption.Name"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/rcvlatency","title":"static let rcvlatency: SRTSocketOption.Name"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/rcvsyn","title":"static let rcvsyn: SRTSocketOption.Name"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/rcvtimeo","title":"static let rcvtimeo: SRTSocketOption.Name"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/rendezvous","title":"static let rendezvous: SRTSocketOption.Name"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/retransmitalgo","title":"static let retransmitalgo: SRTSocketOption.Name"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/reuseaddr","title":"static let reuseaddr: SRTSocketOption.Name"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/sender","title":"static let sender: SRTSocketOption.Name"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/sndbuf","title":"static let sndbuf: SRTSocketOption.Name"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/snddata","title":"static let snddata: SRTSocketOption.Name"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/snddropdelay","title":"static let snddropdelay: SRTSocketOption.Name"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/sndkmstate","title":"static let sndkmstate: SRTSocketOption.Name"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/sndsyn","title":"static let sndsyn: SRTSocketOption.Name"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/sndtimeo","title":"static let sndtimeo: SRTSocketOption.Name"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/state","title":"static let state: SRTSocketOption.Name"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/streamid","title":"static let streamid: SRTSocketOption.Name"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/tlpktdrop","title":"static let tlpktdrop: SRTSocketOption.Name"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/transtype","title":"static let transtype: SRTSocketOption.Name"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/tsbpdmode","title":"static let tsbpdmode: SRTSocketOption.Name"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/udprcvbuf","title":"static let udpRcvbuf: SRTSocketOption.Name"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/udpsndbuf","title":"static let udpSndbuf: SRTSocketOption.Name"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/version","title":"static let version: SRTSocketOption.Name"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: String)","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/init(rawvalue:)","type":"init"}],"type":"symbol","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/rawrepresentable-implementations","title":"RawRepresentable Implementations"}]},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/init(name:value:)-3uyvp","title":"init(name: SRTSocketOption.Name, value: String) throws","type":"init"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/init(name:value:)-66kiu","title":"init(name: SRTSocketOption.Name, value: Int) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/boolvalue","title":"var boolValue: Bool","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/intvalue","title":"var intValue: Int","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.property","title":"let name: SRTSocketOption.Name","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/stringvalue","title":"var stringValue: String","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/ctype","title":"SRTSocketOption.CType","type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","path":"\/documentation\/srthaishinkit\/srtsocketoption\/ctype\/bool","title":"case bool"},{"type":"case","path":"\/documentation\/srthaishinkit\/srtsocketoption\/ctype\/int32","title":"case int32"},{"type":"case","path":"\/documentation\/srthaishinkit\/srtsocketoption\/ctype\/int64","title":"case int64"},{"type":"case","path":"\/documentation\/srthaishinkit\/srtsocketoption\/ctype\/string","title":"case string"},{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/srthaishinkit\/srtsocketoption\/ctype\/init(rawvalue:)","title":"init?(rawValue: Int)"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/srthaishinkit\/srtsocketoption\/ctype\/!=(_:_:)"}],"path":"\/documentation\/srthaishinkit\/srtsocketoption\/ctype\/equatable-implementations","title":"Equatable Implementations"},{"type":"symbol","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var hashValue: Int","path":"\/documentation\/srthaishinkit\/srtsocketoption\/ctype\/hashvalue"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func hash(into: inout Hasher)","path":"\/documentation\/srthaishinkit\/srtsocketoption\/ctype\/hash(into:)"}],"path":"\/documentation\/srthaishinkit\/srtsocketoption\/ctype\/rawrepresentable-implementations","title":"RawRepresentable Implementations"}]},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/restriction","title":"SRTSocketOption.Restriction","type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"type":"case","title":"case post","path":"\/documentation\/srthaishinkit\/srtsocketoption\/restriction\/post"},{"type":"case","title":"case pre","path":"\/documentation\/srthaishinkit\/srtsocketoption\/restriction\/pre"},{"type":"case","title":"case preBind","path":"\/documentation\/srthaishinkit\/srtsocketoption\/restriction\/prebind"},{"title":"Initializers","type":"groupMarker"},{"type":"init","title":"init?(rawValue: Int)","path":"\/documentation\/srthaishinkit\/srtsocketoption\/restriction\/init(rawvalue:)"},{"title":"Default Implementations","type":"groupMarker"},{"type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/restriction\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"title":"Equatable Implementations","path":"\/documentation\/srthaishinkit\/srtsocketoption\/restriction\/equatable-implementations"},{"type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/restriction\/hashvalue"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func hash(into: inout Hasher)","type":"method","path":"\/documentation\/srthaishinkit\/srtsocketoption\/restriction\/hash(into:)"}],"title":"RawRepresentable Implementations","path":"\/documentation\/srthaishinkit\/srtsocketoption\/restriction\/rawrepresentable-implementations"}]}],"path":"\/documentation\/srthaishinkit\/srtsocketoption","title":"SRTSocketOption","type":"struct"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/apictrl","title":"case apiCtrl","type":"case"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/apirecv","title":"case apiRecv","type":"case"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/apisend","title":"case apiSend","type":"case"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/applog","title":"case applog","type":"case"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/bstats","title":"case bstats","type":"case"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/bufrecv","title":"case bufRecv","type":"case"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/bufsend","title":"case bufSend","type":"case"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/chanrecv","title":"case chanRecv","type":"case"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/chnmgmt","title":"case chnMgmt","type":"case"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/chnsend","title":"case chnSend","type":"case"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/congest","title":"case congest","type":"case"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/control","title":"case control","type":"case"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/data","title":"case data","type":"case"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/epollapi","title":"case epollApi","type":"case"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/epollupd","title":"case epollUpd","type":"case"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/general","title":"case general","type":"case"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/grpmgmt","title":"case grpMgmt","type":"case"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/grprecv","title":"case grpRecv","type":"case"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/grpsend","title":"case grpSend","type":"case"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/haicrypt","title":"case haicrypt","type":"case"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/internal","title":"case `internal`","type":"case"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/pfilter","title":"case pfilter","type":"case"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/quectrl","title":"case queCtrl","type":"case"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/quemgmt","title":"case queMgmt","type":"case"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/querecv","title":"case queRecv","type":"case"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/quesend","title":"case queSend","type":"case"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/rsrc","title":"case rsrc","type":"case"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/tsbpd","title":"case tsbpd","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/init(rawvalue:)","title":"init?(rawValue: Int32)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/hashvalue","type":"property","title":"var hashValue: Int"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/hash(into:)","type":"method","title":"func hash(into: inout Hasher)"}],"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea","title":"SRTLogFunctionalArea","type":"enum"},{"children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","title":"case crit","path":"\/documentation\/srthaishinkit\/srtloglevel\/crit"},{"type":"case","title":"case debug","path":"\/documentation\/srthaishinkit\/srtloglevel\/debug"},{"type":"case","title":"case error","path":"\/documentation\/srthaishinkit\/srtloglevel\/error"},{"type":"case","title":"case notice","path":"\/documentation\/srthaishinkit\/srtloglevel\/notice"},{"type":"case","title":"case warning","path":"\/documentation\/srthaishinkit\/srtloglevel\/warning"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","title":"Equatable Implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","path":"\/documentation\/srthaishinkit\/srtloglevel\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"}],"path":"\/documentation\/srthaishinkit\/srtloglevel\/equatable-implementations"}],"path":"\/documentation\/srthaishinkit\/srtloglevel","title":"SRTLogLevel","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case caller","path":"\/documentation\/srthaishinkit\/srtmode\/caller","type":"case"},{"title":"case listener","path":"\/documentation\/srthaishinkit\/srtmode\/listener","type":"case"},{"title":"case rendezvous","path":"\/documentation\/srthaishinkit\/srtmode\/rendezvous","type":"case"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: String)","path":"\/documentation\/srthaishinkit\/srtmode\/init(rawvalue:)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","path":"\/documentation\/srthaishinkit\/srtmode\/equatable-implementations","type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/srthaishinkit\/srtmode\/!=(_:_:)"}]},{"title":"RawRepresentable Implementations","path":"\/documentation\/srthaishinkit\/srtmode\/rawrepresentable-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/srthaishinkit\/srtmode\/hashvalue","type":"property","title":"var hashValue: Int"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/srthaishinkit\/srtmode\/hash(into:)","type":"method","title":"func hash(into: inout Hasher)"}]}],"path":"\/documentation\/srthaishinkit\/srtmode","title":"SRTMode","type":"enum"}],"type":"module"}]}]},"schemaVersion":{"patch":2,"major":0,"minor":1},"includedArchiveIdentifiers":["Logboard","HaishinKit","MoQTHaishinKit","SRTHaishinKit"]}