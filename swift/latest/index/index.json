{"interfaceLanguages":{"swift":[{"children":[{"path":"\/documentation\/logboard","children":[{"type":"groupMarker","title":"Classes"},{"type":"class","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/logboard\/consoleappender\/init()","type":"init","title":"init()"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/logboard\/consoleappender\/append(_:level:format:arguments:file:function:line:)","type":"method","title":"func append(LBLogger, level: LBLogger.Level, format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)"},{"path":"\/documentation\/logboard\/consoleappender\/append(_:level:message:file:function:line:)","type":"method","title":"func append(LBLogger, level: LBLogger.Level, message: [Any], file: StaticString, function: StaticString, line: Int)"}],"path":"\/documentation\/logboard\/consoleappender","title":"ConsoleAppender"},{"type":"class","children":[{"type":"groupMarker","title":"Structures"},{"children":[{"title":"Initializers","type":"groupMarker"},{"title":"init?(Data)","path":"\/documentation\/logboard\/lblogger\/data\/init(_:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let date: Date","path":"\/documentation\/logboard\/lblogger\/data\/date","type":"property"},{"title":"let file: String","path":"\/documentation\/logboard\/lblogger\/data\/file","type":"property"},{"title":"let function: String","path":"\/documentation\/logboard\/lblogger\/data\/function","type":"property"},{"title":"let identifier: String","path":"\/documentation\/logboard\/lblogger\/data\/identifier","type":"property"},{"title":"let level: LBLogger.Level","path":"\/documentation\/logboard\/lblogger\/data\/level","type":"property"},{"title":"let line: Int","path":"\/documentation\/logboard\/lblogger\/data\/line","type":"property"},{"title":"let message: String","path":"\/documentation\/logboard\/lblogger\/data\/message","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"title":"CustomStringConvertible Implementations","path":"\/documentation\/logboard\/lblogger\/data\/customstringconvertible-implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var description: String","path":"\/documentation\/logboard\/lblogger\/data\/description"}],"type":"symbol"}],"path":"\/documentation\/logboard\/lblogger\/data","type":"struct","title":"LBLogger.Data"},{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/logboard\/lblogger\/init(_:)","type":"init","title":"init(String)"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/logboard\/lblogger\/appender","type":"property","title":"var appender: any LBLoggerAppender"},{"path":"\/documentation\/logboard\/lblogger\/identifier","type":"property","title":"let identifier: String"},{"path":"\/documentation\/logboard\/lblogger\/level-swift.property","type":"property","title":"var level: LBLogger.Level"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/logboard\/lblogger\/debug(_:file:function:line:)","type":"method","title":"func debug(Any..., file: StaticString, function: StaticString, line: Int)"},{"path":"\/documentation\/logboard\/lblogger\/debug(format:arguments:file:function:line:)","type":"method","title":"func debug(format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)"},{"path":"\/documentation\/logboard\/lblogger\/error(_:file:function:line:)","type":"method","title":"func error(Any..., file: StaticString, function: StaticString, line: Int)"},{"path":"\/documentation\/logboard\/lblogger\/error(format:arguments:file:function:line:)","type":"method","title":"func error(format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)"},{"path":"\/documentation\/logboard\/lblogger\/info(_:file:function:line:)","type":"method","title":"func info(Any..., file: StaticString, function: StaticString, line: Int)"},{"path":"\/documentation\/logboard\/lblogger\/info(format:arguments:file:function:line:)","type":"method","title":"func info(format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)"},{"path":"\/documentation\/logboard\/lblogger\/isenabledfor(level:)","type":"method","title":"func isEnabledFor(level: LBLogger.Level) -> Bool"},{"path":"\/documentation\/logboard\/lblogger\/trace(_:file:function:line:)","type":"method","title":"func trace(Any..., file: StaticString, function: StaticString, line: Int)"},{"path":"\/documentation\/logboard\/lblogger\/trace(format:arguments:file:function:line:)","type":"method","title":"func trace(format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)"},{"path":"\/documentation\/logboard\/lblogger\/warn(_:file:function:line:)","type":"method","title":"func warn(Any..., file: StaticString, function: StaticString, line: Int)"},{"path":"\/documentation\/logboard\/lblogger\/warn(format:arguments:file:function:line:)","type":"method","title":"func warn(format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)"},{"type":"groupMarker","title":"Type Properties"},{"path":"\/documentation\/logboard\/lblogger\/dateformatter","type":"property","title":"static var dateFormatter: DateFormatter"},{"type":"groupMarker","title":"Type Methods"},{"path":"\/documentation\/logboard\/lblogger\/with(_:)","type":"method","title":"static func with(String) -> LBLogger"},{"type":"groupMarker","title":"Enumerations"},{"children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/debug","title":"case debug","type":"case"},{"path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/error","title":"case error","type":"case"},{"path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/info","title":"case info","type":"case"},{"path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/trace","title":"case trace","type":"case"},{"path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/warn","title":"case warn","type":"case"},{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/init(string:)","title":"init?(string: String)","type":"init"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/description","title":"var description: String","type":"property"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}],"path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var hashValue: Int","path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/hashvalue"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func hash(into: inout Hasher)","path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/hash(into:)"}],"path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/logboard\/lblogger\/level-swift.enum","type":"enum","title":"LBLogger.Level"}],"path":"\/documentation\/logboard\/lblogger","title":"LBLogger"},{"type":"class","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/logboard\/multiappender\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/logboard\/multiappender\/appenders","title":"var appenders: [any LBLoggerAppender]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/logboard\/multiappender\/append(_:level:format:arguments:file:function:line:)","title":"func append(LBLogger, level: LBLogger.Level, format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)","type":"method"},{"path":"\/documentation\/logboard\/multiappender\/append(_:level:message:file:function:line:)","title":"func append(LBLogger, level: LBLogger.Level, message: [Any], file: StaticString, function: StaticString, line: Int)","type":"method"}],"path":"\/documentation\/logboard\/multiappender","title":"MultiAppender"},{"type":"class","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func append(LBLogger, level: LBLogger.Level, format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)","type":"method","path":"\/documentation\/logboard\/nullappender\/append(_:level:format:arguments:file:function:line:)"},{"title":"func append(LBLogger, level: LBLogger.Level, message: [Any], file: StaticString, function: StaticString, line: Int)","type":"method","path":"\/documentation\/logboard\/nullappender\/append(_:level:message:file:function:line:)"},{"title":"Type Properties","type":"groupMarker"},{"title":"static let shared: NullAppender","type":"property","path":"\/documentation\/logboard\/nullappender\/shared"}],"path":"\/documentation\/logboard\/nullappender","title":"NullAppender"},{"type":"class","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/logboard\/osloggerappender\/init(sybsystem:category:)","title":"init(sybsystem: String, category: String)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/logboard\/osloggerappender\/append(_:level:format:arguments:file:function:line:)","title":"func append(LBLogger, level: LBLogger.Level, format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)","type":"method"},{"path":"\/documentation\/logboard\/osloggerappender\/append(_:level:message:file:function:line:)","title":"func append(LBLogger, level: LBLogger.Level, message: [Any], file: StaticString, function: StaticString, line: Int)","type":"method"}],"path":"\/documentation\/logboard\/osloggerappender","title":"OSLoggerAppender"},{"type":"class","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/logboard\/socketappender\/init()","title":"init()"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/logboard\/socketappender\/append(_:level:format:arguments:file:function:line:)","title":"func append(LBLogger, level: LBLogger.Level, format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)"},{"type":"method","path":"\/documentation\/logboard\/socketappender\/append(_:level:message:file:function:line:)","title":"func append(LBLogger, level: LBLogger.Level, message: [Any], file: StaticString, function: StaticString, line: Int)"},{"type":"method","path":"\/documentation\/logboard\/socketappender\/close()","title":"func close()"},{"type":"method","path":"\/documentation\/logboard\/socketappender\/connect(_:port:)","title":"func connect(String, port: Int)"}],"path":"\/documentation\/logboard\/socketappender","title":"SocketAppender"},{"type":"groupMarker","title":"Protocols"},{"type":"protocol","children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/logboard\/lbloggerappender\/append(_:level:format:arguments:file:function:line:)","type":"method","title":"func append(LBLogger, level: LBLogger.Level, format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)"},{"path":"\/documentation\/logboard\/lbloggerappender\/append(_:level:message:file:function:line:)","type":"method","title":"func append(LBLogger, level: LBLogger.Level, message: [Any], file: StaticString, function: StaticString, line: Int)"}],"path":"\/documentation\/logboard\/lbloggerappender","title":"LBLoggerAppender"}],"type":"module","title":"Logboard"},{"path":"\/documentation\/haishinkit","children":[{"title":"Articles","type":"groupMarker"},{"title":"Enhanced RTMP","type":"article","path":"\/documentation\/haishinkit\/e-rtmp"},{"title":"Classes","type":"groupMarker"},{"title":"AssetScreenObject","type":"class","path":"\/documentation\/haishinkit\/assetscreenobject","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/assetscreenobject\/chromakeycolor","title":"var chromaKeyColor: CGColor?","type":"property"},{"path":"\/documentation\/haishinkit\/assetscreenobject\/isreading","title":"var isReading: Bool","type":"property"},{"path":"\/documentation\/haishinkit\/assetscreenobject\/videogravity","title":"var videoGravity: AVLayerVideoGravity","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/assetscreenobject\/cancelreading()","title":"func cancelReading()","type":"method"},{"path":"\/documentation\/haishinkit\/assetscreenobject\/makebounds(_:)","title":"func makeBounds(CGSize) -> CGRect","type":"method"},{"path":"\/documentation\/haishinkit\/assetscreenobject\/makeimage(_:)","title":"func makeImage(some ScreenRenderer) -> CGImage?","type":"method"},{"path":"\/documentation\/haishinkit\/assetscreenobject\/startreading(_:)","title":"func startReading(AVAsset) throws","type":"method"}]},{"title":"AudioDeviceUnit","type":"class","path":"\/documentation\/haishinkit\/audiodeviceunit","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/audiodeviceunit\/connection","title":"var connection: AVCaptureConnection?","type":"property"},{"path":"\/documentation\/haishinkit\/audiodeviceunit\/device","title":"var device: AVCaptureDevice?","type":"property"},{"path":"\/documentation\/haishinkit\/audiodeviceunit\/input","title":"var input: AVCaptureInput?","type":"property"},{"path":"\/documentation\/haishinkit\/audiodeviceunit\/output-swift.property","title":"var output: AudioDeviceUnit.Output?","type":"property"},{"path":"\/documentation\/haishinkit\/audiodeviceunit\/track","title":"let track: UInt8","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/audiodeviceunit\/output-swift.typealias","title":"AudioDeviceUnit.Output","type":"typealias"}]},{"title":"AudioPlayer","type":"class","path":"\/documentation\/haishinkit\/audioplayer","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(audioEngine: AVAudioEngine)","path":"\/documentation\/haishinkit\/audioplayer\/init(audioengine:)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/haishinkit\/audioplayer\/assertisolated(_:file:line:)"},{"type":"method","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","path":"\/documentation\/haishinkit\/audioplayer\/assumeisolated(_:file:line:)"},{"type":"method","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/haishinkit\/audioplayer\/preconditionisolated(_:file:line:)"}],"title":"Actor Implementations","path":"\/documentation\/haishinkit\/audioplayer\/actor-implementations","type":"symbol"}]},{"title":"HKIncomingStream","type":"class","path":"\/documentation\/haishinkit\/hkincomingstream","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(some HKStream)","type":"init","path":"\/documentation\/haishinkit\/hkincomingstream\/init(_:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var isRunning: Bool","type":"property","path":"\/documentation\/haishinkit\/hkincomingstream\/isrunning"},{"title":"var soundTransfrom: SoundTransform?","type":"property","path":"\/documentation\/haishinkit\/hkincomingstream\/soundtransfrom"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func append(CMSampleBuffer)","type":"method","path":"\/documentation\/haishinkit\/hkincomingstream\/append(_:)"},{"title":"func append(AVAudioBuffer, when: AVAudioTime)","type":"method","path":"\/documentation\/haishinkit\/hkincomingstream\/append(_:when:)"},{"title":"func attachAudioPlayer(AudioPlayer?) async","type":"method","path":"\/documentation\/haishinkit\/hkincomingstream\/attachaudioplayer(_:)"},{"title":"func setSoundTransform(SoundTransform) async","type":"method","path":"\/documentation\/haishinkit\/hkincomingstream\/setsoundtransform(_:)"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/haishinkit\/hkincomingstream\/assertisolated(_:file:line:)","type":"method"},{"title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","path":"\/documentation\/haishinkit\/hkincomingstream\/assumeisolated(_:file:line:)","type":"method"},{"title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/haishinkit\/hkincomingstream\/preconditionisolated(_:file:line:)","type":"method"}],"title":"Actor Implementations","type":"symbol","path":"\/documentation\/haishinkit\/hkincomingstream\/actor-implementations"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func startRunning()","path":"\/documentation\/haishinkit\/hkincomingstream\/startrunning()","type":"method"},{"title":"func stopRunning()","path":"\/documentation\/haishinkit\/hkincomingstream\/stoprunning()","type":"method"}],"title":"AsyncRunner Implementations","type":"symbol","path":"\/documentation\/haishinkit\/hkincomingstream\/asyncrunner-implementations"}]},{"title":"HKOutgoingStream","type":"class","path":"\/documentation\/haishinkit\/hkoutgoingstream","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/hkoutgoingstream\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/hkoutgoingstream\/audioinputformat","title":"var audioInputFormat: CMFormatDescription?","type":"property"},{"path":"\/documentation\/haishinkit\/hkoutgoingstream\/audiooutputstream","title":"var audioOutputStream: AsyncStream<(AVAudioBuffer, AVAudioTime)>","type":"property"},{"path":"\/documentation\/haishinkit\/hkoutgoingstream\/audiosettings","title":"var audioSettings: AudioCodecSettings","type":"property"},{"path":"\/documentation\/haishinkit\/hkoutgoingstream\/isrunning","title":"var isRunning: Bool","type":"property"},{"path":"\/documentation\/haishinkit\/hkoutgoingstream\/videoinputbuffercounts","title":"var videoInputBufferCounts: Int","type":"property"},{"path":"\/documentation\/haishinkit\/hkoutgoingstream\/videoinputformat","title":"var videoInputFormat: CMFormatDescription?","type":"property"},{"path":"\/documentation\/haishinkit\/hkoutgoingstream\/videoinputstream","title":"var videoInputStream: AsyncStream<CMSampleBuffer>","type":"property"},{"path":"\/documentation\/haishinkit\/hkoutgoingstream\/videooutputstream","title":"var videoOutputStream: AsyncStream<CMSampleBuffer>","type":"property"},{"path":"\/documentation\/haishinkit\/hkoutgoingstream\/videosettings","title":"var videoSettings: VideoCodecSettings","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/hkoutgoingstream\/append(_:)","title":"func append(CMSampleBuffer)","type":"method"},{"path":"\/documentation\/haishinkit\/hkoutgoingstream\/append(_:when:)","title":"func append(AVAudioBuffer, when: AVAudioTime)","type":"method"},{"path":"\/documentation\/haishinkit\/hkoutgoingstream\/append(video:)","title":"func append(video: CMSampleBuffer)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/hkoutgoingstream\/runner-implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func startRunning()","path":"\/documentation\/haishinkit\/hkoutgoingstream\/startrunning()","type":"method"},{"title":"func stopRunning()","path":"\/documentation\/haishinkit\/hkoutgoingstream\/stoprunning()","type":"method"}],"title":"Runner Implementations","type":"symbol"}]},{"title":"HKStreamRecorder","type":"class","path":"\/documentation\/haishinkit\/hkstreamrecorder","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/audiotrackid","title":"var audioTrackId: UInt8?","type":"property"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/isrecording","title":"var isRecording: Bool","type":"property"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/moviefragmentinterval","title":"var movieFragmentInterval: Double?","type":"property"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/moviesdirectory","title":"var moviesDirectory: URL","type":"property"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/outputurl","title":"var outputURL: URL?","type":"property"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/settings","title":"var settings: [AVMediaType : [String : any Sendable]]","type":"property"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/videotrackid","title":"var videoTrackId: UInt8?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/selecttrack(_:mediatype:)","type":"method","title":"func selectTrack(UInt8?, mediaType: CMFormatDescription.MediaType)"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/setmoviefragmentinterval(_:)","type":"method","title":"func setMovieFragmentInterval(Double?)"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/setmoviefragmentinterval(moviefragmentinterval:)","type":"method","title":"func setMovieFragmentInterval(movieFragmentInterval: Double?)"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/startrecording(_:settings:)","type":"method","title":"func startRecording(URL?, settings: [AVMediaType : [String : any Sendable]]) async throws"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/stoprecording()","type":"method","title":"func stopRecording() async throws -> URL"},{"type":"groupMarker","title":"Type Properties"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/defaultsettings","type":"property","title":"static let defaultSettings: [AVMediaType : [String : any Sendable]]"},{"type":"groupMarker","title":"Enumerations"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/error","type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","title":"case failedToAppend(error: (any Error)?)","path":"\/documentation\/haishinkit\/hkstreamrecorder\/error\/failedtoappend(error:)"},{"type":"case","title":"case failedToCreateAssetWriter(error: any Error)","path":"\/documentation\/haishinkit\/hkstreamrecorder\/error\/failedtocreateassetwriter(error:)"},{"type":"case","title":"case failedToCreateAssetWriterInput(error: any Error)","path":"\/documentation\/haishinkit\/hkstreamrecorder\/error\/failedtocreateassetwriterinput(error:)"},{"type":"case","title":"case failedToFinishWriting(error: (any Error)?)","path":"\/documentation\/haishinkit\/hkstreamrecorder\/error\/failedtofinishwriting(error:)"},{"type":"case","title":"case fileAlreadyExists(outputURL: URL)","path":"\/documentation\/haishinkit\/hkstreamrecorder\/error\/filealreadyexists(outputurl:)"},{"type":"case","title":"case invalidState","path":"\/documentation\/haishinkit\/hkstreamrecorder\/error\/invalidstate"},{"type":"case","title":"case notSupportedFileType(pathExtension: String)","path":"\/documentation\/haishinkit\/hkstreamrecorder\/error\/notsupportedfiletype(pathextension:)"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var localizedDescription: String","type":"property","path":"\/documentation\/haishinkit\/hkstreamrecorder\/error\/localizeddescription"}],"type":"symbol","title":"Error Implementations","path":"\/documentation\/haishinkit\/hkstreamrecorder\/error\/error-implementations"}],"title":"HKStreamRecorder.Error"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/actor-implementations","type":"symbol","children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/assertisolated(_:file:line:)","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/assumeisolated(_:file:line:)","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","type":"method"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/preconditionisolated(_:file:line:)","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method"}],"title":"Actor Implementations"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/hkstreamoutput-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/stream(_:didoutput:)","type":"method","title":"func stream(some HKStream, didOutput: CMSampleBuffer)"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/stream(_:didoutput:when:)","type":"method","title":"func stream(some HKStream, didOutput: AVAudioBuffer, when: AVAudioTime)"}],"title":"HKStreamOutput Implementations"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/mediamixeroutput-implementations","type":"symbol","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func mixer(MediaMixer, didOutput: CMSampleBuffer)","path":"\/documentation\/haishinkit\/hkstreamrecorder\/mixer(_:didoutput:)","type":"method"},{"title":"func mixer(MediaMixer, didOutput: AVAudioPCMBuffer, when: AVAudioTime)","path":"\/documentation\/haishinkit\/hkstreamrecorder\/mixer(_:didoutput:when:)","type":"method"}],"title":"MediaMixerOutput Implementations"}]},{"title":"HKStreamVideoAdaptiveBitRateStrategy","type":"class","path":"\/documentation\/haishinkit\/hkstreamvideoadaptivebitratestrategy","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/haishinkit\/hkstreamvideoadaptivebitratestrategy\/init(mamimumvideobitrate:)","type":"init","title":"init(mamimumVideoBitrate: Int)"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/hkstreamvideoadaptivebitratestrategy\/mamimumaudiobitrate","type":"property","title":"let mamimumAudioBitRate: Int"},{"path":"\/documentation\/haishinkit\/hkstreamvideoadaptivebitratestrategy\/mamimumvideobitrate","type":"property","title":"let mamimumVideoBitRate: Int"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/hkstreamvideoadaptivebitratestrategy\/adjustbitrate(_:stream:)","type":"method","title":"func adjustBitrate(NetworkMonitorEvent, stream: some HKStream) async"},{"type":"groupMarker","title":"Type Properties"},{"path":"\/documentation\/haishinkit\/hkstreamvideoadaptivebitratestrategy\/statuscountsthreshold","type":"property","title":"static let statusCountsThreshold: Int"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/haishinkit\/hkstreamvideoadaptivebitratestrategy\/actor-implementations","type":"symbol","title":"Actor Implementations","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/haishinkit\/hkstreamvideoadaptivebitratestrategy\/assertisolated(_:file:line:)"},{"type":"method","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","path":"\/documentation\/haishinkit\/hkstreamvideoadaptivebitratestrategy\/assumeisolated(_:file:line:)"},{"type":"method","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/haishinkit\/hkstreamvideoadaptivebitratestrategy\/preconditionisolated(_:file:line:)"}]}]},{"title":"ImageScreenObject","type":"class","path":"\/documentation\/haishinkit\/imagescreenobject","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/imagescreenobject\/cgimage","title":"var cgImage: CGImage?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/imagescreenobject\/makebounds(_:)","title":"func makeBounds(CGSize) -> CGRect","type":"method"},{"path":"\/documentation\/haishinkit\/imagescreenobject\/makeimage(_:)","title":"func makeImage(some ScreenRenderer) -> CGImage?","type":"method"}]},{"title":"MTHKView","type":"class","path":"\/documentation\/haishinkit\/mthkview","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/haishinkit\/mthkview\/init(coder:)","type":"init","title":"init(coder: NSCoder)"},{"path":"\/documentation\/haishinkit\/mthkview\/init(frame:)","type":"init","title":"init(frame: CGRect)"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/mthkview\/audiotrackid","type":"property","title":"var audioTrackId: UInt8?"},{"path":"\/documentation\/haishinkit\/mthkview\/videogravity","type":"property","title":"var videoGravity: AVLayerVideoGravity"},{"path":"\/documentation\/haishinkit\/mthkview\/videotrackid","type":"property","title":"var videoTrackId: UInt8?"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/mthkview\/awakefromnib()","type":"method","title":"func awakeFromNib()"},{"path":"\/documentation\/haishinkit\/mthkview\/draw(_:)","type":"method","title":"func draw(CGRect)"},{"path":"\/documentation\/haishinkit\/mthkview\/registervideoeffect(_:)","type":"method","title":"func registerVideoEffect(some VideoEffect) -> Bool"},{"path":"\/documentation\/haishinkit\/mthkview\/unregistervideoeffect(_:)","type":"method","title":"func unregisterVideoEffect(some VideoEffect) -> Bool"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/haishinkit\/mthkview\/hkstreamoutput-implementations","type":"symbol","title":"HKStreamOutput Implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/mthkview\/stream(_:didoutput:)","title":"func stream(some HKStream, didOutput: CMSampleBuffer)","type":"method"},{"path":"\/documentation\/haishinkit\/mthkview\/stream(_:didoutput:when:)","title":"func stream(some HKStream, didOutput: AVAudioBuffer, when: AVAudioTime)","type":"method"}]},{"path":"\/documentation\/haishinkit\/mthkview\/mediamixeroutput-implementations","type":"symbol","title":"MediaMixerOutput Implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func mixer(MediaMixer, didOutput: CMSampleBuffer)","path":"\/documentation\/haishinkit\/mthkview\/mixer(_:didoutput:)","type":"method"},{"title":"func mixer(MediaMixer, didOutput: AVAudioPCMBuffer, when: AVAudioTime)","path":"\/documentation\/haishinkit\/mthkview\/mixer(_:didoutput:when:)","type":"method"},{"title":"func selectTrack(UInt8?, mediaType: CMFormatDescription.MediaType) async","path":"\/documentation\/haishinkit\/mthkview\/selecttrack(_:mediatype:)","type":"method"}]}]},{"title":"MediaMixer","type":"class","path":"\/documentation\/haishinkit\/mediamixer","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(multiTrackAudioMixingEnabled: Bool, useManualCapture: Bool)","path":"\/documentation\/haishinkit\/mediamixer\/init(multitrackaudiomixingenabled:usemanualcapture:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var audioInputFormats: [UInt8 : AVAudioFormat]","path":"\/documentation\/haishinkit\/mediamixer\/audioinputformats","type":"property"},{"title":"var audioMixerSettings: AudioMixerSettings","path":"\/documentation\/haishinkit\/mediamixer\/audiomixersettings","type":"property"},{"title":"var frameRate: Float64","path":"\/documentation\/haishinkit\/mediamixer\/framerate","type":"property"},{"title":"var isCapturing: Bool","path":"\/documentation\/haishinkit\/mediamixer\/iscapturing","type":"property"},{"title":"var isInterputted: AsyncStream<Bool>","path":"\/documentation\/haishinkit\/mediamixer\/isinterputted","type":"property"},{"title":"var isMonitoringEnabled: Bool","path":"\/documentation\/haishinkit\/mediamixer\/ismonitoringenabled","type":"property"},{"title":"var isMultiTrackAudioMixingEnabled: Bool","path":"\/documentation\/haishinkit\/mediamixer\/ismultitrackaudiomixingenabled","type":"property"},{"title":"var isRunning: Bool","path":"\/documentation\/haishinkit\/mediamixer\/isrunning","type":"property"},{"title":"var isTorchEnabled: Bool","path":"\/documentation\/haishinkit\/mediamixer\/istorchenabled","type":"property"},{"title":"var screen: Screen","path":"\/documentation\/haishinkit\/mediamixer\/screen","type":"property"},{"title":"var sessionPreset: AVCaptureSession.Preset","path":"\/documentation\/haishinkit\/mediamixer\/sessionpreset","type":"property"},{"title":"var videoInputFormats: [UInt8 : CMFormatDescription]","path":"\/documentation\/haishinkit\/mediamixer\/videoinputformats","type":"property"},{"title":"var videoMixerSettings: VideoMixerSettings","path":"\/documentation\/haishinkit\/mediamixer\/videomixersettings","type":"property"},{"title":"var videoOrientation: AVCaptureVideoOrientation","path":"\/documentation\/haishinkit\/mediamixer\/videoorientation","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func addOutput(some MediaMixerOutput)","path":"\/documentation\/haishinkit\/mediamixer\/addoutput(_:)","type":"method"},{"title":"func append(CMSampleBuffer, track: UInt8)","path":"\/documentation\/haishinkit\/mediamixer\/append(_:track:)","type":"method"},{"title":"func append(AVAudioBuffer, when: AVAudioTime, track: UInt8)","path":"\/documentation\/haishinkit\/mediamixer\/append(_:when:track:)","type":"method"},{"title":"func attachAudio(AVCaptureDevice?, track: UInt8, configuration: AudioDeviceConfigurationBlock?) async throws","path":"\/documentation\/haishinkit\/mediamixer\/attachaudio(_:track:configuration:)","type":"method"},{"title":"func attachVideo(AVCaptureDevice?, track: UInt8, configuration: VideoDeviceConfigurationBlock?) async throws","path":"\/documentation\/haishinkit\/mediamixer\/attachvideo(_:track:configuration:)","type":"method"},{"title":"func configuration((AVCaptureSession) throws -> Void) rethrows","path":"\/documentation\/haishinkit\/mediamixer\/configuration(_:)","type":"method"},{"title":"func configuration(audio: UInt8, configuration: (AudioDeviceUnit) throws -> Void) throws","path":"\/documentation\/haishinkit\/mediamixer\/configuration(audio:configuration:)","type":"method"},{"title":"func configuration(video: UInt8, configuration: (VideoDeviceUnit) throws -> Void) throws","path":"\/documentation\/haishinkit\/mediamixer\/configuration(video:configuration:)","type":"method"},{"title":"func removeOutput(some MediaMixerOutput)","path":"\/documentation\/haishinkit\/mediamixer\/removeoutput(_:)","type":"method"},{"title":"func setAudioMixerSettings(AudioMixerSettings)","path":"\/documentation\/haishinkit\/mediamixer\/setaudiomixersettings(_:)","type":"method"},{"title":"func setFrameRate(Float64)","path":"\/documentation\/haishinkit\/mediamixer\/setframerate(_:)","type":"method"},{"title":"func setMonitoringEnabled(Bool)","path":"\/documentation\/haishinkit\/mediamixer\/setmonitoringenabled(_:)","type":"method"},{"title":"func setSessionPreset(AVCaptureSession.Preset)","path":"\/documentation\/haishinkit\/mediamixer\/setsessionpreset(_:)","type":"method"},{"title":"func setTorchEnabled(Bool)","path":"\/documentation\/haishinkit\/mediamixer\/settorchenabled(_:)","type":"method"},{"title":"func setVideoMixerSettings(VideoMixerSettings)","path":"\/documentation\/haishinkit\/mediamixer\/setvideomixersettings(_:)","type":"method"},{"title":"func setVideoOrientation(AVCaptureVideoOrientation)","path":"\/documentation\/haishinkit\/mediamixer\/setvideoorientation(_:)","type":"method"},{"title":"func startCapturing()","path":"\/documentation\/haishinkit\/mediamixer\/startcapturing()","type":"method"},{"title":"func stopCapturing()","path":"\/documentation\/haishinkit\/mediamixer\/stopcapturing()","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/haishinkit\/mediamixer\/error\/devicenotfound","type":"case","title":"case deviceNotFound"},{"path":"\/documentation\/haishinkit\/mediamixer\/error\/failedtoattach(_:)","type":"case","title":"case failedToAttach(any Error)"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/haishinkit\/mediamixer\/error\/error-implementations","type":"symbol","title":"Error Implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var localizedDescription: String","path":"\/documentation\/haishinkit\/mediamixer\/error\/localizeddescription","type":"property"}]}],"title":"MediaMixer.Error","path":"\/documentation\/haishinkit\/mediamixer\/error","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/mediamixer\/assertisolated(_:file:line:)","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method"},{"path":"\/documentation\/haishinkit\/mediamixer\/assumeisolated(_:file:line:)","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","type":"method"},{"path":"\/documentation\/haishinkit\/mediamixer\/preconditionisolated(_:file:line:)","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method"}],"title":"Actor Implementations","path":"\/documentation\/haishinkit\/mediamixer\/actor-implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/mediamixer\/startrunning()","title":"func startRunning()","type":"method"},{"path":"\/documentation\/haishinkit\/mediamixer\/stoprunning()","title":"func stopRunning()","type":"method"}],"title":"AsyncRunner Implementations","path":"\/documentation\/haishinkit\/mediamixer\/asyncrunner-implementations","type":"symbol"}]},{"title":"NetworkMonitor","type":"class","path":"\/documentation\/haishinkit\/networkmonitor","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init(some NetworkTransportReporter)","path":"\/documentation\/haishinkit\/networkmonitor\/init(_:)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var event: AsyncStream<NetworkMonitorEvent>","path":"\/documentation\/haishinkit\/networkmonitor\/event"},{"type":"property","title":"var isRunning: Bool","path":"\/documentation\/haishinkit\/networkmonitor\/isrunning"},{"type":"groupMarker","title":"Enumerations"},{"type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/haishinkit\/networkmonitor\/error\/invalidstate","type":"case","title":"case invalidState"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/haishinkit\/networkmonitor\/error\/equatable-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/haishinkit\/networkmonitor\/error\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}],"title":"Equatable Implementations"},{"path":"\/documentation\/haishinkit\/networkmonitor\/error\/error-implementations","type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var localizedDescription: String","type":"property","path":"\/documentation\/haishinkit\/networkmonitor\/error\/localizeddescription"}],"title":"Error Implementations"}],"title":"NetworkMonitor.Error","path":"\/documentation\/haishinkit\/networkmonitor\/error"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method","path":"\/documentation\/haishinkit\/networkmonitor\/assertisolated(_:file:line:)"},{"title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","type":"method","path":"\/documentation\/haishinkit\/networkmonitor\/assumeisolated(_:file:line:)"},{"title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method","path":"\/documentation\/haishinkit\/networkmonitor\/preconditionisolated(_:file:line:)"}],"title":"Actor Implementations","path":"\/documentation\/haishinkit\/networkmonitor\/actor-implementations"},{"type":"symbol","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func startRunning()","path":"\/documentation\/haishinkit\/networkmonitor\/startrunning()"},{"type":"method","title":"func stopRunning()","path":"\/documentation\/haishinkit\/networkmonitor\/stoprunning()"}],"title":"AsyncRunner Implementations","path":"\/documentation\/haishinkit\/networkmonitor\/asyncrunner-implementations"}]},{"title":"PiPHKView","type":"class","path":"\/documentation\/haishinkit\/piphkview","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/haishinkit\/piphkview\/init(coder:)","type":"init","title":"init?(coder: NSCoder)"},{"path":"\/documentation\/haishinkit\/piphkview\/init(frame:)","type":"init","title":"init(frame: CGRect)"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/piphkview\/audiotrackid","type":"property","title":"var audioTrackId: UInt8?"},{"path":"\/documentation\/haishinkit\/piphkview\/videogravity","type":"property","title":"var videoGravity: AVLayerVideoGravity"},{"path":"\/documentation\/haishinkit\/piphkview\/videotrackid","type":"property","title":"var videoTrackId: UInt8?"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/piphkview\/awakefromnib()","type":"method","title":"func awakeFromNib()"},{"type":"groupMarker","title":"Type Properties"},{"path":"\/documentation\/haishinkit\/piphkview\/defaultbackgroundcolor","type":"property","title":"static var defaultBackgroundColor: NSColor"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/haishinkit\/piphkview\/hkstreamoutput-implementations","type":"symbol","title":"HKStreamOutput Implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func stream(some HKStream, didOutput: CMSampleBuffer)","type":"method","path":"\/documentation\/haishinkit\/piphkview\/stream(_:didoutput:)"},{"title":"func stream(some HKStream, didOutput: AVAudioBuffer, when: AVAudioTime)","type":"method","path":"\/documentation\/haishinkit\/piphkview\/stream(_:didoutput:when:)"}]},{"path":"\/documentation\/haishinkit\/piphkview\/mediamixeroutput-implementations","type":"symbol","title":"MediaMixerOutput Implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func mixer(MediaMixer, didOutput: CMSampleBuffer)","path":"\/documentation\/haishinkit\/piphkview\/mixer(_:didoutput:)","type":"method"},{"title":"func mixer(MediaMixer, didOutput: AVAudioPCMBuffer, when: AVAudioTime)","path":"\/documentation\/haishinkit\/piphkview\/mixer(_:didoutput:when:)","type":"method"},{"title":"func selectTrack(UInt8?, mediaType: CMFormatDescription.MediaType) async","path":"\/documentation\/haishinkit\/piphkview\/selecttrack(_:mediatype:)","type":"method"}]}]},{"title":"RTMPConnection","type":"class","path":"\/documentation\/haishinkit\/rtmpconnection","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(swfUrl: String?, pageUrl: String?, flashVer: String, fourCcList: [String]?, videoFourCcInfoMap: AMFObject?, audioFourCcInfoMap: AMFObject?, capsEx: Int, timeout: Int, requestTimeout: UInt64, chunkSize: Int, qualityOfService: DispatchQoS)","path":"\/documentation\/haishinkit\/rtmpconnection\/init(swfurl:pageurl:flashver:fourcclist:videofourccinfomap:audiofourccinfomap:capsex:timeout:requesttimeout:chunksize:qualityofservice:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let audioFourCcInfoMap: AMFObject?","path":"\/documentation\/haishinkit\/rtmpconnection\/audiofourccinfomap","type":"property"},{"title":"let capsEx: Int","path":"\/documentation\/haishinkit\/rtmpconnection\/capsex","type":"property"},{"title":"let chunkSize: Int","path":"\/documentation\/haishinkit\/rtmpconnection\/chunksize","type":"property"},{"title":"var connected: Bool","path":"\/documentation\/haishinkit\/rtmpconnection\/connected","type":"property"},{"title":"let flashVer: String","path":"\/documentation\/haishinkit\/rtmpconnection\/flashver","type":"property"},{"title":"let fourCcList: [String]?","path":"\/documentation\/haishinkit\/rtmpconnection\/fourcclist","type":"property"},{"title":"let objectEncoding: RTMPObjectEncoding","path":"\/documentation\/haishinkit\/rtmpconnection\/objectencoding","type":"property"},{"title":"let pageUrl: String?","path":"\/documentation\/haishinkit\/rtmpconnection\/pageurl","type":"property"},{"title":"let qualityOfService: DispatchQoS","path":"\/documentation\/haishinkit\/rtmpconnection\/qualityofservice","type":"property"},{"title":"let requestTimeout: UInt64","path":"\/documentation\/haishinkit\/rtmpconnection\/requesttimeout","type":"property"},{"title":"var status: AsyncStream<RTMPStatus>","path":"\/documentation\/haishinkit\/rtmpconnection\/status","type":"property"},{"title":"let swfUrl: String?","path":"\/documentation\/haishinkit\/rtmpconnection\/swfurl","type":"property"},{"title":"let timeout: Int","path":"\/documentation\/haishinkit\/rtmpconnection\/timeout","type":"property"},{"title":"var uri: URL?","path":"\/documentation\/haishinkit\/rtmpconnection\/uri","type":"property"},{"title":"let videoFourCcInfoMap: AMFObject?","path":"\/documentation\/haishinkit\/rtmpconnection\/videofourccinfomap","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func call(String, arguments: (any Sendable)?...) async throws -> RTMPResponse","path":"\/documentation\/haishinkit\/rtmpconnection\/call(_:arguments:)","type":"method"},{"title":"func close() async throws","path":"\/documentation\/haishinkit\/rtmpconnection\/close()","type":"method"},{"title":"func connect(String, arguments: (any Sendable)?...) async throws -> RTMPResponse","path":"\/documentation\/haishinkit\/rtmpconnection\/connect(_:arguments:)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"title":"static let defaultCapabilities: Int","path":"\/documentation\/haishinkit\/rtmpconnection\/defaultcapabilities","type":"property"},{"title":"static let defaultChunkSizeS: Int","path":"\/documentation\/haishinkit\/rtmpconnection\/defaultchunksizes","type":"property"},{"title":"static let defaultFlashVer: String","path":"\/documentation\/haishinkit\/rtmpconnection\/defaultflashver","type":"property"},{"title":"static let defaultObjectEncoding: RTMPObjectEncoding","path":"\/documentation\/haishinkit\/rtmpconnection\/defaultobjectencoding","type":"property"},{"title":"static let defaultPort: Int","path":"\/documentation\/haishinkit\/rtmpconnection\/defaultport","type":"property"},{"title":"static let defaultRequestTimeout: UInt64","path":"\/documentation\/haishinkit\/rtmpconnection\/defaultrequesttimeout","type":"property"},{"title":"static let defaultSecurePort: Int","path":"\/documentation\/haishinkit\/rtmpconnection\/defaultsecureport","type":"property"},{"title":"static let defaultTimeout: Int","path":"\/documentation\/haishinkit\/rtmpconnection\/defaulttimeout","type":"property"},{"title":"static let defaultWindowSizeS: Int64","path":"\/documentation\/haishinkit\/rtmpconnection\/defaultwindowsizes","type":"property"},{"title":"static let supportedAudioFourCcInfoMap: AMFObject","path":"\/documentation\/haishinkit\/rtmpconnection\/supportedaudiofourccinfomap","type":"property"},{"title":"static let supportedFourCcList: [String]","path":"\/documentation\/haishinkit\/rtmpconnection\/supportedfourcclist","type":"property"},{"title":"static let supportedProtocols: Set<String>","path":"\/documentation\/haishinkit\/rtmpconnection\/supportedprotocols","type":"property"},{"title":"static let supportedVideoFourCcInfoMap: AMFObject","path":"\/documentation\/haishinkit\/rtmpconnection\/supportedvideofourccinfomap","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"title":"RTMPConnection.Code","path":"\/documentation\/haishinkit\/rtmpconnection\/code","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/code\/callbadversion","type":"case","title":"case callBadVersion"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/code\/callfailed","type":"case","title":"case callFailed"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/code\/callprohibited","type":"case","title":"case callProhibited"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/code\/connectappshutdown","type":"case","title":"case connectAppshutdown"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/code\/connectclosed","type":"case","title":"case connectClosed"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/code\/connectfailed","type":"case","title":"case connectFailed"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/code\/connectidletimeout","type":"case","title":"case connectIdleTimeOut"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/code\/connectinvalidapp","type":"case","title":"case connectInvalidApp"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/code\/connectnetworkchange","type":"case","title":"case connectNetworkChange"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/code\/connectrejected","type":"case","title":"case connectRejected"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/code\/connectsuccess","type":"case","title":"case connectSuccess"},{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/code\/init(rawvalue:)","type":"init","title":"init?(rawValue: String)"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/code\/level","type":"property","title":"var level: String"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/code\/equatable-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/!=(_:_:)"}],"title":"Equatable Implementations"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/code\/rawrepresentable-implementations","type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","type":"property","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/hashvalue"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func hash(into: inout Hasher)","type":"method","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/hash(into:)"}],"title":"RawRepresentable Implementations"}],"type":"enum"},{"title":"RTMPConnection.Error","path":"\/documentation\/haishinkit\/rtmpconnection\/error","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","title":"case connectionTimedOut","path":"\/documentation\/haishinkit\/rtmpconnection\/error\/connectiontimedout"},{"type":"case","title":"case invalidState","path":"\/documentation\/haishinkit\/rtmpconnection\/error\/invalidstate"},{"type":"case","title":"case requestFailed(response: RTMPResponse)","path":"\/documentation\/haishinkit\/rtmpconnection\/error\/requestfailed(response:)"},{"type":"case","title":"case requestTimedOut","path":"\/documentation\/haishinkit\/rtmpconnection\/error\/requesttimedout"},{"type":"case","title":"case socketErrorOccurred(any Error)","path":"\/documentation\/haishinkit\/rtmpconnection\/error\/socketerroroccurred(_:)"},{"type":"case","title":"case unsupportedCommand(String)","path":"\/documentation\/haishinkit\/rtmpconnection\/error\/unsupportedcommand(_:)"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/error\/localizeddescription","type":"property","title":"var localizedDescription: String"}],"type":"symbol","title":"Error Implementations","path":"\/documentation\/haishinkit\/rtmpconnection\/error\/error-implementations"}],"type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Actor Implementations","path":"\/documentation\/haishinkit\/rtmpconnection\/actor-implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/haishinkit\/rtmpconnection\/assertisolated(_:file:line:)","type":"method"},{"title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","path":"\/documentation\/haishinkit\/rtmpconnection\/assumeisolated(_:file:line:)","type":"method"},{"title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/haishinkit\/rtmpconnection\/preconditionisolated(_:file:line:)","type":"method"}],"type":"symbol"}]},{"title":"RTMPSharedObject","type":"class","path":"\/documentation\/haishinkit\/rtmpsharedobject","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/rtmpsharedobject\/data","title":"var data: AMFObject","type":"property"},{"path":"\/documentation\/haishinkit\/rtmpsharedobject\/objectencoding","title":"let objectEncoding: RTMPObjectEncoding","type":"property"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/rtmpsharedobject\/clear()","title":"func clear() async","type":"method"},{"path":"\/documentation\/haishinkit\/rtmpsharedobject\/close()","title":"func close() async","type":"method"},{"path":"\/documentation\/haishinkit\/rtmpsharedobject\/connect(_:)","title":"func connect(RTMPConnection) async","type":"method"},{"path":"\/documentation\/haishinkit\/rtmpsharedobject\/setproperty(_:_:)","title":"func setProperty(String, (any Sendable)?) async","type":"method"},{"type":"groupMarker","title":"Type Methods"},{"path":"\/documentation\/haishinkit\/rtmpsharedobject\/getremote(withname:remotepath:persistence:)","title":"static func getRemote(withName: String, remotePath: String, persistence: Bool) -> RTMPSharedObject","type":"method"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/haishinkit\/rtmpsharedobject\/actor-implementations","title":"Actor Implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/rtmpsharedobject\/assertisolated(_:file:line:)","type":"method","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)"},{"path":"\/documentation\/haishinkit\/rtmpsharedobject\/assumeisolated(_:file:line:)","type":"method","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T"},{"path":"\/documentation\/haishinkit\/rtmpsharedobject\/preconditionisolated(_:file:line:)","type":"method","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)"}]}]},{"title":"RTMPStream","type":"class","path":"\/documentation\/haishinkit\/rtmpstream","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(connection: RTMPConnection, fcPublishName: String?)","path":"\/documentation\/haishinkit\/rtmpstream\/init(connection:fcpublishname:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var audioSampleAccess: Bool","path":"\/documentation\/haishinkit\/rtmpstream\/audiosampleaccess","type":"property"},{"title":"var audioTrackId: UInt8?","path":"\/documentation\/haishinkit\/rtmpstream\/audiotrackid","type":"property"},{"title":"var currentFPS: UInt16","path":"\/documentation\/haishinkit\/rtmpstream\/currentfps","type":"property"},{"title":"var fcPublishName: String?","path":"\/documentation\/haishinkit\/rtmpstream\/fcpublishname","type":"property"},{"title":"var info: RTMPStreamInfo","path":"\/documentation\/haishinkit\/rtmpstream\/info","type":"property"},{"title":"var metadata: AMFArray","path":"\/documentation\/haishinkit\/rtmpstream\/metadata","type":"property"},{"title":"var objectEncoding: RTMPObjectEncoding","path":"\/documentation\/haishinkit\/rtmpstream\/objectencoding","type":"property"},{"title":"var readyState: HKStreamReadyState","path":"\/documentation\/haishinkit\/rtmpstream\/readystate","type":"property"},{"title":"var status: AsyncStream<RTMPStatus>","path":"\/documentation\/haishinkit\/rtmpstream\/status","type":"property"},{"title":"var videoSampleAccess: Bool","path":"\/documentation\/haishinkit\/rtmpstream\/videosampleaccess","type":"property"},{"title":"var videoTrackId: UInt8?","path":"\/documentation\/haishinkit\/rtmpstream\/videotrackid","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func close() async throws -> RTMPResponse","path":"\/documentation\/haishinkit\/rtmpstream\/close()","type":"method"},{"title":"func pause(Bool) async throws -> RTMPResponse","path":"\/documentation\/haishinkit\/rtmpstream\/pause(_:)","type":"method"},{"title":"func play((any Sendable)?...) async throws -> RTMPResponse","path":"\/documentation\/haishinkit\/rtmpstream\/play(_:)","type":"method"},{"title":"func publish(String?, type: RTMPStream.HowToPublish) async throws -> RTMPResponse","path":"\/documentation\/haishinkit\/rtmpstream\/publish(_:type:)","type":"method"},{"title":"func receiveAudio(Bool) async throws","path":"\/documentation\/haishinkit\/rtmpstream\/receiveaudio(_:)","type":"method"},{"title":"func receiveVideo(Bool) async throws","path":"\/documentation\/haishinkit\/rtmpstream\/receivevideo(_:)","type":"method"},{"title":"func seek(Double) async throws","path":"\/documentation\/haishinkit\/rtmpstream\/seek(_:)","type":"method"},{"title":"func send(String, arguments: (any Sendable)?..., isResetTimestamp: Bool) throws","path":"\/documentation\/haishinkit\/rtmpstream\/send(_:arguments:isresettimestamp:)","type":"method"},{"title":"func togglePause() async throws -> RTMPResponse","path":"\/documentation\/haishinkit\/rtmpstream\/togglepause()","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"title":"RTMPStream.Code","path":"\/documentation\/haishinkit\/rtmpstream\/code","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case bufferEmpty","path":"\/documentation\/haishinkit\/rtmpstream\/code\/bufferempty","type":"case"},{"title":"case bufferFlush","path":"\/documentation\/haishinkit\/rtmpstream\/code\/bufferflush","type":"case"},{"title":"case bufferFull","path":"\/documentation\/haishinkit\/rtmpstream\/code\/bufferfull","type":"case"},{"title":"case connectClosed","path":"\/documentation\/haishinkit\/rtmpstream\/code\/connectclosed","type":"case"},{"title":"case connectFailed","path":"\/documentation\/haishinkit\/rtmpstream\/code\/connectfailed","type":"case"},{"title":"case connectRejected","path":"\/documentation\/haishinkit\/rtmpstream\/code\/connectrejected","type":"case"},{"title":"case connectSuccess","path":"\/documentation\/haishinkit\/rtmpstream\/code\/connectsuccess","type":"case"},{"title":"case drmUpdateNeeded","path":"\/documentation\/haishinkit\/rtmpstream\/code\/drmupdateneeded","type":"case"},{"title":"case failed","path":"\/documentation\/haishinkit\/rtmpstream\/code\/failed","type":"case"},{"title":"case multicastStreamReset","path":"\/documentation\/haishinkit\/rtmpstream\/code\/multicaststreamreset","type":"case"},{"title":"case pauseNotify","path":"\/documentation\/haishinkit\/rtmpstream\/code\/pausenotify","type":"case"},{"title":"case playFailed","path":"\/documentation\/haishinkit\/rtmpstream\/code\/playfailed","type":"case"},{"title":"case playFileStructureInvalid","path":"\/documentation\/haishinkit\/rtmpstream\/code\/playfilestructureinvalid","type":"case"},{"title":"case playInsufficientBW","path":"\/documentation\/haishinkit\/rtmpstream\/code\/playinsufficientbw","type":"case"},{"title":"case playNoSupportedTrackFound","path":"\/documentation\/haishinkit\/rtmpstream\/code\/playnosupportedtrackfound","type":"case"},{"title":"case playReset","path":"\/documentation\/haishinkit\/rtmpstream\/code\/playreset","type":"case"},{"title":"case playStart","path":"\/documentation\/haishinkit\/rtmpstream\/code\/playstart","type":"case"},{"title":"case playStop","path":"\/documentation\/haishinkit\/rtmpstream\/code\/playstop","type":"case"},{"title":"case playStreamNotFound","path":"\/documentation\/haishinkit\/rtmpstream\/code\/playstreamnotfound","type":"case"},{"title":"case playTransition","path":"\/documentation\/haishinkit\/rtmpstream\/code\/playtransition","type":"case"},{"title":"case playUnpublishNotify","path":"\/documentation\/haishinkit\/rtmpstream\/code\/playunpublishnotify","type":"case"},{"title":"case publishBadName","path":"\/documentation\/haishinkit\/rtmpstream\/code\/publishbadname","type":"case"},{"title":"case publishIdle","path":"\/documentation\/haishinkit\/rtmpstream\/code\/publishidle","type":"case"},{"title":"case publishStart","path":"\/documentation\/haishinkit\/rtmpstream\/code\/publishstart","type":"case"},{"title":"case recordAlreadyExists","path":"\/documentation\/haishinkit\/rtmpstream\/code\/recordalreadyexists","type":"case"},{"title":"case recordDiskQuotaExceeded","path":"\/documentation\/haishinkit\/rtmpstream\/code\/recorddiskquotaexceeded","type":"case"},{"title":"case recordFailed","path":"\/documentation\/haishinkit\/rtmpstream\/code\/recordfailed","type":"case"},{"title":"case recordNoAccess","path":"\/documentation\/haishinkit\/rtmpstream\/code\/recordnoaccess","type":"case"},{"title":"case recordStart","path":"\/documentation\/haishinkit\/rtmpstream\/code\/recordstart","type":"case"},{"title":"case recordStop","path":"\/documentation\/haishinkit\/rtmpstream\/code\/recordstop","type":"case"},{"title":"case secondScreenStart","path":"\/documentation\/haishinkit\/rtmpstream\/code\/secondscreenstart","type":"case"},{"title":"case secondScreenStop","path":"\/documentation\/haishinkit\/rtmpstream\/code\/secondscreenstop","type":"case"},{"title":"case seekFailed","path":"\/documentation\/haishinkit\/rtmpstream\/code\/seekfailed","type":"case"},{"title":"case seekInvalidTime","path":"\/documentation\/haishinkit\/rtmpstream\/code\/seekinvalidtime","type":"case"},{"title":"case seekNotify","path":"\/documentation\/haishinkit\/rtmpstream\/code\/seeknotify","type":"case"},{"title":"case stepNotify","path":"\/documentation\/haishinkit\/rtmpstream\/code\/stepnotify","type":"case"},{"title":"case unpauseNotify","path":"\/documentation\/haishinkit\/rtmpstream\/code\/unpausenotify","type":"case"},{"title":"case unpublishSuccess","path":"\/documentation\/haishinkit\/rtmpstream\/code\/unpublishsuccess","type":"case"},{"title":"case videoDimensionChange","path":"\/documentation\/haishinkit\/rtmpstream\/code\/videodimensionchange","type":"case"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: String)","path":"\/documentation\/haishinkit\/rtmpstream\/code\/init(rawvalue:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var level: String","path":"\/documentation\/haishinkit\/rtmpstream\/code\/level","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","path":"\/documentation\/haishinkit\/rtmpstream\/code\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"}],"path":"\/documentation\/haishinkit\/rtmpstream\/code\/equatable-implementations","type":"symbol"},{"title":"RawRepresentable Implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/haishinkit\/rtmpstream\/code\/hashvalue","title":"var hashValue: Int"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/haishinkit\/rtmpstream\/code\/hash(into:)","title":"func hash(into: inout Hasher)"}],"path":"\/documentation\/haishinkit\/rtmpstream\/code\/rawrepresentable-implementations","type":"symbol"}],"type":"enum"},{"title":"RTMPStream.Error","path":"\/documentation\/haishinkit\/rtmpstream\/error","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case invalidState","type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/error\/invalidstate"},{"title":"case requestFailed(response: RTMPResponse)","type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/error\/requestfailed(response:)"},{"title":"case requestTimedOut","type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/error\/requesttimedout"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Error Implementations","type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/rtmpstream\/error\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/haishinkit\/rtmpstream\/error\/error-implementations"}],"type":"enum"},{"title":"RTMPStream.HowToPublish","path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","title":"case append","path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish\/append"},{"type":"case","title":"case appendWithGap","path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish\/appendwithgap"},{"type":"case","title":"case live","path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish\/live"},{"type":"case","title":"case record","path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish\/record"},{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init?(rawValue: String)","path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish\/init(rawvalue:)"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish\/!=(_:_:)"}],"title":"Equatable Implementations","path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish\/equatable-implementations"},{"type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"title":"RawRepresentable Implementations","path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish\/rawrepresentable-implementations"}],"type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Actor Implementations","path":"\/documentation\/haishinkit\/rtmpstream\/actor-implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/rtmpstream\/assertisolated(_:file:line:)","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method"},{"path":"\/documentation\/haishinkit\/rtmpstream\/assumeisolated(_:file:line:)","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","type":"method"},{"path":"\/documentation\/haishinkit\/rtmpstream\/preconditionisolated(_:file:line:)","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method"}],"type":"symbol"},{"title":"HKStream Implementations","path":"\/documentation\/haishinkit\/rtmpstream\/hkstream-implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var audioSettings: AudioCodecSettings","type":"property","path":"\/documentation\/haishinkit\/rtmpstream\/audiosettings"},{"title":"var soundTransform: SoundTransform?","type":"property","path":"\/documentation\/haishinkit\/rtmpstream\/soundtransform"},{"title":"var videoSettings: VideoCodecSettings","type":"property","path":"\/documentation\/haishinkit\/rtmpstream\/videosettings"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func addOutput(some HKStreamOutput)","type":"method","path":"\/documentation\/haishinkit\/rtmpstream\/addoutput(_:)"},{"title":"func append(CMSampleBuffer)","type":"method","path":"\/documentation\/haishinkit\/rtmpstream\/append(_:)"},{"title":"func append(AVAudioBuffer, when: AVAudioTime)","type":"method","path":"\/documentation\/haishinkit\/rtmpstream\/append(_:when:)"},{"title":"func attachAudioPlayer(AudioPlayer?) async","type":"method","path":"\/documentation\/haishinkit\/rtmpstream\/attachaudioplayer(_:)"},{"title":"func dispatch(NetworkMonitorEvent) async","type":"method","path":"\/documentation\/haishinkit\/rtmpstream\/dispatch(_:)"},{"title":"func removeOutput(some HKStreamOutput)","type":"method","path":"\/documentation\/haishinkit\/rtmpstream\/removeoutput(_:)"},{"title":"func setAudioSettings(AudioCodecSettings)","type":"method","path":"\/documentation\/haishinkit\/rtmpstream\/setaudiosettings(_:)"},{"title":"func setBitrateStorategy((some HKStreamBitRateStrategy)?)","type":"method","path":"\/documentation\/haishinkit\/rtmpstream\/setbitratestorategy(_:)"},{"title":"func setSoundTransform(SoundTransform) async","type":"method","path":"\/documentation\/haishinkit\/rtmpstream\/setsoundtransform(_:)"},{"title":"func setVideoInputBufferCounts(Int)","type":"method","path":"\/documentation\/haishinkit\/rtmpstream\/setvideoinputbuffercounts(_:)"},{"title":"func setVideoSettings(VideoCodecSettings)","type":"method","path":"\/documentation\/haishinkit\/rtmpstream\/setvideosettings(_:)"}],"type":"symbol"},{"title":"MediaMixerOutput Implementations","path":"\/documentation\/haishinkit\/rtmpstream\/mediamixeroutput-implementations","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/haishinkit\/rtmpstream\/mixer(_:didoutput:)","title":"func mixer(MediaMixer, didOutput: CMSampleBuffer)"},{"type":"method","path":"\/documentation\/haishinkit\/rtmpstream\/mixer(_:didoutput:when:)","title":"func mixer(MediaMixer, didOutput: AVAudioPCMBuffer, when: AVAudioTime)"},{"type":"method","path":"\/documentation\/haishinkit\/rtmpstream\/selecttrack(_:mediatype:)","title":"func selectTrack(UInt8?, mediaType: CMFormatDescription.MediaType)"}],"type":"symbol"}]},{"title":"Screen","type":"class","path":"\/documentation\/haishinkit\/screen","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init()","path":"\/documentation\/haishinkit\/screen\/init()"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var backgroundColor: CGColor","path":"\/documentation\/haishinkit\/screen\/backgroundcolor"},{"type":"property","title":"var childCounts: Int","path":"\/documentation\/haishinkit\/screen\/childcounts"},{"type":"property","title":"var delegate: (any ScreenDelegate)?","path":"\/documentation\/haishinkit\/screen\/delegate"},{"type":"property","title":"var size: CGSize","path":"\/documentation\/haishinkit\/screen\/size-swift.property"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func addChild(ScreenObject?) throws","path":"\/documentation\/haishinkit\/screen\/addchild(_:)"},{"type":"method","title":"func registerVideoEffect(some VideoEffect) -> Bool","path":"\/documentation\/haishinkit\/screen\/registervideoeffect(_:)"},{"type":"method","title":"func removeChild(ScreenObject?)","path":"\/documentation\/haishinkit\/screen\/removechild(_:)"},{"type":"method","title":"func unregisterVideoEffect(some VideoEffect) -> Bool","path":"\/documentation\/haishinkit\/screen\/unregistervideoeffect(_:)"},{"type":"groupMarker","title":"Type Properties"},{"type":"property","title":"static let size: CGSize","path":"\/documentation\/haishinkit\/screen\/size-swift.type.property"}]},{"title":"ScreenActor","type":"class","path":"\/documentation\/haishinkit\/screenactor","children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/screenactor\/shared","title":"static let shared: ScreenActor","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method","path":"\/documentation\/haishinkit\/screenactor\/assertisolated(_:file:line:)"},{"title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","type":"method","path":"\/documentation\/haishinkit\/screenactor\/assumeisolated(_:file:line:)"},{"title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method","path":"\/documentation\/haishinkit\/screenactor\/preconditionisolated(_:file:line:)"}],"path":"\/documentation\/haishinkit\/screenactor\/actor-implementations","title":"Actor Implementations","type":"symbol"},{"children":[{"type":"groupMarker","title":"Type Properties"},{"path":"\/documentation\/haishinkit\/screenactor\/sharedunownedexecutor","type":"property","title":"static var sharedUnownedExecutor: UnownedSerialExecutor"}],"path":"\/documentation\/haishinkit\/screenactor\/globalactor-implementations","title":"GlobalActor Implementations","type":"symbol"}]},{"title":"ScreenObject","type":"class","path":"\/documentation\/haishinkit\/screenobject","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/haishinkit\/screenobject\/init()","title":"init()"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/haishinkit\/screenobject\/bounds","title":"var bounds: CGRect"},{"type":"property","path":"\/documentation\/haishinkit\/screenobject\/cornerradius","title":"var cornerRadius: CGFloat"},{"type":"property","path":"\/documentation\/haishinkit\/screenobject\/horizontalalignment-swift.property","title":"var horizontalAlignment: ScreenObject.HorizontalAlignment"},{"type":"property","path":"\/documentation\/haishinkit\/screenobject\/isvisible","title":"var isVisible: Bool"},{"type":"property","path":"\/documentation\/haishinkit\/screenobject\/layoutmargin","title":"var layoutMargin: NSEdgeInsets"},{"type":"property","path":"\/documentation\/haishinkit\/screenobject\/parent","title":"var parent: ScreenObjectContainer?"},{"type":"property","path":"\/documentation\/haishinkit\/screenobject\/size","title":"var size: CGSize"},{"type":"property","path":"\/documentation\/haishinkit\/screenobject\/verticalalignment-swift.property","title":"var verticalAlignment: ScreenObject.VerticalAlignment"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/haishinkit\/screenobject\/invalidatelayout()","title":"func invalidateLayout()"},{"type":"method","path":"\/documentation\/haishinkit\/screenobject\/makebounds(_:)","title":"func makeBounds(CGSize) -> CGRect"},{"type":"method","path":"\/documentation\/haishinkit\/screenobject\/makeimage(_:)","title":"func makeImage(some ScreenRenderer) -> CGImage?"},{"type":"groupMarker","title":"Enumerations"},{"type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/screenobject\/horizontalalignment-swift.enum\/center","title":"case center","type":"case"},{"path":"\/documentation\/haishinkit\/screenobject\/horizontalalignment-swift.enum\/left","title":"case left","type":"case"},{"path":"\/documentation\/haishinkit\/screenobject\/horizontalalignment-swift.enum\/right","title":"case right","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/screenobject\/horizontalalignment-swift.enum\/equatable-implementations","title":"Equatable Implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","path":"\/documentation\/haishinkit\/screenobject\/horizontalalignment-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"}],"type":"symbol"}],"path":"\/documentation\/haishinkit\/screenobject\/horizontalalignment-swift.enum","title":"ScreenObject.HorizontalAlignment"},{"type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/screenobject\/verticalalignment-swift.enum\/bottom","title":"case bottom","type":"case"},{"path":"\/documentation\/haishinkit\/screenobject\/verticalalignment-swift.enum\/middle","title":"case middle","type":"case"},{"path":"\/documentation\/haishinkit\/screenobject\/verticalalignment-swift.enum\/top","title":"case top","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/screenobject\/verticalalignment-swift.enum\/equatable-implementations","title":"Equatable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/haishinkit\/screenobject\/verticalalignment-swift.enum\/!=(_:_:)","type":"op"}],"type":"symbol"}],"path":"\/documentation\/haishinkit\/screenobject\/verticalalignment-swift.enum","title":"ScreenObject.VerticalAlignment"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/haishinkit\/screenobject\/!=(_:_:)","type":"op"},{"title":"static func == (ScreenObject, ScreenObject) -> Bool","path":"\/documentation\/haishinkit\/screenobject\/==(_:_:)","type":"op"}],"path":"\/documentation\/haishinkit\/screenobject\/equatable-implementations","title":"Equatable Implementations"},{"type":"symbol","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func hash(into: inout Hasher)","path":"\/documentation\/haishinkit\/screenobject\/hash(into:)"}],"path":"\/documentation\/haishinkit\/screenobject\/hashable-implementations","title":"Hashable Implementations"}]},{"title":"ScreenObjectContainer","type":"class","path":"\/documentation\/haishinkit\/screenobjectcontainer","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/screenobjectcontainer\/childcounts","type":"property","title":"var childCounts: Int"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/screenobjectcontainer\/addchild(_:)","type":"method","title":"func addChild(ScreenObject?) throws"},{"path":"\/documentation\/haishinkit\/screenobjectcontainer\/removechild(_:)","type":"method","title":"func removeChild(ScreenObject?)"},{"type":"groupMarker","title":"Enumerations"},{"path":"\/documentation\/haishinkit\/screenobjectcontainer\/error","type":"enum","title":"ScreenObjectContainer.Error","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case alreadyExists","path":"\/documentation\/haishinkit\/screenobjectcontainer\/error\/alreadyexists","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/haishinkit\/screenobjectcontainer\/error\/!=(_:_:)","type":"op"}],"path":"\/documentation\/haishinkit\/screenobjectcontainer\/error\/equatable-implementations","type":"symbol"},{"title":"Error Implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var localizedDescription: String","path":"\/documentation\/haishinkit\/screenobjectcontainer\/error\/localizeddescription","type":"property"}],"path":"\/documentation\/haishinkit\/screenobjectcontainer\/error\/error-implementations","type":"symbol"}]}]},{"title":"StreamScreenObject","type":"class","path":"\/documentation\/haishinkit\/streamscreenobject","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/streamscreenobject\/chromakeycolor","type":"property","title":"var chromaKeyColor: CGColor?"},{"path":"\/documentation\/haishinkit\/streamscreenobject\/videogravity","type":"property","title":"var videoGravity: AVLayerVideoGravity"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/streamscreenobject\/makebounds(_:)","type":"method","title":"func makeBounds(CGSize) -> CGRect"},{"path":"\/documentation\/haishinkit\/streamscreenobject\/makeimage(_:)","type":"method","title":"func makeImage(some ScreenRenderer) -> CGImage?"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/haishinkit\/streamscreenobject\/hkstreamoutput-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func stream(some HKStream, didOutput: CMSampleBuffer)","path":"\/documentation\/haishinkit\/streamscreenobject\/stream(_:didoutput:)"},{"type":"method","title":"func stream(some HKStream, didOutput: AVAudioBuffer, when: AVAudioTime)","path":"\/documentation\/haishinkit\/streamscreenobject\/stream(_:didoutput:when:)"}],"title":"HKStreamOutput Implementations"}]},{"title":"TSReader","type":"class","path":"\/documentation\/haishinkit\/tsreader","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/tsreader\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/tsreader\/output","title":"var output: AsyncStream<(UInt16, CMSampleBuffer)>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/tsreader\/clear()","title":"func clear()","type":"method"},{"path":"\/documentation\/haishinkit\/tsreader\/read(_:)","title":"func read(Data) -> Int","type":"method"}]},{"title":"TSWriter","type":"class","path":"\/documentation\/haishinkit\/tswriter","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(segmentDuration: Double)","path":"\/documentation\/haishinkit\/tswriter\/init(segmentduration:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var audioFormat: AVAudioFormat?","path":"\/documentation\/haishinkit\/tswriter\/audioformat","type":"property"},{"title":"var expectedMedias: Set<AVMediaType>","path":"\/documentation\/haishinkit\/tswriter\/expectedmedias","type":"property"},{"title":"var output: AsyncStream<Data>","path":"\/documentation\/haishinkit\/tswriter\/output","type":"property"},{"title":"var videoFormat: CMFormatDescription?","path":"\/documentation\/haishinkit\/tswriter\/videoformat","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func append(CMSampleBuffer)","path":"\/documentation\/haishinkit\/tswriter\/append(_:)","type":"method"},{"title":"func append(AVAudioBuffer, when: AVAudioTime)","path":"\/documentation\/haishinkit\/tswriter\/append(_:when:)","type":"method"},{"title":"func clear()","path":"\/documentation\/haishinkit\/tswriter\/clear()","type":"method"}]},{"title":"TextScreenObject","type":"class","path":"\/documentation\/haishinkit\/textscreenobject","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var attributes: [NSAttributedString.Key : Any]?","type":"property","path":"\/documentation\/haishinkit\/textscreenobject\/attributes"},{"title":"var bounds: CGRect","type":"property","path":"\/documentation\/haishinkit\/textscreenobject\/bounds"},{"title":"var string: String","type":"property","path":"\/documentation\/haishinkit\/textscreenobject\/string"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func makeBounds(CGSize) -> CGRect","type":"method","path":"\/documentation\/haishinkit\/textscreenobject\/makebounds(_:)"},{"title":"func makeImage(some ScreenRenderer) -> CGImage?","type":"method","path":"\/documentation\/haishinkit\/textscreenobject\/makeimage(_:)"}]},{"title":"VideoDeviceUnit","type":"class","path":"\/documentation\/haishinkit\/videodeviceunit","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var colorFormat: OSType","path":"\/documentation\/haishinkit\/videodeviceunit\/colorformat-swift.property","type":"property"},{"title":"var connection: AVCaptureConnection?","path":"\/documentation\/haishinkit\/videodeviceunit\/connection","type":"property"},{"title":"var device: AVCaptureDevice?","path":"\/documentation\/haishinkit\/videodeviceunit\/device","type":"property"},{"title":"var input: AVCaptureInput?","path":"\/documentation\/haishinkit\/videodeviceunit\/input","type":"property"},{"title":"var isVideoMirrored: Bool","path":"\/documentation\/haishinkit\/videodeviceunit\/isvideomirrored","type":"property"},{"title":"var output: VideoDeviceUnit.Output?","path":"\/documentation\/haishinkit\/videodeviceunit\/output-swift.property","type":"property"},{"title":"let track: UInt8","path":"\/documentation\/haishinkit\/videodeviceunit\/track","type":"property"},{"title":"var videoOrientation: AVCaptureVideoOrientation","path":"\/documentation\/haishinkit\/videodeviceunit\/videoorientation","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"title":"VideoDeviceUnit.Output","path":"\/documentation\/haishinkit\/videodeviceunit\/output-swift.typealias","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"title":"static let colorFormat: OSType","path":"\/documentation\/haishinkit\/videodeviceunit\/colorformat-swift.type.property","type":"property"}]},{"title":"VideoRotator","type":"class","path":"\/documentation\/haishinkit\/videorotator","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videorotator\/init()","title":"init?()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videorotator\/rotate(buffer:)","title":"func rotate(buffer: CMSampleBuffer) -> Result<CMSampleBuffer, VideoRotator.Error>","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videorotator\/error","title":"VideoRotator.Error","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","title":"case cannotAllocatePixelBuffer(CVReturn)","path":"\/documentation\/haishinkit\/videorotator\/error\/cannotallocatepixelbuffer(_:)"},{"type":"case","title":"case noImageBuffer","path":"\/documentation\/haishinkit\/videorotator\/error\/noimagebuffer"},{"type":"case","title":"case noOrientationInfo","path":"\/documentation\/haishinkit\/videorotator\/error\/noorientationinfo"},{"type":"case","title":"case rotationFailure(OSStatus)","path":"\/documentation\/haishinkit\/videorotator\/error\/rotationfailure(_:)"},{"type":"case","title":"case unsupportedOrientation","path":"\/documentation\/haishinkit\/videorotator\/error\/unsupportedorientation"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videorotator\/error\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"type":"symbol","title":"Error Implementations","path":"\/documentation\/haishinkit\/videorotator\/error\/error-implementations"}],"type":"enum"}]},{"title":"VideoTrackScreenObject","type":"class","path":"\/documentation\/haishinkit\/videotrackscreenobject","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init()","path":"\/documentation\/haishinkit\/videotrackscreenobject\/init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var chromaKeyColor: CGColor?","path":"\/documentation\/haishinkit\/videotrackscreenobject\/chromakeycolor","type":"property"},{"title":"var frameRate: Int","path":"\/documentation\/haishinkit\/videotrackscreenobject\/framerate","type":"property"},{"title":"var track: UInt8","path":"\/documentation\/haishinkit\/videotrackscreenobject\/track","type":"property"},{"title":"var videoGravity: AVLayerVideoGravity","path":"\/documentation\/haishinkit\/videotrackscreenobject\/videogravity","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func draw(some ScreenRenderer)","path":"\/documentation\/haishinkit\/videotrackscreenobject\/draw(_:)","type":"method"},{"title":"func makeBounds(CGSize) -> CGRect","path":"\/documentation\/haishinkit\/videotrackscreenobject\/makebounds(_:)","type":"method"},{"title":"func makeImage(some ScreenRenderer) -> CGImage?","path":"\/documentation\/haishinkit\/videotrackscreenobject\/makeimage(_:)","type":"method"},{"title":"func registerVideoEffect(some VideoEffect) -> Bool","path":"\/documentation\/haishinkit\/videotrackscreenobject\/registervideoeffect(_:)","type":"method"},{"title":"func unregisterVideoEffect(some VideoEffect) -> Bool","path":"\/documentation\/haishinkit\/videotrackscreenobject\/unregistervideoeffect(_:)","type":"method"}]},{"title":"Protocols","type":"groupMarker"},{"title":"AsyncRunner","type":"protocol","path":"\/documentation\/haishinkit\/asyncrunner","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var isRunning: Bool","type":"property","path":"\/documentation\/haishinkit\/asyncrunner\/isrunning"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func startRunning() async","type":"method","path":"\/documentation\/haishinkit\/asyncrunner\/startrunning()"},{"title":"func stopRunning() async","type":"method","path":"\/documentation\/haishinkit\/asyncrunner\/stoprunning()"}]},{"title":"ChromaKeyProcessable","type":"protocol","path":"\/documentation\/haishinkit\/chromakeyprocessable","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/chromakeyprocessable\/chromakeycolor","title":"var chromaKeyColor: CGColor?","type":"property"}]},{"title":"HKStream","type":"protocol","path":"\/documentation\/haishinkit\/hkstream","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var audioSettings: AudioCodecSettings","path":"\/documentation\/haishinkit\/hkstream\/audiosettings","type":"property"},{"title":"var readyState: HKStreamReadyState","path":"\/documentation\/haishinkit\/hkstream\/readystate","type":"property"},{"title":"var soundTransform: SoundTransform?","path":"\/documentation\/haishinkit\/hkstream\/soundtransform","type":"property"},{"title":"var videoSettings: VideoCodecSettings","path":"\/documentation\/haishinkit\/hkstream\/videosettings","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func addOutput(some HKStreamOutput)","path":"\/documentation\/haishinkit\/hkstream\/addoutput(_:)","type":"method"},{"title":"func append(CMSampleBuffer)","path":"\/documentation\/haishinkit\/hkstream\/append(_:)","type":"method"},{"title":"func append(AVAudioBuffer, when: AVAudioTime)","path":"\/documentation\/haishinkit\/hkstream\/append(_:when:)","type":"method"},{"title":"func attachAudioPlayer(AudioPlayer?) async","path":"\/documentation\/haishinkit\/hkstream\/attachaudioplayer(_:)","type":"method"},{"title":"func dispatch(NetworkMonitorEvent) async","path":"\/documentation\/haishinkit\/hkstream\/dispatch(_:)","type":"method"},{"title":"func removeOutput(some HKStreamOutput)","path":"\/documentation\/haishinkit\/hkstream\/removeoutput(_:)","type":"method"},{"title":"func setAudioSettings(AudioCodecSettings)","path":"\/documentation\/haishinkit\/hkstream\/setaudiosettings(_:)","type":"method"},{"title":"func setBitrateStorategy((some HKStreamBitRateStrategy)?)","path":"\/documentation\/haishinkit\/hkstream\/setbitratestorategy(_:)","type":"method"},{"title":"func setSoundTransform(SoundTransform) async","path":"\/documentation\/haishinkit\/hkstream\/setsoundtransform(_:)","type":"method"},{"title":"func setVideoInputBufferCounts(Int)","path":"\/documentation\/haishinkit\/hkstream\/setvideoinputbuffercounts(_:)","type":"method"},{"title":"func setVideoSettings(VideoCodecSettings)","path":"\/documentation\/haishinkit\/hkstream\/setvideosettings(_:)","type":"method"}]},{"title":"HKStreamBitRateStrategy","type":"protocol","path":"\/documentation\/haishinkit\/hkstreambitratestrategy","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var mamimumAudioBitRate: Int","path":"\/documentation\/haishinkit\/hkstreambitratestrategy\/mamimumaudiobitrate","type":"property"},{"title":"var mamimumVideoBitRate: Int","path":"\/documentation\/haishinkit\/hkstreambitratestrategy\/mamimumvideobitrate","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func adjustBitrate(NetworkMonitorEvent, stream: some HKStream) async","path":"\/documentation\/haishinkit\/hkstreambitratestrategy\/adjustbitrate(_:stream:)","type":"method"}]},{"title":"HKStreamOutput","type":"protocol","path":"\/documentation\/haishinkit\/hkstreamoutput","children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/hkstreamoutput\/stream(_:didoutput:)","title":"func stream(some HKStream, didOutput: CMSampleBuffer)","type":"method"},{"path":"\/documentation\/haishinkit\/hkstreamoutput\/stream(_:didoutput:when:)","title":"func stream(some HKStream, didOutput: AVAudioBuffer, when: AVAudioTime)","type":"method"}]},{"title":"MediaMixerOutput","type":"protocol","path":"\/documentation\/haishinkit\/mediamixeroutput","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var audioTrackId: UInt8?","path":"\/documentation\/haishinkit\/mediamixeroutput\/audiotrackid","type":"property"},{"title":"var videoTrackId: UInt8?","path":"\/documentation\/haishinkit\/mediamixeroutput\/videotrackid","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func mixer(MediaMixer, didOutput: CMSampleBuffer)","path":"\/documentation\/haishinkit\/mediamixeroutput\/mixer(_:didoutput:)","type":"method"},{"title":"func mixer(MediaMixer, didOutput: AVAudioPCMBuffer, when: AVAudioTime)","path":"\/documentation\/haishinkit\/mediamixeroutput\/mixer(_:didoutput:when:)","type":"method"},{"title":"func selectTrack(UInt8?, mediaType: CMFormatDescription.MediaType) async","path":"\/documentation\/haishinkit\/mediamixeroutput\/selecttrack(_:mediatype:)","type":"method"}]},{"title":"NetworkConnection","type":"protocol","path":"\/documentation\/haishinkit\/networkconnection","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var connected: Bool","path":"\/documentation\/haishinkit\/networkconnection\/connected","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func close() async throws","path":"\/documentation\/haishinkit\/networkconnection\/close()","type":"method"}]},{"title":"NetworkTransportReporter","type":"protocol","path":"\/documentation\/haishinkit\/networktransportreporter","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func makeNetworkMonitor() async -> NetworkMonitor","type":"method","path":"\/documentation\/haishinkit\/networktransportreporter\/makenetworkmonitor()"},{"title":"func makeNetworkTransportReport() async -> NetworkTransportReport","type":"method","path":"\/documentation\/haishinkit\/networktransportreporter\/makenetworktransportreport()"}]},{"title":"Runner","type":"protocol","path":"\/documentation\/haishinkit\/runner","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var isRunning: Bool","type":"property","path":"\/documentation\/haishinkit\/runner\/isrunning"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func startRunning()","type":"method","path":"\/documentation\/haishinkit\/runner\/startrunning()"},{"title":"func stopRunning()","type":"method","path":"\/documentation\/haishinkit\/runner\/stoprunning()"}]},{"title":"ScreenDelegate","type":"protocol","path":"\/documentation\/haishinkit\/screendelegate","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func screen(Screen, willLayout: CMTime)","path":"\/documentation\/haishinkit\/screendelegate\/screen(_:willlayout:)"}]},{"title":"ScreenRenderer","type":"protocol","path":"\/documentation\/haishinkit\/screenrenderer","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/screenrenderer\/backgroundcolor","title":"var backgroundColor: CGColor","type":"property"},{"path":"\/documentation\/haishinkit\/screenrenderer\/bounds","title":"var bounds: CGRect","type":"property"},{"path":"\/documentation\/haishinkit\/screenrenderer\/context","title":"var context: CIContext","type":"property"},{"path":"\/documentation\/haishinkit\/screenrenderer\/presentationtimestamp","title":"var presentationTimeStamp: CMTime","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/screenrenderer\/draw(_:)","title":"func draw(ScreenObject)","type":"method"},{"path":"\/documentation\/haishinkit\/screenrenderer\/layout(_:)","title":"func layout(ScreenObject)","type":"method"},{"path":"\/documentation\/haishinkit\/screenrenderer\/settarget(_:)","title":"func setTarget(CVPixelBuffer?)","type":"method"}]},{"title":"VideoEffect","type":"protocol","path":"\/documentation\/haishinkit\/videoeffect","children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videoeffect\/execute(_:)","title":"func execute(CIImage) -> CIImage","type":"method"}]},{"title":"Structures","type":"groupMarker"},{"title":"AMFArray","type":"struct","path":"\/documentation\/haishinkit\/amfarray","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(count: Int)","path":"\/documentation\/haishinkit\/amfarray\/init(count:)","type":"init"},{"title":"init(data: [(any Sendable)?])","path":"\/documentation\/haishinkit\/amfarray\/init(data:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var length: Int","path":"\/documentation\/haishinkit\/amfarray\/length","type":"property"},{"title":"Subscripts","type":"groupMarker"},{"title":"subscript(Any) -> (any Sendable)?","path":"\/documentation\/haishinkit\/amfarray\/subscript(_:)","type":"subscript"},{"title":"Default Implementations","type":"groupMarker"},{"title":"CustomDebugStringConvertible Implementations","path":"\/documentation\/haishinkit\/amfarray\/customdebugstringconvertible-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/amfarray\/debugdescription","type":"property","title":"var debugDescription: String"}]},{"title":"Equatable Implementations","path":"\/documentation\/haishinkit\/amfarray\/equatable-implementations","type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/amfarray\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/haishinkit\/amfarray\/==(_:_:)","title":"static func == (AMFArray, AMFArray) -> Bool","type":"op"}]},{"title":"ExpressibleByArrayLiteral Implementations","path":"\/documentation\/haishinkit\/amfarray\/expressiblebyarrayliteral-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/haishinkit\/amfarray\/init(arrayliteral:)","type":"init","title":"init(arrayLiteral: (any Sendable)?...)"}]}]},{"title":"AMFTypedObject","type":"struct","path":"\/documentation\/haishinkit\/amftypedobject","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/amftypedobject\/data","title":"let data: AMFObject","type":"property"},{"path":"\/documentation\/haishinkit\/amftypedobject\/typename","title":"let typeName: String","type":"property"}]},{"title":"AMFUndefined","type":"struct","path":"\/documentation\/haishinkit\/amfundefined","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/haishinkit\/amfundefined\/description","title":"var description: String"}]},{"title":"AMFXML","type":"struct","path":"\/documentation\/haishinkit\/amfxml","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init(data: String)","path":"\/documentation\/haishinkit\/amfxml\/init(data:)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var description: String","path":"\/documentation\/haishinkit\/amfxml\/description"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","title":"Equatable Implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/haishinkit\/amfxml\/!=(_:_:)"},{"type":"op","title":"static func == (AMFXML, AMFXML) -> Bool","path":"\/documentation\/haishinkit\/amfxml\/==(_:_:)"}],"path":"\/documentation\/haishinkit\/amfxml\/equatable-implementations"}]},{"title":"AMFXMLDocument","type":"struct","path":"\/documentation\/haishinkit\/amfxmldocument","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(data: String)","path":"\/documentation\/haishinkit\/amfxmldocument\/init(data:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var description: String","path":"\/documentation\/haishinkit\/amfxmldocument\/description","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","path":"\/documentation\/haishinkit\/amfxmldocument\/equatable-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/haishinkit\/amfxmldocument\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"},{"path":"\/documentation\/haishinkit\/amfxmldocument\/==(_:_:)","type":"op","title":"static func == (AMFXMLDocument, AMFXMLDocument) -> Bool"}]}]},{"title":"AudioCodecSettings","type":"struct","path":"\/documentation\/haishinkit\/audiocodecsettings","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/haishinkit\/audiocodecsettings\/init(bitrate:downmix:channelmap:samplerate:format:)","type":"init","title":"init(bitRate: Int, downmix: Bool, channelMap: [Int]?, sampleRate: Float64, format: AudioCodecSettings.Format)"},{"path":"\/documentation\/haishinkit\/audiocodecsettings\/init(from:)","type":"init","title":"init(from: any Decoder) throws"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/audiocodecsettings\/bitrate","type":"property","title":"var bitRate: Int"},{"path":"\/documentation\/haishinkit\/audiocodecsettings\/channelmap","type":"property","title":"var channelMap: [Int]?"},{"path":"\/documentation\/haishinkit\/audiocodecsettings\/downmix","type":"property","title":"var downmix: Bool"},{"path":"\/documentation\/haishinkit\/audiocodecsettings\/format-swift.property","type":"property","title":"var format: AudioCodecSettings.Format"},{"path":"\/documentation\/haishinkit\/audiocodecsettings\/samplerate","type":"property","title":"let sampleRate: Float64"},{"type":"groupMarker","title":"Type Properties"},{"path":"\/documentation\/haishinkit\/audiocodecsettings\/default","type":"property","title":"static let `default`: AudioCodecSettings"},{"path":"\/documentation\/haishinkit\/audiocodecsettings\/defaultbitrate","type":"property","title":"static let defaultBitRate: Int"},{"path":"\/documentation\/haishinkit\/audiocodecsettings\/maximumnumberofchannels","type":"property","title":"static let maximumNumberOfChannels: UInt32"},{"type":"groupMarker","title":"Enumerations"},{"path":"\/documentation\/haishinkit\/audiocodecsettings\/format-swift.enum","type":"enum","title":"AudioCodecSettings.Format","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","title":"case aac","path":"\/documentation\/haishinkit\/audiocodecsettings\/format-swift.enum\/aac"},{"type":"case","title":"case opus","path":"\/documentation\/haishinkit\/audiocodecsettings\/format-swift.enum\/opus"},{"type":"case","title":"case pcm","path":"\/documentation\/haishinkit\/audiocodecsettings\/format-swift.enum\/pcm"},{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init(from: any Decoder) throws","path":"\/documentation\/haishinkit\/audiocodecsettings\/format-swift.enum\/init(from:)"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/haishinkit\/audiocodecsettings\/format-swift.enum\/!=(_:_:)","type":"op"}],"type":"symbol","title":"Equatable Implementations","path":"\/documentation\/haishinkit\/audiocodecsettings\/format-swift.enum\/equatable-implementations"}]}]},{"title":"AudioMixerSettings","type":"struct","path":"\/documentation\/haishinkit\/audiomixersettings","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/haishinkit\/audiomixersettings\/init(samplerate:channels:ismuted:maintrack:tracks:)","title":"init(sampleRate: Float64, channels: UInt32, isMuted: Bool, mainTrack: UInt8, tracks: [UInt8 : AudioMixerTrackSettings])"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/haishinkit\/audiomixersettings\/channels","title":"let channels: UInt32"},{"type":"property","path":"\/documentation\/haishinkit\/audiomixersettings\/ismuted","title":"var isMuted: Bool"},{"type":"property","path":"\/documentation\/haishinkit\/audiomixersettings\/maintrack","title":"var mainTrack: UInt8"},{"type":"property","path":"\/documentation\/haishinkit\/audiomixersettings\/maximumnumberofchannels","title":"var maximumNumberOfChannels: UInt32"},{"type":"property","path":"\/documentation\/haishinkit\/audiomixersettings\/samplerate","title":"let sampleRate: Float64"},{"type":"property","path":"\/documentation\/haishinkit\/audiomixersettings\/tracks","title":"var tracks: [UInt8 : AudioMixerTrackSettings]"},{"type":"groupMarker","title":"Type Properties"},{"type":"property","path":"\/documentation\/haishinkit\/audiomixersettings\/default","title":"static let `default`: AudioMixerSettings"},{"type":"property","path":"\/documentation\/haishinkit\/audiomixersettings\/maximumsamplerate","title":"static let maximumSampleRate: Float64"}]},{"title":"AudioMixerTrackSettings","type":"struct","path":"\/documentation\/haishinkit\/audiomixertracksettings","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/haishinkit\/audiomixertracksettings\/init(from:)","type":"init"},{"title":"init(volume: Float, isMuted: Bool, downmix: Bool, channelMap: [Int]?)","path":"\/documentation\/haishinkit\/audiomixertracksettings\/init(volume:ismuted:downmix:channelmap:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var channelMap: [Int]?","path":"\/documentation\/haishinkit\/audiomixertracksettings\/channelmap","type":"property"},{"title":"var downmix: Bool","path":"\/documentation\/haishinkit\/audiomixertracksettings\/downmix","type":"property"},{"title":"var isMuted: Bool","path":"\/documentation\/haishinkit\/audiomixertracksettings\/ismuted","type":"property"},{"title":"var volume: Float","path":"\/documentation\/haishinkit\/audiomixertracksettings\/volume","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"title":"static let `default`: AudioMixerTrackSettings","path":"\/documentation\/haishinkit\/audiomixertracksettings\/default","type":"property"}]},{"title":"HKAtomic","type":"struct","path":"\/documentation\/haishinkit\/hkatomic","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init(A)","path":"\/documentation\/haishinkit\/hkatomic\/init(_:)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var value: A","path":"\/documentation\/haishinkit\/hkatomic\/value"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func mutate((inout A) -> Void)","path":"\/documentation\/haishinkit\/hkatomic\/mutate(_:)"}]},{"title":"NetworkMonitorReport","type":"struct","path":"\/documentation\/haishinkit\/networkmonitorreport","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/haishinkit\/networkmonitorreport\/currentbytesinpersecond","title":"let currentBytesInPerSecond: Int"},{"type":"property","path":"\/documentation\/haishinkit\/networkmonitorreport\/currentbytesoutpersecond","title":"let currentBytesOutPerSecond: Int"},{"type":"property","path":"\/documentation\/haishinkit\/networkmonitorreport\/currentqueuebytesout","title":"let currentQueueBytesOut: Int"},{"type":"property","path":"\/documentation\/haishinkit\/networkmonitorreport\/totalbytesin","title":"let totalBytesIn: Int"},{"type":"property","path":"\/documentation\/haishinkit\/networkmonitorreport\/totalbytesout","title":"let totalBytesOut: Int"}]},{"title":"NetworkTransportReport","type":"struct","path":"\/documentation\/haishinkit\/networktransportreport","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/haishinkit\/networktransportreport\/init(queuebytesout:totalbytesin:totalbytesout:)","title":"init(queueBytesOut: Int, totalBytesIn: Int, totalBytesOut: Int)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/haishinkit\/networktransportreport\/queuebytesout","title":"let queueBytesOut: Int"},{"type":"property","path":"\/documentation\/haishinkit\/networktransportreport\/totalbytesin","title":"let totalBytesIn: Int"},{"type":"property","path":"\/documentation\/haishinkit\/networktransportreport\/totalbytesout","title":"let totalBytesOut: Int"}]},{"title":"RTMPResponse","type":"struct","path":"\/documentation\/haishinkit\/rtmpresponse","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/haishinkit\/rtmpresponse\/arguments","title":"let arguments: [(any Sendable)?]"},{"type":"property","path":"\/documentation\/haishinkit\/rtmpresponse\/status","title":"let status: RTMPStatus?"}]},{"title":"RTMPStatus","type":"struct","path":"\/documentation\/haishinkit\/rtmpstatus","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"let code: String","path":"\/documentation\/haishinkit\/rtmpstatus\/code","type":"property"},{"title":"let description: String","path":"\/documentation\/haishinkit\/rtmpstatus\/description","type":"property"},{"title":"let level: String","path":"\/documentation\/haishinkit\/rtmpstatus\/level","type":"property"},{"title":"Subscripts","type":"groupMarker"},{"title":"subscript(dynamicMember _: String) -> Double?","path":"\/documentation\/haishinkit\/rtmpstatus\/subscript(dynamicmember:)-7qc0b","type":"subscript"},{"title":"subscript(dynamicMember _: String) -> String?","path":"\/documentation\/haishinkit\/rtmpstatus\/subscript(dynamicmember:)-9sprr","type":"subscript"}]},{"title":"RTMPStreamInfo","type":"struct","path":"\/documentation\/haishinkit\/rtmpstreaminfo","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var byteCount: Int","path":"\/documentation\/haishinkit\/rtmpstreaminfo\/bytecount"},{"type":"property","title":"var currentBytesPerSecond: Int","path":"\/documentation\/haishinkit\/rtmpstreaminfo\/currentbytespersecond"},{"type":"property","title":"var resourceName: String?","path":"\/documentation\/haishinkit\/rtmpstreaminfo\/resourcename"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/rtmpstreaminfo\/debugdescription","title":"var debugDescription: String","type":"property"}],"type":"symbol","title":"CustomDebugStringConvertible Implementations","path":"\/documentation\/haishinkit\/rtmpstreaminfo\/customdebugstringconvertible-implementations"}]},{"title":"SoundTransform","type":"struct","path":"\/documentation\/haishinkit\/soundtransform","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/haishinkit\/soundtransform\/init(volume:pan:)","title":"init(volume: Float, pan: Float)","type":"init"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/soundtransform\/pan","title":"var pan: Float","type":"property"},{"path":"\/documentation\/haishinkit\/soundtransform\/volume","title":"var volume: Float","type":"property"},{"type":"groupMarker","title":"Type Properties"},{"path":"\/documentation\/haishinkit\/soundtransform\/defaultpan","title":"static let defaultPan: Float","type":"property"},{"path":"\/documentation\/haishinkit\/soundtransform\/defaultvolume","title":"static let defaultVolume: Float","type":"property"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/haishinkit\/soundtransform\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"type":"property","title":"var debugDescription: String","path":"\/documentation\/haishinkit\/soundtransform\/debugdescription"}]},{"path":"\/documentation\/haishinkit\/soundtransform\/equatable-implementations","title":"Equatable Implementations","type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/haishinkit\/soundtransform\/!=(_:_:)","type":"op"}]}]},{"title":"VTSessionOption","type":"struct","path":"\/documentation\/haishinkit\/vtsessionoption","children":[{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/haishinkit\/vtsessionoption\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"},{"path":"\/documentation\/haishinkit\/vtsessionoption\/==(_:_:)","type":"op","title":"static func == (VTSessionOption, VTSessionOption) -> Bool"}],"path":"\/documentation\/haishinkit\/vtsessionoption\/equatable-implementations","title":"Equatable Implementations"},{"type":"symbol","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/haishinkit\/vtsessionoption\/hash(into:)","title":"func hash(into: inout Hasher)"}],"path":"\/documentation\/haishinkit\/vtsessionoption\/hashable-implementations","title":"Hashable Implementations"}]},{"title":"VideoCodecSettings","type":"struct","path":"\/documentation\/haishinkit\/videocodecsettings","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/init(from:)","type":"init","title":"init(from: any Decoder) throws"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/init(videosize:bitrate:profilelevel:scalingmode:bitratemode:maxkeyframeintervalduration:allowframereordering:dataratelimits:ishardwareencoderenabled:)","type":"init","title":"init(videoSize: CGSize, bitRate: Int, profileLevel: String, scalingMode: VideoCodecSettings.ScalingMode, bitRateMode: VideoCodecSettings.BitRateMode, maxKeyFrameIntervalDuration: Int32, allowFrameReordering: Bool?, dataRateLimits: [Double]?, isHardwareEncoderEnabled: Bool)"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/allowframereordering","type":"property","title":"var allowFrameReordering: Bool?"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/bitrate","type":"property","title":"var bitRate: Int"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.property","type":"property","title":"var bitRateMode: VideoCodecSettings.BitRateMode"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/dataratelimits","type":"property","title":"var dataRateLimits: [Double]?"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/frameinterval","type":"property","title":"var frameInterval: Double"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/ishardwareencoderenabled","type":"property","title":"var isHardwareEncoderEnabled: Bool"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/maxkeyframeintervalduration","type":"property","title":"var maxKeyFrameIntervalDuration: Int32"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/profilelevel","type":"property","title":"var profileLevel: String"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.property","type":"property","title":"var scalingMode: VideoCodecSettings.ScalingMode"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/videosize","type":"property","title":"var videoSize: CGSize"},{"type":"groupMarker","title":"Type Properties"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/default","type":"property","title":"static let `default`: VideoCodecSettings"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/frameinterval01","type":"property","title":"static let frameInterval01: Double"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/frameinterval05","type":"property","title":"static let frameInterval05: Double"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/frameinterval10","type":"property","title":"static let frameInterval10: Double"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/frameinterval30","type":"property","title":"static let frameInterval30: Double"},{"type":"groupMarker","title":"Enumerations"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum","type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case average","path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/average","type":"case"},{"title":"case constant","path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/constant","type":"case"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: String)","path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/init(rawvalue:)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}],"title":"Equatable Implementations","path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/equatable-implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"title":"RawRepresentable Implementations","path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/rawrepresentable-implementations","type":"symbol"}],"title":"VideoCodecSettings.BitRateMode"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum","type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case cropSourceToCleanAperture","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/cropsourcetocleanaperture","type":"case"},{"title":"case letterbox","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/letterbox","type":"case"},{"title":"case normal","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/normal","type":"case"},{"title":"case trim","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/trim","type":"case"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: String)","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/init(rawvalue:)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/!=(_:_:)","type":"op"}],"type":"symbol"},{"title":"RawRepresentable Implementations","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/rawrepresentable-implementations","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/init(from:)","title":"init(from: any Decoder) throws"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/hashvalue","title":"var hashValue: Int"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/encode(to:)","title":"func encode(to: any Encoder) throws"},{"type":"method","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)"}],"type":"symbol"}],"title":"VideoCodecSettings.ScalingMode"}]},{"title":"VideoMixerSettings","type":"struct","path":"\/documentation\/haishinkit\/videomixersettings","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/haishinkit\/videomixersettings\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/haishinkit\/videomixersettings\/init(mode:ismuted:maintrack:)","title":"init(mode: VideoMixerSettings.Mode, isMuted: Bool, mainTrack: UInt8)","type":"init"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/videomixersettings\/ismuted","title":"var isMuted: Bool","type":"property"},{"path":"\/documentation\/haishinkit\/videomixersettings\/maintrack","title":"var mainTrack: UInt8","type":"property"},{"path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.property","title":"var mode: VideoMixerSettings.Mode","type":"property"},{"type":"groupMarker","title":"Type Properties"},{"path":"\/documentation\/haishinkit\/videomixersettings\/default","title":"static let `default`: VideoMixerSettings","type":"property"},{"type":"groupMarker","title":"Enumerations"},{"path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum","title":"VideoMixerSettings.Mode","type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/offscreen","title":"case offscreen"},{"type":"case","path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/passthrough","title":"case passthrough"},{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/!=(_:_:)","type":"op"}],"title":"Equatable Implementations"},{"type":"symbol","path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/rawrepresentable-implementations","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/init(from:)","type":"init","title":"init(from: any Decoder) throws"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/hashvalue","type":"property","title":"var hashValue: Int"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/encode(to:)","type":"method","title":"func encode(to: any Encoder) throws"},{"path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/hash(into:)","type":"method","title":"func hash(into: inout Hasher)"}],"title":"RawRepresentable Implementations"}]}]},{"title":"Variables","type":"groupMarker"},{"title":"let kAMFUndefined: AMFUndefined","type":"var","path":"\/documentation\/haishinkit\/kamfundefined"},{"title":"let kHaishinKitIdentifier: String","type":"var","path":"\/documentation\/haishinkit\/khaishinkitidentifier"},{"title":"Type Aliases","type":"groupMarker"},{"title":"AMFObject","type":"typealias","path":"\/documentation\/haishinkit\/amfobject"},{"title":"AudioDeviceConfigurationBlock","type":"typealias","path":"\/documentation\/haishinkit\/audiodeviceconfigurationblock"},{"title":"VideoDeviceConfigurationBlock","type":"typealias","path":"\/documentation\/haishinkit\/videodeviceconfigurationblock"},{"title":"Enumerations","type":"groupMarker"},{"title":"DeviceUtil","type":"enum","path":"\/documentation\/haishinkit\/deviceutil","children":[{"type":"groupMarker","title":"Type Methods"},{"type":"method","path":"\/documentation\/haishinkit\/deviceutil\/device(withlocalizedname:mediatype:)","title":"static func device(withLocalizedName: String, mediaType: AVMediaType) -> AVCaptureDevice?"}]},{"title":"HKStreamReadyState","type":"enum","path":"\/documentation\/haishinkit\/hkstreamreadystate","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case idle","type":"case","path":"\/documentation\/haishinkit\/hkstreamreadystate\/idle"},{"title":"case play","type":"case","path":"\/documentation\/haishinkit\/hkstreamreadystate\/play"},{"title":"case playing","type":"case","path":"\/documentation\/haishinkit\/hkstreamreadystate\/playing"},{"title":"case publish","type":"case","path":"\/documentation\/haishinkit\/hkstreamreadystate\/publish"},{"title":"case publishing","type":"case","path":"\/documentation\/haishinkit\/hkstreamreadystate\/publishing"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: Int)","type":"init","path":"\/documentation\/haishinkit\/hkstreamreadystate\/init(rawvalue:)"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/haishinkit\/hkstreamreadystate\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}],"type":"symbol","path":"\/documentation\/haishinkit\/hkstreamreadystate\/equatable-implementations"},{"title":"RawRepresentable Implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","type":"property","path":"\/documentation\/haishinkit\/hkstreamreadystate\/hashvalue"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func hash(into: inout Hasher)","type":"method","path":"\/documentation\/haishinkit\/hkstreamreadystate\/hash(into:)"}],"type":"symbol","path":"\/documentation\/haishinkit\/hkstreamreadystate\/rawrepresentable-implementations"}]},{"title":"NetworkMonitorEvent","type":"enum","path":"\/documentation\/haishinkit\/networkmonitorevent","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/networkmonitorevent\/publishinsufficientbwoccured(report:)","title":"case publishInsufficientBWOccured(report: NetworkMonitorReport)","type":"case"},{"path":"\/documentation\/haishinkit\/networkmonitorevent\/reset","title":"case reset","type":"case"},{"path":"\/documentation\/haishinkit\/networkmonitorevent\/status(report:)","title":"case status(report: NetworkMonitorReport)","type":"case"}]},{"title":"RTMPObjectEncoding","type":"enum","path":"\/documentation\/haishinkit\/rtmpobjectencoding","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case amf0","type":"case","path":"\/documentation\/haishinkit\/rtmpobjectencoding\/amf0"},{"title":"case amf3","type":"case","path":"\/documentation\/haishinkit\/rtmpobjectencoding\/amf3"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: UInt8)","type":"init","path":"\/documentation\/haishinkit\/rtmpobjectencoding\/init(rawvalue:)"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/haishinkit\/rtmpobjectencoding\/!=(_:_:)"}],"title":"Equatable Implementations","type":"symbol","path":"\/documentation\/haishinkit\/rtmpobjectencoding\/equatable-implementations"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var hashValue: Int","path":"\/documentation\/haishinkit\/rtmpobjectencoding\/hashvalue"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func hash(into: inout Hasher)","path":"\/documentation\/haishinkit\/rtmpobjectencoding\/hash(into:)"}],"title":"RawRepresentable Implementations","type":"symbol","path":"\/documentation\/haishinkit\/rtmpobjectencoding\/rawrepresentable-implementations"}]},{"title":"Extended Modules","type":"groupMarker"},{"title":"CoreMedia","type":"extension","path":"\/documentation\/haishinkit\/coremedia","children":[{"type":"groupMarker","title":"Extended Classes"},{"type":"extension","path":"\/documentation\/haishinkit\/coremedia\/cmformatdescription","title":"CMFormatDescription","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/coremedia\/cmformatdescription\/iscompressed","title":"var isCompressed: Bool","type":"property"}]}]}],"type":"module","title":"HaishinKit"},{"path":"\/documentation\/moqthaishinkit","children":[{"type":"groupMarker","title":"Classes"},{"type":"class","path":"\/documentation\/moqthaishinkit\/moqtconnection","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init(MoQTSetupRole, requestTimeOut: UInt64)","path":"\/documentation\/moqthaishinkit\/moqtconnection\/init(_:requesttimeout:)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var objectStream: AsyncStream<MoQTObject>","path":"\/documentation\/moqthaishinkit\/moqtconnection\/objectstream"},{"type":"property","title":"let requestTimeout: UInt64","path":"\/documentation\/moqthaishinkit\/moqtconnection\/requesttimeout"},{"type":"property","title":"let role: MoQTSetupRole","path":"\/documentation\/moqthaishinkit\/moqtconnection\/role"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func annouce([String], authInfo: String?) async throws -> Result<MoQTAnnounceOk, MoQTAnnounceError>","path":"\/documentation\/moqthaishinkit\/moqtconnection\/annouce(_:authinfo:)"},{"type":"method","title":"func close() async","path":"\/documentation\/moqthaishinkit\/moqtconnection\/close()"},{"type":"method","title":"func connect(String) async throws -> MoQTServerSetup","path":"\/documentation\/moqthaishinkit\/moqtconnection\/connect(_:)"},{"type":"method","title":"func send([MoQTObject], header: MoQTStreamHeaderSubgroup) async throws","path":"\/documentation\/moqthaishinkit\/moqtconnection\/send(_:header:)"},{"type":"method","title":"func subscribe([String], name: String, authInfo: String?) async throws -> Result<MoQTSubscribeOk, MoQTSubscribeError>","path":"\/documentation\/moqthaishinkit\/moqtconnection\/subscribe(_:name:authinfo:)"},{"type":"method","title":"func subscribeAnnouces([String], authInfo: String?) async throws -> Result<MoQTSubscribeAnnouncesOk, MoQTSubscribeAnnouncesError>","path":"\/documentation\/moqthaishinkit\/moqtconnection\/subscribeannouces(_:authinfo:)"},{"type":"groupMarker","title":"Type Properties"},{"type":"property","title":"static let defaultPort: Int","path":"\/documentation\/moqthaishinkit\/moqtconnection\/defaultport"},{"type":"property","title":"static let defaultRequestTimeout: UInt64","path":"\/documentation\/moqthaishinkit\/moqtconnection\/defaultrequesttimeout"},{"type":"property","title":"static let supportedProtocols: [String]","path":"\/documentation\/moqthaishinkit\/moqtconnection\/supportedprotocols"},{"type":"property","title":"static let supportedVersions: [MoQTVersion]","path":"\/documentation\/moqthaishinkit\/moqtconnection\/supportedversions"},{"type":"groupMarker","title":"Enumerations"},{"type":"enum","title":"MoQTConnection.Error","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/error\/connectiontimedout","type":"case","title":"case connectionTimedOut"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/error\/invalidstate","type":"case","title":"case invalidState"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/error\/requesttimedout","type":"case","title":"case requestTimedOut"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/error\/socketerroroccurred(_:)","type":"case","title":"case socketErrorOccurred(any Error)"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/error\/unknownresponse","type":"case","title":"case unknownResponse"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/error\/unsupportedcommand(_:)","type":"case","title":"case unsupportedCommand(String)"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/error\/error-implementations","type":"symbol","title":"Error Implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var localizedDescription: String","type":"property","path":"\/documentation\/moqthaishinkit\/moqtconnection\/error\/localizeddescription"}]}],"path":"\/documentation\/moqthaishinkit\/moqtconnection\/error"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","title":"Actor Implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method","path":"\/documentation\/moqthaishinkit\/moqtconnection\/assertisolated(_:file:line:)"},{"title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","type":"method","path":"\/documentation\/moqthaishinkit\/moqtconnection\/assumeisolated(_:file:line:)"},{"title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method","path":"\/documentation\/moqthaishinkit\/moqtconnection\/preconditionisolated(_:file:line:)"}],"path":"\/documentation\/moqthaishinkit\/moqtconnection\/actor-implementations"}],"title":"MoQTConnection"},{"type":"groupMarker","title":"Protocols"},{"type":"protocol","path":"\/documentation\/moqthaishinkit\/moqtcontrolmessage","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var payload: Data","path":"\/documentation\/moqthaishinkit\/moqtcontrolmessage\/payload","type":"property"},{"title":"var type: MoQTMessageType","path":"\/documentation\/moqthaishinkit\/moqtcontrolmessage\/type","type":"property"}],"title":"MoQTControlMessage"},{"type":"groupMarker","title":"Structures"},{"type":"struct","path":"\/documentation\/moqthaishinkit\/moqtannounce","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtannounce\/payload","title":"var payload: Data"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtannounce\/subscribeparameters","title":"let subscribeParameters: [MoQTVersionSpecificParameter]"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtannounce\/tracknamespace","title":"let trackNamespace: [String]"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtannounce\/type","title":"let type: MoQTMessageType"}],"title":"MoQTAnnounce"},{"type":"struct","path":"\/documentation\/moqthaishinkit\/moqtannounceerror","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"let code: Int","path":"\/documentation\/moqthaishinkit\/moqtannounceerror\/code","type":"property"},{"title":"var payload: Data","path":"\/documentation\/moqthaishinkit\/moqtannounceerror\/payload","type":"property"},{"title":"let reasonPhrase: String","path":"\/documentation\/moqthaishinkit\/moqtannounceerror\/reasonphrase","type":"property"},{"title":"let trackNamespace: [String]","path":"\/documentation\/moqthaishinkit\/moqtannounceerror\/tracknamespace","type":"property"},{"title":"let type: MoQTMessageType","path":"\/documentation\/moqthaishinkit\/moqtannounceerror\/type","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Error Implementations","path":"\/documentation\/moqthaishinkit\/moqtannounceerror\/error-implementations","type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var localizedDescription: String","path":"\/documentation\/moqthaishinkit\/moqtannounceerror\/localizeddescription","type":"property"}]}],"title":"MoQTAnnounceError"},{"type":"struct","path":"\/documentation\/moqthaishinkit\/moqtannounceok","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtannounceok\/payload","title":"var payload: Data","type":"property"},{"path":"\/documentation\/moqthaishinkit\/moqtannounceok\/tracknamespace","title":"let trackNamespace: [String]","type":"property"},{"path":"\/documentation\/moqthaishinkit\/moqtannounceok\/type","title":"let type: MoQTMessageType","type":"property"}],"title":"MoQTAnnounceOk"},{"type":"struct","path":"\/documentation\/moqthaishinkit\/moqtgoaway","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"let newSessionURI: String","path":"\/documentation\/moqthaishinkit\/moqtgoaway\/newsessionuri","type":"property"},{"title":"var payload: Data","path":"\/documentation\/moqthaishinkit\/moqtgoaway\/payload","type":"property"},{"title":"let type: MoQTMessageType","path":"\/documentation\/moqthaishinkit\/moqtgoaway\/type","type":"property"}],"title":"MoQTGoaway"},{"type":"struct","path":"\/documentation\/moqthaishinkit\/moqtobject","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(id: Int, status: Int?, data: Data)","path":"\/documentation\/moqthaishinkit\/moqtobject\/init(id:status:data:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let data: Data","path":"\/documentation\/moqthaishinkit\/moqtobject\/data","type":"property"},{"title":"let id: Int","path":"\/documentation\/moqthaishinkit\/moqtobject\/id","type":"property"},{"title":"let status: Int?","path":"\/documentation\/moqthaishinkit\/moqtobject\/status","type":"property"}],"title":"MoQTObject"},{"type":"struct","path":"\/documentation\/moqthaishinkit\/moqtserversetup","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtserversetup\/payload","title":"var payload: Data"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtserversetup\/selectedversion","title":"let selectedVersion: Int"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtserversetup\/setupparameters","title":"let setupParameters: [MoQTSetupParameter]"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtserversetup\/type","title":"let type: MoQTMessageType"}],"title":"MoQTServerSetup"},{"type":"struct","path":"\/documentation\/moqthaishinkit\/moqtsetupparameter","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"let key: MoQTSetupParameterType","path":"\/documentation\/moqthaishinkit\/moqtsetupparameter\/key","type":"property"},{"title":"let value: any Sendable","path":"\/documentation\/moqthaishinkit\/moqtsetupparameter\/value","type":"property"}],"title":"MoQTSetupParameter"},{"type":"struct","path":"\/documentation\/moqthaishinkit\/moqtstreamheadersubgroup","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/moqthaishinkit\/moqtstreamheadersubgroup\/init(trackalias:groupid:subgroupid:publisherpriority:)","type":"init","title":"init(trackAlias: Int, groupId: Int, subgroupId: Int, publisherPriority: Int)"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/moqthaishinkit\/moqtstreamheadersubgroup\/groupid","type":"property","title":"let groupId: Int"},{"path":"\/documentation\/moqthaishinkit\/moqtstreamheadersubgroup\/payload","type":"property","title":"var payload: Data"},{"path":"\/documentation\/moqthaishinkit\/moqtstreamheadersubgroup\/publisherpriority","type":"property","title":"let publisherPriority: Int"},{"path":"\/documentation\/moqthaishinkit\/moqtstreamheadersubgroup\/subgroupid","type":"property","title":"let subgroupId: Int"},{"path":"\/documentation\/moqthaishinkit\/moqtstreamheadersubgroup\/trackalias","type":"property","title":"let trackAlias: Int"},{"path":"\/documentation\/moqthaishinkit\/moqtstreamheadersubgroup\/type","type":"property","title":"let type: MoQTDataStreamType"}],"title":"MoQTStreamHeaderSubgroup"},{"type":"struct","path":"\/documentation\/moqthaishinkit\/moqtsubscribe","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"let endGroup: Int?","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/endgroup","type":"property"},{"title":"let endObject: Int?","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/endobject","type":"property"},{"title":"let filterType: MoQTSubscribe.FilterType","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.property","type":"property"},{"title":"let groupOrder: MoQTSubscribe.GroupOrder","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.property","type":"property"},{"title":"var payload: Data","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/payload","type":"property"},{"title":"let startGroup: Int?","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/startgroup","type":"property"},{"title":"let startObject: Int?","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/startobject","type":"property"},{"title":"let subscribeId: Int","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/subscribeid","type":"property"},{"title":"let subscribeParameters: [MoQTVersionSpecificParameter]","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/subscribeparameters","type":"property"},{"title":"let subscribePriority: Int","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/subscribepriority","type":"property"},{"title":"let trackAlias: Int","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/trackalias","type":"property"},{"title":"let trackName: String","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/trackname","type":"property"},{"title":"let trackNamespace: [String]","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/tracknamespace","type":"property"},{"title":"let type: MoQTMessageType","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/type","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"title":"MoQTSubscribe.FilterType","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum","type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case absoluteRange","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/absoluterange","type":"case"},{"title":"case absoluteStart","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/absolutestart","type":"case"},{"title":"case latestGroup","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/latestgroup","type":"case"},{"title":"case latestObject","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/latestobject","type":"case"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: Int)","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/init(rawvalue:)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/equatable-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"}]},{"title":"RawRepresentable Implementations","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/rawrepresentable-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var hashValue: Int","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/hashvalue"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func hash(into: inout Hasher)","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/hash(into:)"}]}]},{"title":"MoQTSubscribe.GroupOrder","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum","type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/ascending","title":"case ascending","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/descending","title":"case descending","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/original","title":"case original","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"}]},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/hashvalue","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func hash(into: inout Hasher)","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/hash(into:)","type":"method"}]}]}],"title":"MoQTSubscribe"},{"type":"struct","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounces","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounces\/parameters","type":"property","title":"let parameters: [MoQTVersionSpecificParameter]"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounces\/payload","type":"property","title":"var payload: Data"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounces\/tracknamespaceprefix","type":"property","title":"let trackNamespacePrefix: [String]"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounces\/type","type":"property","title":"let type: MoQTMessageType"}],"title":"MoQTSubscribeAnnounces"},{"type":"struct","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounceserror","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"let errorCode: Int","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounceserror\/errorcode"},{"type":"property","title":"var payload: Data","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounceserror\/payload"},{"type":"property","title":"let reasonPhrase: String","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounceserror\/reasonphrase"},{"type":"property","title":"let trackNamespacePrefix: [String]","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounceserror\/tracknamespaceprefix"},{"type":"property","title":"let type: MoQTMessageType","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounceserror\/type"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","title":"Error Implementations","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounceserror\/error-implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var localizedDescription: String","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounceserror\/localizeddescription","type":"property"}]}],"title":"MoQTSubscribeAnnouncesError"},{"type":"struct","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannouncesok","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeannouncesok\/payload","title":"var payload: Data","type":"property"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeannouncesok\/tracknamespaceprefix","title":"let trackNamespacePrefix: [String]","type":"property"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeannouncesok\/type","title":"let type: MoQTMessageType","type":"property"}],"title":"MoQTSubscribeAnnouncesOk"},{"type":"struct","path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"let code: Int","type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror\/code"},{"title":"var payload: Data","type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror\/payload"},{"title":"let reasonPhrase: String","type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror\/reasonphrase"},{"title":"let subscribeId: Int","type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror\/subscribeid"},{"title":"let trackAlias: Int","type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror\/trackalias"},{"title":"let type: MoQTMessageType","type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror\/type"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Error Implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror\/localizeddescription","type":"property","title":"var localizedDescription: String"}],"path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror\/error-implementations"}],"title":"MoQTSubscribeError"},{"type":"struct","path":"\/documentation\/moqthaishinkit\/moqtsubscribeok","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"let contentExists: Bool","type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/contentexists"},{"title":"let expires: Int","type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/expires"},{"title":"let groupOrder: MoQTSubscribe.GroupOrder","type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/grouporder"},{"title":"let largestGroupId: Int?","type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/largestgroupid"},{"title":"let largestObjectId: Int?","type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/largestobjectid"},{"title":"var payload: Data","type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/payload"},{"title":"let subscribeId: Int","type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/subscribeid"},{"title":"let subscribeParameters: [MoQTVersionSpecificParameter]","type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/subscribeparameters"},{"title":"let type: MoQTMessageType","type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/type"}],"title":"MoQTSubscribeOk"},{"type":"struct","path":"\/documentation\/moqthaishinkit\/moqtversionspecificparameter","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"let key: MoQTVersionSpecificType","path":"\/documentation\/moqthaishinkit\/moqtversionspecificparameter\/key","type":"property"},{"title":"let value: any Sendable","path":"\/documentation\/moqthaishinkit\/moqtversionspecificparameter\/value","type":"property"}],"title":"MoQTVersionSpecificParameter"},{"type":"groupMarker","title":"Enumerations"},{"type":"enum","path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case fetchHeader","type":"case","path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/fetchheader"},{"title":"case objectDatagram","type":"case","path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/objectdatagram"},{"title":"case streamHeaderSubgroup","type":"case","path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/streamheadersubgroup"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: Int)","type":"init","path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/init(rawvalue:)"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","type":"symbol","path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/equatable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}]},{"title":"RawRepresentable Implementations","type":"symbol","path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/rawrepresentable-implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/hashvalue","type":"property","title":"var hashValue: Int"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/hash(into:)","type":"method","title":"func hash(into: inout Hasher)"}]}],"title":"MoQTDataStreamType"},{"type":"enum","path":"\/documentation\/moqthaishinkit\/moqtmessagetype","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case announce","type":"case","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/announce"},{"title":"case announceCancel","type":"case","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/announcecancel"},{"title":"case announceError","type":"case","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/announceerror"},{"title":"case announceOk","type":"case","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/announceok"},{"title":"case clientSetup","type":"case","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/clientsetup"},{"title":"case goaway","type":"case","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/goaway"},{"title":"case serverSetup","type":"case","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/serversetup"},{"title":"case subscribe","type":"case","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/subscribe"},{"title":"case subscribeAnnounuces","type":"case","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/subscribeannounuces"},{"title":"case subscribeAnnounucesError","type":"case","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/subscribeannounuceserror"},{"title":"case subscribeAnnounucesOk","type":"case","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/subscribeannounucesok"},{"title":"case subscribeDone","type":"case","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/subscribedone"},{"title":"case subscribeError","type":"case","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/subscribeerror"},{"title":"case subscribeOk","type":"case","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/subscribeok"},{"title":"case subscribeUpdate","type":"case","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/subscribeupdate"},{"title":"case trackStatus","type":"case","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/trackstatus"},{"title":"case trackStatusRequest","type":"case","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/trackstatusrequest"},{"title":"case unannounce","type":"case","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/unannounce"},{"title":"case unsubscribe","type":"case","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/unsubscribe"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: Int)","type":"init","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/init(rawvalue:)"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}],"title":"Equatable Implementations","type":"symbol","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/equatable-implementations"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/hashvalue","type":"property","title":"var hashValue: Int"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/hash(into:)","type":"method","title":"func hash(into: inout Hasher)"}],"title":"RawRepresentable Implementations","type":"symbol","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/rawrepresentable-implementations"}],"title":"MoQTMessageType"},{"type":"enum","path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case maxSubscribeId","path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/maxsubscribeid","type":"case"},{"title":"case path","path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/path","type":"case"},{"title":"case role","path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/role","type":"case"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: Int)","path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/init(rawvalue:)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/!=(_:_:)","type":"op"}],"title":"Equatable Implementations","path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/equatable-implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/hashvalue","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func hash(into: inout Hasher)","path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/hash(into:)","type":"method"}],"title":"RawRepresentable Implementations","path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/rawrepresentable-implementations","type":"symbol"}],"title":"MoQTSetupParameterType"},{"type":"enum","path":"\/documentation\/moqthaishinkit\/moqtsetuprole","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"type":"case","title":"case pubSub","path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/pubsub"},{"type":"case","title":"case publisher","path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/publisher"},{"type":"case","title":"case subscriber","path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/subscriber"},{"title":"Initializers","type":"groupMarker"},{"type":"init","title":"init?(rawValue: Int)","path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/init(rawvalue:)"},{"title":"Default Implementations","type":"groupMarker"},{"type":"symbol","title":"Equatable Implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/!=(_:_:)"}],"path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/equatable-implementations"},{"type":"symbol","title":"RawRepresentable Implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/hashvalue","type":"property","title":"var hashValue: Int"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/hash(into:)","type":"method","title":"func hash(into: inout Hasher)"}],"path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/rawrepresentable-implementations"}],"title":"MoQTSetupRole"},{"type":"enum","path":"\/documentation\/moqthaishinkit\/moqtversion","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case draft01","type":"case","path":"\/documentation\/moqthaishinkit\/moqtversion\/draft01"},{"title":"case draft02","type":"case","path":"\/documentation\/moqthaishinkit\/moqtversion\/draft02"},{"title":"case draft03","type":"case","path":"\/documentation\/moqthaishinkit\/moqtversion\/draft03"},{"title":"case draft04","type":"case","path":"\/documentation\/moqthaishinkit\/moqtversion\/draft04"},{"title":"case draft05","type":"case","path":"\/documentation\/moqthaishinkit\/moqtversion\/draft05"},{"title":"case draft06","type":"case","path":"\/documentation\/moqthaishinkit\/moqtversion\/draft06"},{"title":"case draft07","type":"case","path":"\/documentation\/moqthaishinkit\/moqtversion\/draft07"},{"title":"case draft07Exp","type":"case","path":"\/documentation\/moqthaishinkit\/moqtversion\/draft07exp"},{"title":"case draft07Exp2","type":"case","path":"\/documentation\/moqthaishinkit\/moqtversion\/draft07exp2"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: Int)","type":"init","path":"\/documentation\/moqthaishinkit\/moqtversion\/init(rawvalue:)"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/moqthaishinkit\/moqtversion\/!=(_:_:)"}],"path":"\/documentation\/moqthaishinkit\/moqtversion\/equatable-implementations"},{"title":"RawRepresentable Implementations","type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtversion\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtversion\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/moqthaishinkit\/moqtversion\/rawrepresentable-implementations"}],"title":"MoQTVersion"},{"type":"enum","path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/authorizationinfo","title":"case authorizationInfo"},{"type":"case","path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/deliverytimeout","title":"case deliveryTimeout"},{"type":"case","path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/maxcacheduration","title":"case maxCacheDuration"},{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/init(rawvalue:)","title":"init?(rawValue: Int)"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/!=(_:_:)"}],"path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/equatable-implementations","title":"Equatable Implementations"},{"type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/rawrepresentable-implementations","title":"RawRepresentable Implementations"}],"title":"MoQTVersionSpecificType"}],"type":"module","title":"MoQTHaishinKit"},{"path":"\/documentation\/srthaishinkit","children":[{"title":"Classes","type":"groupMarker"},{"title":"SRTConnection","type":"class","path":"\/documentation\/srthaishinkit\/srtconnection","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/srthaishinkit\/srtconnection\/init()","title":"init()"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtconnection\/connected","title":"var connected: Bool"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtconnection\/performancedata","title":"var performanceData: SRTPerformanceData?"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtconnection\/uri","title":"var uri: URL?"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/srthaishinkit\/srtconnection\/close()","title":"func close() async"},{"type":"method","path":"\/documentation\/srthaishinkit\/srtconnection\/connect(_:)","title":"func connect(URL?) async throws"},{"type":"method","path":"\/documentation\/srthaishinkit\/srtconnection\/getsocketoption(_:)","title":"func getSocketOption(SRTSocketOption.Name) async throws -> SRTSocketOption?"},{"type":"method","path":"\/documentation\/srthaishinkit\/srtconnection\/open(_:mode:)","title":"func open(URL?, mode: SRTMode) async throws"},{"type":"method","path":"\/documentation\/srthaishinkit\/srtconnection\/setsocketoption(_:)","title":"func setSocketOption(SRTSocketOption) async throws"},{"type":"groupMarker","title":"Type Properties"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtconnection\/version","title":"static let version: String"},{"type":"groupMarker","title":"Enumerations"},{"type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/srthaishinkit\/srtconnection\/error\/failedtoconnect(_:reson:)","title":"case failedToConnect(String, reson: Int32)","type":"case"},{"path":"\/documentation\/srthaishinkit\/srtconnection\/error\/invalidstate","title":"case invalidState","type":"case"},{"path":"\/documentation\/srthaishinkit\/srtconnection\/error\/unsupporteduri(_:)","title":"case unsupportedUri(URL?)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/srthaishinkit\/srtconnection\/error\/error-implementations","title":"Error Implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/srthaishinkit\/srtconnection\/error\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"type":"symbol"}],"path":"\/documentation\/srthaishinkit\/srtconnection\/error","title":"SRTConnection.Error"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/srthaishinkit\/srtconnection\/assertisolated(_:file:line:)","type":"method","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)"},{"path":"\/documentation\/srthaishinkit\/srtconnection\/assumeisolated(_:file:line:)","type":"method","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T"},{"path":"\/documentation\/srthaishinkit\/srtconnection\/preconditionisolated(_:file:line:)","type":"method","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)"}],"path":"\/documentation\/srthaishinkit\/srtconnection\/actor-implementations","title":"Actor Implementations"}]},{"title":"SRTLogger","type":"class","path":"\/documentation\/srthaishinkit\/srtlogger","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var functionalAreas: Set<SRTLogFunctionalArea>","path":"\/documentation\/srthaishinkit\/srtlogger\/functionalareas","type":"property"},{"title":"var level: SRTLogLevel","path":"\/documentation\/srthaishinkit\/srtlogger\/level","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func setFunctionalAreas(Set<SRTLogFunctionalArea>)","path":"\/documentation\/srthaishinkit\/srtlogger\/setfunctionalareas(_:)","type":"method"},{"title":"func setLevel(SRTLogLevel)","path":"\/documentation\/srthaishinkit\/srtlogger\/setlevel(_:)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"title":"static let shared: SRTLogger","path":"\/documentation\/srthaishinkit\/srtlogger\/shared","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Actor Implementations","children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/srthaishinkit\/srtlogger\/assertisolated(_:file:line:)","type":"method","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)"},{"path":"\/documentation\/srthaishinkit\/srtlogger\/assumeisolated(_:file:line:)","type":"method","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T"},{"path":"\/documentation\/srthaishinkit\/srtlogger\/preconditionisolated(_:file:line:)","type":"method","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)"}],"path":"\/documentation\/srthaishinkit\/srtlogger\/actor-implementations","type":"symbol"}]},{"title":"SRTStream","type":"class","path":"\/documentation\/srthaishinkit\/srtstream","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init(connection: SRTConnection)","path":"\/documentation\/srthaishinkit\/srtstream\/init(connection:)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var audioTrackId: UInt8?","path":"\/documentation\/srthaishinkit\/srtstream\/audiotrackid"},{"type":"property","title":"var readyState: HKStreamReadyState","path":"\/documentation\/srthaishinkit\/srtstream\/readystate"},{"type":"property","title":"var videoTrackId: UInt8?","path":"\/documentation\/srthaishinkit\/srtstream\/videotrackid"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func close() async","path":"\/documentation\/srthaishinkit\/srtstream\/close()"},{"type":"method","title":"func play(String?) async","path":"\/documentation\/srthaishinkit\/srtstream\/play(_:)"},{"type":"method","title":"func publish(String?) async","path":"\/documentation\/srthaishinkit\/srtstream\/publish(_:)"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method","path":"\/documentation\/srthaishinkit\/srtstream\/assertisolated(_:file:line:)"},{"title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","type":"method","path":"\/documentation\/srthaishinkit\/srtstream\/assumeisolated(_:file:line:)"},{"title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method","path":"\/documentation\/srthaishinkit\/srtstream\/preconditionisolated(_:file:line:)"}],"type":"symbol","title":"Actor Implementations","path":"\/documentation\/srthaishinkit\/srtstream\/actor-implementations"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtstream\/audiosettings","title":"var audioSettings: AudioCodecSettings"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtstream\/soundtransform","title":"var soundTransform: SoundTransform?"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtstream\/videosettings","title":"var videoSettings: VideoCodecSettings"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/srthaishinkit\/srtstream\/addoutput(_:)","title":"func addOutput(some HKStreamOutput)"},{"type":"method","path":"\/documentation\/srthaishinkit\/srtstream\/append(_:)","title":"func append(CMSampleBuffer)"},{"type":"method","path":"\/documentation\/srthaishinkit\/srtstream\/append(_:when:)","title":"func append(AVAudioBuffer, when: AVAudioTime)"},{"type":"method","path":"\/documentation\/srthaishinkit\/srtstream\/attachaudioplayer(_:)","title":"func attachAudioPlayer(AudioPlayer?) async"},{"type":"method","path":"\/documentation\/srthaishinkit\/srtstream\/dispatch(_:)","title":"func dispatch(NetworkMonitorEvent) async"},{"type":"method","path":"\/documentation\/srthaishinkit\/srtstream\/removeoutput(_:)","title":"func removeOutput(some HKStreamOutput)"},{"type":"method","path":"\/documentation\/srthaishinkit\/srtstream\/setaudiosettings(_:)","title":"func setAudioSettings(AudioCodecSettings)"},{"type":"method","path":"\/documentation\/srthaishinkit\/srtstream\/setbitratestorategy(_:)","title":"func setBitrateStorategy((some HKStreamBitRateStrategy)?)"},{"type":"method","path":"\/documentation\/srthaishinkit\/srtstream\/setsoundtransform(_:)","title":"func setSoundTransform(SoundTransform) async"},{"type":"method","path":"\/documentation\/srthaishinkit\/srtstream\/setvideoinputbuffercounts(_:)","title":"func setVideoInputBufferCounts(Int)"},{"type":"method","path":"\/documentation\/srthaishinkit\/srtstream\/setvideosettings(_:)","title":"func setVideoSettings(VideoCodecSettings)"}],"type":"symbol","title":"HKStream Implementations","path":"\/documentation\/srthaishinkit\/srtstream\/hkstream-implementations"},{"children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/srthaishinkit\/srtstream\/mixer(_:didoutput:)","type":"method","title":"func mixer(MediaMixer, didOutput: CMSampleBuffer)"},{"path":"\/documentation\/srthaishinkit\/srtstream\/mixer(_:didoutput:when:)","type":"method","title":"func mixer(MediaMixer, didOutput: AVAudioPCMBuffer, when: AVAudioTime)"},{"path":"\/documentation\/srthaishinkit\/srtstream\/selecttrack(_:mediatype:)","type":"method","title":"func selectTrack(UInt8?, mediaType: CMFormatDescription.MediaType)"}],"type":"symbol","title":"MediaMixerOutput Implementations","path":"\/documentation\/srthaishinkit\/srtstream\/mediamixeroutput-implementations"}]},{"title":"Structures","type":"groupMarker"},{"title":"SRTPerformanceData","type":"struct","path":"\/documentation\/srthaishinkit\/srtperformancedata","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"let byteAvailRcvBuf: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/byteavailrcvbuf"},{"type":"property","title":"let byteAvailSndBuf: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/byteavailsndbuf"},{"type":"property","title":"let byteMSS: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytemss"},{"type":"property","title":"let byteRcvBuf: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytercvbuf"},{"type":"property","title":"let byteRcvDrop: UInt64","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytercvdrop"},{"type":"property","title":"let byteRcvDropTotal: UInt64","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytercvdroptotal"},{"type":"property","title":"let byteRcvLoss: UInt64","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytercvloss"},{"type":"property","title":"let byteRcvLossTotal: UInt64","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytercvlosstotal"},{"type":"property","title":"let byteRcvUndecrypt: UInt64","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytercvundecrypt"},{"type":"property","title":"let byteRcvUndecryptTotal: UInt64","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytercvundecrypttotal"},{"type":"property","title":"let byteRecv: UInt64","path":"\/documentation\/srthaishinkit\/srtperformancedata\/byterecv"},{"type":"property","title":"let byteRecvTotal: UInt64","path":"\/documentation\/srthaishinkit\/srtperformancedata\/byterecvtotal"},{"type":"property","title":"let byteRetrans: UInt64","path":"\/documentation\/srthaishinkit\/srtperformancedata\/byteretrans"},{"type":"property","title":"let byteRetransTotal: UInt64","path":"\/documentation\/srthaishinkit\/srtperformancedata\/byteretranstotal"},{"type":"property","title":"let byteSent: UInt64","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytesent"},{"type":"property","title":"let byteSentTotal: UInt64","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytesenttotal"},{"type":"property","title":"let byteSndBuf: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytesndbuf"},{"type":"property","title":"let byteSndDrop: UInt64","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytesnddrop"},{"type":"property","title":"let byteSndDropTotal: UInt64","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytesnddroptotal"},{"type":"property","title":"let mbpsBandwidth: Double","path":"\/documentation\/srthaishinkit\/srtperformancedata\/mbpsbandwidth"},{"type":"property","title":"let mbpsMaxBW: Double","path":"\/documentation\/srthaishinkit\/srtperformancedata\/mbpsmaxbw"},{"type":"property","title":"let mbpsRecvRate: Double","path":"\/documentation\/srthaishinkit\/srtperformancedata\/mbpsrecvrate"},{"type":"property","title":"let mbpsSendRate: Double","path":"\/documentation\/srthaishinkit\/srtperformancedata\/mbpssendrate"},{"type":"property","title":"let msRTT: Double","path":"\/documentation\/srthaishinkit\/srtperformancedata\/msrtt"},{"type":"property","title":"let msRcvBuf: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/msrcvbuf"},{"type":"property","title":"let msRcvTsbPdDelay: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/msrcvtsbpddelay"},{"type":"property","title":"let msSndBuf: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/mssndbuf"},{"type":"property","title":"let msSndTsbPdDelay: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/mssndtsbpddelay"},{"type":"property","title":"let msTimeStamp: Int64","path":"\/documentation\/srthaishinkit\/srtperformancedata\/mstimestamp"},{"type":"property","title":"let pktCongestionWindow: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktcongestionwindow"},{"type":"property","title":"let pktFlightSize: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktflightsize"},{"type":"property","title":"let pktFlowWindow: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktflowwindow"},{"type":"property","title":"let pktRcvAvgBelatedTime: Double","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvavgbelatedtime"},{"type":"property","title":"let pktRcvBelated: Int64","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvbelated"},{"type":"property","title":"let pktRcvBuf: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvbuf"},{"type":"property","title":"let pktRcvDrop: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvdrop"},{"type":"property","title":"let pktRcvDropTotal: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvdroptotal"},{"type":"property","title":"let pktRcvFilterExtra: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvfilterextra"},{"type":"property","title":"let pktRcvFilterExtraTotal: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvfilterextratotal"},{"type":"property","title":"let pktRcvFilterLoss: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvfilterloss"},{"type":"property","title":"let pktRcvFilterLossTotal: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvfilterlosstotal"},{"type":"property","title":"let pktRcvFilterSupply: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvfiltersupply"},{"type":"property","title":"let pktRcvFilterSupplyTotal: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvfiltersupplytotal"},{"type":"property","title":"let pktRcvLoss: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvloss"},{"type":"property","title":"let pktRcvLossTotal: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvlosstotal"},{"type":"property","title":"let pktRcvRetrans: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvretrans"},{"type":"property","title":"let pktRcvUndecrypt: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvundecrypt"},{"type":"property","title":"let pktRcvUndecryptTotal: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvundecrypttotal"},{"type":"property","title":"let pktRecv: Int64","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrecv"},{"type":"property","title":"let pktRecvACK: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrecvack"},{"type":"property","title":"let pktRecvACKTotal: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrecvacktotal"},{"type":"property","title":"let pktRecvNAK: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrecvnak"},{"type":"property","title":"let pktRecvNAKTotal: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrecvnaktotal"},{"type":"property","title":"let pktRecvTotal: Int64","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrecvtotal"},{"type":"property","title":"let pktReorderDistance: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktreorderdistance"},{"type":"property","title":"let pktReorderTolerance: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktreordertolerance"},{"type":"property","title":"let pktRetrans: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktretrans"},{"type":"property","title":"let pktRetransTotal: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktretranstotal"},{"type":"property","title":"let pktSent: Int64","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsent"},{"type":"property","title":"let pktSentACK: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsentack"},{"type":"property","title":"let pktSentACKTotal: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsentacktotal"},{"type":"property","title":"let pktSentNAK: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsentnak"},{"type":"property","title":"let pktSentNAKTotal: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsentnaktotal"},{"type":"property","title":"let pktSentTotal: Int64","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsenttotal"},{"type":"property","title":"let pktSndBuf: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsndbuf"},{"type":"property","title":"let pktSndDrop: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsnddrop"},{"type":"property","title":"let pktSndDropTotal: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsnddroptotal"},{"type":"property","title":"let pktSndFilterExtra: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsndfilterextra"},{"type":"property","title":"let pktSndFilterExtraTotal: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsndfilterextratotal"},{"type":"property","title":"let pktSndLoss: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsndloss"},{"type":"property","title":"let pktSndLossTotal: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsndlosstotal"},{"type":"property","title":"let usPktSndPeriod: Double","path":"\/documentation\/srthaishinkit\/srtperformancedata\/uspktsndperiod"},{"type":"property","title":"let usSndDuration: Int64","path":"\/documentation\/srthaishinkit\/srtperformancedata\/ussndduration"},{"type":"property","title":"let usSndDurationTotal: Int64","path":"\/documentation\/srthaishinkit\/srtperformancedata\/ussnddurationtotal"}]},{"title":"SRTSocketOption","type":"struct","path":"\/documentation\/srthaishinkit\/srtsocketoption","children":[{"title":"Structures","type":"groupMarker"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/init(rawvalue:symbol:restriction:type:)","title":"init(rawValue: String, symbol: SRT_SOCKOPT, restriction: SRTSocketOption.Restriction?, type: SRTSocketOption.CType)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/rawvalue-swift.property","title":"let rawValue: String"},{"type":"groupMarker","title":"Type Aliases"},{"type":"typealias","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/rawvalue-swift.typealias","title":"SRTSocketOption.Name.RawValue"},{"type":"groupMarker","title":"Type Properties"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/bindtodevice","title":"static let bindtodevice: SRTSocketOption.Name"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/congestion","title":"static let congestion: SRTSocketOption.Name"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/conntimeo","title":"static let conntimeo: SRTSocketOption.Name"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/drifttracer","title":"static let drifttracer: SRTSocketOption.Name"},{"title":"static let enforcedencryption: SRTSocketOption.Name","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/enforcedencryption","type":"property"},{"title":"static let event: SRTSocketOption.Name","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/event","type":"property"},{"title":"static let fc: SRTSocketOption.Name","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/fc","type":"property"},{"title":"static let groupconnect: SRTSocketOption.Name","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/groupconnect","type":"property"},{"title":"static let groupminstabletimeo: SRTSocketOption.Name","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/groupminstabletimeo","type":"property"},{"title":"static let grouptype: SRTSocketOption.Name","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/grouptype","type":"property"},{"title":"static let inputbw: SRTSocketOption.Name","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/inputbw","type":"property"},{"title":"static let iptos: SRTSocketOption.Name","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/iptos","type":"property"},{"title":"static let ipttl: SRTSocketOption.Name","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/ipttl","type":"property"},{"title":"static let ipv6only: SRTSocketOption.Name","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/ipv6only","type":"property"},{"type":"property","title":"static let isn: SRTSocketOption.Name","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/isn"},{"type":"property","title":"static let kmpreannounce: SRTSocketOption.Name","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/kmpreannounce"},{"type":"property","title":"static let kmrefreshrate: SRTSocketOption.Name","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/kmrefreshrate"},{"type":"property","title":"static let kmstate: SRTSocketOption.Name","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/kmstate"},{"type":"property","title":"static let latency: SRTSocketOption.Name","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/latency"},{"type":"property","title":"static let lossmaxttl: SRTSocketOption.Name","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/lossmaxttl"},{"type":"property","title":"static let maxbw: SRTSocketOption.Name","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/maxbw"},{"type":"property","title":"static let messageapi: SRTSocketOption.Name","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/messageapi"},{"type":"property","title":"static let mininputbw: SRTSocketOption.Name","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/mininputbw"},{"type":"property","title":"static let minversion: SRTSocketOption.Name","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/minversion"},{"type":"property","title":"static let mss: SRTSocketOption.Name","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/mss"},{"type":"property","title":"static let nakreport: SRTSocketOption.Name","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/nakreport"},{"type":"property","title":"static let oheadbw: SRTSocketOption.Name","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/oheadbw"},{"type":"property","title":"static let packetfilter: SRTSocketOption.Name","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/packetfilter"},{"type":"property","title":"static let passphrase: SRTSocketOption.Name","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/passphrase"},{"type":"property","title":"static let pbkeylen: SRTSocketOption.Name","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/pbkeylen"},{"type":"property","title":"static let peeridletimeo: SRTSocketOption.Name","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/peeridletimeo"},{"type":"property","title":"static let peerlatency: SRTSocketOption.Name","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/peerlatency"},{"type":"property","title":"static let peerversion: SRTSocketOption.Name","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/peerversion"},{"type":"property","title":"static let rcvbuf: SRTSocketOption.Name","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/rcvbuf"},{"type":"property","title":"static let rcvdata: SRTSocketOption.Name","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/rcvdata"},{"type":"property","title":"static let rcvlatency: SRTSocketOption.Name","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/rcvlatency"},{"type":"property","title":"static let rcvsyn: SRTSocketOption.Name","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/rcvsyn"},{"type":"property","title":"static let rcvtimeo: SRTSocketOption.Name","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/rcvtimeo"},{"type":"property","title":"static let rendezvous: SRTSocketOption.Name","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/rendezvous"},{"type":"property","title":"static let retransmitalgo: SRTSocketOption.Name","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/retransmitalgo"},{"type":"property","title":"static let reuseaddr: SRTSocketOption.Name","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/reuseaddr"},{"type":"property","title":"static let sender: SRTSocketOption.Name","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/sender"},{"type":"property","title":"static let sndbuf: SRTSocketOption.Name","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/sndbuf"},{"type":"property","title":"static let snddata: SRTSocketOption.Name","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/snddata"},{"type":"property","title":"static let snddropdelay: SRTSocketOption.Name","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/snddropdelay"},{"type":"property","title":"static let sndkmstate: SRTSocketOption.Name","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/sndkmstate"},{"type":"property","title":"static let sndsyn: SRTSocketOption.Name","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/sndsyn"},{"type":"property","title":"static let sndtimeo: SRTSocketOption.Name","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/sndtimeo"},{"type":"property","title":"static let state: SRTSocketOption.Name","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/state"},{"type":"property","title":"static let streamid: SRTSocketOption.Name","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/streamid"},{"type":"property","title":"static let tlpktdrop: SRTSocketOption.Name","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/tlpktdrop"},{"type":"property","title":"static let transtype: SRTSocketOption.Name","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/transtype"},{"type":"property","title":"static let tsbpdmode: SRTSocketOption.Name","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/tsbpdmode"},{"type":"property","title":"static let udpRcvbuf: SRTSocketOption.Name","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/udprcvbuf"},{"type":"property","title":"static let udpSndbuf: SRTSocketOption.Name","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/udpsndbuf"},{"type":"property","title":"static let version: SRTSocketOption.Name","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/version"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: String)","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/init(rawvalue:)","type":"init"}],"type":"symbol","title":"RawRepresentable Implementations","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/rawrepresentable-implementations"}],"title":"SRTSocketOption.Name","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/init(name:value:)-3uyvp","title":"init(name: SRTSocketOption.Name, value: String) throws","type":"init"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/init(name:value:)-66kiu","title":"init(name: SRTSocketOption.Name, value: Int) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/boolvalue","title":"var boolValue: Bool","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/intvalue","title":"var intValue: Int","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.property","title":"let name: SRTSocketOption.Name","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/stringvalue","title":"var stringValue: String","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/ctype","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","path":"\/documentation\/srthaishinkit\/srtsocketoption\/ctype\/bool","title":"case bool"},{"type":"case","path":"\/documentation\/srthaishinkit\/srtsocketoption\/ctype\/int32","title":"case int32"},{"type":"case","path":"\/documentation\/srthaishinkit\/srtsocketoption\/ctype\/int64","title":"case int64"},{"type":"case","path":"\/documentation\/srthaishinkit\/srtsocketoption\/ctype\/string","title":"case string"},{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/srthaishinkit\/srtsocketoption\/ctype\/init(rawvalue:)","title":"init?(rawValue: Int)"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","path":"\/documentation\/srthaishinkit\/srtsocketoption\/ctype\/equatable-implementations","title":"Equatable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/srthaishinkit\/srtsocketoption\/ctype\/!=(_:_:)","type":"op"}]},{"type":"symbol","path":"\/documentation\/srthaishinkit\/srtsocketoption\/ctype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/ctype\/hashvalue","title":"var hashValue: Int","type":"property"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/ctype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}]}],"title":"SRTSocketOption.CType","type":"enum"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/restriction","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case post","path":"\/documentation\/srthaishinkit\/srtsocketoption\/restriction\/post","type":"case"},{"title":"case pre","path":"\/documentation\/srthaishinkit\/srtsocketoption\/restriction\/pre","type":"case"},{"title":"case preBind","path":"\/documentation\/srthaishinkit\/srtsocketoption\/restriction\/prebind","type":"case"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: Int)","path":"\/documentation\/srthaishinkit\/srtsocketoption\/restriction\/init(rawvalue:)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","path":"\/documentation\/srthaishinkit\/srtsocketoption\/restriction\/equatable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","path":"\/documentation\/srthaishinkit\/srtsocketoption\/restriction\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"}],"type":"symbol"},{"title":"RawRepresentable Implementations","path":"\/documentation\/srthaishinkit\/srtsocketoption\/restriction\/rawrepresentable-implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","path":"\/documentation\/srthaishinkit\/srtsocketoption\/restriction\/hashvalue","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func hash(into: inout Hasher)","path":"\/documentation\/srthaishinkit\/srtsocketoption\/restriction\/hash(into:)","type":"method"}],"type":"symbol"}],"title":"SRTSocketOption.Restriction","type":"enum"}]},{"title":"Enumerations","type":"groupMarker"},{"title":"SRTLogFunctionalArea","type":"enum","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case apiCtrl","type":"case","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/apictrl"},{"title":"case apiRecv","type":"case","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/apirecv"},{"title":"case apiSend","type":"case","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/apisend"},{"title":"case applog","type":"case","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/applog"},{"title":"case bstats","type":"case","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/bstats"},{"title":"case bufRecv","type":"case","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/bufrecv"},{"title":"case bufSend","type":"case","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/bufsend"},{"title":"case chanRecv","type":"case","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/chanrecv"},{"title":"case chnMgmt","type":"case","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/chnmgmt"},{"title":"case chnSend","type":"case","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/chnsend"},{"title":"case congest","type":"case","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/congest"},{"title":"case control","type":"case","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/control"},{"title":"case data","type":"case","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/data"},{"title":"case epollApi","type":"case","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/epollapi"},{"title":"case epollUpd","type":"case","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/epollupd"},{"title":"case general","type":"case","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/general"},{"title":"case grpMgmt","type":"case","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/grpmgmt"},{"title":"case grpRecv","type":"case","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/grprecv"},{"title":"case grpSend","type":"case","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/grpsend"},{"title":"case haicrypt","type":"case","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/haicrypt"},{"title":"case `internal`","type":"case","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/internal"},{"title":"case pfilter","type":"case","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/pfilter"},{"title":"case queCtrl","type":"case","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/quectrl"},{"title":"case queMgmt","type":"case","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/quemgmt"},{"title":"case queRecv","type":"case","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/querecv"},{"title":"case queSend","type":"case","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/quesend"},{"title":"case rsrc","type":"case","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/rsrc"},{"title":"case tsbpd","type":"case","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/tsbpd"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: Int32)","type":"init","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/init(rawvalue:)"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}],"title":"Equatable Implementations","type":"symbol","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/equatable-implementations"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/hashvalue","type":"property","title":"var hashValue: Int"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/hash(into:)","type":"method","title":"func hash(into: inout Hasher)"}],"title":"RawRepresentable Implementations","type":"symbol","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/rawrepresentable-implementations"}]},{"title":"SRTLogLevel","type":"enum","path":"\/documentation\/srthaishinkit\/srtloglevel","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/srthaishinkit\/srtloglevel\/crit","title":"case crit","type":"case"},{"path":"\/documentation\/srthaishinkit\/srtloglevel\/debug","title":"case debug","type":"case"},{"path":"\/documentation\/srthaishinkit\/srtloglevel\/error","title":"case error","type":"case"},{"path":"\/documentation\/srthaishinkit\/srtloglevel\/notice","title":"case notice","type":"case"},{"path":"\/documentation\/srthaishinkit\/srtloglevel\/warning","title":"case warning","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/srthaishinkit\/srtloglevel\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/srthaishinkit\/srtloglevel\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}]},{"title":"SRTMode","type":"enum","path":"\/documentation\/srthaishinkit\/srtmode","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","path":"\/documentation\/srthaishinkit\/srtmode\/caller","title":"case caller"},{"type":"case","path":"\/documentation\/srthaishinkit\/srtmode\/listener","title":"case listener"},{"type":"case","path":"\/documentation\/srthaishinkit\/srtmode\/rendezvous","title":"case rendezvous"},{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/srthaishinkit\/srtmode\/init(rawvalue:)","title":"init?(rawValue: String)"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/srthaishinkit\/srtmode\/!=(_:_:)"}],"type":"symbol","path":"\/documentation\/srthaishinkit\/srtmode\/equatable-implementations","title":"Equatable Implementations"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","path":"\/documentation\/srthaishinkit\/srtmode\/hashvalue","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func hash(into: inout Hasher)","path":"\/documentation\/srthaishinkit\/srtmode\/hash(into:)","type":"method"}],"type":"symbol","path":"\/documentation\/srthaishinkit\/srtmode\/rawrepresentable-implementations","title":"RawRepresentable Implementations"}]}],"type":"module","title":"SRTHaishinKit"}],"type":"module","path":"\/documentation","title":"HaishinKit"}]},"schemaVersion":{"minor":1,"major":0,"patch":2},"includedArchiveIdentifiers":["Logboard","HaishinKit","MoQTHaishinKit","SRTHaishinKit"]}