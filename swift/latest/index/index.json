{"includedArchiveIdentifiers":["Logboard","HaishinKit","SRTHaishinKit","RTMPHaishinKit","MoQTHaishinKit"],"schemaVersion":{"minor":1,"patch":2,"major":0},"interfaceLanguages":{"swift":[{"children":[{"title":"Logboard","type":"module","children":[{"type":"groupMarker","title":"Classes"},{"type":"class","title":"ConsoleAppender","path":"\/documentation\/logboard\/consoleappender","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/logboard\/consoleappender\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/logboard\/consoleappender\/append(_:level:format:arguments:file:function:line:)","title":"func append(LBLogger, level: LBLogger.Level, format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)","type":"method"},{"path":"\/documentation\/logboard\/consoleappender\/append(_:level:message:file:function:line:)","title":"func append(LBLogger, level: LBLogger.Level, message: [Any], file: StaticString, function: StaticString, line: Int)","type":"method"}]},{"type":"class","title":"LBLogger","path":"\/documentation\/logboard\/lblogger","children":[{"type":"groupMarker","title":"Structures"},{"children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init?(Data)","path":"\/documentation\/logboard\/lblogger\/data\/init(_:)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"let date: Date","path":"\/documentation\/logboard\/lblogger\/data\/date"},{"type":"property","title":"let file: String","path":"\/documentation\/logboard\/lblogger\/data\/file"},{"type":"property","title":"let function: String","path":"\/documentation\/logboard\/lblogger\/data\/function"},{"type":"property","title":"let identifier: String","path":"\/documentation\/logboard\/lblogger\/data\/identifier"},{"type":"property","title":"let level: LBLogger.Level","path":"\/documentation\/logboard\/lblogger\/data\/level"},{"type":"property","title":"let line: Int","path":"\/documentation\/logboard\/lblogger\/data\/line"},{"type":"property","title":"let message: String","path":"\/documentation\/logboard\/lblogger\/data\/message"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var description: String","type":"property","path":"\/documentation\/logboard\/lblogger\/data\/description"}],"type":"symbol","path":"\/documentation\/logboard\/lblogger\/data\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations"}],"type":"struct","title":"LBLogger.Data","path":"\/documentation\/logboard\/lblogger\/data"},{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init(String)","path":"\/documentation\/logboard\/lblogger\/init(_:)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var appender: any LBLoggerAppender","path":"\/documentation\/logboard\/lblogger\/appender"},{"type":"property","title":"let identifier: String","path":"\/documentation\/logboard\/lblogger\/identifier"},{"type":"property","title":"var level: LBLogger.Level","path":"\/documentation\/logboard\/lblogger\/level-swift.property"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func debug(Any..., file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/lblogger\/debug(_:file:function:line:)"},{"type":"method","title":"func debug(format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/lblogger\/debug(format:arguments:file:function:line:)"},{"type":"method","title":"func error(Any..., file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/lblogger\/error(_:file:function:line:)"},{"type":"method","title":"func error(format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/lblogger\/error(format:arguments:file:function:line:)"},{"type":"method","title":"func info(Any..., file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/lblogger\/info(_:file:function:line:)"},{"type":"method","title":"func info(format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/lblogger\/info(format:arguments:file:function:line:)"},{"type":"method","title":"func isEnabledFor(level: LBLogger.Level) -> Bool","path":"\/documentation\/logboard\/lblogger\/isenabledfor(level:)"},{"type":"method","title":"func trace(Any..., file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/lblogger\/trace(_:file:function:line:)"},{"type":"method","title":"func trace(format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/lblogger\/trace(format:arguments:file:function:line:)"},{"type":"method","title":"func warn(Any..., file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/lblogger\/warn(_:file:function:line:)"},{"type":"method","title":"func warn(format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/lblogger\/warn(format:arguments:file:function:line:)"},{"type":"groupMarker","title":"Type Properties"},{"type":"property","title":"static var dateFormatter: DateFormatter","path":"\/documentation\/logboard\/lblogger\/dateformatter"},{"type":"groupMarker","title":"Type Methods"},{"type":"method","title":"static func with(String) -> LBLogger","path":"\/documentation\/logboard\/lblogger\/with(_:)"},{"type":"groupMarker","title":"Enumerations"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/debug","title":"case debug","type":"case"},{"path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/error","title":"case error","type":"case"},{"path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/info","title":"case info","type":"case"},{"path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/trace","title":"case trace","type":"case"},{"path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/warn","title":"case warn","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/init(string:)","title":"init?(string: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/description","title":"var description: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/!=(_:_:)","type":"op"}],"path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/hashvalue","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func hash(into: inout Hasher)","path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/hash(into:)","type":"method"}],"path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"type":"enum","title":"LBLogger.Level","path":"\/documentation\/logboard\/lblogger\/level-swift.enum"}]},{"type":"class","title":"MultiAppender","path":"\/documentation\/logboard\/multiappender","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init()","path":"\/documentation\/logboard\/multiappender\/init()"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var appenders: [any LBLoggerAppender]","path":"\/documentation\/logboard\/multiappender\/appenders"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func append(LBLogger, level: LBLogger.Level, format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/multiappender\/append(_:level:format:arguments:file:function:line:)"},{"type":"method","title":"func append(LBLogger, level: LBLogger.Level, message: [Any], file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/multiappender\/append(_:level:message:file:function:line:)"}]},{"type":"class","title":"NullAppender","path":"\/documentation\/logboard\/nullappender","children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/logboard\/nullappender\/append(_:level:format:arguments:file:function:line:)","type":"method","title":"func append(LBLogger, level: LBLogger.Level, format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)"},{"path":"\/documentation\/logboard\/nullappender\/append(_:level:message:file:function:line:)","type":"method","title":"func append(LBLogger, level: LBLogger.Level, message: [Any], file: StaticString, function: StaticString, line: Int)"},{"type":"groupMarker","title":"Type Properties"},{"path":"\/documentation\/logboard\/nullappender\/shared","type":"property","title":"static let shared: NullAppender"}]},{"type":"class","title":"OSLoggerAppender","path":"\/documentation\/logboard\/osloggerappender","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/logboard\/osloggerappender\/init(sybsystem:category:)","type":"init","title":"init(sybsystem: String, category: String)"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/logboard\/osloggerappender\/append(_:level:format:arguments:file:function:line:)","type":"method","title":"func append(LBLogger, level: LBLogger.Level, format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)"},{"path":"\/documentation\/logboard\/osloggerappender\/append(_:level:message:file:function:line:)","type":"method","title":"func append(LBLogger, level: LBLogger.Level, message: [Any], file: StaticString, function: StaticString, line: Int)"}]},{"type":"class","title":"SocketAppender","path":"\/documentation\/logboard\/socketappender","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init()","path":"\/documentation\/logboard\/socketappender\/init()"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func append(LBLogger, level: LBLogger.Level, format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/socketappender\/append(_:level:format:arguments:file:function:line:)"},{"type":"method","title":"func append(LBLogger, level: LBLogger.Level, message: [Any], file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/socketappender\/append(_:level:message:file:function:line:)"},{"type":"method","title":"func close()","path":"\/documentation\/logboard\/socketappender\/close()"},{"type":"method","title":"func connect(String, port: Int)","path":"\/documentation\/logboard\/socketappender\/connect(_:port:)"}]},{"type":"groupMarker","title":"Protocols"},{"type":"protocol","title":"LBLoggerAppender","path":"\/documentation\/logboard\/lbloggerappender","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func append(LBLogger, level: LBLogger.Level, format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/lbloggerappender\/append(_:level:format:arguments:file:function:line:)"},{"type":"method","title":"func append(LBLogger, level: LBLogger.Level, message: [Any], file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/lbloggerappender\/append(_:level:message:file:function:line:)"}]}],"path":"\/documentation\/logboard"},{"title":"HaishinKit","type":"module","children":[{"type":"groupMarker","title":"Articles"},{"path":"\/documentation\/haishinkit\/faq","type":"article","title":"FAQ"},{"path":"\/documentation\/haishinkit\/offscreen","type":"article","title":"Offscreen rendering api."},{"type":"groupMarker","title":"Classes"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/assetscreenobject\/chromakeycolor","title":"var chromaKeyColor: CGColor?","type":"property"},{"path":"\/documentation\/haishinkit\/assetscreenobject\/isreading","title":"var isReading: Bool","type":"property"},{"path":"\/documentation\/haishinkit\/assetscreenobject\/videogravity","title":"var videoGravity: AVLayerVideoGravity","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/assetscreenobject\/cancelreading()","title":"func cancelReading()","type":"method"},{"path":"\/documentation\/haishinkit\/assetscreenobject\/makebounds(_:)","title":"func makeBounds(CGSize) -> CGRect","type":"method"},{"path":"\/documentation\/haishinkit\/assetscreenobject\/makeimage(_:)","title":"func makeImage(some ScreenRenderer) -> CGImage?","type":"method"},{"path":"\/documentation\/haishinkit\/assetscreenobject\/startreading(_:)","title":"func startReading(AVAsset) throws","type":"method"}],"path":"\/documentation\/haishinkit\/assetscreenobject","type":"class","title":"AssetScreenObject"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var connection: AVCaptureConnection?","path":"\/documentation\/haishinkit\/audiodeviceunit\/connection","type":"property"},{"title":"var device: AVCaptureDevice?","path":"\/documentation\/haishinkit\/audiodeviceunit\/device","type":"property"},{"title":"var input: AVCaptureInput?","path":"\/documentation\/haishinkit\/audiodeviceunit\/input","type":"property"},{"title":"var output: AudioDeviceUnit.Output?","path":"\/documentation\/haishinkit\/audiodeviceunit\/output-swift.property","type":"property"},{"title":"let track: UInt8","path":"\/documentation\/haishinkit\/audiodeviceunit\/track","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"title":"AudioDeviceUnit.Output","path":"\/documentation\/haishinkit\/audiodeviceunit\/output-swift.typealias","type":"typealias"}],"path":"\/documentation\/haishinkit\/audiodeviceunit","type":"class","title":"AudioDeviceUnit"},{"children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(audioEngine: AVAudioEngine)","path":"\/documentation\/haishinkit\/audioplayer\/init(audioengine:)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Actor Implementations","path":"\/documentation\/haishinkit\/audioplayer\/actor-implementations","type":"symbol","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/haishinkit\/audioplayer\/assertisolated(_:file:line:)","type":"method"},{"title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","path":"\/documentation\/haishinkit\/audioplayer\/assumeisolated(_:file:line:)","type":"method"},{"title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/haishinkit\/audioplayer\/preconditionisolated(_:file:line:)","type":"method"}]}],"path":"\/documentation\/haishinkit\/audioplayer","type":"class","title":"AudioPlayer"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/imagescreenobject\/cgimage","title":"var cgImage: CGImage?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/imagescreenobject\/makebounds(_:)","title":"func makeBounds(CGSize) -> CGRect","type":"method"},{"path":"\/documentation\/haishinkit\/imagescreenobject\/makeimage(_:)","title":"func makeImage(some ScreenRenderer) -> CGImage?","type":"method"}],"path":"\/documentation\/haishinkit\/imagescreenobject","type":"class","title":"ImageScreenObject"},{"children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(coder: NSCoder)","type":"init","path":"\/documentation\/haishinkit\/mthkview\/init(coder:)"},{"title":"init(frame: CGRect)","type":"init","path":"\/documentation\/haishinkit\/mthkview\/init(frame:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var audioTrackId: UInt8?","type":"property","path":"\/documentation\/haishinkit\/mthkview\/audiotrackid"},{"title":"var videoGravity: AVLayerVideoGravity","type":"property","path":"\/documentation\/haishinkit\/mthkview\/videogravity"},{"title":"var videoTrackId: UInt8?","type":"property","path":"\/documentation\/haishinkit\/mthkview\/videotrackid"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func awakeFromNib()","type":"method","path":"\/documentation\/haishinkit\/mthkview\/awakefromnib()"},{"title":"func draw(CGRect)","type":"method","path":"\/documentation\/haishinkit\/mthkview\/draw(_:)"},{"title":"func registerVideoEffect(some VideoEffect) -> Bool","type":"method","path":"\/documentation\/haishinkit\/mthkview\/registervideoeffect(_:)"},{"title":"func unregisterVideoEffect(some VideoEffect) -> Bool","type":"method","path":"\/documentation\/haishinkit\/mthkview\/unregistervideoeffect(_:)"},{"title":"Default Implementations","type":"groupMarker"},{"title":"MediaMixerOutput Implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/mthkview\/mixer(_:didoutput:)","title":"func mixer(MediaMixer, didOutput: CMSampleBuffer)","type":"method"},{"path":"\/documentation\/haishinkit\/mthkview\/mixer(_:didoutput:when:)","title":"func mixer(MediaMixer, didOutput: AVAudioPCMBuffer, when: AVAudioTime)","type":"method"},{"path":"\/documentation\/haishinkit\/mthkview\/selecttrack(_:mediatype:)","title":"func selectTrack(UInt8?, mediaType: CMFormatDescription.MediaType) async","type":"method"}],"type":"symbol","path":"\/documentation\/haishinkit\/mthkview\/mediamixeroutput-implementations"},{"title":"StreamOutput Implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/mthkview\/stream(_:didoutput:)","title":"func stream(some StreamConvertible, didOutput: CMSampleBuffer)","type":"method"},{"path":"\/documentation\/haishinkit\/mthkview\/stream(_:didoutput:when:)","title":"func stream(some StreamConvertible, didOutput: AVAudioBuffer, when: AVAudioTime)","type":"method"}],"type":"symbol","path":"\/documentation\/haishinkit\/mthkview\/streamoutput-implementations"}],"path":"\/documentation\/haishinkit\/mthkview","type":"class","title":"MTHKView"},{"children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/haishinkit\/mediamixer\/init(capturesessionmode:multitrackaudiomixingenabled:)","title":"init(captureSessionMode: MediaMixer.CaptureSessionMode, multiTrackAudioMixingEnabled: Bool)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/haishinkit\/mediamixer\/audioinputformats","title":"var audioInputFormats: [UInt8 : AVAudioFormat]"},{"type":"property","path":"\/documentation\/haishinkit\/mediamixer\/audiomixersettings","title":"var audioMixerSettings: AudioMixerSettings"},{"type":"property","path":"\/documentation\/haishinkit\/mediamixer\/capturesessionmode-swift.property","title":"let captureSessionMode: MediaMixer.CaptureSessionMode"},{"type":"property","path":"\/documentation\/haishinkit\/mediamixer\/framerate","title":"var frameRate: Float64"},{"type":"property","path":"\/documentation\/haishinkit\/mediamixer\/iscapturing","title":"var isCapturing: Bool"},{"type":"property","path":"\/documentation\/haishinkit\/mediamixer\/isinterputted","title":"var isInterputted: AsyncStream<Bool>"},{"type":"property","path":"\/documentation\/haishinkit\/mediamixer\/ismonitoringenabled","title":"var isMonitoringEnabled: Bool"},{"type":"property","path":"\/documentation\/haishinkit\/mediamixer\/ismultitrackaudiomixingenabled","title":"var isMultiTrackAudioMixingEnabled: Bool"},{"type":"property","path":"\/documentation\/haishinkit\/mediamixer\/isrunning","title":"var isRunning: Bool"},{"type":"property","path":"\/documentation\/haishinkit\/mediamixer\/istorchenabled","title":"var isTorchEnabled: Bool"},{"type":"property","path":"\/documentation\/haishinkit\/mediamixer\/screen","title":"var screen: Screen"},{"type":"property","path":"\/documentation\/haishinkit\/mediamixer\/sessionpreset","title":"var sessionPreset: AVCaptureSession.Preset"},{"type":"property","path":"\/documentation\/haishinkit\/mediamixer\/videoinputformats","title":"var videoInputFormats: [UInt8 : CMFormatDescription]"},{"type":"property","path":"\/documentation\/haishinkit\/mediamixer\/videomixersettings","title":"var videoMixerSettings: VideoMixerSettings"},{"type":"property","path":"\/documentation\/haishinkit\/mediamixer\/videoorientation","title":"var videoOrientation: AVCaptureVideoOrientation"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/haishinkit\/mediamixer\/addoutput(_:)","title":"func addOutput(some MediaMixerOutput)"},{"type":"method","path":"\/documentation\/haishinkit\/mediamixer\/append(_:track:)","title":"func append(CMSampleBuffer, track: UInt8)"},{"type":"method","path":"\/documentation\/haishinkit\/mediamixer\/append(_:when:track:)","title":"func append(AVAudioBuffer, when: AVAudioTime, track: UInt8)"},{"type":"method","path":"\/documentation\/haishinkit\/mediamixer\/attachaudio(_:track:configuration:)","title":"func attachAudio(AVCaptureDevice?, track: UInt8, configuration: AudioDeviceConfigurationBlock?) async throws"},{"type":"method","path":"\/documentation\/haishinkit\/mediamixer\/attachvideo(_:track:configuration:)","title":"func attachVideo(AVCaptureDevice?, track: UInt8, configuration: VideoDeviceConfigurationBlock?) async throws"},{"type":"method","path":"\/documentation\/haishinkit\/mediamixer\/configuration(_:)","title":"func configuration((AVCaptureSession) throws -> Void) rethrows"},{"type":"method","path":"\/documentation\/haishinkit\/mediamixer\/configuration(audio:configuration:)","title":"func configuration(audio: UInt8, configuration: (AudioDeviceUnit) throws -> Void) throws"},{"type":"method","path":"\/documentation\/haishinkit\/mediamixer\/configuration(video:configuration:)","title":"func configuration(video: UInt8, configuration: (VideoDeviceUnit) throws -> Void) throws"},{"type":"method","path":"\/documentation\/haishinkit\/mediamixer\/removeoutput(_:)","title":"func removeOutput(some MediaMixerOutput)"},{"type":"method","path":"\/documentation\/haishinkit\/mediamixer\/setaudiomixersettings(_:)","title":"func setAudioMixerSettings(AudioMixerSettings)"},{"type":"method","path":"\/documentation\/haishinkit\/mediamixer\/setframerate(_:)","title":"func setFrameRate(Float64) throws"},{"type":"method","path":"\/documentation\/haishinkit\/mediamixer\/setmonitoringenabled(_:)","title":"func setMonitoringEnabled(Bool)"},{"type":"method","path":"\/documentation\/haishinkit\/mediamixer\/setsessionpreset(_:)","title":"func setSessionPreset(AVCaptureSession.Preset)"},{"type":"method","path":"\/documentation\/haishinkit\/mediamixer\/settorchenabled(_:)","title":"func setTorchEnabled(Bool)"},{"type":"method","path":"\/documentation\/haishinkit\/mediamixer\/setvideomixersettings(_:)","title":"func setVideoMixerSettings(VideoMixerSettings)"},{"type":"method","path":"\/documentation\/haishinkit\/mediamixer\/setvideoorientation(_:)","title":"func setVideoOrientation(AVCaptureVideoOrientation)"},{"type":"method","path":"\/documentation\/haishinkit\/mediamixer\/startcapturing()","title":"func startCapturing()"},{"type":"method","path":"\/documentation\/haishinkit\/mediamixer\/stopcapturing()","title":"func stopCapturing()"},{"type":"groupMarker","title":"Enumerations"},{"type":"enum","path":"\/documentation\/haishinkit\/mediamixer\/capturesessionmode-swift.enum","title":"MediaMixer.CaptureSessionMode","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/haishinkit\/mediamixer\/capturesessionmode-swift.enum\/manual","type":"case","title":"case manual"},{"path":"\/documentation\/haishinkit\/mediamixer\/capturesessionmode-swift.enum\/multi","type":"case","title":"case multi"},{"path":"\/documentation\/haishinkit\/mediamixer\/capturesessionmode-swift.enum\/single","type":"case","title":"case single"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/haishinkit\/mediamixer\/capturesessionmode-swift.enum\/equatable-implementations","type":"symbol","title":"Equatable Implementations","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/haishinkit\/mediamixer\/capturesessionmode-swift.enum\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}]}]},{"type":"enum","path":"\/documentation\/haishinkit\/mediamixer\/error","title":"MediaMixer.Error","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","title":"case deviceNotFound","path":"\/documentation\/haishinkit\/mediamixer\/error\/devicenotfound"},{"type":"case","title":"case failedToAttach(any Error)","path":"\/documentation\/haishinkit\/mediamixer\/error\/failedtoattach(_:)"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","title":"Error Implementations","path":"\/documentation\/haishinkit\/mediamixer\/error\/error-implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/mediamixer\/error\/localizeddescription","type":"property","title":"var localizedDescription: String"}]}]},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","path":"\/documentation\/haishinkit\/mediamixer\/actor-implementations","title":"Actor Implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method","path":"\/documentation\/haishinkit\/mediamixer\/assertisolated(_:file:line:)"},{"title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","type":"method","path":"\/documentation\/haishinkit\/mediamixer\/assumeisolated(_:file:line:)"},{"title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method","path":"\/documentation\/haishinkit\/mediamixer\/preconditionisolated(_:file:line:)"}]},{"type":"symbol","path":"\/documentation\/haishinkit\/mediamixer\/asyncrunner-implementations","title":"AsyncRunner Implementations","children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/mediamixer\/startrunning()","type":"method","title":"func startRunning()"},{"path":"\/documentation\/haishinkit\/mediamixer\/stoprunning()","type":"method","title":"func stopRunning()"}]}],"path":"\/documentation\/haishinkit\/mediamixer","type":"class","title":"MediaMixer"},{"children":[{"title":"Initializers","type":"groupMarker"},{"title":"init?(coder: NSCoder)","type":"init","path":"\/documentation\/haishinkit\/piphkview\/init(coder:)"},{"title":"init(frame: CGRect)","type":"init","path":"\/documentation\/haishinkit\/piphkview\/init(frame:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var audioTrackId: UInt8?","type":"property","path":"\/documentation\/haishinkit\/piphkview\/audiotrackid"},{"title":"var videoGravity: AVLayerVideoGravity","type":"property","path":"\/documentation\/haishinkit\/piphkview\/videogravity"},{"title":"var videoTrackId: UInt8?","type":"property","path":"\/documentation\/haishinkit\/piphkview\/videotrackid"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func awakeFromNib()","type":"method","path":"\/documentation\/haishinkit\/piphkview\/awakefromnib()"},{"title":"Type Properties","type":"groupMarker"},{"title":"static var defaultBackgroundColor: NSColor","type":"property","path":"\/documentation\/haishinkit\/piphkview\/defaultbackgroundcolor"},{"title":"Default Implementations","type":"groupMarker"},{"title":"MediaMixerOutput Implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func mixer(MediaMixer, didOutput: CMSampleBuffer)","type":"method","path":"\/documentation\/haishinkit\/piphkview\/mixer(_:didoutput:)"},{"title":"func mixer(MediaMixer, didOutput: AVAudioPCMBuffer, when: AVAudioTime)","type":"method","path":"\/documentation\/haishinkit\/piphkview\/mixer(_:didoutput:when:)"},{"title":"func selectTrack(UInt8?, mediaType: CMFormatDescription.MediaType) async","type":"method","path":"\/documentation\/haishinkit\/piphkview\/selecttrack(_:mediatype:)"}],"type":"symbol","path":"\/documentation\/haishinkit\/piphkview\/mediamixeroutput-implementations"},{"title":"StreamOutput Implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func stream(some StreamConvertible, didOutput: CMSampleBuffer)","path":"\/documentation\/haishinkit\/piphkview\/stream(_:didoutput:)","type":"method"},{"title":"func stream(some StreamConvertible, didOutput: AVAudioBuffer, when: AVAudioTime)","path":"\/documentation\/haishinkit\/piphkview\/stream(_:didoutput:when:)","type":"method"}],"type":"symbol","path":"\/documentation\/haishinkit\/piphkview\/streamoutput-implementations"}],"path":"\/documentation\/haishinkit\/piphkview","type":"class","title":"PiPHKView"},{"children":[{"title":"Initializers","type":"groupMarker"},{"title":"init()","path":"\/documentation\/haishinkit\/screen\/init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var backgroundColor: CGColor","path":"\/documentation\/haishinkit\/screen\/backgroundcolor","type":"property"},{"title":"var childCounts: Int","path":"\/documentation\/haishinkit\/screen\/childcounts","type":"property"},{"title":"var delegate: (any ScreenDelegate)?","path":"\/documentation\/haishinkit\/screen\/delegate","type":"property"},{"title":"var size: CGSize","path":"\/documentation\/haishinkit\/screen\/size-swift.property","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func addChild(ScreenObject?) throws","path":"\/documentation\/haishinkit\/screen\/addchild(_:)","type":"method"},{"title":"func registerVideoEffect(some VideoEffect) -> Bool","path":"\/documentation\/haishinkit\/screen\/registervideoeffect(_:)","type":"method"},{"title":"func removeChild(ScreenObject?)","path":"\/documentation\/haishinkit\/screen\/removechild(_:)","type":"method"},{"title":"func unregisterVideoEffect(some VideoEffect) -> Bool","path":"\/documentation\/haishinkit\/screen\/unregistervideoeffect(_:)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"title":"static let size: CGSize","path":"\/documentation\/haishinkit\/screen\/size-swift.type.property","type":"property"}],"title":"Screen","path":"\/documentation\/haishinkit\/screen","type":"class"},{"children":[{"type":"groupMarker","title":"Type Properties"},{"type":"property","title":"static let shared: ScreenActor","path":"\/documentation\/haishinkit\/screenactor\/shared"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method","path":"\/documentation\/haishinkit\/screenactor\/assertisolated(_:file:line:)"},{"title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","type":"method","path":"\/documentation\/haishinkit\/screenactor\/assumeisolated(_:file:line:)"},{"title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method","path":"\/documentation\/haishinkit\/screenactor\/preconditionisolated(_:file:line:)"}],"type":"symbol","title":"Actor Implementations","path":"\/documentation\/haishinkit\/screenactor\/actor-implementations"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"title":"static var sharedUnownedExecutor: UnownedSerialExecutor","path":"\/documentation\/haishinkit\/screenactor\/sharedunownedexecutor","type":"property"}],"type":"symbol","title":"GlobalActor Implementations","path":"\/documentation\/haishinkit\/screenactor\/globalactor-implementations"}],"title":"ScreenActor","path":"\/documentation\/haishinkit\/screenactor","type":"class"},{"children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/haishinkit\/screenobject\/init()","title":"init()"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/haishinkit\/screenobject\/bounds","title":"var bounds: CGRect"},{"type":"property","path":"\/documentation\/haishinkit\/screenobject\/cornerradius","title":"var cornerRadius: CGFloat"},{"type":"property","path":"\/documentation\/haishinkit\/screenobject\/horizontalalignment-swift.property","title":"var horizontalAlignment: ScreenObject.HorizontalAlignment"},{"type":"property","path":"\/documentation\/haishinkit\/screenobject\/isvisible","title":"var isVisible: Bool"},{"type":"property","path":"\/documentation\/haishinkit\/screenobject\/layoutmargin","title":"var layoutMargin: NSEdgeInsets"},{"type":"property","path":"\/documentation\/haishinkit\/screenobject\/parent","title":"var parent: ScreenObjectContainer?"},{"type":"property","path":"\/documentation\/haishinkit\/screenobject\/size","title":"var size: CGSize"},{"type":"property","path":"\/documentation\/haishinkit\/screenobject\/verticalalignment-swift.property","title":"var verticalAlignment: ScreenObject.VerticalAlignment"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/haishinkit\/screenobject\/invalidatelayout()","title":"func invalidateLayout()"},{"type":"method","path":"\/documentation\/haishinkit\/screenobject\/makebounds(_:)","title":"func makeBounds(CGSize) -> CGRect"},{"type":"method","path":"\/documentation\/haishinkit\/screenobject\/makeimage(_:)","title":"func makeImage(some ScreenRenderer) -> CGImage?"},{"type":"groupMarker","title":"Enumerations"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case center","path":"\/documentation\/haishinkit\/screenobject\/horizontalalignment-swift.enum\/center","type":"case"},{"title":"case left","path":"\/documentation\/haishinkit\/screenobject\/horizontalalignment-swift.enum\/left","type":"case"},{"title":"case right","path":"\/documentation\/haishinkit\/screenobject\/horizontalalignment-swift.enum\/right","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","path":"\/documentation\/haishinkit\/screenobject\/horizontalalignment-swift.enum\/equatable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/haishinkit\/screenobject\/horizontalalignment-swift.enum\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}],"type":"symbol"}],"type":"enum","path":"\/documentation\/haishinkit\/screenobject\/horizontalalignment-swift.enum","title":"ScreenObject.HorizontalAlignment"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case bottom","path":"\/documentation\/haishinkit\/screenobject\/verticalalignment-swift.enum\/bottom","type":"case"},{"title":"case middle","path":"\/documentation\/haishinkit\/screenobject\/verticalalignment-swift.enum\/middle","type":"case"},{"title":"case top","path":"\/documentation\/haishinkit\/screenobject\/verticalalignment-swift.enum\/top","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/haishinkit\/screenobject\/verticalalignment-swift.enum\/!=(_:_:)","type":"op"}],"path":"\/documentation\/haishinkit\/screenobject\/verticalalignment-swift.enum\/equatable-implementations","type":"symbol"}],"type":"enum","path":"\/documentation\/haishinkit\/screenobject\/verticalalignment-swift.enum","title":"ScreenObject.VerticalAlignment"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/haishinkit\/screenobject\/!=(_:_:)","type":"op"},{"title":"static func == (ScreenObject, ScreenObject) -> Bool","path":"\/documentation\/haishinkit\/screenobject\/==(_:_:)","type":"op"}],"type":"symbol","path":"\/documentation\/haishinkit\/screenobject\/equatable-implementations","title":"Equatable Implementations"},{"children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/screenobject\/hash(into:)","type":"method","title":"func hash(into: inout Hasher)"}],"type":"symbol","path":"\/documentation\/haishinkit\/screenobject\/hashable-implementations","title":"Hashable Implementations"}],"title":"ScreenObject","path":"\/documentation\/haishinkit\/screenobject","type":"class"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/screenobjectcontainer\/childcounts","type":"property","title":"var childCounts: Int"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/screenobjectcontainer\/addchild(_:)","type":"method","title":"func addChild(ScreenObject?) throws"},{"path":"\/documentation\/haishinkit\/screenobjectcontainer\/removechild(_:)","type":"method","title":"func removeChild(ScreenObject?)"},{"type":"groupMarker","title":"Enumerations"},{"path":"\/documentation\/haishinkit\/screenobjectcontainer\/error","type":"enum","title":"ScreenObjectContainer.Error","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/screenobjectcontainer\/error\/alreadyexists","title":"case alreadyExists","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/screenobjectcontainer\/error\/equatable-implementations","title":"Equatable Implementations","type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/haishinkit\/screenobjectcontainer\/error\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}]},{"path":"\/documentation\/haishinkit\/screenobjectcontainer\/error\/error-implementations","title":"Error Implementations","type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var localizedDescription: String","type":"property","path":"\/documentation\/haishinkit\/screenobjectcontainer\/error\/localizeddescription"}]}]}],"title":"ScreenObjectContainer","path":"\/documentation\/haishinkit\/screenobjectcontainer","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/sessionbuilder\/build()","title":"func build() async throws -> (any Session)?","type":"method"},{"path":"\/documentation\/haishinkit\/sessionbuilder\/setmethod(_:)","title":"func setMethod(SessionMethod) -> Self","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/sessionbuilder\/assertisolated(_:file:line:)","type":"method","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)"},{"path":"\/documentation\/haishinkit\/sessionbuilder\/assumeisolated(_:file:line:)","type":"method","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T"},{"path":"\/documentation\/haishinkit\/sessionbuilder\/preconditionisolated(_:file:line:)","type":"method","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)"}],"path":"\/documentation\/haishinkit\/sessionbuilder\/actor-implementations","title":"Actor Implementations","type":"symbol"}],"title":"SessionBuilder","path":"\/documentation\/haishinkit\/sessionbuilder","type":"class"},{"children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func make(URL?) throws -> SessionBuilder","path":"\/documentation\/haishinkit\/sessionbuilderfactory\/make(_:)"},{"type":"method","title":"func register(some SessionFactory)","path":"\/documentation\/haishinkit\/sessionbuilderfactory\/register(_:)"},{"type":"groupMarker","title":"Type Properties"},{"type":"property","title":"static let shared: SessionBuilderFactory","path":"\/documentation\/haishinkit\/sessionbuilderfactory\/shared"},{"type":"groupMarker","title":"Enumerations"},{"type":"enum","title":"SessionBuilderFactory.Error","path":"\/documentation\/haishinkit\/sessionbuilderfactory\/error","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","path":"\/documentation\/haishinkit\/sessionbuilderfactory\/error\/illegalargument","title":"case illegalArgument"},{"type":"case","path":"\/documentation\/haishinkit\/sessionbuilderfactory\/error\/notfound","title":"case notFound"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/haishinkit\/sessionbuilderfactory\/error\/!=(_:_:)"}],"path":"\/documentation\/haishinkit\/sessionbuilderfactory\/error\/equatable-implementations","title":"Equatable Implementations"},{"type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var localizedDescription: String","path":"\/documentation\/haishinkit\/sessionbuilderfactory\/error\/localizeddescription","type":"property"}],"path":"\/documentation\/haishinkit\/sessionbuilderfactory\/error\/error-implementations","title":"Error Implementations"}]},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","title":"Actor Implementations","path":"\/documentation\/haishinkit\/sessionbuilderfactory\/actor-implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/haishinkit\/sessionbuilderfactory\/assertisolated(_:file:line:)","type":"method"},{"title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","path":"\/documentation\/haishinkit\/sessionbuilderfactory\/assumeisolated(_:file:line:)","type":"method"},{"title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/haishinkit\/sessionbuilderfactory\/preconditionisolated(_:file:line:)","type":"method"}]}],"title":"SessionBuilderFactory","path":"\/documentation\/haishinkit\/sessionbuilderfactory","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/streamrecorder\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/streamrecorder\/audiotrackid","title":"var audioTrackId: UInt8?","type":"property"},{"path":"\/documentation\/haishinkit\/streamrecorder\/isrecording","title":"var isRecording: Bool","type":"property"},{"path":"\/documentation\/haishinkit\/streamrecorder\/moviefragmentinterval","title":"var movieFragmentInterval: Double?","type":"property"},{"path":"\/documentation\/haishinkit\/streamrecorder\/moviesdirectory","title":"var moviesDirectory: URL","type":"property"},{"path":"\/documentation\/haishinkit\/streamrecorder\/outputurl","title":"var outputURL: URL?","type":"property"},{"path":"\/documentation\/haishinkit\/streamrecorder\/settings","title":"var settings: [AVMediaType : [String : any Sendable]]","type":"property"},{"path":"\/documentation\/haishinkit\/streamrecorder\/videotrackid","title":"var videoTrackId: UInt8?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/streamrecorder\/selecttrack(_:mediatype:)","title":"func selectTrack(UInt8?, mediaType: CMFormatDescription.MediaType)","type":"method"},{"path":"\/documentation\/haishinkit\/streamrecorder\/setmoviefragmentinterval(_:)","title":"func setMovieFragmentInterval(Double?)","type":"method"},{"path":"\/documentation\/haishinkit\/streamrecorder\/startrecording(_:settings:)","title":"func startRecording(URL?, settings: [AVMediaType : [String : any Sendable]]) async throws","type":"method"},{"path":"\/documentation\/haishinkit\/streamrecorder\/stoprecording()","title":"func stopRecording() async throws -> URL","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/streamrecorder\/defaultsettings","title":"static let defaultSettings: [AVMediaType : [String : any Sendable]]","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/streamrecorder\/error","title":"StreamRecorder.Error","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","title":"case failedToAppend(error: (any Error)?)","path":"\/documentation\/haishinkit\/streamrecorder\/error\/failedtoappend(error:)"},{"type":"case","title":"case failedToCreateAssetWriter(error: any Error)","path":"\/documentation\/haishinkit\/streamrecorder\/error\/failedtocreateassetwriter(error:)"},{"type":"case","title":"case failedToCreateAssetWriterInput(error: any Error)","path":"\/documentation\/haishinkit\/streamrecorder\/error\/failedtocreateassetwriterinput(error:)"},{"type":"case","title":"case failedToFinishWriting(error: (any Error)?)","path":"\/documentation\/haishinkit\/streamrecorder\/error\/failedtofinishwriting(error:)"},{"type":"case","title":"case fileAlreadyExists(outputURL: URL)","path":"\/documentation\/haishinkit\/streamrecorder\/error\/filealreadyexists(outputurl:)"},{"type":"case","title":"case invalidState","path":"\/documentation\/haishinkit\/streamrecorder\/error\/invalidstate"},{"type":"case","title":"case notSupportedFileType(pathExtension: String)","path":"\/documentation\/haishinkit\/streamrecorder\/error\/notsupportedfiletype(pathextension:)"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var localizedDescription: String","path":"\/documentation\/haishinkit\/streamrecorder\/error\/localizeddescription"}],"type":"symbol","title":"Error Implementations","path":"\/documentation\/haishinkit\/streamrecorder\/error\/error-implementations"}],"type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/streamrecorder\/actor-implementations","title":"Actor Implementations","children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/streamrecorder\/assertisolated(_:file:line:)","type":"method","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)"},{"path":"\/documentation\/haishinkit\/streamrecorder\/assumeisolated(_:file:line:)","type":"method","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T"},{"path":"\/documentation\/haishinkit\/streamrecorder\/preconditionisolated(_:file:line:)","type":"method","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)"}],"type":"symbol"},{"path":"\/documentation\/haishinkit\/streamrecorder\/mediamixeroutput-implementations","title":"MediaMixerOutput Implementations","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func mixer(MediaMixer, didOutput: CMSampleBuffer)","path":"\/documentation\/haishinkit\/streamrecorder\/mixer(_:didoutput:)"},{"type":"method","title":"func mixer(MediaMixer, didOutput: AVAudioPCMBuffer, when: AVAudioTime)","path":"\/documentation\/haishinkit\/streamrecorder\/mixer(_:didoutput:when:)"}],"type":"symbol"},{"path":"\/documentation\/haishinkit\/streamrecorder\/streamoutput-implementations","title":"StreamOutput Implementations","children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/streamrecorder\/stream(_:didoutput:)","type":"method","title":"func stream(some StreamConvertible, didOutput: CMSampleBuffer)"},{"path":"\/documentation\/haishinkit\/streamrecorder\/stream(_:didoutput:when:)","type":"method","title":"func stream(some StreamConvertible, didOutput: AVAudioBuffer, when: AVAudioTime)"}],"type":"symbol"}],"title":"StreamRecorder","path":"\/documentation\/haishinkit\/streamrecorder","type":"class"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var chromaKeyColor: CGColor?","path":"\/documentation\/haishinkit\/streamscreenobject\/chromakeycolor"},{"type":"property","title":"var videoGravity: AVLayerVideoGravity","path":"\/documentation\/haishinkit\/streamscreenobject\/videogravity"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func makeBounds(CGSize) -> CGRect","path":"\/documentation\/haishinkit\/streamscreenobject\/makebounds(_:)"},{"type":"method","title":"func makeImage(some ScreenRenderer) -> CGImage?","path":"\/documentation\/haishinkit\/streamscreenobject\/makeimage(_:)"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","title":"StreamOutput Implementations","path":"\/documentation\/haishinkit\/streamscreenobject\/streamoutput-implementations","children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/streamscreenobject\/stream(_:didoutput:)","type":"method","title":"func stream(some StreamConvertible, didOutput: CMSampleBuffer)"},{"path":"\/documentation\/haishinkit\/streamscreenobject\/stream(_:didoutput:when:)","type":"method","title":"func stream(some StreamConvertible, didOutput: AVAudioBuffer, when: AVAudioTime)"}]}],"title":"StreamScreenObject","path":"\/documentation\/haishinkit\/streamscreenobject","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/streamvideoadaptivebitratestrategy\/init(mamimumvideobitrate:)","title":"init(mamimumVideoBitrate: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/streamvideoadaptivebitratestrategy\/mamimumaudiobitrate","title":"let mamimumAudioBitRate: Int","type":"property"},{"path":"\/documentation\/haishinkit\/streamvideoadaptivebitratestrategy\/mamimumvideobitrate","title":"let mamimumVideoBitRate: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/streamvideoadaptivebitratestrategy\/adjustbitrate(_:stream:)","title":"func adjustBitrate(NetworkMonitorEvent, stream: some StreamConvertible) async","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/streamvideoadaptivebitratestrategy\/statuscountsthreshold","title":"static let statusCountsThreshold: Int","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/haishinkit\/streamvideoadaptivebitratestrategy\/assertisolated(_:file:line:)"},{"type":"method","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","path":"\/documentation\/haishinkit\/streamvideoadaptivebitratestrategy\/assumeisolated(_:file:line:)"},{"type":"method","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/haishinkit\/streamvideoadaptivebitratestrategy\/preconditionisolated(_:file:line:)"}],"path":"\/documentation\/haishinkit\/streamvideoadaptivebitratestrategy\/actor-implementations","title":"Actor Implementations","type":"symbol"}],"title":"StreamVideoAdaptiveBitRateStrategy","path":"\/documentation\/haishinkit\/streamvideoadaptivebitratestrategy","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var attributes: [NSAttributedString.Key : Any]?","type":"property","path":"\/documentation\/haishinkit\/textscreenobject\/attributes"},{"title":"var bounds: CGRect","type":"property","path":"\/documentation\/haishinkit\/textscreenobject\/bounds"},{"title":"var string: String","type":"property","path":"\/documentation\/haishinkit\/textscreenobject\/string"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func makeBounds(CGSize) -> CGRect","type":"method","path":"\/documentation\/haishinkit\/textscreenobject\/makebounds(_:)"},{"title":"func makeImage(some ScreenRenderer) -> CGImage?","type":"method","path":"\/documentation\/haishinkit\/textscreenobject\/makeimage(_:)"}],"title":"TextScreenObject","path":"\/documentation\/haishinkit\/textscreenobject","type":"class"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/videodeviceunit\/colorformat-swift.property","type":"property","title":"var colorFormat: OSType"},{"path":"\/documentation\/haishinkit\/videodeviceunit\/connection","type":"property","title":"var connection: AVCaptureConnection?"},{"path":"\/documentation\/haishinkit\/videodeviceunit\/device","type":"property","title":"var device: AVCaptureDevice?"},{"path":"\/documentation\/haishinkit\/videodeviceunit\/framerate","type":"property","title":"var frameRate: Float64"},{"path":"\/documentation\/haishinkit\/videodeviceunit\/input","type":"property","title":"var input: AVCaptureInput?"},{"path":"\/documentation\/haishinkit\/videodeviceunit\/isvideomirrored","type":"property","title":"var isVideoMirrored: Bool"},{"path":"\/documentation\/haishinkit\/videodeviceunit\/output-swift.property","type":"property","title":"var output: VideoDeviceUnit.Output?"},{"path":"\/documentation\/haishinkit\/videodeviceunit\/track","type":"property","title":"let track: UInt8"},{"path":"\/documentation\/haishinkit\/videodeviceunit\/videoorientation","type":"property","title":"var videoOrientation: AVCaptureVideoOrientation"},{"type":"groupMarker","title":"Instance Methods"},{"title":"func setFrameRate(Float64) throws","type":"method","path":"\/documentation\/haishinkit\/videodeviceunit\/setframerate(_:)"},{"title":"Type Aliases","type":"groupMarker"},{"title":"VideoDeviceUnit.Output","type":"typealias","path":"\/documentation\/haishinkit\/videodeviceunit\/output-swift.typealias"},{"title":"Type Properties","type":"groupMarker"},{"title":"static let colorFormat: OSType","type":"property","path":"\/documentation\/haishinkit\/videodeviceunit\/colorformat-swift.type.property"},{"title":"Enumerations","type":"groupMarker"},{"title":"VideoDeviceUnit.Error","type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","path":"\/documentation\/haishinkit\/videodeviceunit\/error\/unsupportedframerate","title":"case unsupportedFrameRate"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videodeviceunit\/error\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/haishinkit\/videodeviceunit\/error\/equatable-implementations","title":"Equatable Implementations"},{"type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var localizedDescription: String","path":"\/documentation\/haishinkit\/videodeviceunit\/error\/localizeddescription","type":"property"}],"path":"\/documentation\/haishinkit\/videodeviceunit\/error\/error-implementations","title":"Error Implementations"}],"path":"\/documentation\/haishinkit\/videodeviceunit\/error"}],"title":"VideoDeviceUnit","path":"\/documentation\/haishinkit\/videodeviceunit","type":"class"},{"children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/haishinkit\/videorotator\/init()","type":"init","title":"init?()"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/videorotator\/rotate(buffer:)","type":"method","title":"func rotate(buffer: CMSampleBuffer) -> Result<CMSampleBuffer, VideoRotator.Error>"},{"type":"groupMarker","title":"Enumerations"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case cannotAllocatePixelBuffer(CVReturn)","path":"\/documentation\/haishinkit\/videorotator\/error\/cannotallocatepixelbuffer(_:)","type":"case"},{"title":"case noImageBuffer","path":"\/documentation\/haishinkit\/videorotator\/error\/noimagebuffer","type":"case"},{"title":"case noOrientationInfo","path":"\/documentation\/haishinkit\/videorotator\/error\/noorientationinfo","type":"case"},{"title":"case rotationFailure(OSStatus)","path":"\/documentation\/haishinkit\/videorotator\/error\/rotationfailure(_:)","type":"case"},{"title":"case unsupportedOrientation","path":"\/documentation\/haishinkit\/videorotator\/error\/unsupportedorientation","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var localizedDescription: String","path":"\/documentation\/haishinkit\/videorotator\/error\/localizeddescription","type":"property"}],"title":"Error Implementations","path":"\/documentation\/haishinkit\/videorotator\/error\/error-implementations","type":"symbol"}],"path":"\/documentation\/haishinkit\/videorotator\/error","type":"enum","title":"VideoRotator.Error"}],"title":"VideoRotator","path":"\/documentation\/haishinkit\/videorotator","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"title":"init()","path":"\/documentation\/haishinkit\/videotrackscreenobject\/init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var chromaKeyColor: CGColor?","path":"\/documentation\/haishinkit\/videotrackscreenobject\/chromakeycolor","type":"property"},{"title":"var frameRate: Int","path":"\/documentation\/haishinkit\/videotrackscreenobject\/framerate","type":"property"},{"title":"var track: UInt8","path":"\/documentation\/haishinkit\/videotrackscreenobject\/track","type":"property"},{"title":"var videoGravity: AVLayerVideoGravity","path":"\/documentation\/haishinkit\/videotrackscreenobject\/videogravity","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func draw(some ScreenRenderer)","path":"\/documentation\/haishinkit\/videotrackscreenobject\/draw(_:)","type":"method"},{"title":"func makeBounds(CGSize) -> CGRect","path":"\/documentation\/haishinkit\/videotrackscreenobject\/makebounds(_:)","type":"method"},{"title":"func makeImage(some ScreenRenderer) -> CGImage?","path":"\/documentation\/haishinkit\/videotrackscreenobject\/makeimage(_:)","type":"method"},{"title":"func registerVideoEffect(some VideoEffect) -> Bool","path":"\/documentation\/haishinkit\/videotrackscreenobject\/registervideoeffect(_:)","type":"method"},{"title":"func unregisterVideoEffect(some VideoEffect) -> Bool","path":"\/documentation\/haishinkit\/videotrackscreenobject\/unregistervideoeffect(_:)","type":"method"}],"title":"VideoTrackScreenObject","path":"\/documentation\/haishinkit\/videotrackscreenobject","type":"class"},{"title":"Protocols","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var isRunning: Bool","path":"\/documentation\/haishinkit\/asyncrunner\/isrunning","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func startRunning() async","path":"\/documentation\/haishinkit\/asyncrunner\/startrunning()","type":"method"},{"title":"func stopRunning() async","path":"\/documentation\/haishinkit\/asyncrunner\/stoprunning()","type":"method"}],"title":"AsyncRunner","path":"\/documentation\/haishinkit\/asyncrunner","type":"protocol"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/haishinkit\/chromakeyprocessable\/chromakeycolor","title":"var chromaKeyColor: CGColor?"}],"title":"ChromaKeyProcessable","path":"\/documentation\/haishinkit\/chromakeyprocessable","type":"protocol"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/mediamixeroutput\/audiotrackid","type":"property","title":"var audioTrackId: UInt8?"},{"path":"\/documentation\/haishinkit\/mediamixeroutput\/videotrackid","type":"property","title":"var videoTrackId: UInt8?"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/mediamixeroutput\/mixer(_:didoutput:)","type":"method","title":"func mixer(MediaMixer, didOutput: CMSampleBuffer)"},{"path":"\/documentation\/haishinkit\/mediamixeroutput\/mixer(_:didoutput:when:)","type":"method","title":"func mixer(MediaMixer, didOutput: AVAudioPCMBuffer, when: AVAudioTime)"},{"path":"\/documentation\/haishinkit\/mediamixeroutput\/selecttrack(_:mediatype:)","type":"method","title":"func selectTrack(UInt8?, mediaType: CMFormatDescription.MediaType) async"}],"title":"MediaMixerOutput","path":"\/documentation\/haishinkit\/mediamixeroutput","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var connected: Bool","path":"\/documentation\/haishinkit\/networkconnection\/connected","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func close() async throws","path":"\/documentation\/haishinkit\/networkconnection\/close()","type":"method"}],"title":"NetworkConnection","path":"\/documentation\/haishinkit\/networkconnection","type":"protocol"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/haishinkit\/runner\/isrunning","title":"var isRunning: Bool"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/haishinkit\/runner\/startrunning()","title":"func startRunning()"},{"type":"method","path":"\/documentation\/haishinkit\/runner\/stoprunning()","title":"func stopRunning()"}],"title":"Runner","path":"\/documentation\/haishinkit\/runner","type":"protocol"},{"children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/screendelegate\/screen(_:willlayout:)","type":"method","title":"func screen(Screen, willLayout: CMTime)"}],"title":"ScreenDelegate","path":"\/documentation\/haishinkit\/screendelegate","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/screenrenderer\/backgroundcolor","title":"var backgroundColor: CGColor","type":"property"},{"path":"\/documentation\/haishinkit\/screenrenderer\/bounds","title":"var bounds: CGRect","type":"property"},{"path":"\/documentation\/haishinkit\/screenrenderer\/context","title":"var context: CIContext","type":"property"},{"path":"\/documentation\/haishinkit\/screenrenderer\/presentationtimestamp","title":"var presentationTimeStamp: CMTime","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/screenrenderer\/draw(_:)","title":"func draw(ScreenObject)","type":"method"},{"path":"\/documentation\/haishinkit\/screenrenderer\/layout(_:)","title":"func layout(ScreenObject)","type":"method"},{"path":"\/documentation\/haishinkit\/screenrenderer\/settarget(_:)","title":"func setTarget(CVPixelBuffer?)","type":"method"}],"title":"ScreenRenderer","path":"\/documentation\/haishinkit\/screenrenderer","type":"protocol"},{"children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/haishinkit\/session\/init(uri:method:)","type":"init","title":"init(uri: URL, method: SessionMethod)"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/session\/readystate","type":"property","title":"var readyState: AsyncStream<SessionReadyState>"},{"path":"\/documentation\/haishinkit\/session\/stream","type":"property","title":"var stream: any StreamConvertible"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/session\/connect(_:)","type":"method","title":"func connect(() -> Void) async throws"},{"path":"\/documentation\/haishinkit\/session\/setmaxretrycount(_:)","type":"method","title":"func setMaxRetryCount(Int)"}],"title":"Session","path":"\/documentation\/haishinkit\/session","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var supportedProtocols: Set<String>","type":"property","path":"\/documentation\/haishinkit\/sessionfactory\/supportedprotocols"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func make(URL, method: SessionMethod) -> any Session","type":"method","path":"\/documentation\/haishinkit\/sessionfactory\/make(_:method:)"}],"title":"SessionFactory","path":"\/documentation\/haishinkit\/sessionfactory","type":"protocol"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/streambitratestrategy\/mamimumaudiobitrate","title":"var mamimumAudioBitRate: Int","type":"property"},{"path":"\/documentation\/haishinkit\/streambitratestrategy\/mamimumvideobitrate","title":"var mamimumVideoBitRate: Int","type":"property"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/streambitratestrategy\/adjustbitrate(_:stream:)","title":"func adjustBitrate(NetworkMonitorEvent, stream: some StreamConvertible) async","type":"method"}],"title":"StreamBitRateStrategy","path":"\/documentation\/haishinkit\/streambitratestrategy","type":"protocol"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var audioSettings: AudioCodecSettings","path":"\/documentation\/haishinkit\/streamconvertible\/audiosettings"},{"type":"property","title":"var readyState: StreamReadyState","path":"\/documentation\/haishinkit\/streamconvertible\/readystate"},{"type":"property","title":"var soundTransform: SoundTransform?","path":"\/documentation\/haishinkit\/streamconvertible\/soundtransform"},{"type":"property","title":"var videoSettings: VideoCodecSettings","path":"\/documentation\/haishinkit\/streamconvertible\/videosettings"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func addOutput(some StreamOutput)","path":"\/documentation\/haishinkit\/streamconvertible\/addoutput(_:)"},{"type":"method","title":"func append(CMSampleBuffer)","path":"\/documentation\/haishinkit\/streamconvertible\/append(_:)"},{"type":"method","title":"func append(AVAudioBuffer, when: AVAudioTime)","path":"\/documentation\/haishinkit\/streamconvertible\/append(_:when:)"},{"type":"method","title":"func attachAudioPlayer(AudioPlayer?) async","path":"\/documentation\/haishinkit\/streamconvertible\/attachaudioplayer(_:)"},{"type":"method","title":"func dispatch(NetworkMonitorEvent) async","path":"\/documentation\/haishinkit\/streamconvertible\/dispatch(_:)"},{"type":"method","title":"func removeOutput(some StreamOutput)","path":"\/documentation\/haishinkit\/streamconvertible\/removeoutput(_:)"},{"type":"method","title":"func setAudioSettings(AudioCodecSettings) throws","path":"\/documentation\/haishinkit\/streamconvertible\/setaudiosettings(_:)"},{"type":"method","title":"func setBitRateStrategy((some StreamBitRateStrategy)?)","path":"\/documentation\/haishinkit\/streamconvertible\/setbitratestrategy(_:)"},{"type":"method","title":"func setSoundTransform(SoundTransform) async","path":"\/documentation\/haishinkit\/streamconvertible\/setsoundtransform(_:)"},{"type":"method","title":"func setVideoInputBufferCounts(Int)","path":"\/documentation\/haishinkit\/streamconvertible\/setvideoinputbuffercounts(_:)"},{"type":"method","title":"func setVideoSettings(VideoCodecSettings) throws","path":"\/documentation\/haishinkit\/streamconvertible\/setvideosettings(_:)"}],"title":"StreamConvertible","path":"\/documentation\/haishinkit\/streamconvertible","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/streamoutput\/stream(_:didoutput:)","title":"func stream(some StreamConvertible, didOutput: CMSampleBuffer)","type":"method"},{"path":"\/documentation\/haishinkit\/streamoutput\/stream(_:didoutput:when:)","title":"func stream(some StreamConvertible, didOutput: AVAudioBuffer, when: AVAudioTime)","type":"method"}],"title":"StreamOutput","path":"\/documentation\/haishinkit\/streamoutput","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videoeffect\/execute(_:)","title":"func execute(CIImage) -> CIImage","type":"method"}],"title":"VideoEffect","path":"\/documentation\/haishinkit\/videoeffect","type":"protocol"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/audiocodecsettings\/init(bitrate:downmix:channelmap:samplerate:format:)","title":"init(bitRate: Int, downmix: Bool, channelMap: [Int]?, sampleRate: Float64, format: AudioCodecSettings.Format)","type":"init"},{"path":"\/documentation\/haishinkit\/audiocodecsettings\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/audiocodecsettings\/bitrate","title":"var bitRate: Int","type":"property"},{"path":"\/documentation\/haishinkit\/audiocodecsettings\/channelmap","title":"var channelMap: [Int]?","type":"property"},{"path":"\/documentation\/haishinkit\/audiocodecsettings\/downmix","title":"var downmix: Bool","type":"property"},{"path":"\/documentation\/haishinkit\/audiocodecsettings\/format-swift.property","title":"var format: AudioCodecSettings.Format","type":"property"},{"path":"\/documentation\/haishinkit\/audiocodecsettings\/samplerate","title":"let sampleRate: Float64","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/audiocodecsettings\/default","title":"static let `default`: AudioCodecSettings","type":"property"},{"path":"\/documentation\/haishinkit\/audiocodecsettings\/defaultbitrate","title":"static let defaultBitRate: Int","type":"property"},{"path":"\/documentation\/haishinkit\/audiocodecsettings\/maximumnumberofchannels","title":"static let maximumNumberOfChannels: UInt32","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/audiocodecsettings\/format-swift.enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case aac","type":"case","path":"\/documentation\/haishinkit\/audiocodecsettings\/format-swift.enum\/aac"},{"title":"case opus","type":"case","path":"\/documentation\/haishinkit\/audiocodecsettings\/format-swift.enum\/opus"},{"title":"case pcm","type":"case","path":"\/documentation\/haishinkit\/audiocodecsettings\/format-swift.enum\/pcm"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: String)","type":"init","path":"\/documentation\/haishinkit\/audiocodecsettings\/format-swift.enum\/init(rawvalue:)"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","type":"symbol","path":"\/documentation\/haishinkit\/audiocodecsettings\/format-swift.enum\/equatable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/haishinkit\/audiocodecsettings\/format-swift.enum\/!=(_:_:)"}]},{"title":"RawRepresentable Implementations","type":"symbol","path":"\/documentation\/haishinkit\/audiocodecsettings\/format-swift.enum\/rawrepresentable-implementations","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/haishinkit\/audiocodecsettings\/format-swift.enum\/init(from:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","path":"\/documentation\/haishinkit\/audiocodecsettings\/format-swift.enum\/hashvalue","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func encode(to: any Encoder) throws","path":"\/documentation\/haishinkit\/audiocodecsettings\/format-swift.enum\/encode(to:)","type":"method"},{"title":"func hash(into: inout Hasher)","path":"\/documentation\/haishinkit\/audiocodecsettings\/format-swift.enum\/hash(into:)","type":"method"}]}],"title":"AudioCodecSettings.Format","type":"enum"}],"title":"AudioCodecSettings","path":"\/documentation\/haishinkit\/audiocodecsettings","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(sampleRate: Float64, channels: UInt32, isMuted: Bool, mainTrack: UInt8, tracks: [UInt8 : AudioMixerTrackSettings])","path":"\/documentation\/haishinkit\/audiomixersettings\/init(samplerate:channels:ismuted:maintrack:tracks:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let channels: UInt32","path":"\/documentation\/haishinkit\/audiomixersettings\/channels","type":"property"},{"title":"var isMuted: Bool","path":"\/documentation\/haishinkit\/audiomixersettings\/ismuted","type":"property"},{"title":"var mainTrack: UInt8","path":"\/documentation\/haishinkit\/audiomixersettings\/maintrack","type":"property"},{"title":"var maximumNumberOfChannels: UInt32","path":"\/documentation\/haishinkit\/audiomixersettings\/maximumnumberofchannels","type":"property"},{"title":"let sampleRate: Float64","path":"\/documentation\/haishinkit\/audiomixersettings\/samplerate","type":"property"},{"title":"var tracks: [UInt8 : AudioMixerTrackSettings]","path":"\/documentation\/haishinkit\/audiomixersettings\/tracks","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"title":"static let `default`: AudioMixerSettings","path":"\/documentation\/haishinkit\/audiomixersettings\/default","type":"property"},{"title":"static let maximumSampleRate: Float64","path":"\/documentation\/haishinkit\/audiomixersettings\/maximumsamplerate","type":"property"}],"title":"AudioMixerSettings","path":"\/documentation\/haishinkit\/audiomixersettings","type":"struct"},{"children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/haishinkit\/audiomixertracksettings\/init(from:)","type":"init","title":"init(from: any Decoder) throws"},{"path":"\/documentation\/haishinkit\/audiomixertracksettings\/init(volume:ismuted:downmix:channelmap:)","type":"init","title":"init(volume: Float, isMuted: Bool, downmix: Bool, channelMap: [Int]?)"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/audiomixertracksettings\/channelmap","type":"property","title":"var channelMap: [Int]?"},{"path":"\/documentation\/haishinkit\/audiomixertracksettings\/downmix","type":"property","title":"var downmix: Bool"},{"path":"\/documentation\/haishinkit\/audiomixertracksettings\/ismuted","type":"property","title":"var isMuted: Bool"},{"path":"\/documentation\/haishinkit\/audiomixertracksettings\/volume","type":"property","title":"var volume: Float"},{"type":"groupMarker","title":"Type Properties"},{"path":"\/documentation\/haishinkit\/audiomixertracksettings\/default","type":"property","title":"static let `default`: AudioMixerTrackSettings"}],"title":"AudioMixerTrackSettings","path":"\/documentation\/haishinkit\/audiomixertracksettings","type":"struct"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/haishinkit\/networkmonitorreport\/currentbytesinpersecond","title":"let currentBytesInPerSecond: Int"},{"type":"property","path":"\/documentation\/haishinkit\/networkmonitorreport\/currentbytesoutpersecond","title":"let currentBytesOutPerSecond: Int"},{"type":"property","path":"\/documentation\/haishinkit\/networkmonitorreport\/currentqueuebytesout","title":"let currentQueueBytesOut: Int"},{"type":"property","path":"\/documentation\/haishinkit\/networkmonitorreport\/totalbytesin","title":"let totalBytesIn: Int"},{"type":"property","path":"\/documentation\/haishinkit\/networkmonitorreport\/totalbytesout","title":"let totalBytesOut: Int"}],"title":"NetworkMonitorReport","path":"\/documentation\/haishinkit\/networkmonitorreport","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(volume: Float, pan: Float)","type":"init","path":"\/documentation\/haishinkit\/soundtransform\/init(volume:pan:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var pan: Float","type":"property","path":"\/documentation\/haishinkit\/soundtransform\/pan"},{"title":"var volume: Float","type":"property","path":"\/documentation\/haishinkit\/soundtransform\/volume"},{"title":"Type Properties","type":"groupMarker"},{"title":"static let defaultPan: Float","type":"property","path":"\/documentation\/haishinkit\/soundtransform\/defaultpan"},{"title":"static let defaultVolume: Float","type":"property","path":"\/documentation\/haishinkit\/soundtransform\/defaultvolume"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var debugDescription: String","path":"\/documentation\/haishinkit\/soundtransform\/debugdescription"}],"title":"CustomDebugStringConvertible Implementations","type":"symbol","path":"\/documentation\/haishinkit\/soundtransform\/customdebugstringconvertible-implementations"},{"children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/haishinkit\/soundtransform\/!=(_:_:)"}],"title":"Equatable Implementations","type":"symbol","path":"\/documentation\/haishinkit\/soundtransform\/equatable-implementations"}],"title":"SoundTransform","path":"\/documentation\/haishinkit\/soundtransform","type":"struct"},{"children":[{"type":"groupMarker","title":"Structures"},{"children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.struct\/==(_:_:)","type":"op","title":"static func == (VideoCodecSettings.BitRateMode, VideoCodecSettings.BitRateMode) -> Bool"},{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.struct\/init(from:)","type":"init","title":"init(from: any Decoder) throws"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.struct\/description","type":"property","title":"var description: String"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.struct\/hash(into:)","type":"method","title":"func hash(into: inout Hasher)"},{"type":"groupMarker","title":"Type Properties"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.struct\/average","type":"property","title":"static let average: VideoCodecSettings.BitRateMode"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.struct\/constant","type":"property","title":"static let constant: VideoCodecSettings.BitRateMode"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.struct\/equatable-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.struct\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}],"title":"Equatable Implementations"}],"type":"struct","title":"VideoCodecSettings.BitRateMode","path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.struct"},{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init(from: any Decoder) throws","path":"\/documentation\/haishinkit\/videocodecsettings\/init(from:)"},{"type":"init","title":"init(videoSize: CGSize, bitRate: Int, profileLevel: String, scalingMode: VideoCodecSettings.ScalingMode, bitRateMode: VideoCodecSettings.BitRateMode, maxKeyFrameIntervalDuration: Int32, allowFrameReordering: Bool?, dataRateLimits: [Double]?, isLowLatencyRateControlEnabled: Bool, isHardwareAcceleratedEnabled: Bool)","path":"\/documentation\/haishinkit\/videocodecsettings\/init(videosize:bitrate:profilelevel:scalingmode:bitratemode:maxkeyframeintervalduration:allowframereordering:dataratelimits:islowlatencyratecontrolenabled:ishardwareacceleratedenabled:)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var allowFrameReordering: Bool?","path":"\/documentation\/haishinkit\/videocodecsettings\/allowframereordering"},{"type":"property","title":"var bitRate: Int","path":"\/documentation\/haishinkit\/videocodecsettings\/bitrate"},{"type":"property","title":"var bitRateMode: VideoCodecSettings.BitRateMode","path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.property"},{"type":"property","title":"var dataRateLimits: [Double]?","path":"\/documentation\/haishinkit\/videocodecsettings\/dataratelimits"},{"type":"property","title":"var frameInterval: Double","path":"\/documentation\/haishinkit\/videocodecsettings\/frameinterval"},{"type":"property","title":"var isHardwareAcceleratedEnabled: Bool","path":"\/documentation\/haishinkit\/videocodecsettings\/ishardwareacceleratedenabled"},{"type":"property","title":"var isLowLatencyRateControlEnabled: Bool","path":"\/documentation\/haishinkit\/videocodecsettings\/islowlatencyratecontrolenabled"},{"type":"property","title":"var maxKeyFrameIntervalDuration: Int32","path":"\/documentation\/haishinkit\/videocodecsettings\/maxkeyframeintervalduration"},{"type":"property","title":"var profileLevel: String","path":"\/documentation\/haishinkit\/videocodecsettings\/profilelevel"},{"type":"property","title":"var scalingMode: VideoCodecSettings.ScalingMode","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.property"},{"type":"property","title":"var videoSize: CGSize","path":"\/documentation\/haishinkit\/videocodecsettings\/videosize"},{"type":"groupMarker","title":"Type Properties"},{"type":"property","title":"static let `default`: VideoCodecSettings","path":"\/documentation\/haishinkit\/videocodecsettings\/default"},{"type":"property","title":"static let frameInterval01: Double","path":"\/documentation\/haishinkit\/videocodecsettings\/frameinterval01"},{"type":"property","title":"static let frameInterval05: Double","path":"\/documentation\/haishinkit\/videocodecsettings\/frameinterval05"},{"type":"property","title":"static let frameInterval10: Double","path":"\/documentation\/haishinkit\/videocodecsettings\/frameinterval10"},{"type":"property","title":"static let frameInterval30: Double","path":"\/documentation\/haishinkit\/videocodecsettings\/frameinterval30"},{"type":"groupMarker","title":"Enumerations"},{"type":"enum","title":"VideoCodecSettings.ScalingMode","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case cropSourceToCleanAperture","type":"case","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/cropsourcetocleanaperture"},{"title":"case letterbox","type":"case","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/letterbox"},{"title":"case normal","type":"case","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/normal"},{"title":"case trim","type":"case","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/trim"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: String)","type":"init","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/init(rawvalue:)"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/!=(_:_:)"}],"type":"symbol","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/equatable-implementations"},{"title":"RawRepresentable Implementations","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"type":"symbol","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/rawrepresentable-implementations"}]}],"title":"VideoCodecSettings","path":"\/documentation\/haishinkit\/videocodecsettings","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videomixersettings\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/haishinkit\/videomixersettings\/init(mode:ismuted:maintrack:)","title":"init(mode: VideoMixerSettings.Mode, isMuted: Bool, mainTrack: UInt8)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videomixersettings\/ismuted","title":"var isMuted: Bool","type":"property"},{"path":"\/documentation\/haishinkit\/videomixersettings\/maintrack","title":"var mainTrack: UInt8","type":"property"},{"path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.property","title":"var mode: VideoMixerSettings.Mode","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videomixersettings\/default","title":"static let `default`: VideoMixerSettings","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case offscreen","path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/offscreen","type":"case"},{"title":"case passthrough","path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/passthrough","type":"case"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: String)","path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/init(rawvalue:)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/!=(_:_:)"}],"path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/equatable-implementations","type":"symbol"},{"title":"RawRepresentable Implementations","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init(from: any Decoder) throws","path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/init(from:)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var hashValue: Int","path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/hashvalue"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func encode(to: any Encoder) throws","path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/encode(to:)"},{"type":"method","title":"func hash(into: inout Hasher)","path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/hash(into:)"}],"path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/rawrepresentable-implementations","type":"symbol"}],"title":"VideoMixerSettings.Mode","type":"enum"}],"title":"VideoMixerSettings","path":"\/documentation\/haishinkit\/videomixersettings","type":"struct"},{"title":"Variables","type":"groupMarker"},{"title":"let kHaishinKitIdentifier: String","path":"\/documentation\/haishinkit\/khaishinkitidentifier","type":"var"},{"title":"Type Aliases","type":"groupMarker"},{"title":"AudioDeviceConfigurationBlock","path":"\/documentation\/haishinkit\/audiodeviceconfigurationblock","type":"typealias"},{"title":"VideoDeviceConfigurationBlock","path":"\/documentation\/haishinkit\/videodeviceconfigurationblock","type":"typealias"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"title":"static func device(withLocalizedName: String, mediaType: AVMediaType) -> AVCaptureDevice?","path":"\/documentation\/haishinkit\/deviceutil\/device(withlocalizedname:mediatype:)","type":"method"}],"title":"DeviceUtil","path":"\/documentation\/haishinkit\/deviceutil","type":"enum"},{"children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","title":"case publishInsufficientBWOccured(report: NetworkMonitorReport)","path":"\/documentation\/haishinkit\/networkmonitorevent\/publishinsufficientbwoccured(report:)"},{"type":"case","title":"case reset","path":"\/documentation\/haishinkit\/networkmonitorevent\/reset"},{"type":"case","title":"case status(report: NetworkMonitorReport)","path":"\/documentation\/haishinkit\/networkmonitorevent\/status(report:)"}],"title":"NetworkMonitorEvent","path":"\/documentation\/haishinkit\/networkmonitorevent","type":"enum"},{"children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","path":"\/documentation\/haishinkit\/sessionmethod\/ingest","title":"case ingest"},{"type":"case","path":"\/documentation\/haishinkit\/sessionmethod\/playback","title":"case playback"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/sessionmethod\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/haishinkit\/sessionmethod\/equatable-implementations","title":"Equatable Implementations"}],"title":"SessionMethod","path":"\/documentation\/haishinkit\/sessionmethod","type":"enum"},{"children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","title":"case closed","path":"\/documentation\/haishinkit\/sessionreadystate\/closed"},{"type":"case","title":"case closing","path":"\/documentation\/haishinkit\/sessionreadystate\/closing"},{"type":"case","title":"case connecting","path":"\/documentation\/haishinkit\/sessionreadystate\/connecting"},{"type":"case","title":"case open","path":"\/documentation\/haishinkit\/sessionreadystate\/open"},{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init?(rawValue: Int)","path":"\/documentation\/haishinkit\/sessionreadystate\/init(rawvalue:)"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","title":"Equatable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/haishinkit\/sessionreadystate\/!=(_:_:)"}],"path":"\/documentation\/haishinkit\/sessionreadystate\/equatable-implementations"},{"type":"symbol","title":"RawRepresentable Implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/haishinkit\/sessionreadystate\/hashvalue","title":"var hashValue: Int"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/haishinkit\/sessionreadystate\/hash(into:)","title":"func hash(into: inout Hasher)"}],"path":"\/documentation\/haishinkit\/sessionreadystate\/rawrepresentable-implementations"}],"title":"SessionReadyState","path":"\/documentation\/haishinkit\/sessionreadystate","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case idle","type":"case","path":"\/documentation\/haishinkit\/streamreadystate\/idle"},{"title":"case play","type":"case","path":"\/documentation\/haishinkit\/streamreadystate\/play"},{"title":"case playing","type":"case","path":"\/documentation\/haishinkit\/streamreadystate\/playing"},{"title":"case publish","type":"case","path":"\/documentation\/haishinkit\/streamreadystate\/publish"},{"title":"case publishing","type":"case","path":"\/documentation\/haishinkit\/streamreadystate\/publishing"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: Int)","type":"init","path":"\/documentation\/haishinkit\/streamreadystate\/init(rawvalue:)"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","type":"symbol","path":"\/documentation\/haishinkit\/streamreadystate\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/haishinkit\/streamreadystate\/!=(_:_:)","type":"op"}]},{"title":"RawRepresentable Implementations","type":"symbol","path":"\/documentation\/haishinkit\/streamreadystate\/rawrepresentable-implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","path":"\/documentation\/haishinkit\/streamreadystate\/hashvalue","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func hash(into: inout Hasher)","path":"\/documentation\/haishinkit\/streamreadystate\/hash(into:)","type":"method"}]}],"title":"StreamReadyState","path":"\/documentation\/haishinkit\/streamreadystate","type":"enum"}],"path":"\/documentation\/haishinkit"},{"title":"SRTHaishinKit","type":"module","children":[{"title":"Classes","type":"groupMarker"},{"title":"SRTConnection","path":"\/documentation\/srthaishinkit\/srtconnection","type":"class","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init()","type":"init","path":"\/documentation\/srthaishinkit\/srtconnection\/init()"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var connected: Bool","type":"property","path":"\/documentation\/srthaishinkit\/srtconnection\/connected"},{"title":"var performanceData: SRTPerformanceData?","type":"property","path":"\/documentation\/srthaishinkit\/srtconnection\/performancedata"},{"title":"var uri: URL?","type":"property","path":"\/documentation\/srthaishinkit\/srtconnection\/uri"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func close() async","type":"method","path":"\/documentation\/srthaishinkit\/srtconnection\/close()"},{"title":"func connect(URL?) async throws","type":"method","path":"\/documentation\/srthaishinkit\/srtconnection\/connect(_:)"},{"title":"func getSocketOption(SRTSocketOption.Name) async throws -> SRTSocketOption?","type":"method","path":"\/documentation\/srthaishinkit\/srtconnection\/getsocketoption(_:)"},{"title":"func setSocketOption(SRTSocketOption) async throws","type":"method","path":"\/documentation\/srthaishinkit\/srtconnection\/setsocketoption(_:)"},{"title":"Type Properties","type":"groupMarker"},{"title":"static let version: String","type":"property","path":"\/documentation\/srthaishinkit\/srtconnection\/version"},{"title":"Enumerations","type":"groupMarker"},{"title":"SRTConnection.Error","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/srthaishinkit\/srtconnection\/error\/failedtoconnect(_:)","title":"case failedToConnect(SRTRejectReason)","type":"case"},{"path":"\/documentation\/srthaishinkit\/srtconnection\/error\/invalidstate","title":"case invalidState","type":"case"},{"path":"\/documentation\/srthaishinkit\/srtconnection\/error\/unsupporteduri(_:)","title":"case unsupportedUri(URL?)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/srthaishinkit\/srtconnection\/error\/error-implementations","title":"Error Implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/srthaishinkit\/srtconnection\/error\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"type":"symbol"}],"type":"enum","path":"\/documentation\/srthaishinkit\/srtconnection\/error"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Actor Implementations","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/srthaishinkit\/srtconnection\/assertisolated(_:file:line:)"},{"type":"method","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","path":"\/documentation\/srthaishinkit\/srtconnection\/assumeisolated(_:file:line:)"},{"type":"method","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/srthaishinkit\/srtconnection\/preconditionisolated(_:file:line:)"}],"type":"symbol","path":"\/documentation\/srthaishinkit\/srtconnection\/actor-implementations"}]},{"title":"SRTLogger","path":"\/documentation\/srthaishinkit\/srtlogger","type":"class","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var functionalAreas: Set<SRTLogFunctionalArea>","path":"\/documentation\/srthaishinkit\/srtlogger\/functionalareas","type":"property"},{"title":"var level: SRTLogLevel","path":"\/documentation\/srthaishinkit\/srtlogger\/level","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func setFunctionalAreas(Set<SRTLogFunctionalArea>)","path":"\/documentation\/srthaishinkit\/srtlogger\/setfunctionalareas(_:)","type":"method"},{"title":"func setLevel(SRTLogLevel)","path":"\/documentation\/srthaishinkit\/srtlogger\/setlevel(_:)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"title":"static let shared: SRTLogger","path":"\/documentation\/srthaishinkit\/srtlogger\/shared","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Actor Implementations","path":"\/documentation\/srthaishinkit\/srtlogger\/actor-implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/srthaishinkit\/srtlogger\/assertisolated(_:file:line:)","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method"},{"path":"\/documentation\/srthaishinkit\/srtlogger\/assumeisolated(_:file:line:)","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","type":"method"},{"path":"\/documentation\/srthaishinkit\/srtlogger\/preconditionisolated(_:file:line:)","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method"}],"type":"symbol"}]},{"title":"SRTStream","path":"\/documentation\/srthaishinkit\/srtstream","type":"class","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(connection: SRTConnection)","path":"\/documentation\/srthaishinkit\/srtstream\/init(connection:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var audioTrackId: UInt8?","path":"\/documentation\/srthaishinkit\/srtstream\/audiotrackid","type":"property"},{"title":"var readyState: StreamReadyState","path":"\/documentation\/srthaishinkit\/srtstream\/readystate","type":"property"},{"title":"var videoTrackId: UInt8?","path":"\/documentation\/srthaishinkit\/srtstream\/videotrackid","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func close() async","path":"\/documentation\/srthaishinkit\/srtstream\/close()","type":"method"},{"title":"func play(String?) async","path":"\/documentation\/srthaishinkit\/srtstream\/play(_:)","type":"method"},{"title":"func publish(String?) async","path":"\/documentation\/srthaishinkit\/srtstream\/publish(_:)","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"title":"SRTStream.Error","path":"\/documentation\/srthaishinkit\/srtstream\/error","type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/srthaishinkit\/srtstream\/error\/unsupportedcodec","title":"case unsupportedCodec","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/srthaishinkit\/srtstream\/error\/equatable-implementations","title":"Equatable Implementations","type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/srthaishinkit\/srtstream\/error\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}]},{"path":"\/documentation\/srthaishinkit\/srtstream\/error\/error-implementations","title":"Error Implementations","type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var localizedDescription: String","path":"\/documentation\/srthaishinkit\/srtstream\/error\/localizeddescription","type":"property"}]}]},{"title":"Default Implementations","type":"groupMarker"},{"title":"Actor Implementations","path":"\/documentation\/srthaishinkit\/srtstream\/actor-implementations","type":"symbol","children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/srthaishinkit\/srtstream\/assertisolated(_:file:line:)","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method"},{"path":"\/documentation\/srthaishinkit\/srtstream\/assumeisolated(_:file:line:)","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","type":"method"},{"path":"\/documentation\/srthaishinkit\/srtstream\/preconditionisolated(_:file:line:)","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method"}]},{"title":"MediaMixerOutput Implementations","path":"\/documentation\/srthaishinkit\/srtstream\/mediamixeroutput-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func mixer(MediaMixer, didOutput: CMSampleBuffer)","path":"\/documentation\/srthaishinkit\/srtstream\/mixer(_:didoutput:)"},{"type":"method","title":"func mixer(MediaMixer, didOutput: AVAudioPCMBuffer, when: AVAudioTime)","path":"\/documentation\/srthaishinkit\/srtstream\/mixer(_:didoutput:when:)"},{"type":"method","title":"func selectTrack(UInt8?, mediaType: CMFormatDescription.MediaType)","path":"\/documentation\/srthaishinkit\/srtstream\/selecttrack(_:mediatype:)"}]},{"title":"StreamConvertible Implementations","path":"\/documentation\/srthaishinkit\/srtstream\/streamconvertible-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var audioSettings: AudioCodecSettings","path":"\/documentation\/srthaishinkit\/srtstream\/audiosettings"},{"type":"property","title":"var soundTransform: SoundTransform?","path":"\/documentation\/srthaishinkit\/srtstream\/soundtransform"},{"type":"property","title":"var videoSettings: VideoCodecSettings","path":"\/documentation\/srthaishinkit\/srtstream\/videosettings"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func addOutput(some StreamOutput)","path":"\/documentation\/srthaishinkit\/srtstream\/addoutput(_:)"},{"type":"method","title":"func append(CMSampleBuffer)","path":"\/documentation\/srthaishinkit\/srtstream\/append(_:)"},{"type":"method","title":"func append(AVAudioBuffer, when: AVAudioTime)","path":"\/documentation\/srthaishinkit\/srtstream\/append(_:when:)"},{"type":"method","title":"func attachAudioPlayer(AudioPlayer?) async","path":"\/documentation\/srthaishinkit\/srtstream\/attachaudioplayer(_:)"},{"type":"method","title":"func dispatch(NetworkMonitorEvent) async","path":"\/documentation\/srthaishinkit\/srtstream\/dispatch(_:)"},{"type":"method","title":"func removeOutput(some StreamOutput)","path":"\/documentation\/srthaishinkit\/srtstream\/removeoutput(_:)"},{"type":"method","title":"func setAudioSettings(AudioCodecSettings) throws","path":"\/documentation\/srthaishinkit\/srtstream\/setaudiosettings(_:)"},{"type":"method","title":"func setBitRateStrategy((some StreamBitRateStrategy)?)","path":"\/documentation\/srthaishinkit\/srtstream\/setbitratestrategy(_:)"},{"type":"method","title":"func setSoundTransform(SoundTransform) async","path":"\/documentation\/srthaishinkit\/srtstream\/setsoundtransform(_:)"},{"type":"method","title":"func setVideoInputBufferCounts(Int)","path":"\/documentation\/srthaishinkit\/srtstream\/setvideoinputbuffercounts(_:)"},{"type":"method","title":"func setVideoSettings(VideoCodecSettings) throws","path":"\/documentation\/srthaishinkit\/srtstream\/setvideosettings(_:)"}]}]},{"title":"Structures","type":"groupMarker"},{"title":"SRTPerformanceData","path":"\/documentation\/srthaishinkit\/srtperformancedata","type":"struct","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/byteavailrcvbuf","title":"let byteAvailRcvBuf: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/byteavailsndbuf","title":"let byteAvailSndBuf: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytemss","title":"let byteMSS: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytercvbuf","title":"let byteRcvBuf: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytercvdrop","title":"let byteRcvDrop: UInt64"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytercvdroptotal","title":"let byteRcvDropTotal: UInt64"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytercvloss","title":"let byteRcvLoss: UInt64"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytercvlosstotal","title":"let byteRcvLossTotal: UInt64"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytercvundecrypt","title":"let byteRcvUndecrypt: UInt64"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytercvundecrypttotal","title":"let byteRcvUndecryptTotal: UInt64"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/byterecv","title":"let byteRecv: UInt64"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/byterecvtotal","title":"let byteRecvTotal: UInt64"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/byteretrans","title":"let byteRetrans: UInt64"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/byteretranstotal","title":"let byteRetransTotal: UInt64"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytesent","title":"let byteSent: UInt64"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytesenttotal","title":"let byteSentTotal: UInt64"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytesndbuf","title":"let byteSndBuf: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytesnddrop","title":"let byteSndDrop: UInt64"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytesnddroptotal","title":"let byteSndDropTotal: UInt64"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/mbpsbandwidth","title":"let mbpsBandwidth: Double"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/mbpsmaxbw","title":"let mbpsMaxBW: Double"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/mbpsrecvrate","title":"let mbpsRecvRate: Double"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/mbpssendrate","title":"let mbpsSendRate: Double"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/msrtt","title":"let msRTT: Double"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/msrcvbuf","title":"let msRcvBuf: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/msrcvtsbpddelay","title":"let msRcvTsbPdDelay: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/mssndbuf","title":"let msSndBuf: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/mssndtsbpddelay","title":"let msSndTsbPdDelay: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/mstimestamp","title":"let msTimeStamp: Int64"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktcongestionwindow","title":"let pktCongestionWindow: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktflightsize","title":"let pktFlightSize: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktflowwindow","title":"let pktFlowWindow: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvavgbelatedtime","title":"let pktRcvAvgBelatedTime: Double"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvbelated","title":"let pktRcvBelated: Int64"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvbuf","title":"let pktRcvBuf: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvdrop","title":"let pktRcvDrop: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvdroptotal","title":"let pktRcvDropTotal: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvfilterextra","title":"let pktRcvFilterExtra: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvfilterextratotal","title":"let pktRcvFilterExtraTotal: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvfilterloss","title":"let pktRcvFilterLoss: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvfilterlosstotal","title":"let pktRcvFilterLossTotal: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvfiltersupply","title":"let pktRcvFilterSupply: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvfiltersupplytotal","title":"let pktRcvFilterSupplyTotal: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvloss","title":"let pktRcvLoss: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvlosstotal","title":"let pktRcvLossTotal: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvretrans","title":"let pktRcvRetrans: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvundecrypt","title":"let pktRcvUndecrypt: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvundecrypttotal","title":"let pktRcvUndecryptTotal: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrecv","title":"let pktRecv: Int64"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrecvack","title":"let pktRecvACK: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrecvacktotal","title":"let pktRecvACKTotal: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrecvnak","title":"let pktRecvNAK: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrecvnaktotal","title":"let pktRecvNAKTotal: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrecvtotal","title":"let pktRecvTotal: Int64"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktreorderdistance","title":"let pktReorderDistance: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktreordertolerance","title":"let pktReorderTolerance: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktretrans","title":"let pktRetrans: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktretranstotal","title":"let pktRetransTotal: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsent","title":"let pktSent: Int64"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsentack","title":"let pktSentACK: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsentacktotal","title":"let pktSentACKTotal: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsentnak","title":"let pktSentNAK: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsentnaktotal","title":"let pktSentNAKTotal: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsenttotal","title":"let pktSentTotal: Int64"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsndbuf","title":"let pktSndBuf: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsnddrop","title":"let pktSndDrop: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsnddroptotal","title":"let pktSndDropTotal: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsndfilterextra","title":"let pktSndFilterExtra: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsndfilterextratotal","title":"let pktSndFilterExtraTotal: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsndloss","title":"let pktSndLoss: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsndlosstotal","title":"let pktSndLossTotal: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/uspktsndperiod","title":"let usPktSndPeriod: Double"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/ussndduration","title":"let usSndDuration: Int64"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/ussnddurationtotal","title":"let usSndDurationTotal: Int64"}]},{"title":"SRTSessionFactory","path":"\/documentation\/srthaishinkit\/srtsessionfactory","type":"struct","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/srthaishinkit\/srtsessionfactory\/init()","type":"init","title":"init()"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/srthaishinkit\/srtsessionfactory\/supportedprotocols","type":"property","title":"let supportedProtocols: Set<String>"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/srthaishinkit\/srtsessionfactory\/make(_:method:)","type":"method","title":"func make(URL, method: SessionMethod) -> any Session"}]},{"title":"SRTSocketOption","path":"\/documentation\/srthaishinkit\/srtsocketoption","type":"struct","children":[{"title":"Structures","type":"groupMarker"},{"title":"SRTSocketOption.Name","type":"struct","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/init(rawvalue:symbol:restriction:type:)","type":"init","title":"init(rawValue: String, symbol: SRT_SOCKOPT, restriction: SRTSocketOption.Restriction?, type: SRTSocketOption.CType)"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/rawvalue-swift.property","type":"property","title":"let rawValue: String"},{"type":"groupMarker","title":"Type Aliases"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/rawvalue-swift.typealias","type":"typealias","title":"SRTSocketOption.Name.RawValue"},{"type":"groupMarker","title":"Type Properties"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/bindtodevice","type":"property","title":"static let bindtodevice: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/congestion","type":"property","title":"static let congestion: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/conntimeo","type":"property","title":"static let conntimeo: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/drifttracer","type":"property","title":"static let drifttracer: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/enforcedencryption","type":"property","title":"static let enforcedencryption: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/event","type":"property","title":"static let event: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/fc","type":"property","title":"static let fc: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/groupconnect","type":"property","title":"static let groupconnect: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/groupminstabletimeo","type":"property","title":"static let groupminstabletimeo: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/grouptype","type":"property","title":"static let grouptype: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/inputbw","type":"property","title":"static let inputbw: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/iptos","type":"property","title":"static let iptos: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/ipttl","type":"property","title":"static let ipttl: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/ipv6only","type":"property","title":"static let ipv6only: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/isn","type":"property","title":"static let isn: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/kmpreannounce","type":"property","title":"static let kmpreannounce: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/kmrefreshrate","type":"property","title":"static let kmrefreshrate: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/kmstate","type":"property","title":"static let kmstate: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/latency","type":"property","title":"static let latency: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/lossmaxttl","type":"property","title":"static let lossmaxttl: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/maxbw","type":"property","title":"static let maxbw: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/messageapi","type":"property","title":"static let messageapi: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/mininputbw","type":"property","title":"static let mininputbw: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/minversion","type":"property","title":"static let minversion: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/mss","type":"property","title":"static let mss: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/nakreport","type":"property","title":"static let nakreport: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/oheadbw","type":"property","title":"static let oheadbw: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/packetfilter","type":"property","title":"static let packetfilter: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/passphrase","type":"property","title":"static let passphrase: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/pbkeylen","type":"property","title":"static let pbkeylen: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/peeridletimeo","type":"property","title":"static let peeridletimeo: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/peerlatency","type":"property","title":"static let peerlatency: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/peerversion","type":"property","title":"static let peerversion: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/rcvbuf","type":"property","title":"static let rcvbuf: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/rcvdata","type":"property","title":"static let rcvdata: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/rcvlatency","type":"property","title":"static let rcvlatency: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/rcvsyn","type":"property","title":"static let rcvsyn: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/rcvtimeo","type":"property","title":"static let rcvtimeo: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/rendezvous","type":"property","title":"static let rendezvous: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/retransmitalgo","type":"property","title":"static let retransmitalgo: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/reuseaddr","type":"property","title":"static let reuseaddr: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/sender","type":"property","title":"static let sender: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/sndbuf","type":"property","title":"static let sndbuf: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/snddata","type":"property","title":"static let snddata: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/snddropdelay","type":"property","title":"static let snddropdelay: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/sndkmstate","type":"property","title":"static let sndkmstate: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/sndsyn","type":"property","title":"static let sndsyn: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/sndtimeo","type":"property","title":"static let sndtimeo: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/state","type":"property","title":"static let state: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/streamid","type":"property","title":"static let streamid: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/tlpktdrop","type":"property","title":"static let tlpktdrop: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/transtype","type":"property","title":"static let transtype: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/tsbpdmode","type":"property","title":"static let tsbpdmode: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/udprcvbuf","type":"property","title":"static let udpRcvbuf: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/udpsndbuf","type":"property","title":"static let udpSndbuf: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/version","type":"property","title":"static let version: SRTSocketOption.Name"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/rawrepresentable-implementations","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"}],"type":"symbol","title":"RawRepresentable Implementations"}],"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct"},{"title":"Initializers","type":"groupMarker"},{"title":"init(name: SRTSocketOption.Name, value: String) throws","type":"init","path":"\/documentation\/srthaishinkit\/srtsocketoption\/init(name:value:)-3uyvp"},{"title":"init(name: SRTSocketOption.Name, value: Int) throws","type":"init","path":"\/documentation\/srthaishinkit\/srtsocketoption\/init(name:value:)-66kiu"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var boolValue: Bool","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/boolvalue"},{"title":"var intValue: Int","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/intvalue"},{"title":"let name: SRTSocketOption.Name","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.property"},{"title":"var stringValue: String","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/stringvalue"},{"title":"Enumerations","type":"groupMarker"},{"title":"SRTSocketOption.CType","type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/ctype\/bool","title":"case bool","type":"case"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/ctype\/int32","title":"case int32","type":"case"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/ctype\/int64","title":"case int64","type":"case"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/ctype\/string","title":"case string","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/ctype\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/ctype\/equatable-implementations","title":"Equatable Implementations","type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/srthaishinkit\/srtsocketoption\/ctype\/!=(_:_:)"}]},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/ctype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","path":"\/documentation\/srthaishinkit\/srtsocketoption\/ctype\/hashvalue","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func hash(into: inout Hasher)","path":"\/documentation\/srthaishinkit\/srtsocketoption\/ctype\/hash(into:)","type":"method"}]}],"path":"\/documentation\/srthaishinkit\/srtsocketoption\/ctype"},{"title":"SRTSocketOption.Error","type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case invalidArgument(String)","type":"case","path":"\/documentation\/srthaishinkit\/srtsocketoption\/error\/invalidargument(_:)"},{"title":"case invalidOption(String)","type":"case","path":"\/documentation\/srthaishinkit\/srtsocketoption\/error\/invalidoption(_:)"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Error Implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var localizedDescription: String","path":"\/documentation\/srthaishinkit\/srtsocketoption\/error\/localizeddescription"}],"path":"\/documentation\/srthaishinkit\/srtsocketoption\/error\/error-implementations"}],"path":"\/documentation\/srthaishinkit\/srtsocketoption\/error"},{"title":"SRTSocketOption.Restriction","type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","title":"case post","path":"\/documentation\/srthaishinkit\/srtsocketoption\/restriction\/post"},{"type":"case","title":"case pre","path":"\/documentation\/srthaishinkit\/srtsocketoption\/restriction\/pre"},{"type":"case","title":"case preBind","path":"\/documentation\/srthaishinkit\/srtsocketoption\/restriction\/prebind"},{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init?(rawValue: Int)","path":"\/documentation\/srthaishinkit\/srtsocketoption\/restriction\/init(rawvalue:)"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","title":"Equatable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/srthaishinkit\/srtsocketoption\/restriction\/!=(_:_:)","type":"op"}],"path":"\/documentation\/srthaishinkit\/srtsocketoption\/restriction\/equatable-implementations"},{"type":"symbol","title":"RawRepresentable Implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/restriction\/hashvalue","title":"var hashValue: Int"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/srthaishinkit\/srtsocketoption\/restriction\/hash(into:)","title":"func hash(into: inout Hasher)"}],"path":"\/documentation\/srthaishinkit\/srtsocketoption\/restriction\/rawrepresentable-implementations"}],"path":"\/documentation\/srthaishinkit\/srtsocketoption\/restriction"}]},{"title":"Variables","type":"groupMarker"},{"title":"let kSRTHaishinKitIdentifier: String","path":"\/documentation\/srthaishinkit\/ksrthaishinkitidentifier","type":"var"},{"title":"Enumerations","type":"groupMarker"},{"type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/apictrl","title":"case apiCtrl"},{"type":"case","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/apirecv","title":"case apiRecv"},{"type":"case","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/apisend","title":"case apiSend"},{"type":"case","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/applog","title":"case applog"},{"type":"case","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/bstats","title":"case bstats"},{"type":"case","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/bufrecv","title":"case bufRecv"},{"type":"case","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/bufsend","title":"case bufSend"},{"type":"case","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/chanrecv","title":"case chanRecv"},{"type":"case","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/chnmgmt","title":"case chnMgmt"},{"type":"case","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/chnsend","title":"case chnSend"},{"type":"case","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/congest","title":"case congest"},{"type":"case","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/control","title":"case control"},{"type":"case","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/data","title":"case data"},{"type":"case","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/epollapi","title":"case epollApi"},{"type":"case","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/epollupd","title":"case epollUpd"},{"type":"case","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/general","title":"case general"},{"type":"case","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/grpmgmt","title":"case grpMgmt"},{"type":"case","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/grprecv","title":"case grpRecv"},{"type":"case","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/grpsend","title":"case grpSend"},{"type":"case","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/haicrypt","title":"case haicrypt"},{"type":"case","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/internal","title":"case `internal`"},{"type":"case","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/pfilter","title":"case pfilter"},{"type":"case","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/quectrl","title":"case queCtrl"},{"type":"case","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/quemgmt","title":"case queMgmt"},{"type":"case","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/querecv","title":"case queRecv"},{"type":"case","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/quesend","title":"case queSend"},{"type":"case","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/rsrc","title":"case rsrc"},{"type":"case","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/tsbpd","title":"case tsbpd"},{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/init(rawvalue:)","title":"init?(rawValue: Int32)"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"type":"symbol","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/equatable-implementations","title":"Equatable Implementations"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/hashvalue","title":"var hashValue: Int"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/hash(into:)","title":"func hash(into: inout Hasher)"}],"type":"symbol","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/rawrepresentable-implementations","title":"RawRepresentable Implementations"}],"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea","title":"SRTLogFunctionalArea"},{"type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","title":"case crit","path":"\/documentation\/srthaishinkit\/srtloglevel\/crit"},{"type":"case","title":"case debug","path":"\/documentation\/srthaishinkit\/srtloglevel\/debug"},{"type":"case","title":"case error","path":"\/documentation\/srthaishinkit\/srtloglevel\/error"},{"type":"case","title":"case notice","path":"\/documentation\/srthaishinkit\/srtloglevel\/notice"},{"type":"case","title":"case warning","path":"\/documentation\/srthaishinkit\/srtloglevel\/warning"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/srthaishinkit\/srtloglevel\/!=(_:_:)","type":"op"}],"title":"Equatable Implementations","path":"\/documentation\/srthaishinkit\/srtloglevel\/equatable-implementations"}],"path":"\/documentation\/srthaishinkit\/srtloglevel","title":"SRTLogLevel"},{"type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","title":"case backlog","path":"\/documentation\/srthaishinkit\/srtrejectreason\/backlog"},{"type":"case","title":"case badsecret","path":"\/documentation\/srthaishinkit\/srtrejectreason\/badsecret"},{"type":"case","title":"case close","path":"\/documentation\/srthaishinkit\/srtrejectreason\/close"},{"type":"case","title":"case congestion","path":"\/documentation\/srthaishinkit\/srtrejectreason\/congestion"},{"type":"case","title":"case crypto","path":"\/documentation\/srthaishinkit\/srtrejectreason\/crypto"},{"type":"case","title":"case filter","path":"\/documentation\/srthaishinkit\/srtrejectreason\/filter"},{"type":"case","title":"case group","path":"\/documentation\/srthaishinkit\/srtrejectreason\/group"},{"type":"case","title":"case ipe","path":"\/documentation\/srthaishinkit\/srtrejectreason\/ipe"},{"type":"case","title":"case messageapi","path":"\/documentation\/srthaishinkit\/srtrejectreason\/messageapi"},{"type":"case","title":"case peer","path":"\/documentation\/srthaishinkit\/srtrejectreason\/peer"},{"type":"case","title":"case rdvcookie","path":"\/documentation\/srthaishinkit\/srtrejectreason\/rdvcookie"},{"type":"case","title":"case resource","path":"\/documentation\/srthaishinkit\/srtrejectreason\/resource"},{"type":"case","title":"case rogue","path":"\/documentation\/srthaishinkit\/srtrejectreason\/rogue"},{"type":"case","title":"case system","path":"\/documentation\/srthaishinkit\/srtrejectreason\/system"},{"type":"case","title":"case timeout","path":"\/documentation\/srthaishinkit\/srtrejectreason\/timeout"},{"type":"case","title":"case unknown","path":"\/documentation\/srthaishinkit\/srtrejectreason\/unknown"},{"type":"case","title":"case unsecure","path":"\/documentation\/srthaishinkit\/srtrejectreason\/unsecure"},{"type":"case","title":"case version","path":"\/documentation\/srthaishinkit\/srtrejectreason\/version"},{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init?(rawValue: Int)","path":"\/documentation\/srthaishinkit\/srtrejectreason\/init(rawvalue:)"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/srthaishinkit\/srtrejectreason\/!=(_:_:)","type":"op"}],"title":"Equatable Implementations","path":"\/documentation\/srthaishinkit\/srtrejectreason\/equatable-implementations"},{"type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/srthaishinkit\/srtrejectreason\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/srthaishinkit\/srtrejectreason\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"title":"RawRepresentable Implementations","path":"\/documentation\/srthaishinkit\/srtrejectreason\/rawrepresentable-implementations"}],"path":"\/documentation\/srthaishinkit\/srtrejectreason","title":"SRTRejectReason"}],"path":"\/documentation\/srthaishinkit"},{"title":"RTMPHaishinKit","type":"module","children":[{"title":"Articles","type":"groupMarker"},{"path":"\/documentation\/rtmphaishinkit\/e-rtmp","title":"Enhanced RTMP","type":"article"},{"title":"Classes","type":"groupMarker"},{"path":"\/documentation\/rtmphaishinkit\/rtmpconnection","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(swfUrl: String?, pageUrl: String?, flashVer: String, fourCcList: [String]?, videoFourCcInfoMap: AMFObject?, audioFourCcInfoMap: AMFObject?, capsEx: Int, timeout: Int, requestTimeout: UInt64, chunkSize: Int, qualityOfService: DispatchQoS)","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/init(swfurl:pageurl:flashver:fourcclist:videofourccinfomap:audiofourccinfomap:capsex:timeout:requesttimeout:chunksize:qualityofservice:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let audioFourCcInfoMap: AMFObject?","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/audiofourccinfomap","type":"property"},{"title":"let capsEx: Int","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/capsex","type":"property"},{"title":"let chunkSize: Int","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/chunksize","type":"property"},{"title":"var connected: Bool","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/connected","type":"property"},{"title":"let flashVer: String","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/flashver","type":"property"},{"title":"let fourCcList: [String]?","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/fourcclist","type":"property"},{"title":"let objectEncoding: RTMPObjectEncoding","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/objectencoding","type":"property"},{"title":"let pageUrl: String?","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/pageurl","type":"property"},{"title":"let qualityOfService: DispatchQoS","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/qualityofservice","type":"property"},{"title":"let requestTimeout: UInt64","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/requesttimeout","type":"property"},{"title":"var status: AsyncStream<RTMPStatus>","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/status","type":"property"},{"title":"let swfUrl: String?","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/swfurl","type":"property"},{"title":"let timeout: Int","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/timeout","type":"property"},{"title":"var uri: URL?","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/uri","type":"property"},{"title":"let videoFourCcInfoMap: AMFObject?","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/videofourccinfomap","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func call(String, arguments: (any Sendable)?...) async throws -> RTMPResponse","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/call(_:arguments:)","type":"method"},{"title":"func close() async throws","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/close()","type":"method"},{"title":"func connect(String, arguments: (any Sendable)?...) async throws -> RTMPResponse","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/connect(_:arguments:)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"title":"static let defaultCapabilities: Int","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/defaultcapabilities","type":"property"},{"title":"static let defaultChunkSizeS: Int","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/defaultchunksizes","type":"property"},{"title":"static let defaultFlashVer: String","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/defaultflashver","type":"property"},{"title":"static let defaultObjectEncoding: RTMPObjectEncoding","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/defaultobjectencoding","type":"property"},{"title":"static let defaultPort: Int","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/defaultport","type":"property"},{"title":"static let defaultRequestTimeout: UInt64","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/defaultrequesttimeout","type":"property"},{"title":"static let defaultSecurePort: Int","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/defaultsecureport","type":"property"},{"title":"static let defaultTimeout: Int","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/defaulttimeout","type":"property"},{"title":"static let defaultWindowSizeS: Int64","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/defaultwindowsizes","type":"property"},{"title":"static let supportedAudioFourCcInfoMap: AMFObject","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/supportedaudiofourccinfomap","type":"property"},{"title":"static let supportedFourCcList: [String]","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/supportedfourcclist","type":"property"},{"title":"static let supportedProtocols: Set<String>","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/supportedprotocols","type":"property"},{"title":"static let supportedVideoFourCcInfoMap: AMFObject","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/supportedvideofourccinfomap","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/code\/callbadversion","type":"case","title":"case callBadVersion"},{"path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/code\/callfailed","type":"case","title":"case callFailed"},{"path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/code\/callprohibited","type":"case","title":"case callProhibited"},{"path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/code\/connectappshutdown","type":"case","title":"case connectAppshutdown"},{"path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/code\/connectclosed","type":"case","title":"case connectClosed"},{"path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/code\/connectfailed","type":"case","title":"case connectFailed"},{"path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/code\/connectidletimeout","type":"case","title":"case connectIdleTimeOut"},{"path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/code\/connectinvalidapp","type":"case","title":"case connectInvalidApp"},{"path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/code\/connectnetworkchange","type":"case","title":"case connectNetworkChange"},{"path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/code\/connectrejected","type":"case","title":"case connectRejected"},{"path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/code\/connectsuccess","type":"case","title":"case connectSuccess"},{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/code\/init(rawvalue:)","type":"init","title":"init?(rawValue: String)"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/code\/level","type":"property","title":"var level: String"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/code\/equatable-implementations","type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/code\/!=(_:_:)","type":"op"}],"title":"Equatable Implementations"},{"path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/code\/rawrepresentable-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/code\/hashvalue","type":"property","title":"var hashValue: Int"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/code\/hash(into:)","type":"method","title":"func hash(into: inout Hasher)"}],"title":"RawRepresentable Implementations"}],"title":"RTMPConnection.Code","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/code","type":"enum"},{"children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/error\/connectiontimedout","type":"case","title":"case connectionTimedOut"},{"path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/error\/invalidstate","type":"case","title":"case invalidState"},{"path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/error\/requestfailed(response:)","type":"case","title":"case requestFailed(response: RTMPResponse)"},{"path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/error\/requesttimedout","type":"case","title":"case requestTimedOut"},{"path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/error\/socketerroroccurred(_:)","type":"case","title":"case socketErrorOccurred((any Error)?)"},{"path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/error\/unsupportedcommand(_:)","type":"case","title":"case unsupportedCommand(String)"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/error\/error-implementations","type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/error\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"title":"Error Implementations"}],"title":"RTMPConnection.Error","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/error","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/assertisolated(_:file:line:)","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method"},{"path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/assumeisolated(_:file:line:)","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","type":"method"},{"path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/preconditionisolated(_:file:line:)","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method"}],"title":"Actor Implementations","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/actor-implementations","type":"symbol"}],"title":"RTMPConnection","type":"class"},{"path":"\/documentation\/rtmphaishinkit\/rtmpsharedobject","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/rtmphaishinkit\/rtmpsharedobject\/data","title":"var data: AMFObject","type":"property"},{"path":"\/documentation\/rtmphaishinkit\/rtmpsharedobject\/objectencoding","title":"let objectEncoding: RTMPObjectEncoding","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/rtmphaishinkit\/rtmpsharedobject\/clear()","title":"func clear() async","type":"method"},{"path":"\/documentation\/rtmphaishinkit\/rtmpsharedobject\/close()","title":"func close() async","type":"method"},{"path":"\/documentation\/rtmphaishinkit\/rtmpsharedobject\/connect(_:)","title":"func connect(RTMPConnection) async","type":"method"},{"path":"\/documentation\/rtmphaishinkit\/rtmpsharedobject\/setproperty(_:_:)","title":"func setProperty(String, (any Sendable)?) async","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/rtmphaishinkit\/rtmpsharedobject\/getremote(withname:remotepath:persistence:)","title":"static func getRemote(withName: String, remotePath: String, persistence: Bool) -> RTMPSharedObject","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/rtmphaishinkit\/rtmpsharedobject\/actor-implementations","title":"Actor Implementations","type":"symbol","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method","path":"\/documentation\/rtmphaishinkit\/rtmpsharedobject\/assertisolated(_:file:line:)"},{"title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","type":"method","path":"\/documentation\/rtmphaishinkit\/rtmpsharedobject\/assumeisolated(_:file:line:)"},{"title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method","path":"\/documentation\/rtmphaishinkit\/rtmpsharedobject\/preconditionisolated(_:file:line:)"}]}],"title":"RTMPSharedObject","type":"class"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/init(connection:fcpublishname:)","title":"init(connection: RTMPConnection, fcPublishName: String?)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/audiosampleaccess","title":"var audioSampleAccess: Bool"},{"type":"property","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/audiotrackid","title":"var audioTrackId: UInt8?"},{"type":"property","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/currentfps","title":"var currentFPS: UInt16"},{"type":"property","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/fcpublishname","title":"var fcPublishName: String?"},{"type":"property","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/info","title":"var info: RTMPStreamInfo"},{"type":"property","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/metadata","title":"var metadata: AMFArray"},{"type":"property","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/objectencoding","title":"var objectEncoding: RTMPObjectEncoding"},{"type":"property","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/readystate","title":"var readyState: StreamReadyState"},{"type":"property","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/status","title":"var status: AsyncStream<RTMPStatus>"},{"type":"property","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/videosampleaccess","title":"var videoSampleAccess: Bool"},{"type":"property","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/videotrackid","title":"var videoTrackId: UInt8?"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/close()","title":"func close() async throws -> RTMPResponse"},{"type":"method","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/pause(_:)","title":"func pause(Bool) async throws -> RTMPResponse"},{"type":"method","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/play(_:)","title":"func play((any Sendable)?...) async throws -> RTMPResponse"},{"type":"method","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/publish(_:type:)","title":"func publish(String?, type: RTMPStream.HowToPublish) async throws -> RTMPResponse"},{"type":"method","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/receiveaudio(_:)","title":"func receiveAudio(Bool) async throws"},{"type":"method","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/receivevideo(_:)","title":"func receiveVideo(Bool) async throws"},{"type":"method","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/seek(_:)","title":"func seek(Double) async throws"},{"type":"method","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/send(_:arguments:isresettimestamp:)","title":"func send(String, arguments: (any Sendable)?..., isResetTimestamp: Bool) throws"},{"type":"method","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/togglepause()","title":"func togglePause() async throws -> RTMPResponse"},{"type":"groupMarker","title":"Enumerations"},{"type":"enum","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code","title":"RTMPStream.Code","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/bufferempty","title":"case bufferEmpty"},{"type":"case","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/bufferflush","title":"case bufferFlush"},{"type":"case","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/bufferfull","title":"case bufferFull"},{"type":"case","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/connectclosed","title":"case connectClosed"},{"type":"case","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/connectfailed","title":"case connectFailed"},{"type":"case","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/connectrejected","title":"case connectRejected"},{"type":"case","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/connectsuccess","title":"case connectSuccess"},{"type":"case","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/drmupdateneeded","title":"case drmUpdateNeeded"},{"type":"case","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/failed","title":"case failed"},{"type":"case","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/multicaststreamreset","title":"case multicastStreamReset"},{"type":"case","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/pausenotify","title":"case pauseNotify"},{"type":"case","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/playfailed","title":"case playFailed"},{"type":"case","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/playfilestructureinvalid","title":"case playFileStructureInvalid"},{"type":"case","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/playinsufficientbw","title":"case playInsufficientBW"},{"type":"case","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/playnosupportedtrackfound","title":"case playNoSupportedTrackFound"},{"type":"case","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/playreset","title":"case playReset"},{"type":"case","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/playstart","title":"case playStart"},{"type":"case","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/playstop","title":"case playStop"},{"type":"case","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/playstreamnotfound","title":"case playStreamNotFound"},{"type":"case","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/playtransition","title":"case playTransition"},{"type":"case","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/playunpublishnotify","title":"case playUnpublishNotify"},{"type":"case","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/publishbadname","title":"case publishBadName"},{"type":"case","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/publishidle","title":"case publishIdle"},{"type":"case","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/publishstart","title":"case publishStart"},{"type":"case","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/recordalreadyexists","title":"case recordAlreadyExists"},{"type":"case","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/recorddiskquotaexceeded","title":"case recordDiskQuotaExceeded"},{"type":"case","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/recordfailed","title":"case recordFailed"},{"type":"case","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/recordnoaccess","title":"case recordNoAccess"},{"type":"case","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/recordstart","title":"case recordStart"},{"type":"case","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/recordstop","title":"case recordStop"},{"type":"case","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/secondscreenstart","title":"case secondScreenStart"},{"type":"case","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/secondscreenstop","title":"case secondScreenStop"},{"type":"case","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/seekfailed","title":"case seekFailed"},{"type":"case","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/seekinvalidtime","title":"case seekInvalidTime"},{"type":"case","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/seeknotify","title":"case seekNotify"},{"type":"case","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/stepnotify","title":"case stepNotify"},{"type":"case","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/unpausenotify","title":"case unpauseNotify"},{"type":"case","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/unpublishsuccess","title":"case unpublishSuccess"},{"type":"case","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/videodimensionchange","title":"case videoDimensionChange"},{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/init(rawvalue:)","title":"init?(rawValue: String)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/level","title":"var level: String"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/!=(_:_:)"}],"type":"symbol","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/equatable-implementations","title":"Equatable Implementations"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var hashValue: Int","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/hashvalue"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func hash(into: inout Hasher)","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/hash(into:)"}],"type":"symbol","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/rawrepresentable-implementations","title":"RawRepresentable Implementations"}]},{"type":"enum","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/error","title":"RTMPStream.Error","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/error\/invalidstate","title":"case invalidState","type":"case"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/error\/requestfailed(response:)","title":"case requestFailed(response: RTMPResponse)","type":"case"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/error\/requesttimedout","title":"case requestTimedOut","type":"case"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/error\/unsupportedcodec","title":"case unsupportedCodec","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/error\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/error\/error-implementations","title":"Error Implementations","type":"symbol"}]},{"type":"enum","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/howtopublish","title":"RTMPStream.HowToPublish","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/howtopublish\/append","title":"case append","type":"case"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/howtopublish\/appendwithgap","title":"case appendWithGap","type":"case"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/howtopublish\/live","title":"case live","type":"case"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/howtopublish\/record","title":"case record","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/howtopublish\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/howtopublish\/equatable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/howtopublish\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"}],"title":"Equatable Implementations","type":"symbol"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/howtopublish\/rawrepresentable-implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","type":"property","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/howtopublish\/hashvalue"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func hash(into: inout Hasher)","type":"method","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/howtopublish\/hash(into:)"}],"title":"RawRepresentable Implementations","type":"symbol"}]},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/actor-implementations","title":"Actor Implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/assertisolated(_:file:line:)"},{"title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","type":"method","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/assumeisolated(_:file:line:)"},{"title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/preconditionisolated(_:file:line:)"}]},{"type":"symbol","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/mediamixeroutput-implementations","title":"MediaMixerOutput Implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func mixer(MediaMixer, didOutput: CMSampleBuffer)","type":"method","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/mixer(_:didoutput:)"},{"title":"func mixer(MediaMixer, didOutput: AVAudioPCMBuffer, when: AVAudioTime)","type":"method","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/mixer(_:didoutput:when:)"},{"title":"func selectTrack(UInt8?, mediaType: CMFormatDescription.MediaType)","type":"method","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/selecttrack(_:mediatype:)"}]},{"type":"symbol","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/streamconvertible-implementations","title":"StreamConvertible Implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/audiosettings","title":"var audioSettings: AudioCodecSettings","type":"property"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/soundtransform","title":"var soundTransform: SoundTransform?","type":"property"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/videosettings","title":"var videoSettings: VideoCodecSettings","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/addoutput(_:)","title":"func addOutput(some StreamOutput)","type":"method"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/append(_:)","title":"func append(CMSampleBuffer)","type":"method"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/append(_:when:)","title":"func append(AVAudioBuffer, when: AVAudioTime)","type":"method"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/attachaudioplayer(_:)","title":"func attachAudioPlayer(AudioPlayer?) async","type":"method"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/dispatch(_:)","title":"func dispatch(NetworkMonitorEvent) async","type":"method"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/removeoutput(_:)","title":"func removeOutput(some StreamOutput)","type":"method"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/setaudiosettings(_:)","title":"func setAudioSettings(AudioCodecSettings) throws","type":"method"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/setbitratestrategy(_:)","title":"func setBitRateStrategy((some StreamBitRateStrategy)?)","type":"method"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/setsoundtransform(_:)","title":"func setSoundTransform(SoundTransform) async","type":"method"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/setvideoinputbuffercounts(_:)","title":"func setVideoInputBufferCounts(Int)","type":"method"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/setvideosettings(_:)","title":"func setVideoSettings(VideoCodecSettings) throws","type":"method"}]}],"title":"RTMPStream","type":"class"},{"title":"Structures","type":"groupMarker"},{"path":"\/documentation\/rtmphaishinkit\/amfarray","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(count: Int)","path":"\/documentation\/rtmphaishinkit\/amfarray\/init(count:)","type":"init"},{"title":"init(data: [(any Sendable)?])","path":"\/documentation\/rtmphaishinkit\/amfarray\/init(data:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var length: Int","path":"\/documentation\/rtmphaishinkit\/amfarray\/length","type":"property"},{"title":"Subscripts","type":"groupMarker"},{"title":"subscript(Any) -> (any Sendable)?","path":"\/documentation\/rtmphaishinkit\/amfarray\/subscript(_:)","type":"subscript"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var debugDescription: String","type":"property","path":"\/documentation\/rtmphaishinkit\/amfarray\/debugdescription"}],"title":"CustomDebugStringConvertible Implementations","path":"\/documentation\/rtmphaishinkit\/amfarray\/customdebugstringconvertible-implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/rtmphaishinkit\/amfarray\/!=(_:_:)","type":"op"},{"title":"static func == (AMFArray, AMFArray) -> Bool","path":"\/documentation\/rtmphaishinkit\/amfarray\/==(_:_:)","type":"op"}],"title":"Equatable Implementations","path":"\/documentation\/rtmphaishinkit\/amfarray\/equatable-implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(arrayLiteral: (any Sendable)?...)","type":"init","path":"\/documentation\/rtmphaishinkit\/amfarray\/init(arrayliteral:)"}],"title":"ExpressibleByArrayLiteral Implementations","path":"\/documentation\/rtmphaishinkit\/amfarray\/expressiblebyarrayliteral-implementations","type":"symbol"}],"title":"AMFArray","type":"struct"},{"path":"\/documentation\/rtmphaishinkit\/amftypedobject","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/rtmphaishinkit\/amftypedobject\/data","type":"property","title":"let data: AMFObject"},{"path":"\/documentation\/rtmphaishinkit\/amftypedobject\/typename","type":"property","title":"let typeName: String"}],"title":"AMFTypedObject","type":"struct"},{"path":"\/documentation\/rtmphaishinkit\/amfundefined","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/rtmphaishinkit\/amfundefined\/description","title":"var description: String"}],"title":"AMFUndefined","type":"struct"},{"path":"\/documentation\/rtmphaishinkit\/amfxml","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init(data: String)","path":"\/documentation\/rtmphaishinkit\/amfxml\/init(data:)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var description: String","path":"\/documentation\/rtmphaishinkit\/amfxml\/description"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","title":"Equatable Implementations","path":"\/documentation\/rtmphaishinkit\/amfxml\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/rtmphaishinkit\/amfxml\/!=(_:_:)","type":"op"},{"title":"static func == (AMFXML, AMFXML) -> Bool","path":"\/documentation\/rtmphaishinkit\/amfxml\/==(_:_:)","type":"op"}]}],"title":"AMFXML","type":"struct"},{"path":"\/documentation\/rtmphaishinkit\/amfxmldocument","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/rtmphaishinkit\/amfxmldocument\/init(data:)","title":"init(data: String)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/rtmphaishinkit\/amfxmldocument\/description","title":"var description: String"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/rtmphaishinkit\/amfxmldocument\/!=(_:_:)","type":"op"},{"title":"static func == (AMFXMLDocument, AMFXMLDocument) -> Bool","path":"\/documentation\/rtmphaishinkit\/amfxmldocument\/==(_:_:)","type":"op"}],"type":"symbol","path":"\/documentation\/rtmphaishinkit\/amfxmldocument\/equatable-implementations","title":"Equatable Implementations"}],"title":"AMFXMLDocument","type":"struct"},{"path":"\/documentation\/rtmphaishinkit\/hkatomic","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/rtmphaishinkit\/hkatomic\/init(_:)","title":"init(A)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/rtmphaishinkit\/hkatomic\/value","title":"var value: A","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/rtmphaishinkit\/hkatomic\/mutate(_:)","title":"func mutate((inout A) -> Void)","type":"method"}],"title":"HKAtomic","type":"struct"},{"path":"\/documentation\/rtmphaishinkit\/rtmpresponse","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"let arguments: [(any Sendable)?]","path":"\/documentation\/rtmphaishinkit\/rtmpresponse\/arguments"},{"type":"property","title":"let status: RTMPStatus?","path":"\/documentation\/rtmphaishinkit\/rtmpresponse\/status"}],"title":"RTMPResponse","type":"struct"},{"path":"\/documentation\/rtmphaishinkit\/rtmpsessionfactory","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/rtmphaishinkit\/rtmpsessionfactory\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/rtmphaishinkit\/rtmpsessionfactory\/supportedprotocols","title":"let supportedProtocols: Set<String>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/rtmphaishinkit\/rtmpsessionfactory\/make(_:method:)","title":"func make(URL, method: SessionMethod) -> any Session","type":"method"}],"title":"RTMPSessionFactory","type":"struct"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstatus","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstatus\/code","title":"let code: String","type":"property"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstatus\/description","title":"let description: String","type":"property"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstatus\/level","title":"let level: String","type":"property"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstatus\/subscript(dynamicmember:)-2uh36","title":"subscript(dynamicMember _: String) -> Double?","type":"subscript"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstatus\/subscript(dynamicmember:)-710qw","title":"subscript(dynamicMember _: String) -> String?","type":"subscript"}],"title":"RTMPStatus","type":"struct"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstreaminfo","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstreaminfo\/bytecount","title":"var byteCount: Int","type":"property"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstreaminfo\/currentbytespersecond","title":"var currentBytesPerSecond: Int","type":"property"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstreaminfo\/resourcename","title":"var resourceName: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstreaminfo\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var debugDescription: String","path":"\/documentation\/rtmphaishinkit\/rtmpstreaminfo\/debugdescription","type":"property"}]}],"title":"RTMPStreamInfo","type":"struct"},{"title":"Variables","type":"groupMarker"},{"path":"\/documentation\/rtmphaishinkit\/kamfundefined","title":"let kAMFUndefined: AMFUndefined","type":"var"},{"path":"\/documentation\/rtmphaishinkit\/krtmphaishinkitidentifier","title":"let kRTMPHaishinKitIdentifier: String","type":"var"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/rtmphaishinkit\/amfobject","title":"AMFObject","type":"typealias"},{"title":"Enumerations","type":"groupMarker"},{"path":"\/documentation\/rtmphaishinkit\/rtmpobjectencoding","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/rtmphaishinkit\/rtmpobjectencoding\/amf0","type":"case","title":"case amf0"},{"path":"\/documentation\/rtmphaishinkit\/rtmpobjectencoding\/amf3","type":"case","title":"case amf3"},{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/rtmphaishinkit\/rtmpobjectencoding\/init(rawvalue:)","type":"init","title":"init?(rawValue: UInt8)"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/rtmphaishinkit\/rtmpobjectencoding\/equatable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/rtmphaishinkit\/rtmpobjectencoding\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}],"type":"symbol","title":"Equatable Implementations"},{"path":"\/documentation\/rtmphaishinkit\/rtmpobjectencoding\/rawrepresentable-implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/rtmphaishinkit\/rtmpobjectencoding\/hashvalue","title":"var hashValue: Int"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/rtmphaishinkit\/rtmpobjectencoding\/hash(into:)","title":"func hash(into: inout Hasher)"}],"type":"symbol","title":"RawRepresentable Implementations"}],"title":"RTMPObjectEncoding","type":"enum"}],"path":"\/documentation\/rtmphaishinkit"},{"title":"MoQTHaishinKit","type":"module","children":[{"title":"Classes","type":"groupMarker"},{"title":"MoQTConnection","type":"class","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(MoQTSetupRole, requestTimeOut: UInt64)","type":"init","path":"\/documentation\/moqthaishinkit\/moqtconnection\/init(_:requesttimeout:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var objectStream: AsyncStream<MoQTObject>","type":"property","path":"\/documentation\/moqthaishinkit\/moqtconnection\/objectstream"},{"title":"let requestTimeout: UInt64","type":"property","path":"\/documentation\/moqthaishinkit\/moqtconnection\/requesttimeout"},{"title":"let role: MoQTSetupRole","type":"property","path":"\/documentation\/moqthaishinkit\/moqtconnection\/role"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func annouce([String], authInfo: String?) async throws -> Result<MoQTAnnounceOk, MoQTAnnounceError>","type":"method","path":"\/documentation\/moqthaishinkit\/moqtconnection\/annouce(_:authinfo:)"},{"title":"func close() async","type":"method","path":"\/documentation\/moqthaishinkit\/moqtconnection\/close()"},{"title":"func connect(String) async throws -> MoQTServerSetup","type":"method","path":"\/documentation\/moqthaishinkit\/moqtconnection\/connect(_:)"},{"title":"func send([MoQTObject], header: MoQTStreamHeaderSubgroup) async throws","type":"method","path":"\/documentation\/moqthaishinkit\/moqtconnection\/send(_:header:)"},{"title":"func subscribe([String], name: String, authInfo: String?) async throws -> Result<MoQTSubscribeOk, MoQTSubscribeError>","type":"method","path":"\/documentation\/moqthaishinkit\/moqtconnection\/subscribe(_:name:authinfo:)"},{"title":"func subscribeAnnouces([String], authInfo: String?) async throws -> Result<MoQTSubscribeAnnouncesOk, MoQTSubscribeAnnouncesError>","type":"method","path":"\/documentation\/moqthaishinkit\/moqtconnection\/subscribeannouces(_:authinfo:)"},{"title":"Type Properties","type":"groupMarker"},{"title":"static let defaultPort: Int","type":"property","path":"\/documentation\/moqthaishinkit\/moqtconnection\/defaultport"},{"title":"static let defaultRequestTimeout: UInt64","type":"property","path":"\/documentation\/moqthaishinkit\/moqtconnection\/defaultrequesttimeout"},{"title":"static let supportedProtocols: [String]","type":"property","path":"\/documentation\/moqthaishinkit\/moqtconnection\/supportedprotocols"},{"title":"static let supportedVersions: [MoQTVersion]","type":"property","path":"\/documentation\/moqthaishinkit\/moqtconnection\/supportedversions"},{"title":"Enumerations","type":"groupMarker"},{"title":"MoQTConnection.Error","type":"enum","path":"\/documentation\/moqthaishinkit\/moqtconnection\/error","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/error\/connectiontimedout","title":"case connectionTimedOut","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/error\/invalidstate","title":"case invalidState","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/error\/requesttimedout","title":"case requestTimedOut","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/error\/socketerroroccurred(_:)","title":"case socketErrorOccurred(any Error)","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/error\/unknownresponse","title":"case unknownResponse","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/error\/unsupportedcommand(_:)","title":"case unsupportedCommand(String)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/error\/error-implementations","title":"Error Implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var localizedDescription: String","path":"\/documentation\/moqthaishinkit\/moqtconnection\/error\/localizeddescription"}],"type":"symbol"}]},{"title":"Default Implementations","type":"groupMarker"},{"title":"Actor Implementations","type":"symbol","path":"\/documentation\/moqthaishinkit\/moqtconnection\/actor-implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"type":"method","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/moqthaishinkit\/moqtconnection\/assertisolated(_:file:line:)"},{"type":"method","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","path":"\/documentation\/moqthaishinkit\/moqtconnection\/assumeisolated(_:file:line:)"},{"type":"method","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/moqthaishinkit\/moqtconnection\/preconditionisolated(_:file:line:)"}]}],"path":"\/documentation\/moqthaishinkit\/moqtconnection"},{"title":"Protocols","type":"groupMarker"},{"title":"MoQTControlMessage","type":"protocol","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtcontrolmessage\/payload","title":"var payload: Data","type":"property"},{"path":"\/documentation\/moqthaishinkit\/moqtcontrolmessage\/type","title":"var type: MoQTMessageType","type":"property"}],"path":"\/documentation\/moqthaishinkit\/moqtcontrolmessage"},{"title":"Structures","type":"groupMarker"},{"title":"MoQTAnnounce","type":"struct","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var payload: Data","type":"property","path":"\/documentation\/moqthaishinkit\/moqtannounce\/payload"},{"title":"let subscribeParameters: [MoQTVersionSpecificParameter]","type":"property","path":"\/documentation\/moqthaishinkit\/moqtannounce\/subscribeparameters"},{"title":"let trackNamespace: [String]","type":"property","path":"\/documentation\/moqthaishinkit\/moqtannounce\/tracknamespace"},{"title":"let type: MoQTMessageType","type":"property","path":"\/documentation\/moqthaishinkit\/moqtannounce\/type"}],"path":"\/documentation\/moqthaishinkit\/moqtannounce"},{"title":"MoQTAnnounceError","type":"struct","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"let code: Int","path":"\/documentation\/moqthaishinkit\/moqtannounceerror\/code","type":"property"},{"title":"var payload: Data","path":"\/documentation\/moqthaishinkit\/moqtannounceerror\/payload","type":"property"},{"title":"let reasonPhrase: String","path":"\/documentation\/moqthaishinkit\/moqtannounceerror\/reasonphrase","type":"property"},{"title":"let trackNamespace: [String]","path":"\/documentation\/moqthaishinkit\/moqtannounceerror\/tracknamespace","type":"property"},{"title":"let type: MoQTMessageType","path":"\/documentation\/moqthaishinkit\/moqtannounceerror\/type","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Error Implementations","path":"\/documentation\/moqthaishinkit\/moqtannounceerror\/error-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtannounceerror\/localizeddescription","title":"var localizedDescription: String"}]}],"path":"\/documentation\/moqthaishinkit\/moqtannounceerror"},{"title":"MoQTAnnounceOk","type":"struct","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtannounceok\/payload","title":"var payload: Data"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtannounceok\/tracknamespace","title":"let trackNamespace: [String]"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtannounceok\/type","title":"let type: MoQTMessageType"}],"path":"\/documentation\/moqthaishinkit\/moqtannounceok"},{"title":"MoQTGoaway","type":"struct","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtgoaway\/newsessionuri","title":"let newSessionURI: String","type":"property"},{"path":"\/documentation\/moqthaishinkit\/moqtgoaway\/payload","title":"var payload: Data","type":"property"},{"path":"\/documentation\/moqthaishinkit\/moqtgoaway\/type","title":"let type: MoQTMessageType","type":"property"}],"path":"\/documentation\/moqthaishinkit\/moqtgoaway"},{"title":"MoQTObject","type":"struct","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(id: Int, status: Int?, data: Data)","path":"\/documentation\/moqthaishinkit\/moqtobject\/init(id:status:data:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let data: Data","path":"\/documentation\/moqthaishinkit\/moqtobject\/data","type":"property"},{"title":"let id: Int","path":"\/documentation\/moqthaishinkit\/moqtobject\/id","type":"property"},{"title":"let status: Int?","path":"\/documentation\/moqthaishinkit\/moqtobject\/status","type":"property"}],"path":"\/documentation\/moqthaishinkit\/moqtobject"},{"title":"MoQTServerSetup","type":"struct","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var payload: Data","path":"\/documentation\/moqthaishinkit\/moqtserversetup\/payload","type":"property"},{"title":"let selectedVersion: Int","path":"\/documentation\/moqthaishinkit\/moqtserversetup\/selectedversion","type":"property"},{"title":"let setupParameters: [MoQTSetupParameter]","path":"\/documentation\/moqthaishinkit\/moqtserversetup\/setupparameters","type":"property"},{"title":"let type: MoQTMessageType","path":"\/documentation\/moqthaishinkit\/moqtserversetup\/type","type":"property"}],"path":"\/documentation\/moqthaishinkit\/moqtserversetup"},{"title":"MoQTSetupParameter","type":"struct","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/moqthaishinkit\/moqtsetupparameter\/key","type":"property","title":"let key: MoQTSetupParameterType"},{"path":"\/documentation\/moqthaishinkit\/moqtsetupparameter\/value","type":"property","title":"let value: any Sendable"}],"path":"\/documentation\/moqthaishinkit\/moqtsetupparameter"},{"title":"MoQTStreamHeaderSubgroup","type":"struct","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtstreamheadersubgroup\/init(trackalias:groupid:subgroupid:publisherpriority:)","title":"init(trackAlias: Int, groupId: Int, subgroupId: Int, publisherPriority: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtstreamheadersubgroup\/groupid","title":"let groupId: Int","type":"property"},{"path":"\/documentation\/moqthaishinkit\/moqtstreamheadersubgroup\/payload","title":"var payload: Data","type":"property"},{"path":"\/documentation\/moqthaishinkit\/moqtstreamheadersubgroup\/publisherpriority","title":"let publisherPriority: Int","type":"property"},{"path":"\/documentation\/moqthaishinkit\/moqtstreamheadersubgroup\/subgroupid","title":"let subgroupId: Int","type":"property"},{"path":"\/documentation\/moqthaishinkit\/moqtstreamheadersubgroup\/trackalias","title":"let trackAlias: Int","type":"property"},{"path":"\/documentation\/moqthaishinkit\/moqtstreamheadersubgroup\/type","title":"let type: MoQTDataStreamType","type":"property"}],"path":"\/documentation\/moqthaishinkit\/moqtstreamheadersubgroup"},{"title":"MoQTSubscribe","type":"struct","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/endgroup","type":"property","title":"let endGroup: Int?"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/endobject","type":"property","title":"let endObject: Int?"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.property","type":"property","title":"let filterType: MoQTSubscribe.FilterType"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.property","type":"property","title":"let groupOrder: MoQTSubscribe.GroupOrder"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/payload","type":"property","title":"var payload: Data"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/startgroup","type":"property","title":"let startGroup: Int?"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/startobject","type":"property","title":"let startObject: Int?"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/subscribeid","type":"property","title":"let subscribeId: Int"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/subscribeparameters","type":"property","title":"let subscribeParameters: [MoQTVersionSpecificParameter]"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/subscribepriority","type":"property","title":"let subscribePriority: Int"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/trackalias","type":"property","title":"let trackAlias: Int"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/trackname","type":"property","title":"let trackName: String"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/tracknamespace","type":"property","title":"let trackNamespace: [String]"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/type","type":"property","title":"let type: MoQTMessageType"},{"type":"groupMarker","title":"Enumerations"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum","type":"enum","title":"MoQTSubscribe.FilterType","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","title":"case absoluteRange","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/absoluterange"},{"type":"case","title":"case absoluteStart","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/absolutestart"},{"type":"case","title":"case latestGroup","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/latestgroup"},{"type":"case","title":"case latestObject","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/latestobject"},{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init?(rawValue: Int)","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/init(rawvalue:)"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","title":"Equatable Implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/!=(_:_:)"}],"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/equatable-implementations"},{"type":"symbol","title":"RawRepresentable Implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var hashValue: Int","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/hashvalue"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func hash(into: inout Hasher)","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/hash(into:)"}],"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/rawrepresentable-implementations"}]},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum","type":"enum","title":"MoQTSubscribe.GroupOrder","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/ascending","title":"case ascending","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/descending","title":"case descending","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/original","title":"case original","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/!=(_:_:)"}]},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}]}]}],"path":"\/documentation\/moqthaishinkit\/moqtsubscribe"},{"title":"MoQTSubscribeAnnounces","type":"struct","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounces\/parameters","type":"property","title":"let parameters: [MoQTVersionSpecificParameter]"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounces\/payload","type":"property","title":"var payload: Data"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounces\/tracknamespaceprefix","type":"property","title":"let trackNamespacePrefix: [String]"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounces\/type","type":"property","title":"let type: MoQTMessageType"}],"path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounces"},{"title":"MoQTSubscribeAnnouncesError","type":"struct","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"let errorCode: Int","type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounceserror\/errorcode"},{"title":"var payload: Data","type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounceserror\/payload"},{"title":"let reasonPhrase: String","type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounceserror\/reasonphrase"},{"title":"let trackNamespacePrefix: [String]","type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounceserror\/tracknamespaceprefix"},{"title":"let type: MoQTMessageType","type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounceserror\/type"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Error Implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounceserror\/localizeddescription","title":"var localizedDescription: String"}],"type":"symbol","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounceserror\/error-implementations"}],"path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounceserror"},{"title":"MoQTSubscribeAnnouncesOk","type":"struct","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeannouncesok\/payload","title":"var payload: Data","type":"property"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeannouncesok\/tracknamespaceprefix","title":"let trackNamespacePrefix: [String]","type":"property"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeannouncesok\/type","title":"let type: MoQTMessageType","type":"property"}],"path":"\/documentation\/moqthaishinkit\/moqtsubscribeannouncesok"},{"title":"MoQTSubscribeError","type":"struct","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror\/code","type":"property","title":"let code: Int"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror\/payload","type":"property","title":"var payload: Data"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror\/reasonphrase","type":"property","title":"let reasonPhrase: String"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror\/subscribeid","type":"property","title":"let subscribeId: Int"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror\/trackalias","type":"property","title":"let trackAlias: Int"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror\/type","type":"property","title":"let type: MoQTMessageType"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror\/error-implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var localizedDescription: String","type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror\/localizeddescription"}],"type":"symbol","title":"Error Implementations"}],"path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror"},{"title":"MoQTSubscribeOk","type":"struct","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/contentexists","title":"let contentExists: Bool","type":"property"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/expires","title":"let expires: Int","type":"property"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/grouporder","title":"let groupOrder: MoQTSubscribe.GroupOrder","type":"property"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/largestgroupid","title":"let largestGroupId: Int?","type":"property"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/largestobjectid","title":"let largestObjectId: Int?","type":"property"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/payload","title":"var payload: Data","type":"property"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/subscribeid","title":"let subscribeId: Int","type":"property"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/subscribeparameters","title":"let subscribeParameters: [MoQTVersionSpecificParameter]","type":"property"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/type","title":"let type: MoQTMessageType","type":"property"}],"path":"\/documentation\/moqthaishinkit\/moqtsubscribeok"},{"title":"MoQTVersionSpecificParameter","type":"struct","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtversionspecificparameter\/key","title":"let key: MoQTVersionSpecificType","type":"property"},{"path":"\/documentation\/moqthaishinkit\/moqtversionspecificparameter\/value","title":"let value: any Sendable","type":"property"}],"path":"\/documentation\/moqthaishinkit\/moqtversionspecificparameter"},{"title":"Enumerations","type":"groupMarker"},{"title":"MoQTDataStreamType","type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case fetchHeader","path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/fetchheader","type":"case"},{"title":"case objectDatagram","path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/objectdatagram","type":"case"},{"title":"case streamHeaderSubgroup","path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/streamheadersubgroup","type":"case"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: Int)","path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/init(rawvalue:)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/equatable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"}],"type":"symbol"},{"title":"RawRepresentable Implementations","path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/rawrepresentable-implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/hashvalue","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func hash(into: inout Hasher)","path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/hash(into:)","type":"method"}],"type":"symbol"}],"path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype"},{"title":"MoQTMessageType","type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/announce","title":"case announce","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/announcecancel","title":"case announceCancel","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/announceerror","title":"case announceError","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/announceok","title":"case announceOk","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/clientsetup","title":"case clientSetup","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/goaway","title":"case goaway","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/serversetup","title":"case serverSetup","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/subscribe","title":"case subscribe","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/subscribeannounuces","title":"case subscribeAnnounuces","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/subscribeannounuceserror","title":"case subscribeAnnounucesError","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/subscribeannounucesok","title":"case subscribeAnnounucesOk","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/subscribedone","title":"case subscribeDone","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/subscribeerror","title":"case subscribeError","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/subscribeok","title":"case subscribeOk","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/subscribeupdate","title":"case subscribeUpdate","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/trackstatus","title":"case trackStatus","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/trackstatusrequest","title":"case trackStatusRequest","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/unannounce","title":"case unannounce","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/unsubscribe","title":"case unsubscribe","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/!=(_:_:)","type":"op"}],"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/hashvalue","title":"var hashValue: Int"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/hash(into:)","title":"func hash(into: inout Hasher)"}],"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/moqthaishinkit\/moqtmessagetype"},{"title":"MoQTSetupParameterType","type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case maxSubscribeId","path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/maxsubscribeid","type":"case"},{"title":"case path","path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/path","type":"case"},{"title":"case role","path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/role","type":"case"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: Int)","path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/init(rawvalue:)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/!=(_:_:)","type":"op"}],"path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/equatable-implementations","type":"symbol"},{"title":"RawRepresentable Implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/hashvalue","title":"var hashValue: Int"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/hash(into:)","title":"func hash(into: inout Hasher)"}],"path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/rawrepresentable-implementations","type":"symbol"}],"path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype"},{"title":"MoQTSetupRole","type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/pubsub","title":"case pubSub","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/publisher","title":"case publisher","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/subscriber","title":"case subscriber","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/!=(_:_:)"}],"path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/hashvalue","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func hash(into: inout Hasher)","path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/hash(into:)","type":"method"}],"path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/moqthaishinkit\/moqtsetuprole"},{"title":"MoQTVersion","type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case draft01","path":"\/documentation\/moqthaishinkit\/moqtversion\/draft01","type":"case"},{"title":"case draft02","path":"\/documentation\/moqthaishinkit\/moqtversion\/draft02","type":"case"},{"title":"case draft03","path":"\/documentation\/moqthaishinkit\/moqtversion\/draft03","type":"case"},{"title":"case draft04","path":"\/documentation\/moqthaishinkit\/moqtversion\/draft04","type":"case"},{"title":"case draft05","path":"\/documentation\/moqthaishinkit\/moqtversion\/draft05","type":"case"},{"title":"case draft06","path":"\/documentation\/moqthaishinkit\/moqtversion\/draft06","type":"case"},{"title":"case draft07","path":"\/documentation\/moqthaishinkit\/moqtversion\/draft07","type":"case"},{"title":"case draft07Exp","path":"\/documentation\/moqthaishinkit\/moqtversion\/draft07exp","type":"case"},{"title":"case draft07Exp2","path":"\/documentation\/moqthaishinkit\/moqtversion\/draft07exp2","type":"case"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: Int)","path":"\/documentation\/moqthaishinkit\/moqtversion\/init(rawvalue:)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/moqthaishinkit\/moqtversion\/!=(_:_:)","type":"op"}],"path":"\/documentation\/moqthaishinkit\/moqtversion\/equatable-implementations","type":"symbol"},{"title":"RawRepresentable Implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtversion\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtversion\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/moqthaishinkit\/moqtversion\/rawrepresentable-implementations","type":"symbol"}],"path":"\/documentation\/moqthaishinkit\/moqtversion"},{"title":"MoQTVersionSpecificType","type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case authorizationInfo","path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/authorizationinfo","type":"case"},{"title":"case deliveryTimeout","path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/deliverytimeout","type":"case"},{"title":"case maxCacheDuration","path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/maxcacheduration","type":"case"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: Int)","path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/init(rawvalue:)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/!=(_:_:)"}],"title":"Equatable Implementations","path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/equatable-implementations","type":"symbol"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var hashValue: Int","path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/hashvalue"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func hash(into: inout Hasher)","path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/hash(into:)"}],"title":"RawRepresentable Implementations","path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/rawrepresentable-implementations","type":"symbol"}],"path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype"}],"path":"\/documentation\/moqthaishinkit"}],"title":"HaishinKit","path":"\/documentation","type":"module"}]}}