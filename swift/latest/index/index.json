{"includedArchiveIdentifiers":["Logboard","HaishinKit","SRTHaishinKit","MoQTHaishinKit"],"schemaVersion":{"minor":1,"patch":2,"major":0},"interfaceLanguages":{"swift":[{"type":"module","title":"Logboard","path":"\/documentation\/logboard","children":[{"title":"Classes","type":"groupMarker"},{"path":"\/documentation\/logboard\/consoleappender","title":"ConsoleAppender","type":"class","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init()","type":"init","path":"\/documentation\/logboard\/consoleappender\/init()"},{"title":"Instance Methods","type":"groupMarker"},{"type":"method","path":"\/documentation\/logboard\/consoleappender\/append(_:level:format:arguments:file:function:line:)","title":"func append(LBLogger, level: LBLogger.Level, format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)"},{"type":"method","title":"func append(LBLogger, level: LBLogger.Level, message: [Any], file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/consoleappender\/append(_:level:message:file:function:line:)"}]},{"children":[{"type":"groupMarker","title":"Structures"},{"children":[{"type":"groupMarker","title":"Initializers"},{"title":"init?(Data)","type":"init","path":"\/documentation\/logboard\/lblogger\/data\/init(_:)"},{"title":"Instance Properties","type":"groupMarker"},{"type":"property","title":"let date: Date","path":"\/documentation\/logboard\/lblogger\/data\/date"},{"type":"property","path":"\/documentation\/logboard\/lblogger\/data\/file","title":"let file: String"},{"type":"property","title":"let function: String","path":"\/documentation\/logboard\/lblogger\/data\/function"},{"type":"property","title":"let identifier: String","path":"\/documentation\/logboard\/lblogger\/data\/identifier"},{"title":"let level: LBLogger.Level","path":"\/documentation\/logboard\/lblogger\/data\/level","type":"property"},{"path":"\/documentation\/logboard\/lblogger\/data\/line","type":"property","title":"let line: Int"},{"type":"property","path":"\/documentation\/logboard\/lblogger\/data\/message","title":"let message: String"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/logboard\/lblogger\/data\/customstringconvertible-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/logboard\/lblogger\/data\/description","type":"property","title":"var description: String"}],"title":"CustomStringConvertible Implementations"}],"type":"struct","path":"\/documentation\/logboard\/lblogger\/data","title":"LBLogger.Data"},{"title":"Initializers","type":"groupMarker"},{"title":"init(String)","path":"\/documentation\/logboard\/lblogger\/init(_:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var appender: any LBLoggerAppender","path":"\/documentation\/logboard\/lblogger\/appender","type":"property"},{"title":"let identifier: String","type":"property","path":"\/documentation\/logboard\/lblogger\/identifier"},{"path":"\/documentation\/logboard\/lblogger\/level-swift.property","type":"property","title":"var level: LBLogger.Level"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/logboard\/lblogger\/debug(_:file:function:line:)","type":"method","title":"func debug(Any..., file: StaticString, function: StaticString, line: Int)"},{"path":"\/documentation\/logboard\/lblogger\/debug(format:arguments:file:function:line:)","title":"func debug(format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)","type":"method"},{"path":"\/documentation\/logboard\/lblogger\/error(_:file:function:line:)","type":"method","title":"func error(Any..., file: StaticString, function: StaticString, line: Int)"},{"path":"\/documentation\/logboard\/lblogger\/error(format:arguments:file:function:line:)","title":"func error(format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)","type":"method"},{"type":"method","path":"\/documentation\/logboard\/lblogger\/info(_:file:function:line:)","title":"func info(Any..., file: StaticString, function: StaticString, line: Int)"},{"title":"func info(format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)","type":"method","path":"\/documentation\/logboard\/lblogger\/info(format:arguments:file:function:line:)"},{"path":"\/documentation\/logboard\/lblogger\/isenabledfor(level:)","type":"method","title":"func isEnabledFor(level: LBLogger.Level) -> Bool"},{"title":"func trace(Any..., file: StaticString, function: StaticString, line: Int)","type":"method","path":"\/documentation\/logboard\/lblogger\/trace(_:file:function:line:)"},{"title":"func trace(format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/lblogger\/trace(format:arguments:file:function:line:)","type":"method"},{"title":"func warn(Any..., file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/lblogger\/warn(_:file:function:line:)","type":"method"},{"title":"func warn(format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/lblogger\/warn(format:arguments:file:function:line:)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/logboard\/lblogger\/dateformatter","type":"property","title":"static var dateFormatter: DateFormatter"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/logboard\/lblogger\/with(_:)","title":"static func with(String) -> LBLogger","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"path":"\/documentation\/logboard\/lblogger\/level-swift.enum","type":"enum","title":"LBLogger.Level","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/debug","title":"case debug","type":"case"},{"path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/error","title":"case error","type":"case"},{"path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/info","type":"case","title":"case info"},{"title":"case trace","path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/trace","type":"case"},{"title":"case warn","type":"case","path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/warn"},{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/init(rawvalue:)","type":"init","title":"init?(rawValue: Int)"},{"path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/init(string:)","title":"init?(string: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/description","type":"property","title":"var description: String"},{"type":"groupMarker","title":"Default Implementations"},{"title":"Equatable Implementations","type":"symbol","path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/!=(_:_:)"}]},{"title":"RawRepresentable Implementations","path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/rawrepresentable-implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"type":"property","title":"var hashValue: Int","path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/hashvalue"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func hash(into: inout Hasher)","path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/hash(into:)","type":"method"}],"type":"symbol"}]}],"type":"class","path":"\/documentation\/logboard\/lblogger","title":"LBLogger"},{"children":[{"title":"Initializers","type":"groupMarker"},{"title":"init()","type":"init","path":"\/documentation\/logboard\/multiappender\/init()"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/logboard\/multiappender\/appenders","title":"var appenders: [any LBLoggerAppender]","type":"property"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func append(LBLogger, level: LBLogger.Level, format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/multiappender\/append(_:level:format:arguments:file:function:line:)"},{"type":"method","path":"\/documentation\/logboard\/multiappender\/append(_:level:message:file:function:line:)","title":"func append(LBLogger, level: LBLogger.Level, message: [Any], file: StaticString, function: StaticString, line: Int)"}],"title":"MultiAppender","path":"\/documentation\/logboard\/multiappender","type":"class"},{"title":"NullAppender","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func append(LBLogger, level: LBLogger.Level, format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/nullappender\/append(_:level:format:arguments:file:function:line:)","type":"method"},{"path":"\/documentation\/logboard\/nullappender\/append(_:level:message:file:function:line:)","type":"method","title":"func append(LBLogger, level: LBLogger.Level, message: [Any], file: StaticString, function: StaticString, line: Int)"},{"type":"groupMarker","title":"Type Properties"},{"title":"static let shared: NullAppender","path":"\/documentation\/logboard\/nullappender\/shared","type":"property"}],"type":"class","path":"\/documentation\/logboard\/nullappender"},{"type":"class","path":"\/documentation\/logboard\/osloggerappender","title":"OSLoggerAppender","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/logboard\/osloggerappender\/init(sybsystem:category:)","type":"init","title":"init(sybsystem: String, category: String)"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func append(LBLogger, level: LBLogger.Level, format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/osloggerappender\/append(_:level:format:arguments:file:function:line:)","type":"method"},{"type":"method","path":"\/documentation\/logboard\/osloggerappender\/append(_:level:message:file:function:line:)","title":"func append(LBLogger, level: LBLogger.Level, message: [Any], file: StaticString, function: StaticString, line: Int)"}]},{"type":"class","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/logboard\/socketappender\/init()","title":"init()"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/logboard\/socketappender\/append(_:level:format:arguments:file:function:line:)","title":"func append(LBLogger, level: LBLogger.Level, format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)"},{"title":"func append(LBLogger, level: LBLogger.Level, message: [Any], file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/socketappender\/append(_:level:message:file:function:line:)","type":"method"},{"type":"method","path":"\/documentation\/logboard\/socketappender\/close()","title":"func close()"},{"path":"\/documentation\/logboard\/socketappender\/connect(_:port:)","type":"method","title":"func connect(String, port: Int)"}],"title":"SocketAppender","path":"\/documentation\/logboard\/socketappender"},{"title":"Protocols","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Instance Methods"},{"title":"func append(LBLogger, level: LBLogger.Level, format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)","type":"method","path":"\/documentation\/logboard\/lbloggerappender\/append(_:level:format:arguments:file:function:line:)"},{"path":"\/documentation\/logboard\/lbloggerappender\/append(_:level:message:file:function:line:)","type":"method","title":"func append(LBLogger, level: LBLogger.Level, message: [Any], file: StaticString, function: StaticString, line: Int)"}],"type":"protocol","path":"\/documentation\/logboard\/lbloggerappender","title":"LBLoggerAppender"}]},{"path":"\/documentation\/haishinkit","title":"HaishinKit","children":[{"title":"Classes","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/assetscreenobject","type":"class","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/assetscreenobject\/chromakeycolor","type":"property","title":"var chromaKeyColor: CGColor?"},{"path":"\/documentation\/haishinkit\/assetscreenobject\/isreading","type":"property","title":"var isReading: Bool"},{"path":"\/documentation\/haishinkit\/assetscreenobject\/videogravity","type":"property","title":"var videoGravity: AVLayerVideoGravity"},{"title":"Instance Methods","type":"groupMarker"},{"type":"method","title":"func cancelReading()","path":"\/documentation\/haishinkit\/assetscreenobject\/cancelreading()"},{"type":"method","path":"\/documentation\/haishinkit\/assetscreenobject\/makebounds(_:)","title":"func makeBounds(CGSize) -> CGRect"},{"title":"func makeImage(some ScreenRenderer) -> CGImage?","path":"\/documentation\/haishinkit\/assetscreenobject\/makeimage(_:)","type":"method"},{"title":"func startReading(AVAsset) throws","type":"method","path":"\/documentation\/haishinkit\/assetscreenobject\/startreading(_:)"}],"title":"AssetScreenObject"},{"path":"\/documentation\/haishinkit\/audiodeviceunit","type":"class","title":"AudioDeviceUnit","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/audiodeviceunit\/connection","type":"property","title":"var connection: AVCaptureConnection?"},{"title":"var device: AVCaptureDevice?","path":"\/documentation\/haishinkit\/audiodeviceunit\/device","type":"property"},{"type":"property","title":"var input: AVCaptureInput?","path":"\/documentation\/haishinkit\/audiodeviceunit\/input"},{"path":"\/documentation\/haishinkit\/audiodeviceunit\/output-swift.property","type":"property","title":"var output: AudioDeviceUnit.Output?"},{"title":"let track: UInt8","path":"\/documentation\/haishinkit\/audiodeviceunit\/track","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"type":"typealias","title":"AudioDeviceUnit.Output","path":"\/documentation\/haishinkit\/audiodeviceunit\/output-swift.typealias"}]},{"path":"\/documentation\/haishinkit\/audioplayer","title":"AudioPlayer","children":[{"type":"groupMarker","title":"Initializers"},{"title":"init(audioEngine: AVAudioEngine)","type":"init","path":"\/documentation\/haishinkit\/audioplayer\/init(audioengine:)"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"type":"groupMarker","title":"Instance Methods"},{"title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/haishinkit\/audioplayer\/assertisolated(_:file:line:)","type":"method"},{"path":"\/documentation\/haishinkit\/audioplayer\/assumeisolated(_:file:line:)","type":"method","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T"},{"type":"method","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/haishinkit\/audioplayer\/preconditionisolated(_:file:line:)"}],"path":"\/documentation\/haishinkit\/audioplayer\/actor-implementations","title":"Actor Implementations","type":"symbol"}],"type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/hkincomingstream\/init(_:)","title":"init(some HKStream)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"type":"property","title":"var isRunning: Bool","path":"\/documentation\/haishinkit\/hkincomingstream\/isrunning"},{"title":"var soundTransfrom: SoundTransform?","type":"property","path":"\/documentation\/haishinkit\/hkincomingstream\/soundtransfrom"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func append(CMSampleBuffer)","path":"\/documentation\/haishinkit\/hkincomingstream\/append(_:)","type":"method"},{"title":"func append(AVAudioBuffer, when: AVAudioTime)","path":"\/documentation\/haishinkit\/hkincomingstream\/append(_:when:)","type":"method"},{"type":"method","title":"func attachAudioPlayer(AudioPlayer?) async","path":"\/documentation\/haishinkit\/hkincomingstream\/attachaudioplayer(_:)"},{"path":"\/documentation\/haishinkit\/hkincomingstream\/setsoundtransform(_:)","type":"method","title":"func setSoundTransform(SoundTransform) async"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","path":"\/documentation\/haishinkit\/hkincomingstream\/actor-implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/hkincomingstream\/assertisolated(_:file:line:)","type":"method","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)"},{"type":"method","path":"\/documentation\/haishinkit\/hkincomingstream\/assumeisolated(_:file:line:)","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T"},{"title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/haishinkit\/hkincomingstream\/preconditionisolated(_:file:line:)","type":"method"}],"title":"Actor Implementations"},{"title":"AsyncRunner Implementations","type":"symbol","path":"\/documentation\/haishinkit\/hkincomingstream\/asyncrunner-implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/hkincomingstream\/startrunning()","type":"method","title":"func startRunning()"},{"path":"\/documentation\/haishinkit\/hkincomingstream\/stoprunning()","type":"method","title":"func stopRunning()"}]}],"path":"\/documentation\/haishinkit\/hkincomingstream","title":"HKIncomingStream","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/hkoutgoingstream\/init()","type":"init","title":"init()"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/hkoutgoingstream\/audioinputformat","type":"property","title":"var audioInputFormat: CMFormatDescription?"},{"path":"\/documentation\/haishinkit\/hkoutgoingstream\/audiooutputstream","type":"property","title":"var audioOutputStream: AsyncStream<(AVAudioBuffer, AVAudioTime)>"},{"path":"\/documentation\/haishinkit\/hkoutgoingstream\/audiosettings","type":"property","title":"var audioSettings: AudioCodecSettings"},{"title":"var isRunning: Bool","type":"property","path":"\/documentation\/haishinkit\/hkoutgoingstream\/isrunning"},{"title":"var videoInputBufferCounts: Int","path":"\/documentation\/haishinkit\/hkoutgoingstream\/videoinputbuffercounts","type":"property"},{"path":"\/documentation\/haishinkit\/hkoutgoingstream\/videoinputformat","type":"property","title":"var videoInputFormat: CMFormatDescription?"},{"title":"var videoInputStream: AsyncStream<CMSampleBuffer>","type":"property","path":"\/documentation\/haishinkit\/hkoutgoingstream\/videoinputstream"},{"type":"property","title":"var videoOutputStream: AsyncStream<CMSampleBuffer>","path":"\/documentation\/haishinkit\/hkoutgoingstream\/videooutputstream"},{"type":"property","path":"\/documentation\/haishinkit\/hkoutgoingstream\/videosettings","title":"var videoSettings: VideoCodecSettings"},{"type":"groupMarker","title":"Instance Methods"},{"title":"func append(CMSampleBuffer)","path":"\/documentation\/haishinkit\/hkoutgoingstream\/append(_:)","type":"method"},{"type":"method","title":"func append(AVAudioBuffer, when: AVAudioTime)","path":"\/documentation\/haishinkit\/hkoutgoingstream\/append(_:when:)"},{"title":"func append(video: CMSampleBuffer)","path":"\/documentation\/haishinkit\/hkoutgoingstream\/append(video:)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"type":"symbol","path":"\/documentation\/haishinkit\/hkoutgoingstream\/runner-implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func startRunning()","path":"\/documentation\/haishinkit\/hkoutgoingstream\/startrunning()","type":"method"},{"path":"\/documentation\/haishinkit\/hkoutgoingstream\/stoprunning()","type":"method","title":"func stopRunning()"}],"title":"Runner Implementations"}],"title":"HKOutgoingStream","type":"class","path":"\/documentation\/haishinkit\/hkoutgoingstream"},{"type":"class","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/init()","type":"init","title":"init()"},{"type":"groupMarker","title":"Instance Properties"},{"title":"var audioTrackId: UInt8?","path":"\/documentation\/haishinkit\/hkstreamrecorder\/audiotrackid","type":"property"},{"type":"property","title":"var isRecording: Bool","path":"\/documentation\/haishinkit\/hkstreamrecorder\/isrecording"},{"title":"var movieFragmentInterval: Double?","path":"\/documentation\/haishinkit\/hkstreamrecorder\/moviefragmentinterval","type":"property"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/moviesdirectory","type":"property","title":"var moviesDirectory: URL"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/outputurl","type":"property","title":"var outputURL: URL?"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/settings","type":"property","title":"var settings: [AVMediaType : [String : any Sendable]]"},{"title":"var videoTrackId: UInt8?","path":"\/documentation\/haishinkit\/hkstreamrecorder\/videotrackid","type":"property"},{"type":"groupMarker","title":"Instance Methods"},{"title":"func selectTrack(UInt8?, mediaType: CMFormatDescription.MediaType)","type":"method","path":"\/documentation\/haishinkit\/hkstreamrecorder\/selecttrack(_:mediatype:)"},{"title":"func setMovieFragmentInterval(Double?)","type":"method","path":"\/documentation\/haishinkit\/hkstreamrecorder\/setmoviefragmentinterval(_:)"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/setmoviefragmentinterval(moviefragmentinterval:)","title":"func setMovieFragmentInterval(movieFragmentInterval: Double?)","type":"method"},{"title":"func startRecording(URL?, settings: [AVMediaType : [String : any Sendable]]) async throws","type":"method","path":"\/documentation\/haishinkit\/hkstreamrecorder\/startrecording(_:settings:)"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/stoprecording()","title":"func stopRecording() async throws -> URL","type":"method"},{"type":"groupMarker","title":"Type Properties"},{"title":"static let defaultSettings: [AVMediaType : [String : any Sendable]]","path":"\/documentation\/haishinkit\/hkstreamrecorder\/defaultsettings","type":"property"},{"type":"groupMarker","title":"Enumerations"},{"title":"HKStreamRecorder.Error","path":"\/documentation\/haishinkit\/hkstreamrecorder\/error","type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","title":"case failedToAppend(error: (any Error)?)","path":"\/documentation\/haishinkit\/hkstreamrecorder\/error\/failedtoappend(error:)"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/error\/failedtocreateassetwriter(error:)","title":"case failedToCreateAssetWriter(error: any Error)","type":"case"},{"title":"case failedToCreateAssetWriterInput(error: any Error)","type":"case","path":"\/documentation\/haishinkit\/hkstreamrecorder\/error\/failedtocreateassetwriterinput(error:)"},{"type":"case","path":"\/documentation\/haishinkit\/hkstreamrecorder\/error\/failedtofinishwriting(error:)","title":"case failedToFinishWriting(error: (any Error)?)"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/error\/filealreadyexists(outputurl:)","type":"case","title":"case fileAlreadyExists(outputURL: URL)"},{"title":"case invalidState","path":"\/documentation\/haishinkit\/hkstreamrecorder\/error\/invalidstate","type":"case"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/error\/notsupportedfiletype(pathextension:)","type":"case","title":"case notSupportedFileType(pathExtension: String)"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Error Implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/error\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/haishinkit\/hkstreamrecorder\/error\/error-implementations","type":"symbol"}]},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","path":"\/documentation\/haishinkit\/hkstreamrecorder\/actor-implementations","children":[{"type":"groupMarker","title":"Instance Methods"},{"title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/haishinkit\/hkstreamrecorder\/assertisolated(_:file:line:)","type":"method"},{"title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","path":"\/documentation\/haishinkit\/hkstreamrecorder\/assumeisolated(_:file:line:)","type":"method"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/preconditionisolated(_:file:line:)","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method"}],"title":"Actor Implementations"},{"type":"symbol","children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/stream(_:didoutput:)","type":"method","title":"func stream(some HKStream, didOutput: CMSampleBuffer)"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/stream(_:didoutput:when:)","title":"func stream(some HKStream, didOutput: AVAudioBuffer, when: AVAudioTime)","type":"method"}],"path":"\/documentation\/haishinkit\/hkstreamrecorder\/hkstreamoutput-implementations","title":"HKStreamOutput Implementations"},{"title":"MediaMixerOutput Implementations","path":"\/documentation\/haishinkit\/hkstreamrecorder\/mediamixeroutput-implementations","children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/mixer(_:didoutput:)","title":"func mixer(MediaMixer, didOutput: CMSampleBuffer)","type":"method"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/mixer(_:didoutput:when:)","title":"func mixer(MediaMixer, didOutput: AVAudioPCMBuffer, when: AVAudioTime)","type":"method"}],"type":"symbol"}],"title":"HKStreamRecorder","path":"\/documentation\/haishinkit\/hkstreamrecorder"},{"children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(mamimumVideoBitrate: Int)","path":"\/documentation\/haishinkit\/hkstreamvideoadaptivebitratestrategy\/init(mamimumvideobitrate:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let mamimumAudioBitRate: Int","path":"\/documentation\/haishinkit\/hkstreamvideoadaptivebitratestrategy\/mamimumaudiobitrate","type":"property"},{"path":"\/documentation\/haishinkit\/hkstreamvideoadaptivebitratestrategy\/mamimumvideobitrate","title":"let mamimumVideoBitRate: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func adjustBitrate(NetworkMonitorEvent, stream: some HKStream) async","path":"\/documentation\/haishinkit\/hkstreamvideoadaptivebitratestrategy\/adjustbitrate(_:stream:)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/hkstreamvideoadaptivebitratestrategy\/statuscountsthreshold","title":"static let statusCountsThreshold: Int","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"type":"symbol","children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/hkstreamvideoadaptivebitratestrategy\/assertisolated(_:file:line:)","type":"method","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)"},{"type":"method","path":"\/documentation\/haishinkit\/hkstreamvideoadaptivebitratestrategy\/assumeisolated(_:file:line:)","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T"},{"title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/haishinkit\/hkstreamvideoadaptivebitratestrategy\/preconditionisolated(_:file:line:)","type":"method"}],"title":"Actor Implementations","path":"\/documentation\/haishinkit\/hkstreamvideoadaptivebitratestrategy\/actor-implementations"}],"type":"class","title":"HKStreamVideoAdaptiveBitRateStrategy","path":"\/documentation\/haishinkit\/hkstreamvideoadaptivebitratestrategy"},{"type":"class","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var cgImage: CGImage?","type":"property","path":"\/documentation\/haishinkit\/imagescreenobject\/cgimage"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func makeBounds(CGSize) -> CGRect","path":"\/documentation\/haishinkit\/imagescreenobject\/makebounds(_:)","type":"method"},{"title":"func makeImage(some ScreenRenderer) -> CGImage?","path":"\/documentation\/haishinkit\/imagescreenobject\/makeimage(_:)","type":"method"}],"path":"\/documentation\/haishinkit\/imagescreenobject","title":"ImageScreenObject"},{"type":"class","path":"\/documentation\/haishinkit\/mthkview","title":"MTHKView","children":[{"type":"groupMarker","title":"Initializers"},{"title":"init(coder: NSCoder)","type":"init","path":"\/documentation\/haishinkit\/mthkview\/init(coder:)"},{"path":"\/documentation\/haishinkit\/mthkview\/init(frame:)","type":"init","title":"init(frame: CGRect)"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/mthkview\/audiotrackid","type":"property","title":"var audioTrackId: UInt8?"},{"type":"property","title":"var videoGravity: AVLayerVideoGravity","path":"\/documentation\/haishinkit\/mthkview\/videogravity"},{"title":"var videoTrackId: UInt8?","type":"property","path":"\/documentation\/haishinkit\/mthkview\/videotrackid"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func awakeFromNib()","path":"\/documentation\/haishinkit\/mthkview\/awakefromnib()","type":"method"},{"type":"method","title":"func draw(CGRect)","path":"\/documentation\/haishinkit\/mthkview\/draw(_:)"},{"title":"func registerVideoEffect(some VideoEffect) -> Bool","path":"\/documentation\/haishinkit\/mthkview\/registervideoeffect(_:)","type":"method"},{"title":"func unregisterVideoEffect(some VideoEffect) -> Bool","type":"method","path":"\/documentation\/haishinkit\/mthkview\/unregistervideoeffect(_:)"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"type":"method","title":"func stream(some HKStream, didOutput: CMSampleBuffer)","path":"\/documentation\/haishinkit\/mthkview\/stream(_:didoutput:)"},{"path":"\/documentation\/haishinkit\/mthkview\/stream(_:didoutput:when:)","type":"method","title":"func stream(some HKStream, didOutput: AVAudioBuffer, when: AVAudioTime)"}],"type":"symbol","path":"\/documentation\/haishinkit\/mthkview\/hkstreamoutput-implementations","title":"HKStreamOutput Implementations"},{"title":"MediaMixerOutput Implementations","children":[{"type":"groupMarker","title":"Instance Methods"},{"title":"func mixer(MediaMixer, didOutput: CMSampleBuffer)","path":"\/documentation\/haishinkit\/mthkview\/mixer(_:didoutput:)","type":"method"},{"type":"method","path":"\/documentation\/haishinkit\/mthkview\/mixer(_:didoutput:when:)","title":"func mixer(MediaMixer, didOutput: AVAudioPCMBuffer, when: AVAudioTime)"},{"type":"method","title":"func selectTrack(UInt8?, mediaType: CMFormatDescription.MediaType) async","path":"\/documentation\/haishinkit\/mthkview\/selecttrack(_:mediatype:)"}],"type":"symbol","path":"\/documentation\/haishinkit\/mthkview\/mediamixeroutput-implementations"}]},{"children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(multiTrackAudioMixingEnabled: Bool, useManualCapture: Bool)","path":"\/documentation\/haishinkit\/mediamixer\/init(multitrackaudiomixingenabled:usemanualcapture:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var audioInputFormats: [UInt8 : AVAudioFormat]","path":"\/documentation\/haishinkit\/mediamixer\/audioinputformats","type":"property"},{"path":"\/documentation\/haishinkit\/mediamixer\/audiomixersettings","type":"property","title":"var audioMixerSettings: AudioMixerSettings"},{"path":"\/documentation\/haishinkit\/mediamixer\/framerate","type":"property","title":"var frameRate: Float64"},{"type":"property","title":"var isCapturing: Bool","path":"\/documentation\/haishinkit\/mediamixer\/iscapturing"},{"path":"\/documentation\/haishinkit\/mediamixer\/isinterputted","title":"var isInterputted: AsyncStream<Bool>","type":"property"},{"type":"property","title":"var isMonitoringEnabled: Bool","path":"\/documentation\/haishinkit\/mediamixer\/ismonitoringenabled"},{"type":"property","path":"\/documentation\/haishinkit\/mediamixer\/ismultitrackaudiomixingenabled","title":"var isMultiTrackAudioMixingEnabled: Bool"},{"type":"property","title":"var isRunning: Bool","path":"\/documentation\/haishinkit\/mediamixer\/isrunning"},{"path":"\/documentation\/haishinkit\/mediamixer\/istorchenabled","title":"var isTorchEnabled: Bool","type":"property"},{"title":"var screen: Screen","path":"\/documentation\/haishinkit\/mediamixer\/screen","type":"property"},{"title":"var sessionPreset: AVCaptureSession.Preset","path":"\/documentation\/haishinkit\/mediamixer\/sessionpreset","type":"property"},{"type":"property","title":"var videoInputFormats: [UInt8 : CMFormatDescription]","path":"\/documentation\/haishinkit\/mediamixer\/videoinputformats"},{"title":"var videoMixerSettings: VideoMixerSettings","type":"property","path":"\/documentation\/haishinkit\/mediamixer\/videomixersettings"},{"type":"property","title":"var videoOrientation: AVCaptureVideoOrientation","path":"\/documentation\/haishinkit\/mediamixer\/videoorientation"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/mediamixer\/addoutput(_:)","title":"func addOutput(some MediaMixerOutput)","type":"method"},{"path":"\/documentation\/haishinkit\/mediamixer\/append(_:track:)","title":"func append(CMSampleBuffer, track: UInt8)","type":"method"},{"title":"func append(AVAudioBuffer, when: AVAudioTime, track: UInt8)","path":"\/documentation\/haishinkit\/mediamixer\/append(_:when:track:)","type":"method"},{"title":"func attachAudio(AVCaptureDevice?, track: UInt8, configuration: AudioDeviceConfigurationBlock?) async throws","path":"\/documentation\/haishinkit\/mediamixer\/attachaudio(_:track:configuration:)","type":"method"},{"title":"func attachVideo(AVCaptureDevice?, track: UInt8, configuration: VideoDeviceConfigurationBlock?) async throws","type":"method","path":"\/documentation\/haishinkit\/mediamixer\/attachvideo(_:track:configuration:)"},{"title":"func configuration((AVCaptureSession) throws -> Void) rethrows","path":"\/documentation\/haishinkit\/mediamixer\/configuration(_:)","type":"method"},{"path":"\/documentation\/haishinkit\/mediamixer\/configuration(audio:configuration:)","type":"method","title":"func configuration(audio: UInt8, configuration: (AudioDeviceUnit) throws -> Void) throws"},{"title":"func configuration(video: UInt8, configuration: (VideoDeviceUnit) throws -> Void) throws","path":"\/documentation\/haishinkit\/mediamixer\/configuration(video:configuration:)","type":"method"},{"title":"func removeOutput(some MediaMixerOutput)","type":"method","path":"\/documentation\/haishinkit\/mediamixer\/removeoutput(_:)"},{"path":"\/documentation\/haishinkit\/mediamixer\/setaudiomixersettings(_:)","type":"method","title":"func setAudioMixerSettings(AudioMixerSettings)"},{"path":"\/documentation\/haishinkit\/mediamixer\/setframerate(_:)","title":"func setFrameRate(Float64)","type":"method"},{"path":"\/documentation\/haishinkit\/mediamixer\/setmonitoringenabled(_:)","type":"method","title":"func setMonitoringEnabled(Bool)"},{"type":"method","title":"func setSessionPreset(AVCaptureSession.Preset)","path":"\/documentation\/haishinkit\/mediamixer\/setsessionpreset(_:)"},{"title":"func setTorchEnabled(Bool)","path":"\/documentation\/haishinkit\/mediamixer\/settorchenabled(_:)","type":"method"},{"path":"\/documentation\/haishinkit\/mediamixer\/setvideomixersettings(_:)","type":"method","title":"func setVideoMixerSettings(VideoMixerSettings)"},{"type":"method","title":"func setVideoOrientation(AVCaptureVideoOrientation)","path":"\/documentation\/haishinkit\/mediamixer\/setvideoorientation(_:)"},{"path":"\/documentation\/haishinkit\/mediamixer\/startcapturing()","type":"method","title":"func startCapturing()"},{"path":"\/documentation\/haishinkit\/mediamixer\/stopcapturing()","title":"func stopCapturing()","type":"method"},{"type":"groupMarker","title":"Enumerations"},{"type":"enum","title":"MediaMixer.Error","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","path":"\/documentation\/haishinkit\/mediamixer\/error\/devicenotfound","title":"case deviceNotFound"},{"title":"case failedToAttach(any Error)","type":"case","path":"\/documentation\/haishinkit\/mediamixer\/error\/failedtoattach(_:)"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var localizedDescription: String","path":"\/documentation\/haishinkit\/mediamixer\/error\/localizeddescription","type":"property"}],"title":"Error Implementations","type":"symbol","path":"\/documentation\/haishinkit\/mediamixer\/error\/error-implementations"}],"path":"\/documentation\/haishinkit\/mediamixer\/error"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","path":"\/documentation\/haishinkit\/mediamixer\/actor-implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/mediamixer\/assertisolated(_:file:line:)","type":"method","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)"},{"path":"\/documentation\/haishinkit\/mediamixer\/assumeisolated(_:file:line:)","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","type":"method"},{"title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/haishinkit\/mediamixer\/preconditionisolated(_:file:line:)","type":"method"}],"title":"Actor Implementations"},{"title":"AsyncRunner Implementations","type":"symbol","path":"\/documentation\/haishinkit\/mediamixer\/asyncrunner-implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/mediamixer\/startrunning()","title":"func startRunning()","type":"method"},{"path":"\/documentation\/haishinkit\/mediamixer\/stoprunning()","title":"func stopRunning()","type":"method"}]}],"path":"\/documentation\/haishinkit\/mediamixer","title":"MediaMixer","type":"class"},{"path":"\/documentation\/haishinkit\/networkmonitor","type":"class","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/networkmonitor\/init(_:)","title":"init(some NetworkTransportReporter)","type":"init"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/networkmonitor\/event","type":"property","title":"var event: AsyncStream<NetworkMonitorEvent>"},{"title":"var isRunning: Bool","path":"\/documentation\/haishinkit\/networkmonitor\/isrunning","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Enumeration Cases"},{"title":"case invalidState","path":"\/documentation\/haishinkit\/networkmonitor\/error\/invalidstate","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/networkmonitor\/error\/equatable-implementations","type":"symbol","title":"Equatable Implementations","children":[{"type":"groupMarker","title":"Operators"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/haishinkit\/networkmonitor\/error\/!=(_:_:)","type":"op"}]},{"type":"symbol","title":"Error Implementations","path":"\/documentation\/haishinkit\/networkmonitor\/error\/error-implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var localizedDescription: String","path":"\/documentation\/haishinkit\/networkmonitor\/error\/localizeddescription"}]}],"type":"enum","path":"\/documentation\/haishinkit\/networkmonitor\/error","title":"NetworkMonitor.Error"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/haishinkit\/networkmonitor\/actor-implementations","type":"symbol","title":"Actor Implementations","children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/networkmonitor\/assertisolated(_:file:line:)","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method"},{"path":"\/documentation\/haishinkit\/networkmonitor\/assumeisolated(_:file:line:)","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","type":"method"},{"path":"\/documentation\/haishinkit\/networkmonitor\/preconditionisolated(_:file:line:)","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method"}]},{"path":"\/documentation\/haishinkit\/networkmonitor\/asyncrunner-implementations","type":"symbol","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func startRunning()","path":"\/documentation\/haishinkit\/networkmonitor\/startrunning()","type":"method"},{"title":"func stopRunning()","path":"\/documentation\/haishinkit\/networkmonitor\/stoprunning()","type":"method"}],"title":"AsyncRunner Implementations"}],"title":"NetworkMonitor"},{"title":"PiPHKView","type":"class","path":"\/documentation\/haishinkit\/piphkview","children":[{"title":"Initializers","type":"groupMarker"},{"type":"init","path":"\/documentation\/haishinkit\/piphkview\/init(coder:)","title":"init?(coder: NSCoder)"},{"path":"\/documentation\/haishinkit\/piphkview\/init(frame:)","title":"init(frame: CGRect)","type":"init"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var audioTrackId: UInt8?","path":"\/documentation\/haishinkit\/piphkview\/audiotrackid"},{"title":"var videoGravity: AVLayerVideoGravity","path":"\/documentation\/haishinkit\/piphkview\/videogravity","type":"property"},{"path":"\/documentation\/haishinkit\/piphkview\/videotrackid","title":"var videoTrackId: UInt8?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func awakeFromNib()","path":"\/documentation\/haishinkit\/piphkview\/awakefromnib()","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"title":"static var defaultBackgroundColor: NSColor","type":"property","path":"\/documentation\/haishinkit\/piphkview\/defaultbackgroundcolor"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/piphkview\/hkstreamoutput-implementations","type":"symbol","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func stream(some HKStream, didOutput: CMSampleBuffer)","path":"\/documentation\/haishinkit\/piphkview\/stream(_:didoutput:)","type":"method"},{"title":"func stream(some HKStream, didOutput: AVAudioBuffer, when: AVAudioTime)","path":"\/documentation\/haishinkit\/piphkview\/stream(_:didoutput:when:)","type":"method"}],"title":"HKStreamOutput Implementations"},{"path":"\/documentation\/haishinkit\/piphkview\/mediamixeroutput-implementations","type":"symbol","title":"MediaMixerOutput Implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func mixer(MediaMixer, didOutput: CMSampleBuffer)","path":"\/documentation\/haishinkit\/piphkview\/mixer(_:didoutput:)","type":"method"},{"title":"func mixer(MediaMixer, didOutput: AVAudioPCMBuffer, when: AVAudioTime)","path":"\/documentation\/haishinkit\/piphkview\/mixer(_:didoutput:when:)","type":"method"},{"type":"method","title":"func selectTrack(UInt8?, mediaType: CMFormatDescription.MediaType) async","path":"\/documentation\/haishinkit\/piphkview\/selecttrack(_:mediatype:)"}]}]},{"title":"RTMPConnection","children":[{"type":"groupMarker","title":"Initializers"},{"title":"init(swfUrl: String?, pageUrl: String?, flashVer: String, timeout: Int, requestTimeout: UInt64, chunkSize: Int, qualityOfService: DispatchQoS)","path":"\/documentation\/haishinkit\/rtmpconnection\/init(swfurl:pageurl:flashver:timeout:requesttimeout:chunksize:qualityofservice:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"type":"property","title":"let chunkSize: Int","path":"\/documentation\/haishinkit\/rtmpconnection\/chunksize"},{"title":"var connected: Bool","type":"property","path":"\/documentation\/haishinkit\/rtmpconnection\/connected"},{"type":"property","title":"let flashVer: String","path":"\/documentation\/haishinkit\/rtmpconnection\/flashver"},{"title":"let objectEncoding: RTMPObjectEncoding","type":"property","path":"\/documentation\/haishinkit\/rtmpconnection\/objectencoding"},{"title":"let pageUrl: String?","path":"\/documentation\/haishinkit\/rtmpconnection\/pageurl","type":"property"},{"type":"property","title":"let qualityOfService: DispatchQoS","path":"\/documentation\/haishinkit\/rtmpconnection\/qualityofservice"},{"title":"let requestTimeout: UInt64","type":"property","path":"\/documentation\/haishinkit\/rtmpconnection\/requesttimeout"},{"type":"property","title":"var status: AsyncStream<RTMPStatus>","path":"\/documentation\/haishinkit\/rtmpconnection\/status"},{"title":"let swfUrl: String?","type":"property","path":"\/documentation\/haishinkit\/rtmpconnection\/swfurl"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/timeout","type":"property","title":"let timeout: Int"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/uri","type":"property","title":"var uri: URL?"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func call(String, arguments: (any Sendable)?...) async throws -> RTMPResponse","path":"\/documentation\/haishinkit\/rtmpconnection\/call(_:arguments:)","type":"method"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/close()","title":"func close() async throws","type":"method"},{"title":"func connect(String, arguments: (any Sendable)?...) async throws -> RTMPResponse","type":"method","path":"\/documentation\/haishinkit\/rtmpconnection\/connect(_:arguments:)"},{"type":"groupMarker","title":"Type Properties"},{"title":"static let defaultCapabilities: Int","type":"property","path":"\/documentation\/haishinkit\/rtmpconnection\/defaultcapabilities"},{"type":"property","path":"\/documentation\/haishinkit\/rtmpconnection\/defaultchunksizes","title":"static let defaultChunkSizeS: Int"},{"title":"static let defaultFlashVer: String","path":"\/documentation\/haishinkit\/rtmpconnection\/defaultflashver","type":"property"},{"title":"static let defaultObjectEncoding: RTMPObjectEncoding","path":"\/documentation\/haishinkit\/rtmpconnection\/defaultobjectencoding","type":"property"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/defaultport","type":"property","title":"static let defaultPort: Int"},{"title":"static let defaultRequestTimeout: UInt64","path":"\/documentation\/haishinkit\/rtmpconnection\/defaultrequesttimeout","type":"property"},{"title":"static let defaultSecurePort: Int","path":"\/documentation\/haishinkit\/rtmpconnection\/defaultsecureport","type":"property"},{"title":"static let defaultTimeout: Int","path":"\/documentation\/haishinkit\/rtmpconnection\/defaulttimeout","type":"property"},{"type":"property","title":"static let defaultWindowSizeS: Int64","path":"\/documentation\/haishinkit\/rtmpconnection\/defaultwindowsizes"},{"type":"property","title":"static let supportedFourCcList: [String]","path":"\/documentation\/haishinkit\/rtmpconnection\/supportedfourcclist"},{"title":"static let supportedProtocols: Set<String>","type":"property","path":"\/documentation\/haishinkit\/rtmpconnection\/supportedprotocols"},{"title":"Enumerations","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/code","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/callbadversion","title":"case callBadVersion"},{"type":"case","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/callfailed","title":"case callFailed"},{"type":"case","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/callprohibited","title":"case callProhibited"},{"title":"case connectAppshutdown","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/connectappshutdown","type":"case"},{"type":"case","title":"case connectClosed","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/connectclosed"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/code\/connectfailed","type":"case","title":"case connectFailed"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/code\/connectidletimeout","type":"case","title":"case connectIdleTimeOut"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/code\/connectinvalidapp","title":"case connectInvalidApp","type":"case"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/code\/connectnetworkchange","title":"case connectNetworkChange","type":"case"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/code\/connectrejected","title":"case connectRejected","type":"case"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/code\/connectsuccess","type":"case","title":"case connectSuccess"},{"title":"Initializers","type":"groupMarker"},{"type":"init","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/init(rawvalue:)","title":"init?(rawValue: String)"},{"type":"groupMarker","title":"Instance Properties"},{"title":"var level: String","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/level","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/code\/equatable-implementations","title":"Equatable Implementations","type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/code\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}]},{"path":"\/documentation\/haishinkit\/rtmpconnection\/code\/rawrepresentable-implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"title":"var hashValue: Int","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/hashvalue","type":"property"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/hash(into:)","title":"func hash(into: inout Hasher)"}],"title":"RawRepresentable Implementations","type":"symbol"}],"type":"enum","title":"RTMPConnection.Code"},{"title":"RTMPConnection.Error","path":"\/documentation\/haishinkit\/rtmpconnection\/error","type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","title":"case connectionTimedOut","path":"\/documentation\/haishinkit\/rtmpconnection\/error\/connectiontimedout"},{"title":"case invalidState","path":"\/documentation\/haishinkit\/rtmpconnection\/error\/invalidstate","type":"case"},{"title":"case requestFailed(response: RTMPResponse)","path":"\/documentation\/haishinkit\/rtmpconnection\/error\/requestfailed(response:)","type":"case"},{"type":"case","title":"case requestTimedOut","path":"\/documentation\/haishinkit\/rtmpconnection\/error\/requesttimedout"},{"type":"case","title":"case socketErrorOccurred(any Error)","path":"\/documentation\/haishinkit\/rtmpconnection\/error\/socketerroroccurred(_:)"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/error\/unsupportedcommand(_:)","title":"case unsupportedCommand(String)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/error\/error-implementations","title":"Error Implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/error\/localizeddescription","type":"property","title":"var localizedDescription: String"}]}]},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","path":"\/documentation\/haishinkit\/rtmpconnection\/actor-implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"type":"method","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/haishinkit\/rtmpconnection\/assertisolated(_:file:line:)"},{"type":"method","path":"\/documentation\/haishinkit\/rtmpconnection\/assumeisolated(_:file:line:)","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T"},{"title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/haishinkit\/rtmpconnection\/preconditionisolated(_:file:line:)","type":"method"}],"title":"Actor Implementations"}],"path":"\/documentation\/haishinkit\/rtmpconnection","type":"class"},{"type":"class","title":"RTMPSharedObject","path":"\/documentation\/haishinkit\/rtmpsharedobject","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var data: AMFObject","path":"\/documentation\/haishinkit\/rtmpsharedobject\/data","type":"property"},{"title":"let objectEncoding: RTMPObjectEncoding","path":"\/documentation\/haishinkit\/rtmpsharedobject\/objectencoding","type":"property"},{"type":"groupMarker","title":"Instance Methods"},{"title":"func clear() async","path":"\/documentation\/haishinkit\/rtmpsharedobject\/clear()","type":"method"},{"path":"\/documentation\/haishinkit\/rtmpsharedobject\/close()","title":"func close() async","type":"method"},{"path":"\/documentation\/haishinkit\/rtmpsharedobject\/connect(_:)","type":"method","title":"func connect(RTMPConnection) async"},{"path":"\/documentation\/haishinkit\/rtmpsharedobject\/setproperty(_:_:)","title":"func setProperty(String, (any Sendable)?) async","type":"method"},{"type":"groupMarker","title":"Type Methods"},{"title":"static func getRemote(withName: String, remotePath: String, persistence: Bool) -> RTMPSharedObject","path":"\/documentation\/haishinkit\/rtmpsharedobject\/getremote(withname:remotepath:persistence:)","type":"method"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","title":"Actor Implementations","path":"\/documentation\/haishinkit\/rtmpsharedobject\/actor-implementations","children":[{"type":"groupMarker","title":"Instance Methods"},{"title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method","path":"\/documentation\/haishinkit\/rtmpsharedobject\/assertisolated(_:file:line:)"},{"path":"\/documentation\/haishinkit\/rtmpsharedobject\/assumeisolated(_:file:line:)","type":"method","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T"},{"title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/haishinkit\/rtmpsharedobject\/preconditionisolated(_:file:line:)","type":"method"}]}]},{"path":"\/documentation\/haishinkit\/rtmpstream","title":"RTMPStream","type":"class","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/haishinkit\/rtmpstream\/init(connection:fcpublishname:)","type":"init","title":"init(connection: RTMPConnection, fcPublishName: String?)"},{"type":"groupMarker","title":"Instance Properties"},{"title":"var audioSampleAccess: Bool","type":"property","path":"\/documentation\/haishinkit\/rtmpstream\/audiosampleaccess"},{"path":"\/documentation\/haishinkit\/rtmpstream\/audiotrackid","title":"var audioTrackId: UInt8?","type":"property"},{"path":"\/documentation\/haishinkit\/rtmpstream\/currentfps","type":"property","title":"var currentFPS: UInt16"},{"path":"\/documentation\/haishinkit\/rtmpstream\/fcpublishname","title":"var fcPublishName: String?","type":"property"},{"title":"var info: RTMPStreamInfo","path":"\/documentation\/haishinkit\/rtmpstream\/info","type":"property"},{"type":"property","title":"var metadata: AMFArray","path":"\/documentation\/haishinkit\/rtmpstream\/metadata"},{"type":"property","path":"\/documentation\/haishinkit\/rtmpstream\/objectencoding","title":"var objectEncoding: RTMPObjectEncoding"},{"type":"property","path":"\/documentation\/haishinkit\/rtmpstream\/readystate","title":"var readyState: HKStreamReadyState"},{"type":"property","title":"var status: AsyncStream<RTMPStatus>","path":"\/documentation\/haishinkit\/rtmpstream\/status"},{"title":"var videoSampleAccess: Bool","type":"property","path":"\/documentation\/haishinkit\/rtmpstream\/videosampleaccess"},{"type":"property","path":"\/documentation\/haishinkit\/rtmpstream\/videotrackid","title":"var videoTrackId: UInt8?"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/rtmpstream\/close()","type":"method","title":"func close() async throws -> RTMPResponse"},{"path":"\/documentation\/haishinkit\/rtmpstream\/pause(_:)","title":"func pause(Bool) async throws -> RTMPResponse","type":"method"},{"path":"\/documentation\/haishinkit\/rtmpstream\/play(_:)","type":"method","title":"func play((any Sendable)?...) async throws -> RTMPResponse"},{"title":"func publish(String?, type: RTMPStream.HowToPublish) async throws -> RTMPResponse","path":"\/documentation\/haishinkit\/rtmpstream\/publish(_:type:)","type":"method"},{"title":"func receiveAudio(Bool) async throws","path":"\/documentation\/haishinkit\/rtmpstream\/receiveaudio(_:)","type":"method"},{"type":"method","title":"func receiveVideo(Bool) async throws","path":"\/documentation\/haishinkit\/rtmpstream\/receivevideo(_:)"},{"path":"\/documentation\/haishinkit\/rtmpstream\/seek(_:)","type":"method","title":"func seek(Double) async throws"},{"path":"\/documentation\/haishinkit\/rtmpstream\/send(_:arguments:isresettimestamp:)","title":"func send(String, arguments: (any Sendable)?..., isResetTimestamp: Bool) throws","type":"method"},{"type":"method","title":"func togglePause() async throws -> RTMPResponse","path":"\/documentation\/haishinkit\/rtmpstream\/togglepause()"},{"type":"groupMarker","title":"Enumerations"},{"children":[{"type":"groupMarker","title":"Enumeration Cases"},{"title":"case bufferEmpty","path":"\/documentation\/haishinkit\/rtmpstream\/code\/bufferempty","type":"case"},{"title":"case bufferFlush","path":"\/documentation\/haishinkit\/rtmpstream\/code\/bufferflush","type":"case"},{"title":"case bufferFull","path":"\/documentation\/haishinkit\/rtmpstream\/code\/bufferfull","type":"case"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/connectclosed","title":"case connectClosed","type":"case"},{"type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/code\/connectfailed","title":"case connectFailed"},{"title":"case connectRejected","path":"\/documentation\/haishinkit\/rtmpstream\/code\/connectrejected","type":"case"},{"type":"case","title":"case connectSuccess","path":"\/documentation\/haishinkit\/rtmpstream\/code\/connectsuccess"},{"title":"case drmUpdateNeeded","path":"\/documentation\/haishinkit\/rtmpstream\/code\/drmupdateneeded","type":"case"},{"type":"case","title":"case failed","path":"\/documentation\/haishinkit\/rtmpstream\/code\/failed"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/multicaststreamreset","type":"case","title":"case multicastStreamReset"},{"type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/code\/pausenotify","title":"case pauseNotify"},{"title":"case playFailed","path":"\/documentation\/haishinkit\/rtmpstream\/code\/playfailed","type":"case"},{"title":"case playFileStructureInvalid","path":"\/documentation\/haishinkit\/rtmpstream\/code\/playfilestructureinvalid","type":"case"},{"title":"case playInsufficientBW","path":"\/documentation\/haishinkit\/rtmpstream\/code\/playinsufficientbw","type":"case"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/playnosupportedtrackfound","type":"case","title":"case playNoSupportedTrackFound"},{"title":"case playReset","path":"\/documentation\/haishinkit\/rtmpstream\/code\/playreset","type":"case"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/playstart","title":"case playStart","type":"case"},{"title":"case playStop","type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/code\/playstop"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/playstreamnotfound","title":"case playStreamNotFound","type":"case"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/playtransition","type":"case","title":"case playTransition"},{"title":"case playUnpublishNotify","type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/code\/playunpublishnotify"},{"type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/code\/publishbadname","title":"case publishBadName"},{"title":"case publishIdle","path":"\/documentation\/haishinkit\/rtmpstream\/code\/publishidle","type":"case"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/publishstart","type":"case","title":"case publishStart"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/recordalreadyexists","type":"case","title":"case recordAlreadyExists"},{"title":"case recordDiskQuotaExceeded","path":"\/documentation\/haishinkit\/rtmpstream\/code\/recorddiskquotaexceeded","type":"case"},{"title":"case recordFailed","path":"\/documentation\/haishinkit\/rtmpstream\/code\/recordfailed","type":"case"},{"type":"case","title":"case recordNoAccess","path":"\/documentation\/haishinkit\/rtmpstream\/code\/recordnoaccess"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/recordstart","title":"case recordStart","type":"case"},{"type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/code\/recordstop","title":"case recordStop"},{"title":"case secondScreenStart","path":"\/documentation\/haishinkit\/rtmpstream\/code\/secondscreenstart","type":"case"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/secondscreenstop","title":"case secondScreenStop","type":"case"},{"title":"case seekFailed","path":"\/documentation\/haishinkit\/rtmpstream\/code\/seekfailed","type":"case"},{"type":"case","title":"case seekInvalidTime","path":"\/documentation\/haishinkit\/rtmpstream\/code\/seekinvalidtime"},{"type":"case","title":"case seekNotify","path":"\/documentation\/haishinkit\/rtmpstream\/code\/seeknotify"},{"title":"case stepNotify","path":"\/documentation\/haishinkit\/rtmpstream\/code\/stepnotify","type":"case"},{"type":"case","title":"case unpauseNotify","path":"\/documentation\/haishinkit\/rtmpstream\/code\/unpausenotify"},{"type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/code\/unpublishsuccess","title":"case unpublishSuccess"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/videodimensionchange","type":"case","title":"case videoDimensionChange"},{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var level: String","path":"\/documentation\/haishinkit\/rtmpstream\/code\/level"},{"title":"Default Implementations","type":"groupMarker"},{"type":"symbol","path":"\/documentation\/haishinkit\/rtmpstream\/code\/equatable-implementations","title":"Equatable Implementations","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}]},{"type":"symbol","title":"RawRepresentable Implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"title":"var hashValue: Int","path":"\/documentation\/haishinkit\/rtmpstream\/code\/hashvalue","type":"property"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/hash(into:)","type":"method","title":"func hash(into: inout Hasher)"}],"path":"\/documentation\/haishinkit\/rtmpstream\/code\/rawrepresentable-implementations"}],"path":"\/documentation\/haishinkit\/rtmpstream\/code","type":"enum","title":"RTMPStream.Code"},{"children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","title":"case invalidState","path":"\/documentation\/haishinkit\/rtmpstream\/error\/invalidstate"},{"type":"case","title":"case requestFailed(response: RTMPResponse)","path":"\/documentation\/haishinkit\/rtmpstream\/error\/requestfailed(response:)"},{"type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/error\/requesttimedout","title":"case requestTimedOut"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/haishinkit\/rtmpstream\/error\/error-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Properties"},{"title":"var localizedDescription: String","path":"\/documentation\/haishinkit\/rtmpstream\/error\/localizeddescription","type":"property"}],"title":"Error Implementations"}],"path":"\/documentation\/haishinkit\/rtmpstream\/error","title":"RTMPStream.Error","type":"enum"},{"title":"RTMPStream.HowToPublish","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case append","path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish\/append","type":"case"},{"title":"case appendWithGap","type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish\/appendwithgap"},{"title":"case live","path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish\/live","type":"case"},{"type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish\/record","title":"case record"},{"type":"groupMarker","title":"Initializers"},{"title":"init?(rawValue: String)","path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish\/init(rawvalue:)","type":"init"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"type":"symbol","title":"Equatable Implementations"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"type":"property","path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish\/hashvalue","title":"var hashValue: Int"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish\/hash(into:)","title":"func hash(into: inout Hasher)"}],"title":"RawRepresentable Implementations","type":"symbol","path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish\/rawrepresentable-implementations"}],"path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/rtmpstream\/actor-implementations","type":"symbol","title":"Actor Implementations","children":[{"type":"groupMarker","title":"Instance Methods"},{"title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/haishinkit\/rtmpstream\/assertisolated(_:file:line:)","type":"method"},{"type":"method","path":"\/documentation\/haishinkit\/rtmpstream\/assumeisolated(_:file:line:)","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T"},{"type":"method","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/haishinkit\/rtmpstream\/preconditionisolated(_:file:line:)"}]},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var audioSettings: AudioCodecSettings","path":"\/documentation\/haishinkit\/rtmpstream\/audiosettings"},{"title":"var soundTransform: SoundTransform?","path":"\/documentation\/haishinkit\/rtmpstream\/soundtransform","type":"property"},{"title":"var videoSettings: VideoCodecSettings","path":"\/documentation\/haishinkit\/rtmpstream\/videosettings","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/rtmpstream\/addoutput(_:)","type":"method","title":"func addOutput(some HKStreamOutput)"},{"type":"method","title":"func append(CMSampleBuffer)","path":"\/documentation\/haishinkit\/rtmpstream\/append(_:)"},{"path":"\/documentation\/haishinkit\/rtmpstream\/append(_:when:)","title":"func append(AVAudioBuffer, when: AVAudioTime)","type":"method"},{"type":"method","title":"func attachAudioPlayer(AudioPlayer?) async","path":"\/documentation\/haishinkit\/rtmpstream\/attachaudioplayer(_:)"},{"type":"method","title":"func dispatch(NetworkMonitorEvent) async","path":"\/documentation\/haishinkit\/rtmpstream\/dispatch(_:)"},{"title":"func removeOutput(some HKStreamOutput)","path":"\/documentation\/haishinkit\/rtmpstream\/removeoutput(_:)","type":"method"},{"path":"\/documentation\/haishinkit\/rtmpstream\/setaudiosettings(_:)","title":"func setAudioSettings(AudioCodecSettings)","type":"method"},{"path":"\/documentation\/haishinkit\/rtmpstream\/setbitratestorategy(_:)","title":"func setBitrateStorategy((some HKStreamBitRateStrategy)?)","type":"method"},{"title":"func setSoundTransform(SoundTransform) async","path":"\/documentation\/haishinkit\/rtmpstream\/setsoundtransform(_:)","type":"method"},{"title":"func setVideoInputBufferCounts(Int)","type":"method","path":"\/documentation\/haishinkit\/rtmpstream\/setvideoinputbuffercounts(_:)"},{"path":"\/documentation\/haishinkit\/rtmpstream\/setvideosettings(_:)","type":"method","title":"func setVideoSettings(VideoCodecSettings)"}],"path":"\/documentation\/haishinkit\/rtmpstream\/hkstream-implementations","type":"symbol","title":"HKStream Implementations"},{"title":"MediaMixerOutput Implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"type":"method","path":"\/documentation\/haishinkit\/rtmpstream\/mixer(_:didoutput:)","title":"func mixer(MediaMixer, didOutput: CMSampleBuffer)"},{"type":"method","title":"func mixer(MediaMixer, didOutput: AVAudioPCMBuffer, when: AVAudioTime)","path":"\/documentation\/haishinkit\/rtmpstream\/mixer(_:didoutput:when:)"},{"title":"func selectTrack(UInt8?, mediaType: CMFormatDescription.MediaType)","path":"\/documentation\/haishinkit\/rtmpstream\/selecttrack(_:mediatype:)","type":"method"}],"type":"symbol","path":"\/documentation\/haishinkit\/rtmpstream\/mediamixeroutput-implementations"}]},{"children":[{"title":"Initializers","type":"groupMarker"},{"title":"init()","type":"init","path":"\/documentation\/haishinkit\/screen\/init()"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/screen\/backgroundcolor","type":"property","title":"var backgroundColor: CGColor"},{"type":"property","path":"\/documentation\/haishinkit\/screen\/childcounts","title":"var childCounts: Int"},{"title":"var delegate: (any ScreenDelegate)?","type":"property","path":"\/documentation\/haishinkit\/screen\/delegate"},{"path":"\/documentation\/haishinkit\/screen\/size-swift.property","type":"property","title":"var size: CGSize"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/screen\/addchild(_:)","type":"method","title":"func addChild(ScreenObject?) throws"},{"type":"method","path":"\/documentation\/haishinkit\/screen\/registervideoeffect(_:)","title":"func registerVideoEffect(some VideoEffect) -> Bool"},{"title":"func removeChild(ScreenObject?)","path":"\/documentation\/haishinkit\/screen\/removechild(_:)","type":"method"},{"title":"func unregisterVideoEffect(some VideoEffect) -> Bool","path":"\/documentation\/haishinkit\/screen\/unregistervideoeffect(_:)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/screen\/size-swift.type.property","type":"property","title":"static let size: CGSize"}],"title":"Screen","type":"class","path":"\/documentation\/haishinkit\/screen"},{"title":"ScreenActor","type":"class","children":[{"type":"groupMarker","title":"Type Properties"},{"path":"\/documentation\/haishinkit\/screenactor\/shared","title":"static let shared: ScreenActor","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Instance Methods"},{"title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/haishinkit\/screenactor\/assertisolated(_:file:line:)","type":"method"},{"path":"\/documentation\/haishinkit\/screenactor\/assumeisolated(_:file:line:)","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","type":"method"},{"path":"\/documentation\/haishinkit\/screenactor\/preconditionisolated(_:file:line:)","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method"}],"type":"symbol","path":"\/documentation\/haishinkit\/screenactor\/actor-implementations","title":"Actor Implementations"},{"path":"\/documentation\/haishinkit\/screenactor\/globalactor-implementations","type":"symbol","title":"GlobalActor Implementations","children":[{"type":"groupMarker","title":"Type Properties"},{"path":"\/documentation\/haishinkit\/screenactor\/sharedunownedexecutor","title":"static var sharedUnownedExecutor: UnownedSerialExecutor","type":"property"}]}],"path":"\/documentation\/haishinkit\/screenactor"},{"type":"class","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init()","path":"\/documentation\/haishinkit\/screenobject\/init()","type":"init"},{"type":"groupMarker","title":"Instance Properties"},{"title":"var bounds: CGRect","path":"\/documentation\/haishinkit\/screenobject\/bounds","type":"property"},{"path":"\/documentation\/haishinkit\/screenobject\/cornerradius","type":"property","title":"var cornerRadius: CGFloat"},{"type":"property","title":"var horizontalAlignment: ScreenObject.HorizontalAlignment","path":"\/documentation\/haishinkit\/screenobject\/horizontalalignment-swift.property"},{"type":"property","path":"\/documentation\/haishinkit\/screenobject\/isvisible","title":"var isVisible: Bool"},{"type":"property","title":"var layoutMargin: NSEdgeInsets","path":"\/documentation\/haishinkit\/screenobject\/layoutmargin"},{"type":"property","title":"var parent: ScreenObjectContainer?","path":"\/documentation\/haishinkit\/screenobject\/parent"},{"path":"\/documentation\/haishinkit\/screenobject\/size","title":"var size: CGSize","type":"property"},{"title":"var verticalAlignment: ScreenObject.VerticalAlignment","path":"\/documentation\/haishinkit\/screenobject\/verticalalignment-swift.property","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"type":"method","title":"func invalidateLayout()","path":"\/documentation\/haishinkit\/screenobject\/invalidatelayout()"},{"path":"\/documentation\/haishinkit\/screenobject\/makebounds(_:)","title":"func makeBounds(CGSize) -> CGRect","type":"method"},{"type":"method","path":"\/documentation\/haishinkit\/screenobject\/makeimage(_:)","title":"func makeImage(some ScreenRenderer) -> CGImage?"},{"type":"groupMarker","title":"Enumerations"},{"type":"enum","path":"\/documentation\/haishinkit\/screenobject\/horizontalalignment-swift.enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","title":"case center","path":"\/documentation\/haishinkit\/screenobject\/horizontalalignment-swift.enum\/center"},{"type":"case","title":"case left","path":"\/documentation\/haishinkit\/screenobject\/horizontalalignment-swift.enum\/left"},{"type":"case","path":"\/documentation\/haishinkit\/screenobject\/horizontalalignment-swift.enum\/right","title":"case right"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","type":"symbol","path":"\/documentation\/haishinkit\/screenobject\/horizontalalignment-swift.enum\/equatable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","path":"\/documentation\/haishinkit\/screenobject\/horizontalalignment-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"}]}],"title":"ScreenObject.HorizontalAlignment"},{"type":"enum","title":"ScreenObject.VerticalAlignment","path":"\/documentation\/haishinkit\/screenobject\/verticalalignment-swift.enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"type":"case","title":"case bottom","path":"\/documentation\/haishinkit\/screenobject\/verticalalignment-swift.enum\/bottom"},{"path":"\/documentation\/haishinkit\/screenobject\/verticalalignment-swift.enum\/middle","title":"case middle","type":"case"},{"title":"case top","type":"case","path":"\/documentation\/haishinkit\/screenobject\/verticalalignment-swift.enum\/top"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/screenobject\/verticalalignment-swift.enum\/equatable-implementations","title":"Equatable Implementations","children":[{"type":"groupMarker","title":"Operators"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/haishinkit\/screenobject\/verticalalignment-swift.enum\/!=(_:_:)","type":"op"}],"type":"symbol"}]},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/screenobject\/equatable-implementations","title":"Equatable Implementations","type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/haishinkit\/screenobject\/!=(_:_:)"},{"title":"static func == (ScreenObject, ScreenObject) -> Bool","type":"op","path":"\/documentation\/haishinkit\/screenobject\/==(_:_:)"}]},{"path":"\/documentation\/haishinkit\/screenobject\/hashable-implementations","title":"Hashable Implementations","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func hash(into: inout Hasher)","path":"\/documentation\/haishinkit\/screenobject\/hash(into:)"}],"type":"symbol"}],"title":"ScreenObject","path":"\/documentation\/haishinkit\/screenobject"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"type":"property","title":"var childCounts: Int","path":"\/documentation\/haishinkit\/screenobjectcontainer\/childcounts"},{"type":"groupMarker","title":"Instance Methods"},{"title":"func addChild(ScreenObject?) throws","path":"\/documentation\/haishinkit\/screenobjectcontainer\/addchild(_:)","type":"method"},{"title":"func removeChild(ScreenObject?)","path":"\/documentation\/haishinkit\/screenobjectcontainer\/removechild(_:)","type":"method"},{"type":"groupMarker","title":"Enumerations"},{"children":[{"type":"groupMarker","title":"Enumeration Cases"},{"title":"case alreadyExists","path":"\/documentation\/haishinkit\/screenobjectcontainer\/error\/alreadyexists","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"type":"symbol","title":"Equatable Implementations","path":"\/documentation\/haishinkit\/screenobjectcontainer\/error\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/haishinkit\/screenobjectcontainer\/error\/!=(_:_:)","type":"op"}]},{"type":"symbol","path":"\/documentation\/haishinkit\/screenobjectcontainer\/error\/error-implementations","title":"Error Implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"type":"property","path":"\/documentation\/haishinkit\/screenobjectcontainer\/error\/localizeddescription","title":"var localizedDescription: String"}]}],"title":"ScreenObjectContainer.Error","type":"enum","path":"\/documentation\/haishinkit\/screenobjectcontainer\/error"}],"path":"\/documentation\/haishinkit\/screenobjectcontainer","type":"class","title":"ScreenObjectContainer"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/haishinkit\/streamscreenobject\/chromakeycolor","title":"var chromaKeyColor: CGColor?"},{"title":"var videoGravity: AVLayerVideoGravity","type":"property","path":"\/documentation\/haishinkit\/streamscreenobject\/videogravity"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func makeBounds(CGSize) -> CGRect","path":"\/documentation\/haishinkit\/streamscreenobject\/makebounds(_:)"},{"type":"method","path":"\/documentation\/haishinkit\/streamscreenobject\/makeimage(_:)","title":"func makeImage(some ScreenRenderer) -> CGImage?"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"type":"method","path":"\/documentation\/haishinkit\/streamscreenobject\/stream(_:didoutput:)","title":"func stream(some HKStream, didOutput: CMSampleBuffer)"},{"path":"\/documentation\/haishinkit\/streamscreenobject\/stream(_:didoutput:when:)","title":"func stream(some HKStream, didOutput: AVAudioBuffer, when: AVAudioTime)","type":"method"}],"title":"HKStreamOutput Implementations","path":"\/documentation\/haishinkit\/streamscreenobject\/hkstreamoutput-implementations","type":"symbol"}],"type":"class","title":"StreamScreenObject","path":"\/documentation\/haishinkit\/streamscreenobject"},{"path":"\/documentation\/haishinkit\/tsreader","type":"class","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/tsreader\/init()","type":"init","title":"init()"},{"title":"Instance Properties","type":"groupMarker"},{"type":"property","title":"var output: AsyncStream<(UInt16, CMSampleBuffer)>","path":"\/documentation\/haishinkit\/tsreader\/output"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func clear()","path":"\/documentation\/haishinkit\/tsreader\/clear()","type":"method"},{"type":"method","path":"\/documentation\/haishinkit\/tsreader\/read(_:)","title":"func read(Data) -> Int"}],"title":"TSReader"},{"title":"TSWriter","type":"class","path":"\/documentation\/haishinkit\/tswriter","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/tswriter\/init(segmentduration:)","type":"init","title":"init(segmentDuration: Double)"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/tswriter\/audioformat","type":"property","title":"var audioFormat: AVAudioFormat?"},{"type":"property","title":"var expectedMedias: Set<AVMediaType>","path":"\/documentation\/haishinkit\/tswriter\/expectedmedias"},{"title":"var output: AsyncStream<Data>","path":"\/documentation\/haishinkit\/tswriter\/output","type":"property"},{"type":"property","title":"var videoFormat: CMFormatDescription?","path":"\/documentation\/haishinkit\/tswriter\/videoformat"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func append(CMSampleBuffer)","type":"method","path":"\/documentation\/haishinkit\/tswriter\/append(_:)"},{"path":"\/documentation\/haishinkit\/tswriter\/append(_:when:)","type":"method","title":"func append(AVAudioBuffer, when: AVAudioTime)"},{"title":"func clear()","type":"method","path":"\/documentation\/haishinkit\/tswriter\/clear()"}]},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var attributes: [NSAttributedString.Key : Any]?","path":"\/documentation\/haishinkit\/textscreenobject\/attributes","type":"property"},{"type":"property","title":"var bounds: CGRect","path":"\/documentation\/haishinkit\/textscreenobject\/bounds"},{"title":"var string: String","path":"\/documentation\/haishinkit\/textscreenobject\/string","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"type":"method","title":"func makeBounds(CGSize) -> CGRect","path":"\/documentation\/haishinkit\/textscreenobject\/makebounds(_:)"},{"type":"method","path":"\/documentation\/haishinkit\/textscreenobject\/makeimage(_:)","title":"func makeImage(some ScreenRenderer) -> CGImage?"}],"type":"class","title":"TextScreenObject","path":"\/documentation\/haishinkit\/textscreenobject"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var colorFormat: OSType","path":"\/documentation\/haishinkit\/videodeviceunit\/colorformat-swift.property","type":"property"},{"path":"\/documentation\/haishinkit\/videodeviceunit\/connection","title":"var connection: AVCaptureConnection?","type":"property"},{"title":"var device: AVCaptureDevice?","type":"property","path":"\/documentation\/haishinkit\/videodeviceunit\/device"},{"type":"property","title":"var input: AVCaptureInput?","path":"\/documentation\/haishinkit\/videodeviceunit\/input"},{"title":"var isVideoMirrored: Bool","path":"\/documentation\/haishinkit\/videodeviceunit\/isvideomirrored","type":"property"},{"path":"\/documentation\/haishinkit\/videodeviceunit\/output-swift.property","title":"var output: VideoDeviceUnit.Output?","type":"property"},{"path":"\/documentation\/haishinkit\/videodeviceunit\/track","title":"let track: UInt8","type":"property"},{"title":"var videoOrientation: AVCaptureVideoOrientation","type":"property","path":"\/documentation\/haishinkit\/videodeviceunit\/videoorientation"},{"type":"groupMarker","title":"Type Aliases"},{"type":"typealias","path":"\/documentation\/haishinkit\/videodeviceunit\/output-swift.typealias","title":"VideoDeviceUnit.Output"},{"type":"groupMarker","title":"Type Properties"},{"title":"static let colorFormat: OSType","type":"property","path":"\/documentation\/haishinkit\/videodeviceunit\/colorformat-swift.type.property"}],"title":"VideoDeviceUnit","type":"class","path":"\/documentation\/haishinkit\/videodeviceunit"},{"children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/haishinkit\/videorotator\/init()","title":"init?()"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/haishinkit\/videorotator\/rotate(buffer:)","title":"func rotate(buffer: CMSampleBuffer) -> Result<CMSampleBuffer, VideoRotator.Error>"},{"type":"groupMarker","title":"Enumerations"},{"path":"\/documentation\/haishinkit\/videorotator\/error","title":"VideoRotator.Error","type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","title":"case cannotAllocatePixelBuffer(CVReturn)","path":"\/documentation\/haishinkit\/videorotator\/error\/cannotallocatepixelbuffer(_:)"},{"path":"\/documentation\/haishinkit\/videorotator\/error\/noimagebuffer","title":"case noImageBuffer","type":"case"},{"type":"case","title":"case noOrientationInfo","path":"\/documentation\/haishinkit\/videorotator\/error\/noorientationinfo"},{"path":"\/documentation\/haishinkit\/videorotator\/error\/rotationfailure(_:)","type":"case","title":"case rotationFailure(OSStatus)"},{"title":"case unsupportedOrientation","path":"\/documentation\/haishinkit\/videorotator\/error\/unsupportedorientation","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Error Implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var localizedDescription: String","path":"\/documentation\/haishinkit\/videorotator\/error\/localizeddescription","type":"property"}],"path":"\/documentation\/haishinkit\/videorotator\/error\/error-implementations","type":"symbol"}]}],"title":"VideoRotator","path":"\/documentation\/haishinkit\/videorotator","type":"class"},{"type":"class","title":"VideoTrackScreenObject","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/haishinkit\/videotrackscreenobject\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videotrackscreenobject\/chromakeycolor","type":"property","title":"var chromaKeyColor: CGColor?"},{"type":"property","path":"\/documentation\/haishinkit\/videotrackscreenobject\/framerate","title":"var frameRate: Int"},{"path":"\/documentation\/haishinkit\/videotrackscreenobject\/track","type":"property","title":"var track: UInt8"},{"path":"\/documentation\/haishinkit\/videotrackscreenobject\/videogravity","title":"var videoGravity: AVLayerVideoGravity","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videotrackscreenobject\/draw(_:)","title":"func draw(some ScreenRenderer)","type":"method"},{"title":"func makeBounds(CGSize) -> CGRect","path":"\/documentation\/haishinkit\/videotrackscreenobject\/makebounds(_:)","type":"method"},{"path":"\/documentation\/haishinkit\/videotrackscreenobject\/makeimage(_:)","title":"func makeImage(some ScreenRenderer) -> CGImage?","type":"method"},{"title":"func registerVideoEffect(some VideoEffect) -> Bool","type":"method","path":"\/documentation\/haishinkit\/videotrackscreenobject\/registervideoeffect(_:)"},{"type":"method","title":"func unregisterVideoEffect(some VideoEffect) -> Bool","path":"\/documentation\/haishinkit\/videotrackscreenobject\/unregistervideoeffect(_:)"}],"path":"\/documentation\/haishinkit\/videotrackscreenobject"},{"type":"groupMarker","title":"Protocols"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/asyncrunner\/isrunning","type":"property","title":"var isRunning: Bool"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func startRunning() async","path":"\/documentation\/haishinkit\/asyncrunner\/startrunning()","type":"method"},{"title":"func stopRunning() async","path":"\/documentation\/haishinkit\/asyncrunner\/stoprunning()","type":"method"}],"path":"\/documentation\/haishinkit\/asyncrunner","title":"AsyncRunner","type":"protocol"},{"path":"\/documentation\/haishinkit\/chromakeyprocessable","title":"ChromaKeyProcessable","type":"protocol","children":[{"type":"groupMarker","title":"Instance Properties"},{"title":"var chromaKeyColor: CGColor?","path":"\/documentation\/haishinkit\/chromakeyprocessable\/chromakeycolor","type":"property"}]},{"type":"protocol","path":"\/documentation\/haishinkit\/hkstream","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var audioSettings: AudioCodecSettings","path":"\/documentation\/haishinkit\/hkstream\/audiosettings","type":"property"},{"title":"var readyState: HKStreamReadyState","path":"\/documentation\/haishinkit\/hkstream\/readystate","type":"property"},{"path":"\/documentation\/haishinkit\/hkstream\/soundtransform","type":"property","title":"var soundTransform: SoundTransform?"},{"title":"var videoSettings: VideoCodecSettings","type":"property","path":"\/documentation\/haishinkit\/hkstream\/videosettings"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func addOutput(some HKStreamOutput)","type":"method","path":"\/documentation\/haishinkit\/hkstream\/addoutput(_:)"},{"title":"func append(CMSampleBuffer)","path":"\/documentation\/haishinkit\/hkstream\/append(_:)","type":"method"},{"title":"func append(AVAudioBuffer, when: AVAudioTime)","path":"\/documentation\/haishinkit\/hkstream\/append(_:when:)","type":"method"},{"title":"func attachAudioPlayer(AudioPlayer?) async","path":"\/documentation\/haishinkit\/hkstream\/attachaudioplayer(_:)","type":"method"},{"title":"func dispatch(NetworkMonitorEvent) async","path":"\/documentation\/haishinkit\/hkstream\/dispatch(_:)","type":"method"},{"type":"method","title":"func removeOutput(some HKStreamOutput)","path":"\/documentation\/haishinkit\/hkstream\/removeoutput(_:)"},{"title":"func setAudioSettings(AudioCodecSettings)","path":"\/documentation\/haishinkit\/hkstream\/setaudiosettings(_:)","type":"method"},{"path":"\/documentation\/haishinkit\/hkstream\/setbitratestorategy(_:)","type":"method","title":"func setBitrateStorategy((some HKStreamBitRateStrategy)?)"},{"title":"func setSoundTransform(SoundTransform) async","path":"\/documentation\/haishinkit\/hkstream\/setsoundtransform(_:)","type":"method"},{"type":"method","title":"func setVideoInputBufferCounts(Int)","path":"\/documentation\/haishinkit\/hkstream\/setvideoinputbuffercounts(_:)"},{"path":"\/documentation\/haishinkit\/hkstream\/setvideosettings(_:)","type":"method","title":"func setVideoSettings(VideoCodecSettings)"}],"title":"HKStream"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var mamimumAudioBitRate: Int","type":"property","path":"\/documentation\/haishinkit\/hkstreambitratestrategy\/mamimumaudiobitrate"},{"path":"\/documentation\/haishinkit\/hkstreambitratestrategy\/mamimumvideobitrate","type":"property","title":"var mamimumVideoBitRate: Int"},{"title":"Instance Methods","type":"groupMarker"},{"type":"method","title":"func adjustBitrate(NetworkMonitorEvent, stream: some HKStream) async","path":"\/documentation\/haishinkit\/hkstreambitratestrategy\/adjustbitrate(_:stream:)"}],"title":"HKStreamBitRateStrategy","type":"protocol","path":"\/documentation\/haishinkit\/hkstreambitratestrategy"},{"title":"HKStreamOutput","type":"protocol","children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/hkstreamoutput\/stream(_:didoutput:)","type":"method","title":"func stream(some HKStream, didOutput: CMSampleBuffer)"},{"title":"func stream(some HKStream, didOutput: AVAudioBuffer, when: AVAudioTime)","path":"\/documentation\/haishinkit\/hkstreamoutput\/stream(_:didoutput:when:)","type":"method"}],"path":"\/documentation\/haishinkit\/hkstreamoutput"},{"path":"\/documentation\/haishinkit\/mediamixeroutput","children":[{"type":"groupMarker","title":"Instance Properties"},{"title":"var audioTrackId: UInt8?","type":"property","path":"\/documentation\/haishinkit\/mediamixeroutput\/audiotrackid"},{"type":"property","path":"\/documentation\/haishinkit\/mediamixeroutput\/videotrackid","title":"var videoTrackId: UInt8?"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/haishinkit\/mediamixeroutput\/mixer(_:didoutput:)","title":"func mixer(MediaMixer, didOutput: CMSampleBuffer)"},{"title":"func mixer(MediaMixer, didOutput: AVAudioPCMBuffer, when: AVAudioTime)","path":"\/documentation\/haishinkit\/mediamixeroutput\/mixer(_:didoutput:when:)","type":"method"},{"path":"\/documentation\/haishinkit\/mediamixeroutput\/selecttrack(_:mediatype:)","type":"method","title":"func selectTrack(UInt8?, mediaType: CMFormatDescription.MediaType) async"}],"title":"MediaMixerOutput","type":"protocol"},{"path":"\/documentation\/haishinkit\/networkconnection","type":"protocol","title":"NetworkConnection","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/networkconnection\/connected","type":"property","title":"var connected: Bool"},{"title":"Instance Methods","type":"groupMarker"},{"type":"method","title":"func close() async throws","path":"\/documentation\/haishinkit\/networkconnection\/close()"}]},{"children":[{"type":"groupMarker","title":"Instance Methods"},{"title":"func makeNetworkMonitor() async -> NetworkMonitor","path":"\/documentation\/haishinkit\/networktransportreporter\/makenetworkmonitor()","type":"method"},{"path":"\/documentation\/haishinkit\/networktransportreporter\/makenetworktransportreport()","type":"method","title":"func makeNetworkTransportReport() async -> NetworkTransportReport"}],"title":"NetworkTransportReporter","type":"protocol","path":"\/documentation\/haishinkit\/networktransportreporter"},{"title":"Runner","path":"\/documentation\/haishinkit\/runner","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var isRunning: Bool","path":"\/documentation\/haishinkit\/runner\/isrunning"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/runner\/startrunning()","type":"method","title":"func startRunning()"},{"title":"func stopRunning()","path":"\/documentation\/haishinkit\/runner\/stoprunning()","type":"method"}],"type":"protocol"},{"title":"ScreenDelegate","path":"\/documentation\/haishinkit\/screendelegate","type":"protocol","children":[{"title":"Instance Methods","type":"groupMarker"},{"type":"method","title":"func screen(Screen, willLayout: CMTime)","path":"\/documentation\/haishinkit\/screendelegate\/screen(_:willlayout:)"}]},{"type":"protocol","children":[{"type":"groupMarker","title":"Instance Properties"},{"title":"var backgroundColor: CGColor","path":"\/documentation\/haishinkit\/screenrenderer\/backgroundcolor","type":"property"},{"type":"property","title":"var bounds: CGRect","path":"\/documentation\/haishinkit\/screenrenderer\/bounds"},{"path":"\/documentation\/haishinkit\/screenrenderer\/context","type":"property","title":"var context: CIContext"},{"title":"var presentationTimeStamp: CMTime","path":"\/documentation\/haishinkit\/screenrenderer\/presentationtimestamp","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func draw(ScreenObject)","path":"\/documentation\/haishinkit\/screenrenderer\/draw(_:)","type":"method"},{"type":"method","path":"\/documentation\/haishinkit\/screenrenderer\/layout(_:)","title":"func layout(ScreenObject)"},{"type":"method","path":"\/documentation\/haishinkit\/screenrenderer\/settarget(_:)","title":"func setTarget(CVPixelBuffer?)"}],"path":"\/documentation\/haishinkit\/screenrenderer","title":"ScreenRenderer"},{"type":"protocol","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func execute(CIImage) -> CIImage","path":"\/documentation\/haishinkit\/videoeffect\/execute(_:)","type":"method"}],"title":"VideoEffect","path":"\/documentation\/haishinkit\/videoeffect"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"type":"init","path":"\/documentation\/haishinkit\/amfarray\/init(count:)","title":"init(count: Int)"},{"type":"init","path":"\/documentation\/haishinkit\/amfarray\/init(data:)","title":"init(data: [(any Sendable)?])"},{"title":"Instance Properties","type":"groupMarker"},{"type":"property","title":"var length: Int","path":"\/documentation\/haishinkit\/amfarray\/length"},{"type":"groupMarker","title":"Subscripts"},{"path":"\/documentation\/haishinkit\/amfarray\/subscript(_:)","type":"subscript","title":"subscript(Any) -> (any Sendable)?"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","title":"CustomDebugStringConvertible Implementations","path":"\/documentation\/haishinkit\/amfarray\/customdebugstringconvertible-implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var debugDescription: String","type":"property","path":"\/documentation\/haishinkit\/amfarray\/debugdescription"}]},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/amfarray\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"},{"path":"\/documentation\/haishinkit\/amfarray\/==(_:_:)","title":"static func == (AMFArray, AMFArray) -> Bool","type":"op"}],"title":"Equatable Implementations","path":"\/documentation\/haishinkit\/amfarray\/equatable-implementations","type":"symbol"},{"type":"symbol","path":"\/documentation\/haishinkit\/amfarray\/expressiblebyarrayliteral-implementations","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/haishinkit\/amfarray\/init(arrayliteral:)","title":"init(arrayLiteral: (any Sendable)?...)","type":"init"}],"title":"ExpressibleByArrayLiteral Implementations"}],"type":"struct","path":"\/documentation\/haishinkit\/amfarray","title":"AMFArray"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"type":"property","title":"let data: AMFObject","path":"\/documentation\/haishinkit\/amftypedobject\/data"},{"type":"property","title":"let typeName: String","path":"\/documentation\/haishinkit\/amftypedobject\/typename"}],"type":"struct","path":"\/documentation\/haishinkit\/amftypedobject","title":"AMFTypedObject"},{"title":"AMFUndefined","path":"\/documentation\/haishinkit\/amfundefined","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/amfundefined\/description","type":"property","title":"var description: String"}],"type":"struct"},{"path":"\/documentation\/haishinkit\/amfxml","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init(data: String)","path":"\/documentation\/haishinkit\/amfxml\/init(data:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var description: String","path":"\/documentation\/haishinkit\/amfxml\/description","type":"property"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","title":"Equatable Implementations","path":"\/documentation\/haishinkit\/amfxml\/equatable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/haishinkit\/amfxml\/!=(_:_:)","type":"op"},{"title":"static func == (AMFXML, AMFXML) -> Bool","path":"\/documentation\/haishinkit\/amfxml\/==(_:_:)","type":"op"}]}],"type":"struct","title":"AMFXML"},{"title":"AMFXMLDocument","type":"struct","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/haishinkit\/amfxmldocument\/init(data:)","type":"init","title":"init(data: String)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var description: String","path":"\/documentation\/haishinkit\/amfxmldocument\/description","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/amfxmldocument\/equatable-implementations","title":"Equatable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/amfxmldocument\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"},{"title":"static func == (AMFXMLDocument, AMFXMLDocument) -> Bool","path":"\/documentation\/haishinkit\/amfxmldocument\/==(_:_:)","type":"op"}],"type":"symbol"}],"path":"\/documentation\/haishinkit\/amfxmldocument"},{"title":"AudioCodecSettings","path":"\/documentation\/haishinkit\/audiocodecsettings","type":"struct","children":[{"type":"groupMarker","title":"Initializers"},{"title":"init(bitRate: Int, downmix: Bool, channelMap: [Int]?, sampleRate: Float64, format: AudioCodecSettings.Format)","path":"\/documentation\/haishinkit\/audiocodecsettings\/init(bitrate:downmix:channelmap:samplerate:format:)","type":"init"},{"path":"\/documentation\/haishinkit\/audiocodecsettings\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"type":"property","title":"var bitRate: Int","path":"\/documentation\/haishinkit\/audiocodecsettings\/bitrate"},{"path":"\/documentation\/haishinkit\/audiocodecsettings\/channelmap","type":"property","title":"var channelMap: [Int]?"},{"path":"\/documentation\/haishinkit\/audiocodecsettings\/downmix","type":"property","title":"var downmix: Bool"},{"title":"var format: AudioCodecSettings.Format","path":"\/documentation\/haishinkit\/audiocodecsettings\/format-swift.property","type":"property"},{"type":"property","title":"let sampleRate: Float64","path":"\/documentation\/haishinkit\/audiocodecsettings\/samplerate"},{"type":"groupMarker","title":"Type Properties"},{"path":"\/documentation\/haishinkit\/audiocodecsettings\/default","type":"property","title":"static let `default`: AudioCodecSettings"},{"path":"\/documentation\/haishinkit\/audiocodecsettings\/defaultbitrate","type":"property","title":"static let defaultBitRate: Int"},{"title":"static let maximumNumberOfChannels: UInt32","path":"\/documentation\/haishinkit\/audiocodecsettings\/maximumnumberofchannels","type":"property"},{"type":"groupMarker","title":"Enumerations"},{"title":"AudioCodecSettings.Format","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/audiocodecsettings\/format-swift.enum\/aac","type":"case","title":"case aac"},{"path":"\/documentation\/haishinkit\/audiocodecsettings\/format-swift.enum\/opus","type":"case","title":"case opus"},{"title":"case pcm","path":"\/documentation\/haishinkit\/audiocodecsettings\/format-swift.enum\/pcm","type":"case"},{"title":"Initializers","type":"groupMarker"},{"type":"init","title":"init(from: any Decoder) throws","path":"\/documentation\/haishinkit\/audiocodecsettings\/format-swift.enum\/init(from:)"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","type":"symbol","path":"\/documentation\/haishinkit\/audiocodecsettings\/format-swift.enum\/equatable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/haishinkit\/audiocodecsettings\/format-swift.enum\/!=(_:_:)","type":"op"}]}],"type":"enum","path":"\/documentation\/haishinkit\/audiocodecsettings\/format-swift.enum"}]},{"type":"struct","title":"AudioMixerSettings","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init(sampleRate: Float64, channels: UInt32, isMuted: Bool, mainTrack: UInt8, tracks: [UInt8 : AudioMixerTrackSettings])","path":"\/documentation\/haishinkit\/audiomixersettings\/init(samplerate:channels:ismuted:maintrack:tracks:)"},{"title":"Instance Properties","type":"groupMarker"},{"type":"property","path":"\/documentation\/haishinkit\/audiomixersettings\/channels","title":"let channels: UInt32"},{"type":"property","path":"\/documentation\/haishinkit\/audiomixersettings\/ismuted","title":"var isMuted: Bool"},{"path":"\/documentation\/haishinkit\/audiomixersettings\/maintrack","type":"property","title":"var mainTrack: UInt8"},{"path":"\/documentation\/haishinkit\/audiomixersettings\/maximumnumberofchannels","type":"property","title":"var maximumNumberOfChannels: UInt32"},{"path":"\/documentation\/haishinkit\/audiomixersettings\/samplerate","type":"property","title":"let sampleRate: Float64"},{"path":"\/documentation\/haishinkit\/audiomixersettings\/tracks","title":"var tracks: [UInt8 : AudioMixerTrackSettings]","type":"property"},{"type":"groupMarker","title":"Type Properties"},{"path":"\/documentation\/haishinkit\/audiomixersettings\/default","type":"property","title":"static let `default`: AudioMixerSettings"},{"title":"static let maximumSampleRate: Float64","path":"\/documentation\/haishinkit\/audiomixersettings\/maximumsamplerate","type":"property"}],"path":"\/documentation\/haishinkit\/audiomixersettings"},{"title":"AudioMixerTrackSettings","type":"struct","path":"\/documentation\/haishinkit\/audiomixertracksettings","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init(from: any Decoder) throws","path":"\/documentation\/haishinkit\/audiomixertracksettings\/init(from:)"},{"path":"\/documentation\/haishinkit\/audiomixertracksettings\/init(volume:ismuted:downmix:channelmap:)","type":"init","title":"init(volume: Float, isMuted: Bool, downmix: Bool, channelMap: [Int]?)"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/audiomixertracksettings\/channelmap","title":"var channelMap: [Int]?","type":"property"},{"path":"\/documentation\/haishinkit\/audiomixertracksettings\/downmix","title":"var downmix: Bool","type":"property"},{"type":"property","title":"var isMuted: Bool","path":"\/documentation\/haishinkit\/audiomixertracksettings\/ismuted"},{"title":"var volume: Float","type":"property","path":"\/documentation\/haishinkit\/audiomixertracksettings\/volume"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/audiomixertracksettings\/default","type":"property","title":"static let `default`: AudioMixerTrackSettings"}]},{"path":"\/documentation\/haishinkit\/hkatomic","type":"struct","title":"HKAtomic","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/hkatomic\/init(_:)","type":"init","title":"init(A)"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/hkatomic\/value","type":"property","title":"var value: A"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func mutate((inout A) -> Void)","path":"\/documentation\/haishinkit\/hkatomic\/mutate(_:)","type":"method"}]},{"title":"NetworkMonitorReport","path":"\/documentation\/haishinkit\/networkmonitorreport","type":"struct","children":[{"title":"Instance Properties","type":"groupMarker"},{"type":"property","path":"\/documentation\/haishinkit\/networkmonitorreport\/currentbytesinpersecond","title":"let currentBytesInPerSecond: Int"},{"path":"\/documentation\/haishinkit\/networkmonitorreport\/currentbytesoutpersecond","type":"property","title":"let currentBytesOutPerSecond: Int"},{"title":"let currentQueueBytesOut: Int","path":"\/documentation\/haishinkit\/networkmonitorreport\/currentqueuebytesout","type":"property"},{"type":"property","path":"\/documentation\/haishinkit\/networkmonitorreport\/totalbytesin","title":"let totalBytesIn: Int"},{"path":"\/documentation\/haishinkit\/networkmonitorreport\/totalbytesout","type":"property","title":"let totalBytesOut: Int"}]},{"path":"\/documentation\/haishinkit\/networktransportreport","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/networktransportreport\/init(queuebytesout:totalbytesin:totalbytesout:)","type":"init","title":"init(queueBytesOut: Int, totalBytesIn: Int, totalBytesOut: Int)"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/networktransportreport\/queuebytesout","type":"property","title":"let queueBytesOut: Int"},{"title":"let totalBytesIn: Int","path":"\/documentation\/haishinkit\/networktransportreport\/totalbytesin","type":"property"},{"title":"let totalBytesOut: Int","path":"\/documentation\/haishinkit\/networktransportreport\/totalbytesout","type":"property"}],"title":"NetworkTransportReport","type":"struct"},{"path":"\/documentation\/haishinkit\/rtmpresponse","title":"RTMPResponse","type":"struct","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"let arguments: [(any Sendable)?]","path":"\/documentation\/haishinkit\/rtmpresponse\/arguments"},{"path":"\/documentation\/haishinkit\/rtmpresponse\/status","type":"property","title":"let status: RTMPStatus?"}]},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/rtmpstatus\/code","type":"property","title":"let code: String"},{"title":"let description: String","path":"\/documentation\/haishinkit\/rtmpstatus\/description","type":"property"},{"title":"let level: String","path":"\/documentation\/haishinkit\/rtmpstatus\/level","type":"property"},{"type":"groupMarker","title":"Subscripts"},{"path":"\/documentation\/haishinkit\/rtmpstatus\/subscript(dynamicmember:)-7qc0b","type":"subscript","title":"subscript(dynamicMember _: String) -> Double?"},{"path":"\/documentation\/haishinkit\/rtmpstatus\/subscript(dynamicmember:)-9sprr","title":"subscript(dynamicMember _: String) -> String?","type":"subscript"}],"title":"RTMPStatus","type":"struct","path":"\/documentation\/haishinkit\/rtmpstatus"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var byteCount: Int","path":"\/documentation\/haishinkit\/rtmpstreaminfo\/bytecount","type":"property"},{"type":"property","path":"\/documentation\/haishinkit\/rtmpstreaminfo\/currentbytespersecond","title":"var currentBytesPerSecond: Int"},{"title":"var resourceName: String?","path":"\/documentation\/haishinkit\/rtmpstreaminfo\/resourcename","type":"property"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/rtmpstreaminfo\/debugdescription","type":"property","title":"var debugDescription: String"}],"type":"symbol","path":"\/documentation\/haishinkit\/rtmpstreaminfo\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations"}],"title":"RTMPStreamInfo","path":"\/documentation\/haishinkit\/rtmpstreaminfo","type":"struct"},{"path":"\/documentation\/haishinkit\/soundtransform","title":"SoundTransform","type":"struct","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/soundtransform\/init(volume:pan:)","title":"init(volume: Float, pan: Float)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var pan: Float","path":"\/documentation\/haishinkit\/soundtransform\/pan","type":"property"},{"path":"\/documentation\/haishinkit\/soundtransform\/volume","type":"property","title":"var volume: Float"},{"type":"groupMarker","title":"Type Properties"},{"type":"property","path":"\/documentation\/haishinkit\/soundtransform\/defaultpan","title":"static let defaultPan: Float"},{"path":"\/documentation\/haishinkit\/soundtransform\/defaultvolume","title":"static let defaultVolume: Float","type":"property"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/haishinkit\/soundtransform\/debugdescription","title":"var debugDescription: String"}],"path":"\/documentation\/haishinkit\/soundtransform\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol"},{"title":"Equatable Implementations","type":"symbol","path":"\/documentation\/haishinkit\/soundtransform\/equatable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/haishinkit\/soundtransform\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}]}]},{"path":"\/documentation\/haishinkit\/vtsessionoption","children":[{"title":"Default Implementations","type":"groupMarker"},{"type":"symbol","title":"Equatable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/vtsessionoption\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"},{"type":"op","path":"\/documentation\/haishinkit\/vtsessionoption\/==(_:_:)","title":"static func == (VTSessionOption, VTSessionOption) -> Bool"}],"path":"\/documentation\/haishinkit\/vtsessionoption\/equatable-implementations"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/vtsessionoption\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"title":"Hashable Implementations","type":"symbol","path":"\/documentation\/haishinkit\/vtsessionoption\/hashable-implementations"}],"type":"struct","title":"VTSessionOption"},{"path":"\/documentation\/haishinkit\/videocodecsettings","children":[{"type":"groupMarker","title":"Initializers"},{"title":"init(from: any Decoder) throws","type":"init","path":"\/documentation\/haishinkit\/videocodecsettings\/init(from:)"},{"type":"init","title":"init(videoSize: CGSize, bitRate: Int, profileLevel: String, scalingMode: VideoCodecSettings.ScalingMode, bitRateMode: VideoCodecSettings.BitRateMode, maxKeyFrameIntervalDuration: Int32, allowFrameReordering: Bool?, dataRateLimits: [Double]?, isHardwareEncoderEnabled: Bool)","path":"\/documentation\/haishinkit\/videocodecsettings\/init(videosize:bitrate:profilelevel:scalingmode:bitratemode:maxkeyframeintervalduration:allowframereordering:dataratelimits:ishardwareencoderenabled:)"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/allowframereordering","title":"var allowFrameReordering: Bool?","type":"property"},{"type":"property","title":"var bitRate: Int","path":"\/documentation\/haishinkit\/videocodecsettings\/bitrate"},{"title":"var bitRateMode: VideoCodecSettings.BitRateMode","type":"property","path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.property"},{"type":"property","title":"var dataRateLimits: [Double]?","path":"\/documentation\/haishinkit\/videocodecsettings\/dataratelimits"},{"title":"var frameInterval: Double","path":"\/documentation\/haishinkit\/videocodecsettings\/frameinterval","type":"property"},{"title":"var isHardwareEncoderEnabled: Bool","path":"\/documentation\/haishinkit\/videocodecsettings\/ishardwareencoderenabled","type":"property"},{"type":"property","title":"var maxKeyFrameIntervalDuration: Int32","path":"\/documentation\/haishinkit\/videocodecsettings\/maxkeyframeintervalduration"},{"title":"var profileLevel: String","path":"\/documentation\/haishinkit\/videocodecsettings\/profilelevel","type":"property"},{"type":"property","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.property","title":"var scalingMode: VideoCodecSettings.ScalingMode"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/videosize","title":"var videoSize: CGSize","type":"property"},{"type":"groupMarker","title":"Type Properties"},{"type":"property","title":"static let `default`: VideoCodecSettings","path":"\/documentation\/haishinkit\/videocodecsettings\/default"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/frameinterval01","title":"static let frameInterval01: Double","type":"property"},{"title":"static let frameInterval05: Double","path":"\/documentation\/haishinkit\/videocodecsettings\/frameinterval05","type":"property"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/frameinterval10","title":"static let frameInterval10: Double","type":"property"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/frameinterval30","type":"property","title":"static let frameInterval30: Double"},{"title":"Enumerations","type":"groupMarker"},{"title":"VideoCodecSettings.BitRateMode","path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"type":"case","path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/average","title":"case average"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/constant","title":"case constant","type":"case"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: String)","type":"init","path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/init(rawvalue:)"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","type":"symbol","path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}]},{"title":"RawRepresentable Implementations","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","type":"init","path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/init(from:)"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/hashvalue","type":"property","title":"var hashValue: Int"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/encode(to:)","type":"method","title":"func encode(to: any Encoder) throws"},{"type":"method","title":"func hash(into: inout Hasher)","path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/hash(into:)"}],"type":"symbol","path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/rawrepresentable-implementations"}],"type":"enum"},{"type":"enum","title":"VideoCodecSettings.ScalingMode","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"type":"case","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/cropsourcetocleanaperture","title":"case cropSourceToCleanAperture"},{"title":"case letterbox","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/letterbox","type":"case"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/normal","type":"case","title":"case normal"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/trim","type":"case","title":"case trim"},{"type":"groupMarker","title":"Initializers"},{"title":"init?(rawValue: String)","type":"init","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/init(rawvalue:)"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/!=(_:_:)"}],"type":"symbol"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/rawrepresentable-implementations","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init(from: any Decoder) throws","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/init(from:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/hashvalue","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"type":"method","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/encode(to:)","title":"func encode(to: any Encoder) throws"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/hash(into:)","type":"method","title":"func hash(into: inout Hasher)"}],"type":"symbol","title":"RawRepresentable Implementations"}]}],"type":"struct","title":"VideoCodecSettings"},{"title":"VideoMixerSettings","path":"\/documentation\/haishinkit\/videomixersettings","type":"struct","children":[{"title":"Initializers","type":"groupMarker"},{"type":"init","title":"init(from: any Decoder) throws","path":"\/documentation\/haishinkit\/videomixersettings\/init(from:)"},{"path":"\/documentation\/haishinkit\/videomixersettings\/init(mode:ismuted:maintrack:)","title":"init(mode: VideoMixerSettings.Mode, isMuted: Bool, mainTrack: UInt8)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videomixersettings\/ismuted","title":"var isMuted: Bool","type":"property"},{"title":"var mainTrack: UInt8","type":"property","path":"\/documentation\/haishinkit\/videomixersettings\/maintrack"},{"path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.property","type":"property","title":"var mode: VideoMixerSettings.Mode"},{"type":"groupMarker","title":"Type Properties"},{"path":"\/documentation\/haishinkit\/videomixersettings\/default","title":"static let `default`: VideoMixerSettings","type":"property"},{"type":"groupMarker","title":"Enumerations"},{"title":"VideoMixerSettings.Mode","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case offscreen","path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/offscreen","type":"case"},{"title":"case passthrough","type":"case","path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/passthrough"},{"type":"groupMarker","title":"Initializers"},{"title":"init?(rawValue: String)","type":"init","path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/init(rawvalue:)"},{"type":"groupMarker","title":"Default Implementations"},{"title":"Equatable Implementations","path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/equatable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/!=(_:_:)","type":"op"}],"type":"symbol"},{"title":"RawRepresentable Implementations","path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/rawrepresentable-implementations","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"type":"groupMarker","title":"Instance Properties"},{"title":"var hashValue: Int","path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/hashvalue","type":"property"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"title":"func hash(into: inout Hasher)","path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/hash(into:)","type":"method"}],"type":"symbol"}],"type":"enum","path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum"}]},{"type":"groupMarker","title":"Variables"},{"title":"let kAMFUndefined: AMFUndefined","path":"\/documentation\/haishinkit\/kamfundefined","type":"var"},{"path":"\/documentation\/haishinkit\/khaishinkitidentifier","title":"let kHaishinKitIdentifier: String","type":"var"},{"title":"Type Aliases","type":"groupMarker"},{"type":"typealias","path":"\/documentation\/haishinkit\/amfobject","title":"AMFObject"},{"title":"AudioDeviceConfigurationBlock","path":"\/documentation\/haishinkit\/audiodeviceconfigurationblock","type":"typealias"},{"title":"VideoDeviceConfigurationBlock","type":"typealias","path":"\/documentation\/haishinkit\/videodeviceconfigurationblock"},{"title":"Enumerations","type":"groupMarker"},{"title":"DeviceUtil","children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/deviceutil\/device(withlocalizedname:mediatype:)","title":"static func device(withLocalizedName: String, mediaType: AVMediaType) -> AVCaptureDevice?","type":"method"}],"path":"\/documentation\/haishinkit\/deviceutil","type":"enum"},{"title":"HKStreamReadyState","path":"\/documentation\/haishinkit\/hkstreamreadystate","type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","title":"case idle","path":"\/documentation\/haishinkit\/hkstreamreadystate\/idle"},{"title":"case play","type":"case","path":"\/documentation\/haishinkit\/hkstreamreadystate\/play"},{"title":"case playing","path":"\/documentation\/haishinkit\/hkstreamreadystate\/playing","type":"case"},{"type":"case","title":"case publish","path":"\/documentation\/haishinkit\/hkstreamreadystate\/publish"},{"type":"case","title":"case publishing","path":"\/documentation\/haishinkit\/hkstreamreadystate\/publishing"},{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/haishinkit\/hkstreamreadystate\/init(rawvalue:)","title":"init?(rawValue: Int)"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/haishinkit\/hkstreamreadystate\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"type":"op","path":"\/documentation\/haishinkit\/hkstreamreadystate\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"}],"title":"Equatable Implementations","type":"symbol"},{"title":"RawRepresentable Implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","path":"\/documentation\/haishinkit\/hkstreamreadystate\/hashvalue","type":"property"},{"type":"groupMarker","title":"Instance Methods"},{"title":"func hash(into: inout Hasher)","path":"\/documentation\/haishinkit\/hkstreamreadystate\/hash(into:)","type":"method"}],"type":"symbol","path":"\/documentation\/haishinkit\/hkstreamreadystate\/rawrepresentable-implementations"}]},{"path":"\/documentation\/haishinkit\/networkmonitorevent","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case publishInsufficientBWOccured(report: NetworkMonitorReport)","path":"\/documentation\/haishinkit\/networkmonitorevent\/publishinsufficientbwoccured(report:)","type":"case"},{"path":"\/documentation\/haishinkit\/networkmonitorevent\/reset","title":"case reset","type":"case"},{"path":"\/documentation\/haishinkit\/networkmonitorevent\/status(report:)","title":"case status(report: NetworkMonitorReport)","type":"case"}],"title":"NetworkMonitorEvent","type":"enum"},{"children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/haishinkit\/rtmpobjectencoding\/amf0","title":"case amf0","type":"case"},{"type":"case","title":"case amf3","path":"\/documentation\/haishinkit\/rtmpobjectencoding\/amf3"},{"type":"groupMarker","title":"Initializers"},{"title":"init?(rawValue: UInt8)","path":"\/documentation\/haishinkit\/rtmpobjectencoding\/init(rawvalue:)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","path":"\/documentation\/haishinkit\/rtmpobjectencoding\/equatable-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/haishinkit\/rtmpobjectencoding\/!=(_:_:)"}]},{"title":"RawRepresentable Implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Properties"},{"title":"var hashValue: Int","type":"property","path":"\/documentation\/haishinkit\/rtmpobjectencoding\/hashvalue"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/rtmpobjectencoding\/hash(into:)","type":"method","title":"func hash(into: inout Hasher)"}],"path":"\/documentation\/haishinkit\/rtmpobjectencoding\/rawrepresentable-implementations"}],"title":"RTMPObjectEncoding","type":"enum","path":"\/documentation\/haishinkit\/rtmpobjectencoding"},{"type":"groupMarker","title":"Extended Modules"},{"title":"CoreMedia","path":"\/documentation\/haishinkit\/coremedia","type":"extension","children":[{"type":"groupMarker","title":"Extended Classes"},{"title":"CMFormatDescription","type":"extension","children":[{"title":"Instance Properties","type":"groupMarker"},{"type":"property","path":"\/documentation\/haishinkit\/coremedia\/cmformatdescription\/iscompressed","title":"var isCompressed: Bool"}],"path":"\/documentation\/haishinkit\/coremedia\/cmformatdescription"}]}],"type":"module"},{"type":"module","children":[{"title":"Classes","type":"groupMarker"},{"path":"\/documentation\/srthaishinkit\/srtconnection","type":"class","title":"SRTConnection","children":[{"type":"groupMarker","title":"Initializers"},{"title":"init()","path":"\/documentation\/srthaishinkit\/srtconnection\/init()","type":"init"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/srthaishinkit\/srtconnection\/connected","type":"property","title":"var connected: Bool"},{"path":"\/documentation\/srthaishinkit\/srtconnection\/performancedata","title":"var performanceData: SRTPerformanceData?","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtconnection\/uri","type":"property","title":"var uri: URL?"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func close() async throws","path":"\/documentation\/srthaishinkit\/srtconnection\/close()","type":"method"},{"title":"func open(URL?, mode: SRTMode) async throws","path":"\/documentation\/srthaishinkit\/srtconnection\/open(_:mode:)","type":"method"},{"type":"groupMarker","title":"Type Properties"},{"path":"\/documentation\/srthaishinkit\/srtconnection\/version","type":"property","title":"static let version: String"},{"type":"groupMarker","title":"Enumerations"},{"type":"enum","title":"SRTConnection.Error","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/srthaishinkit\/srtconnection\/error\/failedtoconnect(_:reson:)","title":"case failedToConnect(String, reson: Int32)","type":"case"},{"path":"\/documentation\/srthaishinkit\/srtconnection\/error\/invalidstate","type":"case","title":"case invalidState"},{"title":"case unsupportedUri(URL?)","path":"\/documentation\/srthaishinkit\/srtconnection\/error\/unsupporteduri(_:)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"type":"symbol","path":"\/documentation\/srthaishinkit\/srtconnection\/error\/error-implementations","title":"Error Implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtconnection\/error\/localizeddescription","title":"var localizedDescription: String"}]}],"path":"\/documentation\/srthaishinkit\/srtconnection\/error"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/srthaishinkit\/srtconnection\/assertisolated(_:file:line:)","type":"method","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)"},{"title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","path":"\/documentation\/srthaishinkit\/srtconnection\/assumeisolated(_:file:line:)","type":"method"},{"title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/srthaishinkit\/srtconnection\/preconditionisolated(_:file:line:)","type":"method"}],"title":"Actor Implementations","path":"\/documentation\/srthaishinkit\/srtconnection\/actor-implementations","type":"symbol"}]},{"title":"SRTStream","type":"class","path":"\/documentation\/srthaishinkit\/srtstream","children":[{"title":"Initializers","type":"groupMarker"},{"type":"init","title":"init(connection: SRTConnection)","path":"\/documentation\/srthaishinkit\/srtstream\/init(connection:)"},{"type":"groupMarker","title":"Instance Properties"},{"title":"var audioTrackId: UInt8?","type":"property","path":"\/documentation\/srthaishinkit\/srtstream\/audiotrackid"},{"path":"\/documentation\/srthaishinkit\/srtstream\/readystate","title":"var readyState: HKStreamReadyState","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtstream\/videotrackid","type":"property","title":"var videoTrackId: UInt8?"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/srthaishinkit\/srtstream\/close()","type":"method","title":"func close() async"},{"type":"method","title":"func play(String?) async","path":"\/documentation\/srthaishinkit\/srtstream\/play(_:)"},{"type":"method","title":"func publish(String?) async","path":"\/documentation\/srthaishinkit\/srtstream\/publish(_:)"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","path":"\/documentation\/srthaishinkit\/srtstream\/actor-implementations","title":"Actor Implementations","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/srthaishinkit\/srtstream\/assertisolated(_:file:line:)"},{"path":"\/documentation\/srthaishinkit\/srtstream\/assumeisolated(_:file:line:)","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","type":"method"},{"type":"method","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/srthaishinkit\/srtstream\/preconditionisolated(_:file:line:)"}]},{"path":"\/documentation\/srthaishinkit\/srtstream\/hkstream-implementations","title":"HKStream Implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/srthaishinkit\/srtstream\/audiosettings","type":"property","title":"var audioSettings: AudioCodecSettings"},{"title":"var soundTransform: SoundTransform?","type":"property","path":"\/documentation\/srthaishinkit\/srtstream\/soundtransform"},{"title":"var videoSettings: VideoCodecSettings","path":"\/documentation\/srthaishinkit\/srtstream\/videosettings","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/srthaishinkit\/srtstream\/addoutput(_:)","type":"method","title":"func addOutput(some HKStreamOutput)"},{"path":"\/documentation\/srthaishinkit\/srtstream\/append(_:)","title":"func append(CMSampleBuffer)","type":"method"},{"title":"func append(AVAudioBuffer, when: AVAudioTime)","path":"\/documentation\/srthaishinkit\/srtstream\/append(_:when:)","type":"method"},{"path":"\/documentation\/srthaishinkit\/srtstream\/attachaudioplayer(_:)","type":"method","title":"func attachAudioPlayer(AudioPlayer?) async"},{"path":"\/documentation\/srthaishinkit\/srtstream\/dispatch(_:)","type":"method","title":"func dispatch(NetworkMonitorEvent) async"},{"title":"func removeOutput(some HKStreamOutput)","type":"method","path":"\/documentation\/srthaishinkit\/srtstream\/removeoutput(_:)"},{"type":"method","title":"func setAudioSettings(AudioCodecSettings)","path":"\/documentation\/srthaishinkit\/srtstream\/setaudiosettings(_:)"},{"path":"\/documentation\/srthaishinkit\/srtstream\/setbitratestorategy(_:)","title":"func setBitrateStorategy((some HKStreamBitRateStrategy)?)","type":"method"},{"path":"\/documentation\/srthaishinkit\/srtstream\/setsoundtransform(_:)","title":"func setSoundTransform(SoundTransform) async","type":"method"},{"path":"\/documentation\/srthaishinkit\/srtstream\/setvideoinputbuffercounts(_:)","type":"method","title":"func setVideoInputBufferCounts(Int)"},{"title":"func setVideoSettings(VideoCodecSettings)","type":"method","path":"\/documentation\/srthaishinkit\/srtstream\/setvideosettings(_:)"}],"type":"symbol"},{"type":"symbol","path":"\/documentation\/srthaishinkit\/srtstream\/mediamixeroutput-implementations","title":"MediaMixerOutput Implementations","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func mixer(MediaMixer, didOutput: CMSampleBuffer)","path":"\/documentation\/srthaishinkit\/srtstream\/mixer(_:didoutput:)"},{"path":"\/documentation\/srthaishinkit\/srtstream\/mixer(_:didoutput:when:)","type":"method","title":"func mixer(MediaMixer, didOutput: AVAudioPCMBuffer, when: AVAudioTime)"},{"title":"func selectTrack(UInt8?, mediaType: CMFormatDescription.MediaType)","path":"\/documentation\/srthaishinkit\/srtstream\/selecttrack(_:mediatype:)","type":"method"}]}]},{"title":"Structures","type":"groupMarker"},{"title":"SRTLogger","path":"\/documentation\/srthaishinkit\/srtlogger","type":"struct","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var functionalAreas: Set<SRTLogFunctionalArea>","path":"\/documentation\/srthaishinkit\/srtlogger\/functionalareas","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtlogger\/level","type":"property","title":"var level: SRTLogLevel"},{"type":"groupMarker","title":"Type Properties"},{"type":"property","title":"static let shared: SRTLogger","path":"\/documentation\/srthaishinkit\/srtlogger\/shared"}]},{"type":"struct","path":"\/documentation\/srthaishinkit\/srtperformancedata","title":"SRTPerformanceData","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/byteavailrcvbuf","type":"property","title":"let byteAvailRcvBuf: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/byteavailsndbuf","title":"let byteAvailSndBuf: Int32"},{"title":"let byteMSS: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytemss","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytercvbuf","title":"let byteRcvBuf: Int32","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytercvdrop","type":"property","title":"let byteRcvDrop: UInt64"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytercvdroptotal","title":"let byteRcvDropTotal: UInt64","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytercvloss","title":"let byteRcvLoss: UInt64","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytercvlosstotal","type":"property","title":"let byteRcvLossTotal: UInt64"},{"type":"property","title":"let byteRcvUndecrypt: UInt64","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytercvundecrypt"},{"type":"property","title":"let byteRcvUndecryptTotal: UInt64","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytercvundecrypttotal"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/byterecv","type":"property","title":"let byteRecv: UInt64"},{"title":"let byteRecvTotal: UInt64","type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/byterecvtotal"},{"title":"let byteRetrans: UInt64","type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/byteretrans"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/byteretranstotal","title":"let byteRetransTotal: UInt64","type":"property"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytesent","title":"let byteSent: UInt64"},{"type":"property","title":"let byteSentTotal: UInt64","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytesenttotal"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytesndbuf","type":"property","title":"let byteSndBuf: Int32"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytesnddrop","title":"let byteSndDrop: UInt64","type":"property"},{"title":"let byteSndDropTotal: UInt64","type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytesnddroptotal"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/mbpsbandwidth","title":"let mbpsBandwidth: Double"},{"title":"let mbpsMaxBW: Double","path":"\/documentation\/srthaishinkit\/srtperformancedata\/mbpsmaxbw","type":"property"},{"type":"property","title":"let mbpsRecvRate: Double","path":"\/documentation\/srthaishinkit\/srtperformancedata\/mbpsrecvrate"},{"title":"let mbpsSendRate: Double","type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/mbpssendrate"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/msrtt","title":"let msRTT: Double"},{"type":"property","title":"let msRcvBuf: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/msrcvbuf"},{"title":"let msRcvTsbPdDelay: Int32","type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/msrcvtsbpddelay"},{"type":"property","title":"let msSndBuf: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/mssndbuf"},{"title":"let msSndTsbPdDelay: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/mssndtsbpddelay","type":"property"},{"type":"property","title":"let msTimeStamp: Int64","path":"\/documentation\/srthaishinkit\/srtperformancedata\/mstimestamp"},{"title":"let pktCongestionWindow: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktcongestionwindow","type":"property"},{"title":"let pktFlightSize: Int32","type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktflightsize"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktflowwindow","title":"let pktFlowWindow: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvavgbelatedtime","title":"let pktRcvAvgBelatedTime: Double"},{"type":"property","title":"let pktRcvBelated: Int64","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvbelated"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvbuf","title":"let pktRcvBuf: Int32"},{"title":"let pktRcvDrop: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvdrop","type":"property"},{"type":"property","title":"let pktRcvDropTotal: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvdroptotal"},{"type":"property","title":"let pktRcvFilterExtra: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvfilterextra"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvfilterextratotal","type":"property","title":"let pktRcvFilterExtraTotal: Int32"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvfilterloss","title":"let pktRcvFilterLoss: Int32","type":"property"},{"title":"let pktRcvFilterLossTotal: Int32","type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvfilterlosstotal"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvfiltersupply","title":"let pktRcvFilterSupply: Int32","type":"property"},{"type":"property","title":"let pktRcvFilterSupplyTotal: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvfiltersupplytotal"},{"title":"let pktRcvLoss: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvloss","type":"property"},{"type":"property","title":"let pktRcvLossTotal: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvlosstotal"},{"title":"let pktRcvRetrans: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvretrans","type":"property"},{"title":"let pktRcvUndecrypt: Int32","type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvundecrypt"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvundecrypttotal","title":"let pktRcvUndecryptTotal: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrecv","title":"let pktRecv: Int64"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrecvack","title":"let pktRecvACK: Int32"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrecvacktotal","title":"let pktRecvACKTotal: Int32","type":"property"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrecvnak","title":"let pktRecvNAK: Int32"},{"title":"let pktRecvNAKTotal: Int32","type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrecvnaktotal"},{"title":"let pktRecvTotal: Int64","type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrecvtotal"},{"type":"property","title":"let pktReorderDistance: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktreorderdistance"},{"type":"property","title":"let pktReorderTolerance: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktreordertolerance"},{"type":"property","title":"let pktRetrans: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktretrans"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktretranstotal","title":"let pktRetransTotal: Int32","type":"property"},{"type":"property","title":"let pktSent: Int64","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsent"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsentack","title":"let pktSentACK: Int32","type":"property"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsentacktotal","title":"let pktSentACKTotal: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsentnak","title":"let pktSentNAK: Int32"},{"type":"property","title":"let pktSentNAKTotal: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsentnaktotal"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsenttotal","type":"property","title":"let pktSentTotal: Int64"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsndbuf","title":"let pktSndBuf: Int32"},{"type":"property","title":"let pktSndDrop: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsnddrop"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsnddroptotal","type":"property","title":"let pktSndDropTotal: Int32"},{"title":"let pktSndFilterExtra: Int32","type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsndfilterextra"},{"type":"property","title":"let pktSndFilterExtraTotal: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsndfilterextratotal"},{"title":"let pktSndLoss: Int32","type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsndloss"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsndlosstotal","title":"let pktSndLossTotal: Int32"},{"type":"property","title":"let usPktSndPeriod: Double","path":"\/documentation\/srthaishinkit\/srtperformancedata\/uspktsndperiod"},{"type":"property","title":"let usSndDuration: Int64","path":"\/documentation\/srthaishinkit\/srtperformancedata\/ussndduration"},{"type":"property","title":"let usSndDurationTotal: Int64","path":"\/documentation\/srthaishinkit\/srtperformancedata\/ussnddurationtotal"}]},{"title":"Enumerations","type":"groupMarker"},{"type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case apiCtrl","type":"case","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/apictrl"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/apirecv","title":"case apiRecv","type":"case"},{"title":"case apiSend","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/apisend","type":"case"},{"title":"case applog","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/applog","type":"case"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/bstats","type":"case","title":"case bstats"},{"type":"case","title":"case bufRecv","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/bufrecv"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/bufsend","title":"case bufSend","type":"case"},{"title":"case chanRecv","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/chanrecv","type":"case"},{"title":"case chnMgmt","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/chnmgmt","type":"case"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/chnsend","title":"case chnSend","type":"case"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/congest","type":"case","title":"case congest"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/control","type":"case","title":"case control"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/data","title":"case data","type":"case"},{"title":"case epollApi","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/epollapi","type":"case"},{"type":"case","title":"case epollUpd","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/epollupd"},{"title":"case general","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/general","type":"case"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/grpmgmt","type":"case","title":"case grpMgmt"},{"type":"case","title":"case grpRecv","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/grprecv"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/grpsend","type":"case","title":"case grpSend"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/haicrypt","type":"case","title":"case haicrypt"},{"title":"case `internal`","type":"case","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/internal"},{"title":"case pfilter","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/pfilter","type":"case"},{"type":"case","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/quectrl","title":"case queCtrl"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/quemgmt","type":"case","title":"case queMgmt"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/querecv","title":"case queRecv","type":"case"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/quesend","title":"case queSend","type":"case"},{"type":"case","title":"case rsrc","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/rsrc"},{"title":"case tsbpd","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/tsbpd","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/init(rawvalue:)","type":"init","title":"init?(rawValue: Int32)"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","children":[{"type":"groupMarker","title":"Operators"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/!=(_:_:)","type":"op"}],"type":"symbol","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/equatable-implementations"},{"type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"type":"property","title":"var hashValue: Int","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/hashvalue"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/hash(into:)","type":"method","title":"func hash(into: inout Hasher)"}],"title":"RawRepresentable Implementations","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/rawrepresentable-implementations"}],"title":"SRTLogFunctionalArea","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea"},{"type":"enum","title":"SRTLogLevel","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/srthaishinkit\/srtloglevel\/crit","title":"case crit","type":"case"},{"title":"case debug","path":"\/documentation\/srthaishinkit\/srtloglevel\/debug","type":"case"},{"path":"\/documentation\/srthaishinkit\/srtloglevel\/error","title":"case error","type":"case"},{"type":"case","path":"\/documentation\/srthaishinkit\/srtloglevel\/notice","title":"case notice"},{"title":"case warning","path":"\/documentation\/srthaishinkit\/srtloglevel\/warning","type":"case"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/srthaishinkit\/srtloglevel\/equatable-implementations","title":"Equatable Implementations","children":[{"type":"groupMarker","title":"Operators"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/srthaishinkit\/srtloglevel\/!=(_:_:)","type":"op"}],"type":"symbol"}],"path":"\/documentation\/srthaishinkit\/srtloglevel"},{"title":"SRTMode","type":"enum","path":"\/documentation\/srthaishinkit\/srtmode","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","title":"case caller","path":"\/documentation\/srthaishinkit\/srtmode\/caller"},{"type":"case","title":"case listener","path":"\/documentation\/srthaishinkit\/srtmode\/listener"},{"type":"groupMarker","title":"Default Implementations"},{"title":"Equatable Implementations","children":[{"type":"groupMarker","title":"Operators"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/srthaishinkit\/srtmode\/!=(_:_:)","type":"op"}],"path":"\/documentation\/srthaishinkit\/srtmode\/equatable-implementations","type":"symbol"}]}],"path":"\/documentation\/srthaishinkit","title":"SRTHaishinKit"},{"path":"\/documentation\/moqthaishinkit","title":"MoQTHaishinKit","type":"module","children":[{"type":"groupMarker","title":"Classes"},{"type":"class","path":"\/documentation\/moqthaishinkit\/moqtconnection","title":"MoQTConnection","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/init(_:requesttimeout:)","type":"init","title":"init(MoQTSetupRole, requestTimeOut: UInt64)"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/objectstream","title":"var objectStream: AsyncStream<MoQTObject>","type":"property"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/requesttimeout","type":"property","title":"let requestTimeout: UInt64"},{"title":"let role: MoQTSetupRole","type":"property","path":"\/documentation\/moqthaishinkit\/moqtconnection\/role"},{"type":"groupMarker","title":"Instance Methods"},{"title":"func annouce([String], authInfo: String?) async throws -> Result<MoQTAnnounceOk, MoQTAnnounceError>","path":"\/documentation\/moqthaishinkit\/moqtconnection\/annouce(_:authinfo:)","type":"method"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/close()","type":"method","title":"func close() async"},{"title":"func connect(String) async throws -> MoQTServerSetup","type":"method","path":"\/documentation\/moqthaishinkit\/moqtconnection\/connect(_:)"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/send(_:header:)","title":"func send([MoQTObject], header: MoQTStreamHeaderSubgroup) async throws","type":"method"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/subscribe(_:name:authinfo:)","type":"method","title":"func subscribe([String], name: String, authInfo: String?) async throws -> Result<MoQTSubscribeOk, MoQTSubscribeError>"},{"type":"method","path":"\/documentation\/moqthaishinkit\/moqtconnection\/subscribeannouces(_:authinfo:)","title":"func subscribeAnnouces([String], authInfo: String?) async throws -> Result<MoQTSubscribeAnnouncesOk, MoQTSubscribeAnnouncesError>"},{"title":"Type Properties","type":"groupMarker"},{"title":"static let defaultPort: Int","path":"\/documentation\/moqthaishinkit\/moqtconnection\/defaultport","type":"property"},{"type":"property","title":"static let defaultRequestTimeout: UInt64","path":"\/documentation\/moqthaishinkit\/moqtconnection\/defaultrequesttimeout"},{"title":"static let supportedProtocols: [String]","type":"property","path":"\/documentation\/moqthaishinkit\/moqtconnection\/supportedprotocols"},{"title":"static let supportedVersions: [MoQTVersion]","type":"property","path":"\/documentation\/moqthaishinkit\/moqtconnection\/supportedversions"},{"type":"groupMarker","title":"Enumerations"},{"children":[{"type":"groupMarker","title":"Enumeration Cases"},{"title":"case connectionTimedOut","path":"\/documentation\/moqthaishinkit\/moqtconnection\/error\/connectiontimedout","type":"case"},{"title":"case invalidState","type":"case","path":"\/documentation\/moqthaishinkit\/moqtconnection\/error\/invalidstate"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/error\/requesttimedout","type":"case","title":"case requestTimedOut"},{"type":"case","title":"case socketErrorOccurred(any Error)","path":"\/documentation\/moqthaishinkit\/moqtconnection\/error\/socketerroroccurred(_:)"},{"type":"case","title":"case unknownResponse","path":"\/documentation\/moqthaishinkit\/moqtconnection\/error\/unknownresponse"},{"title":"case unsupportedCommand(String)","path":"\/documentation\/moqthaishinkit\/moqtconnection\/error\/unsupportedcommand(_:)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"type":"symbol","title":"Error Implementations","path":"\/documentation\/moqthaishinkit\/moqtconnection\/error\/error-implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var localizedDescription: String","path":"\/documentation\/moqthaishinkit\/moqtconnection\/error\/localizeddescription","type":"property"}]}],"type":"enum","title":"MoQTConnection.Error","path":"\/documentation\/moqthaishinkit\/moqtconnection\/error"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/assertisolated(_:file:line:)","type":"method","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/assumeisolated(_:file:line:)","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","type":"method"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/preconditionisolated(_:file:line:)","type":"method","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)"}],"type":"symbol","path":"\/documentation\/moqthaishinkit\/moqtconnection\/actor-implementations","title":"Actor Implementations"}]},{"type":"groupMarker","title":"Protocols"},{"type":"protocol","title":"MoQTControlMessage","path":"\/documentation\/moqthaishinkit\/moqtcontrolmessage","children":[{"type":"groupMarker","title":"Instance Properties"},{"title":"var payload: Data","path":"\/documentation\/moqthaishinkit\/moqtcontrolmessage\/payload","type":"property"},{"path":"\/documentation\/moqthaishinkit\/moqtcontrolmessage\/type","type":"property","title":"var type: MoQTMessageType"}]},{"title":"Structures","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"title":"var payload: Data","path":"\/documentation\/moqthaishinkit\/moqtannounce\/payload","type":"property"},{"path":"\/documentation\/moqthaishinkit\/moqtannounce\/subscribeparameters","type":"property","title":"let subscribeParameters: [MoQTVersionSpecificParameter]"},{"type":"property","title":"let trackNamespace: [String]","path":"\/documentation\/moqthaishinkit\/moqtannounce\/tracknamespace"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtannounce\/type","title":"let type: MoQTMessageType"}],"path":"\/documentation\/moqthaishinkit\/moqtannounce","type":"struct","title":"MoQTAnnounce"},{"title":"MoQTAnnounceError","path":"\/documentation\/moqthaishinkit\/moqtannounceerror","type":"struct","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtannounceerror\/code","type":"property","title":"let code: Int"},{"title":"var payload: Data","path":"\/documentation\/moqthaishinkit\/moqtannounceerror\/payload","type":"property"},{"path":"\/documentation\/moqthaishinkit\/moqtannounceerror\/reasonphrase","title":"let reasonPhrase: String","type":"property"},{"title":"let trackNamespace: [String]","path":"\/documentation\/moqthaishinkit\/moqtannounceerror\/tracknamespace","type":"property"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtannounceerror\/type","title":"let type: MoQTMessageType"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Error Implementations","type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var localizedDescription: String","type":"property","path":"\/documentation\/moqthaishinkit\/moqtannounceerror\/localizeddescription"}],"path":"\/documentation\/moqthaishinkit\/moqtannounceerror\/error-implementations"}]},{"type":"struct","title":"MoQTAnnounceOk","path":"\/documentation\/moqthaishinkit\/moqtannounceok","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/moqthaishinkit\/moqtannounceok\/payload","type":"property","title":"var payload: Data"},{"title":"let trackNamespace: [String]","type":"property","path":"\/documentation\/moqthaishinkit\/moqtannounceok\/tracknamespace"},{"path":"\/documentation\/moqthaishinkit\/moqtannounceok\/type","type":"property","title":"let type: MoQTMessageType"}]},{"path":"\/documentation\/moqthaishinkit\/moqtgoaway","title":"MoQTGoaway","type":"struct","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/moqthaishinkit\/moqtgoaway\/newsessionuri","type":"property","title":"let newSessionURI: String"},{"title":"var payload: Data","path":"\/documentation\/moqthaishinkit\/moqtgoaway\/payload","type":"property"},{"title":"let type: MoQTMessageType","path":"\/documentation\/moqthaishinkit\/moqtgoaway\/type","type":"property"}]},{"path":"\/documentation\/moqthaishinkit\/moqtobject","children":[{"title":"Initializers","type":"groupMarker"},{"type":"init","title":"init(id: Int, status: Int?, data: Data)","path":"\/documentation\/moqthaishinkit\/moqtobject\/init(id:status:data:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let data: Data","type":"property","path":"\/documentation\/moqthaishinkit\/moqtobject\/data"},{"title":"let id: Int","path":"\/documentation\/moqthaishinkit\/moqtobject\/id","type":"property"},{"path":"\/documentation\/moqthaishinkit\/moqtobject\/status","type":"property","title":"let status: Int?"}],"title":"MoQTObject","type":"struct"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/moqthaishinkit\/moqtserversetup\/payload","type":"property","title":"var payload: Data"},{"path":"\/documentation\/moqthaishinkit\/moqtserversetup\/selectedversion","type":"property","title":"let selectedVersion: Int"},{"type":"property","title":"let setupParameters: [MoQTSetupParameter]","path":"\/documentation\/moqthaishinkit\/moqtserversetup\/setupparameters"},{"type":"property","title":"let type: MoQTMessageType","path":"\/documentation\/moqthaishinkit\/moqtserversetup\/type"}],"type":"struct","title":"MoQTServerSetup","path":"\/documentation\/moqthaishinkit\/moqtserversetup"},{"title":"MoQTSetupParameter","path":"\/documentation\/moqthaishinkit\/moqtsetupparameter","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"let key: MoQTSetupParameterType","path":"\/documentation\/moqthaishinkit\/moqtsetupparameter\/key","type":"property"},{"title":"let value: (any Sendable)","path":"\/documentation\/moqthaishinkit\/moqtsetupparameter\/value","type":"property"}],"type":"struct"},{"path":"\/documentation\/moqthaishinkit\/moqtstreamheadersubgroup","title":"MoQTStreamHeaderSubgroup","children":[{"title":"Initializers","type":"groupMarker"},{"type":"init","title":"init(trackAlias: Int, groupId: Int, subgroupId: Int, publisherPriority: Int)","path":"\/documentation\/moqthaishinkit\/moqtstreamheadersubgroup\/init(trackalias:groupid:subgroupid:publisherpriority:)"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/moqthaishinkit\/moqtstreamheadersubgroup\/groupid","title":"let groupId: Int","type":"property"},{"title":"var payload: Data","path":"\/documentation\/moqthaishinkit\/moqtstreamheadersubgroup\/payload","type":"property"},{"path":"\/documentation\/moqthaishinkit\/moqtstreamheadersubgroup\/publisherpriority","title":"let publisherPriority: Int","type":"property"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtstreamheadersubgroup\/subgroupid","title":"let subgroupId: Int"},{"path":"\/documentation\/moqthaishinkit\/moqtstreamheadersubgroup\/trackalias","type":"property","title":"let trackAlias: Int"},{"type":"property","title":"let type: MoQTDataStreamType","path":"\/documentation\/moqthaishinkit\/moqtstreamheadersubgroup\/type"}],"type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"type":"property","title":"let endGroup: Int?","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/endgroup"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/endobject","type":"property","title":"let endObject: Int?"},{"title":"let filterType: MoQTSubscribe.FilterType","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.property","type":"property"},{"type":"property","title":"let groupOrder: MoQTSubscribe.GroupOrder","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.property"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/payload","type":"property","title":"var payload: Data"},{"title":"let startGroup: Int?","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/startgroup","type":"property"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/startobject","type":"property","title":"let startObject: Int?"},{"type":"property","title":"let subscribeId: Int","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/subscribeid"},{"type":"property","title":"let subscribeParameters: [MoQTVersionSpecificParameter]","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/subscribeparameters"},{"type":"property","title":"let subscribePriority: Int","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/subscribepriority"},{"title":"let trackAlias: Int","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/trackalias","type":"property"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/trackname","type":"property","title":"let trackName: String"},{"title":"let trackNamespace: [String]","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/tracknamespace","type":"property"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/type","title":"let type: MoQTMessageType"},{"title":"Enumerations","type":"groupMarker"},{"type":"enum","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum","title":"MoQTSubscribe.FilterType","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/absoluterange","type":"case","title":"case absoluteRange"},{"title":"case absoluteStart","type":"case","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/absolutestart"},{"type":"case","title":"case latestGroup","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/latestgroup"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/latestobject","title":"case latestObject","type":"case"},{"type":"groupMarker","title":"Initializers"},{"title":"init?(rawValue: Int)","type":"init","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/init(rawvalue:)"},{"type":"groupMarker","title":"Default Implementations"},{"title":"Equatable Implementations","children":[{"type":"groupMarker","title":"Operators"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/!=(_:_:)","type":"op"}],"type":"symbol","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/equatable-implementations"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var hashValue: Int","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/hashvalue"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/hash(into:)","type":"method","title":"func hash(into: inout Hasher)"}],"type":"symbol"}]},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case ascending","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/ascending","type":"case"},{"type":"case","title":"case descending","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/descending"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/original","type":"case","title":"case original"},{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init?(rawValue: Int)","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/init(rawvalue:)"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/equatable-implementations","title":"Equatable Implementations","children":[{"type":"groupMarker","title":"Operators"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/!=(_:_:)","type":"op"}],"type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/hashvalue"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func hash(into: inout Hasher)","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/hash(into:)","type":"method"}],"title":"RawRepresentable Implementations","type":"symbol","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/rawrepresentable-implementations"}],"title":"MoQTSubscribe.GroupOrder","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum","type":"enum"}],"type":"struct","path":"\/documentation\/moqthaishinkit\/moqtsubscribe","title":"MoQTSubscribe"},{"type":"struct","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounces","title":"MoQTSubscribeAnnounces","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounces\/parameters","type":"property","title":"let parameters: [MoQTVersionSpecificParameter]"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounces\/payload","type":"property","title":"var payload: Data"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounces\/tracknamespaceprefix","title":"let trackNamespacePrefix: [String]","type":"property"},{"type":"property","title":"let type: MoQTMessageType","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounces\/type"}]},{"title":"MoQTSubscribeAnnouncesError","children":[{"title":"Instance Properties","type":"groupMarker"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounceserror\/errorcode","title":"let errorCode: Int"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounceserror\/payload","type":"property","title":"var payload: Data"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounceserror\/reasonphrase","title":"let reasonPhrase: String","type":"property"},{"title":"let trackNamespacePrefix: [String]","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounceserror\/tracknamespaceprefix","type":"property"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounceserror\/type","title":"let type: MoQTMessageType","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Error Implementations","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounceserror\/error-implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounceserror\/localizeddescription","type":"property","title":"var localizedDescription: String"}],"type":"symbol"}],"path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounceserror","type":"struct"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeannouncesok","type":"struct","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var payload: Data","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannouncesok\/payload","type":"property"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeannouncesok\/tracknamespaceprefix","type":"property","title":"let trackNamespacePrefix: [String]"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeannouncesok\/type","type":"property","title":"let type: MoQTMessageType"}],"title":"MoQTSubscribeAnnouncesOk"},{"title":"MoQTSubscribeError","children":[{"type":"groupMarker","title":"Instance Properties"},{"title":"let code: Int","path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror\/code","type":"property"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror\/payload","title":"var payload: Data","type":"property"},{"type":"property","title":"let reasonPhrase: String","path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror\/reasonphrase"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror\/subscribeid","title":"let subscribeId: Int"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror\/trackalias","type":"property","title":"let trackAlias: Int"},{"type":"property","title":"let type: MoQTMessageType","path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror\/type"},{"type":"groupMarker","title":"Default Implementations"},{"title":"Error Implementations","path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror\/error-implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"type":"symbol"}],"path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/contentexists","type":"property","title":"let contentExists: Bool"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/expires","title":"let expires: Int","type":"property"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/grouporder","title":"let groupOrder: MoQTSubscribe.GroupOrder"},{"title":"let largestGroupId: Int?","path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/largestgroupid","type":"property"},{"type":"property","title":"let largestObjectId: Int?","path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/largestobjectid"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/payload","title":"var payload: Data","type":"property"},{"type":"property","title":"let subscribeId: Int","path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/subscribeid"},{"title":"let subscribeParameters: [MoQTVersionSpecificParameter]","path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/subscribeparameters","type":"property"},{"title":"let type: MoQTMessageType","type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/type"}],"title":"MoQTSubscribeOk","type":"struct","path":"\/documentation\/moqthaishinkit\/moqtsubscribeok"},{"type":"struct","path":"\/documentation\/moqthaishinkit\/moqtversionspecificparameter","title":"MoQTVersionSpecificParameter","children":[{"title":"Instance Properties","type":"groupMarker"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtversionspecificparameter\/key","title":"let key: MoQTVersionSpecificType"},{"type":"property","title":"let value: (any Sendable)","path":"\/documentation\/moqthaishinkit\/moqtversionspecificparameter\/value"}]},{"type":"groupMarker","title":"Enumerations"},{"title":"MoQTDataStreamType","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"title":"case fetchHeader","path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/fetchheader","type":"case"},{"type":"case","title":"case objectDatagram","path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/objectdatagram"},{"type":"case","title":"case streamHeaderSubgroup","path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/streamheadersubgroup"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/!=(_:_:)","type":"op"}],"type":"symbol","title":"Equatable Implementations"},{"type":"symbol","path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/rawrepresentable-implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"type":"property","title":"var hashValue: Int","path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/hashvalue"},{"type":"groupMarker","title":"Instance Methods"},{"title":"func hash(into: inout Hasher)","type":"method","path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/hash(into:)"}],"title":"RawRepresentable Implementations"}],"type":"enum","path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype"},{"title":"MoQTMessageType","type":"enum","path":"\/documentation\/moqthaishinkit\/moqtmessagetype","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"title":"case announce","type":"case","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/announce"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/announcecancel","title":"case announceCancel","type":"case"},{"title":"case announceError","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/announceerror","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/announceok","type":"case","title":"case announceOk"},{"type":"case","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/clientsetup","title":"case clientSetup"},{"title":"case goaway","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/goaway","type":"case"},{"title":"case serverSetup","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/serversetup","type":"case"},{"title":"case subscribe","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/subscribe","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/subscribeannounuces","title":"case subscribeAnnounuces","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/subscribeannounuceserror","type":"case","title":"case subscribeAnnounucesError"},{"title":"case subscribeAnnounucesOk","type":"case","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/subscribeannounucesok"},{"type":"case","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/subscribedone","title":"case subscribeDone"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/subscribeerror","type":"case","title":"case subscribeError"},{"title":"case subscribeOk","type":"case","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/subscribeok"},{"title":"case subscribeUpdate","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/subscribeupdate","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/trackstatus","title":"case trackStatus","type":"case"},{"title":"case trackStatusRequest","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/trackstatusrequest","type":"case"},{"title":"case unannounce","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/unannounce","type":"case"},{"title":"case unsubscribe","type":"case","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/unsubscribe"},{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"type":"groupMarker","title":"Default Implementations"},{"title":"Equatable Implementations","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/equatable-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}]},{"title":"RawRepresentable Implementations","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/rawrepresentable-implementations","type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"type":"property","title":"var hashValue: Int","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/hashvalue"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func hash(into: inout Hasher)","type":"method","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/hash(into:)"}]}]},{"type":"enum","path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype","title":"MoQTSetupParameterType","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case maxSubscribeId","path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/maxsubscribeid","type":"case"},{"type":"case","path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/path","title":"case path"},{"path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/role","type":"case","title":"case role"},{"title":"Initializers","type":"groupMarker"},{"type":"init","path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/init(rawvalue:)","title":"init?(rawValue: Int)"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/equatable-implementations","title":"Equatable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/!=(_:_:)"}],"type":"symbol"},{"path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/rawrepresentable-implementations","type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func hash(into: inout Hasher)","path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/hash(into:)","type":"method"}],"title":"RawRepresentable Implementations"}]},{"type":"enum","path":"\/documentation\/moqthaishinkit\/moqtsetuprole","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/pubsub","type":"case","title":"case pubSub"},{"path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/publisher","type":"case","title":"case publisher"},{"type":"case","path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/subscriber","title":"case subscriber"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/init(rawvalue:)","type":"init","title":"init?(rawValue: Int)"},{"title":"Default Implementations","type":"groupMarker"},{"type":"symbol","title":"Equatable Implementations","path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}]},{"path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func hash(into: inout Hasher)","path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/hash(into:)","type":"method"}]}],"title":"MoQTSetupRole"},{"title":"MoQTVersion","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"type":"case","title":"case draft01","path":"\/documentation\/moqthaishinkit\/moqtversion\/draft01"},{"type":"case","title":"case draft02","path":"\/documentation\/moqthaishinkit\/moqtversion\/draft02"},{"path":"\/documentation\/moqthaishinkit\/moqtversion\/draft03","title":"case draft03","type":"case"},{"title":"case draft04","path":"\/documentation\/moqthaishinkit\/moqtversion\/draft04","type":"case"},{"title":"case draft05","type":"case","path":"\/documentation\/moqthaishinkit\/moqtversion\/draft05"},{"title":"case draft06","path":"\/documentation\/moqthaishinkit\/moqtversion\/draft06","type":"case"},{"title":"case draft07","path":"\/documentation\/moqthaishinkit\/moqtversion\/draft07","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtversion\/draft07exp","type":"case","title":"case draft07Exp"},{"title":"case draft07Exp2","path":"\/documentation\/moqthaishinkit\/moqtversion\/draft07exp2","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtversion\/init(rawvalue:)","type":"init","title":"init?(rawValue: Int)"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/moqthaishinkit\/moqtversion\/equatable-implementations","type":"symbol","title":"Equatable Implementations","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/moqthaishinkit\/moqtversion\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}]},{"path":"\/documentation\/moqthaishinkit\/moqtversion\/rawrepresentable-implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"title":"var hashValue: Int","path":"\/documentation\/moqthaishinkit\/moqtversion\/hashvalue","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"type":"method","path":"\/documentation\/moqthaishinkit\/moqtversion\/hash(into:)","title":"func hash(into: inout Hasher)"}],"type":"symbol","title":"RawRepresentable Implementations"}],"type":"enum","path":"\/documentation\/moqthaishinkit\/moqtversion"},{"type":"enum","path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype","title":"MoQTVersionSpecificType","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/authorizationinfo","type":"case","title":"case authorizationInfo"},{"type":"case","path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/deliverytimeout","title":"case deliveryTimeout"},{"title":"case maxCacheDuration","path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/maxcacheduration","type":"case"},{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"title":"Equatable Implementations","path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/equatable-implementations"},{"type":"symbol","title":"RawRepresentable Implementations","path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/rawrepresentable-implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var hashValue: Int","path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/hashvalue"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func hash(into: inout Hasher)","path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/hash(into:)","type":"method"}]}]}]}]}}