{"includedArchiveIdentifiers":["Logboard","HaishinKit","MoQTHaishinKit","SRTHaishinKit"],"interfaceLanguages":{"swift":[{"children":[{"title":"Classes","type":"groupMarker"},{"type":"class","title":"ConsoleAppender","path":"\/documentation\/logboard\/consoleappender","children":[{"type":"groupMarker","title":"Initializers"},{"title":"init()","path":"\/documentation\/logboard\/consoleappender\/init()","type":"init"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/logboard\/consoleappender\/append(_:level:format:arguments:file:function:line:)","title":"func append(LBLogger, level: LBLogger.Level, format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)","type":"method"},{"type":"method","title":"func append(LBLogger, level: LBLogger.Level, message: [Any], file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/consoleappender\/append(_:level:message:file:function:line:)"}]},{"path":"\/documentation\/logboard\/lblogger","type":"class","title":"LBLogger","children":[{"title":"Structures","type":"groupMarker"},{"title":"LBLogger.Data","path":"\/documentation\/logboard\/lblogger\/data","children":[{"type":"groupMarker","title":"Initializers"},{"title":"init?(Data)","type":"init","path":"\/documentation\/logboard\/lblogger\/data\/init(_:)"},{"title":"Instance Properties","type":"groupMarker"},{"type":"property","path":"\/documentation\/logboard\/lblogger\/data\/date","title":"let date: Date"},{"path":"\/documentation\/logboard\/lblogger\/data\/file","title":"let file: String","type":"property"},{"path":"\/documentation\/logboard\/lblogger\/data\/function","title":"let function: String","type":"property"},{"type":"property","title":"let identifier: String","path":"\/documentation\/logboard\/lblogger\/data\/identifier"},{"title":"let level: LBLogger.Level","type":"property","path":"\/documentation\/logboard\/lblogger\/data\/level"},{"path":"\/documentation\/logboard\/lblogger\/data\/line","type":"property","title":"let line: Int"},{"path":"\/documentation\/logboard\/lblogger\/data\/message","type":"property","title":"let message: String"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/logboard\/lblogger\/data\/customstringconvertible-implementations","type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var description: String","path":"\/documentation\/logboard\/lblogger\/data\/description","type":"property"}],"title":"CustomStringConvertible Implementations"}],"type":"struct"},{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init(String)","path":"\/documentation\/logboard\/lblogger\/init(_:)"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/logboard\/lblogger\/appender","title":"var appender: any LBLoggerAppender","type":"property"},{"type":"property","title":"let identifier: String","path":"\/documentation\/logboard\/lblogger\/identifier"},{"path":"\/documentation\/logboard\/lblogger\/level-swift.property","title":"var level: LBLogger.Level","type":"property"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/logboard\/lblogger\/debug(_:file:function:line:)","title":"func debug(Any..., file: StaticString, function: StaticString, line: Int)","type":"method"},{"title":"func debug(format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/lblogger\/debug(format:arguments:file:function:line:)","type":"method"},{"type":"method","path":"\/documentation\/logboard\/lblogger\/error(_:file:function:line:)","title":"func error(Any..., file: StaticString, function: StaticString, line: Int)"},{"type":"method","title":"func error(format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/lblogger\/error(format:arguments:file:function:line:)"},{"title":"func info(Any..., file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/lblogger\/info(_:file:function:line:)","type":"method"},{"title":"func info(format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/lblogger\/info(format:arguments:file:function:line:)","type":"method"},{"type":"method","title":"func isEnabledFor(level: LBLogger.Level) -> Bool","path":"\/documentation\/logboard\/lblogger\/isenabledfor(level:)"},{"title":"func trace(Any..., file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/lblogger\/trace(_:file:function:line:)","type":"method"},{"path":"\/documentation\/logboard\/lblogger\/trace(format:arguments:file:function:line:)","type":"method","title":"func trace(format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)"},{"type":"method","title":"func warn(Any..., file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/lblogger\/warn(_:file:function:line:)"},{"title":"func warn(format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/lblogger\/warn(format:arguments:file:function:line:)","type":"method"},{"type":"groupMarker","title":"Type Properties"},{"type":"property","title":"static var dateFormatter: DateFormatter","path":"\/documentation\/logboard\/lblogger\/dateformatter"},{"type":"groupMarker","title":"Type Methods"},{"type":"method","path":"\/documentation\/logboard\/lblogger\/with(_:)","title":"static func with(String) -> LBLogger"},{"title":"Enumerations","type":"groupMarker"},{"path":"\/documentation\/logboard\/lblogger\/level-swift.enum","type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/debug","type":"case","title":"case debug"},{"title":"case error","path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/error","type":"case"},{"path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/info","title":"case info","type":"case"},{"path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/trace","type":"case","title":"case trace"},{"path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/warn","type":"case","title":"case warn"},{"title":"Initializers","type":"groupMarker"},{"type":"init","path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/init(rawvalue:)","title":"init?(rawValue: Int)"},{"path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/init(string:)","title":"init?(string: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var description: String","type":"property","path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/description"},{"type":"groupMarker","title":"Default Implementations"},{"title":"Equatable Implementations","type":"symbol","path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/!=(_:_:)"}]},{"title":"RawRepresentable Implementations","type":"symbol","path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/rawrepresentable-implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"title":"var hashValue: Int","type":"property","path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/hashvalue"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/hash(into:)","type":"method","title":"func hash(into: inout Hasher)"}]}],"title":"LBLogger.Level"}]},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/logboard\/multiappender\/init()","type":"init","title":"init()"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/logboard\/multiappender\/appenders","title":"var appenders: [any LBLoggerAppender]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/logboard\/multiappender\/append(_:level:format:arguments:file:function:line:)","title":"func append(LBLogger, level: LBLogger.Level, format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)","type":"method"},{"type":"method","title":"func append(LBLogger, level: LBLogger.Level, message: [Any], file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/multiappender\/append(_:level:message:file:function:line:)"}],"type":"class","path":"\/documentation\/logboard\/multiappender","title":"MultiAppender"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/logboard\/nullappender\/append(_:level:format:arguments:file:function:line:)","type":"method","title":"func append(LBLogger, level: LBLogger.Level, format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)"},{"title":"func append(LBLogger, level: LBLogger.Level, message: [Any], file: StaticString, function: StaticString, line: Int)","type":"method","path":"\/documentation\/logboard\/nullappender\/append(_:level:message:file:function:line:)"},{"type":"groupMarker","title":"Type Properties"},{"type":"property","title":"static let shared: NullAppender","path":"\/documentation\/logboard\/nullappender\/shared"}],"title":"NullAppender","type":"class","path":"\/documentation\/logboard\/nullappender"},{"children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/logboard\/osloggerappender\/init(sybsystem:category:)","type":"init","title":"init(sybsystem: String, category: String)"},{"title":"Instance Methods","type":"groupMarker"},{"type":"method","title":"func append(LBLogger, level: LBLogger.Level, format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/osloggerappender\/append(_:level:format:arguments:file:function:line:)"},{"title":"func append(LBLogger, level: LBLogger.Level, message: [Any], file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/osloggerappender\/append(_:level:message:file:function:line:)","type":"method"}],"title":"OSLoggerAppender","type":"class","path":"\/documentation\/logboard\/osloggerappender"},{"title":"SocketAppender","type":"class","children":[{"type":"groupMarker","title":"Initializers"},{"title":"init()","path":"\/documentation\/logboard\/socketappender\/init()","type":"init"},{"type":"groupMarker","title":"Instance Methods"},{"title":"func append(LBLogger, level: LBLogger.Level, format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)","type":"method","path":"\/documentation\/logboard\/socketappender\/append(_:level:format:arguments:file:function:line:)"},{"path":"\/documentation\/logboard\/socketappender\/append(_:level:message:file:function:line:)","type":"method","title":"func append(LBLogger, level: LBLogger.Level, message: [Any], file: StaticString, function: StaticString, line: Int)"},{"path":"\/documentation\/logboard\/socketappender\/close()","type":"method","title":"func close()"},{"path":"\/documentation\/logboard\/socketappender\/connect(_:port:)","type":"method","title":"func connect(String, port: Int)"}],"path":"\/documentation\/logboard\/socketappender"},{"type":"groupMarker","title":"Protocols"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/logboard\/lbloggerappender\/append(_:level:format:arguments:file:function:line:)","type":"method","title":"func append(LBLogger, level: LBLogger.Level, format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)"},{"path":"\/documentation\/logboard\/lbloggerappender\/append(_:level:message:file:function:line:)","type":"method","title":"func append(LBLogger, level: LBLogger.Level, message: [Any], file: StaticString, function: StaticString, line: Int)"}],"title":"LBLoggerAppender","path":"\/documentation\/logboard\/lbloggerappender","type":"protocol"}],"type":"module","path":"\/documentation\/logboard","title":"Logboard"},{"title":"HaishinKit","type":"module","path":"\/documentation\/haishinkit","children":[{"type":"groupMarker","title":"Articles"},{"title":"Enhanced RTMP","path":"\/documentation\/haishinkit\/e-rtmp","type":"article"},{"type":"groupMarker","title":"Classes"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"type":"property","title":"var chromaKeyColor: CGColor?","path":"\/documentation\/haishinkit\/assetscreenobject\/chromakeycolor"},{"title":"var isReading: Bool","path":"\/documentation\/haishinkit\/assetscreenobject\/isreading","type":"property"},{"path":"\/documentation\/haishinkit\/assetscreenobject\/videogravity","type":"property","title":"var videoGravity: AVLayerVideoGravity"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/assetscreenobject\/cancelreading()","type":"method","title":"func cancelReading()"},{"title":"func makeBounds(CGSize) -> CGRect","type":"method","path":"\/documentation\/haishinkit\/assetscreenobject\/makebounds(_:)"},{"type":"method","title":"func makeImage(some ScreenRenderer) -> CGImage?","path":"\/documentation\/haishinkit\/assetscreenobject\/makeimage(_:)"},{"title":"func startReading(AVAsset) throws","path":"\/documentation\/haishinkit\/assetscreenobject\/startreading(_:)","type":"method"}],"title":"AssetScreenObject","type":"class","path":"\/documentation\/haishinkit\/assetscreenobject"},{"path":"\/documentation\/haishinkit\/audiodeviceunit","title":"AudioDeviceUnit","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/audiodeviceunit\/connection","type":"property","title":"var connection: AVCaptureConnection?"},{"path":"\/documentation\/haishinkit\/audiodeviceunit\/device","type":"property","title":"var device: AVCaptureDevice?"},{"path":"\/documentation\/haishinkit\/audiodeviceunit\/input","type":"property","title":"var input: AVCaptureInput?"},{"path":"\/documentation\/haishinkit\/audiodeviceunit\/output-swift.property","title":"var output: AudioDeviceUnit.Output?","type":"property"},{"type":"property","title":"let track: UInt8","path":"\/documentation\/haishinkit\/audiodeviceunit\/track"},{"title":"Type Aliases","type":"groupMarker"},{"title":"AudioDeviceUnit.Output","type":"typealias","path":"\/documentation\/haishinkit\/audiodeviceunit\/output-swift.typealias"}],"type":"class"},{"type":"class","title":"AudioPlayer","path":"\/documentation\/haishinkit\/audioplayer","children":[{"title":"Initializers","type":"groupMarker"},{"type":"init","title":"init(audioEngine: AVAudioEngine)","path":"\/documentation\/haishinkit\/audioplayer\/init(audioengine:)"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/haishinkit\/audioplayer\/assertisolated(_:file:line:)"},{"title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","type":"method","path":"\/documentation\/haishinkit\/audioplayer\/assumeisolated(_:file:line:)"},{"type":"method","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/haishinkit\/audioplayer\/preconditionisolated(_:file:line:)"}],"title":"Actor Implementations","path":"\/documentation\/haishinkit\/audioplayer\/actor-implementations"}]},{"title":"HKIncomingStream","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/haishinkit\/hkincomingstream\/init(_:)","title":"init(some HKStream)","type":"init"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/hkincomingstream\/isrunning","type":"property","title":"var isRunning: Bool"},{"type":"property","path":"\/documentation\/haishinkit\/hkincomingstream\/soundtransfrom","title":"var soundTransfrom: SoundTransform?"},{"title":"Instance Methods","type":"groupMarker"},{"type":"method","path":"\/documentation\/haishinkit\/hkincomingstream\/append(_:)","title":"func append(CMSampleBuffer)"},{"type":"method","path":"\/documentation\/haishinkit\/hkincomingstream\/append(_:when:)","title":"func append(AVAudioBuffer, when: AVAudioTime)"},{"path":"\/documentation\/haishinkit\/hkincomingstream\/attachaudioplayer(_:)","title":"func attachAudioPlayer(AudioPlayer?) async","type":"method"},{"path":"\/documentation\/haishinkit\/hkincomingstream\/setsoundtransform(_:)","title":"func setSoundTransform(SoundTransform) async","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"type":"symbol","path":"\/documentation\/haishinkit\/hkincomingstream\/actor-implementations","title":"Actor Implementations","children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/hkincomingstream\/assertisolated(_:file:line:)","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method"},{"type":"method","path":"\/documentation\/haishinkit\/hkincomingstream\/assumeisolated(_:file:line:)","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T"},{"type":"method","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/haishinkit\/hkincomingstream\/preconditionisolated(_:file:line:)"}]},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/hkincomingstream\/startrunning()","type":"method","title":"func startRunning()"},{"type":"method","title":"func stopRunning()","path":"\/documentation\/haishinkit\/hkincomingstream\/stoprunning()"}],"path":"\/documentation\/haishinkit\/hkincomingstream\/asyncrunner-implementations","title":"AsyncRunner Implementations","type":"symbol"}],"path":"\/documentation\/haishinkit\/hkincomingstream","type":"class"},{"children":[{"type":"groupMarker","title":"Initializers"},{"title":"init()","path":"\/documentation\/haishinkit\/hkoutgoingstream\/init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"type":"property","path":"\/documentation\/haishinkit\/hkoutgoingstream\/audioinputformat","title":"var audioInputFormat: CMFormatDescription?"},{"type":"property","title":"var audioOutputStream: AsyncStream<(AVAudioBuffer, AVAudioTime)>","path":"\/documentation\/haishinkit\/hkoutgoingstream\/audiooutputstream"},{"title":"var audioSettings: AudioCodecSettings","path":"\/documentation\/haishinkit\/hkoutgoingstream\/audiosettings","type":"property"},{"title":"var isRunning: Bool","type":"property","path":"\/documentation\/haishinkit\/hkoutgoingstream\/isrunning"},{"path":"\/documentation\/haishinkit\/hkoutgoingstream\/videoinputbuffercounts","title":"var videoInputBufferCounts: Int","type":"property"},{"path":"\/documentation\/haishinkit\/hkoutgoingstream\/videoinputformat","type":"property","title":"var videoInputFormat: CMFormatDescription?"},{"path":"\/documentation\/haishinkit\/hkoutgoingstream\/videoinputstream","type":"property","title":"var videoInputStream: AsyncStream<CMSampleBuffer>"},{"path":"\/documentation\/haishinkit\/hkoutgoingstream\/videooutputstream","type":"property","title":"var videoOutputStream: AsyncStream<CMSampleBuffer>"},{"type":"property","path":"\/documentation\/haishinkit\/hkoutgoingstream\/videosettings","title":"var videoSettings: VideoCodecSettings"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/haishinkit\/hkoutgoingstream\/append(_:)","title":"func append(CMSampleBuffer)"},{"path":"\/documentation\/haishinkit\/hkoutgoingstream\/append(_:when:)","title":"func append(AVAudioBuffer, when: AVAudioTime)","type":"method"},{"type":"method","title":"func append(video: CMSampleBuffer)","path":"\/documentation\/haishinkit\/hkoutgoingstream\/append(video:)"},{"type":"groupMarker","title":"Default Implementations"},{"title":"Runner Implementations","path":"\/documentation\/haishinkit\/hkoutgoingstream\/runner-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/hkoutgoingstream\/startrunning()","type":"method","title":"func startRunning()"},{"path":"\/documentation\/haishinkit\/hkoutgoingstream\/stoprunning()","title":"func stopRunning()","type":"method"}]}],"title":"HKOutgoingStream","type":"class","path":"\/documentation\/haishinkit\/hkoutgoingstream"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/init()","type":"init","title":"init()"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var audioTrackId: UInt8?","path":"\/documentation\/haishinkit\/hkstreamrecorder\/audiotrackid"},{"type":"property","path":"\/documentation\/haishinkit\/hkstreamrecorder\/isrecording","title":"var isRecording: Bool"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/moviefragmentinterval","type":"property","title":"var movieFragmentInterval: Double?"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/moviesdirectory","title":"var moviesDirectory: URL","type":"property"},{"type":"property","title":"var outputURL: URL?","path":"\/documentation\/haishinkit\/hkstreamrecorder\/outputurl"},{"type":"property","title":"var settings: [AVMediaType : [String : any Sendable]]","path":"\/documentation\/haishinkit\/hkstreamrecorder\/settings"},{"title":"var videoTrackId: UInt8?","type":"property","path":"\/documentation\/haishinkit\/hkstreamrecorder\/videotrackid"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/selecttrack(_:mediatype:)","type":"method","title":"func selectTrack(UInt8?, mediaType: CMFormatDescription.MediaType)"},{"type":"method","title":"func setMovieFragmentInterval(Double?)","path":"\/documentation\/haishinkit\/hkstreamrecorder\/setmoviefragmentinterval(_:)"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/setmoviefragmentinterval(moviefragmentinterval:)","title":"func setMovieFragmentInterval(movieFragmentInterval: Double?)","type":"method"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/startrecording(_:settings:)","title":"func startRecording(URL?, settings: [AVMediaType : [String : any Sendable]]) async throws","type":"method"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/stoprecording()","title":"func stopRecording() async throws -> URL","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"title":"static let defaultSettings: [AVMediaType : [String : any Sendable]]","type":"property","path":"\/documentation\/haishinkit\/hkstreamrecorder\/defaultsettings"},{"title":"Enumerations","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/error","type":"enum","title":"HKStreamRecorder.Error","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/error\/failedtoappend(error:)","title":"case failedToAppend(error: (any Error)?)","type":"case"},{"type":"case","path":"\/documentation\/haishinkit\/hkstreamrecorder\/error\/failedtocreateassetwriter(error:)","title":"case failedToCreateAssetWriter(error: any Error)"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/error\/failedtocreateassetwriterinput(error:)","title":"case failedToCreateAssetWriterInput(error: any Error)","type":"case"},{"title":"case failedToFinishWriting(error: (any Error)?)","type":"case","path":"\/documentation\/haishinkit\/hkstreamrecorder\/error\/failedtofinishwriting(error:)"},{"type":"case","title":"case fileAlreadyExists(outputURL: URL)","path":"\/documentation\/haishinkit\/hkstreamrecorder\/error\/filealreadyexists(outputurl:)"},{"title":"case invalidState","type":"case","path":"\/documentation\/haishinkit\/hkstreamrecorder\/error\/invalidstate"},{"title":"case notSupportedFileType(pathExtension: String)","path":"\/documentation\/haishinkit\/hkstreamrecorder\/error\/notsupportedfiletype(pathextension:)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/error\/localizeddescription","type":"property","title":"var localizedDescription: String"}],"title":"Error Implementations","path":"\/documentation\/haishinkit\/hkstreamrecorder\/error\/error-implementations","type":"symbol"}]},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/actor-implementations","title":"Actor Implementations","type":"symbol","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/haishinkit\/hkstreamrecorder\/assertisolated(_:file:line:)","type":"method"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/assumeisolated(_:file:line:)","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","type":"method"},{"title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/haishinkit\/hkstreamrecorder\/preconditionisolated(_:file:line:)","type":"method"}]},{"type":"symbol","title":"HKStreamOutput Implementations","children":[{"type":"groupMarker","title":"Instance Methods"},{"title":"func stream(some HKStream, didOutput: CMSampleBuffer)","path":"\/documentation\/haishinkit\/hkstreamrecorder\/stream(_:didoutput:)","type":"method"},{"type":"method","title":"func stream(some HKStream, didOutput: AVAudioBuffer, when: AVAudioTime)","path":"\/documentation\/haishinkit\/hkstreamrecorder\/stream(_:didoutput:when:)"}],"path":"\/documentation\/haishinkit\/hkstreamrecorder\/hkstreamoutput-implementations"},{"children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func mixer(MediaMixer, didOutput: CMSampleBuffer)","path":"\/documentation\/haishinkit\/hkstreamrecorder\/mixer(_:didoutput:)"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/mixer(_:didoutput:when:)","title":"func mixer(MediaMixer, didOutput: AVAudioPCMBuffer, when: AVAudioTime)","type":"method"}],"title":"MediaMixerOutput Implementations","path":"\/documentation\/haishinkit\/hkstreamrecorder\/mediamixeroutput-implementations","type":"symbol"}],"path":"\/documentation\/haishinkit\/hkstreamrecorder","type":"class","title":"HKStreamRecorder"},{"children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/haishinkit\/hkstreamvideoadaptivebitratestrategy\/init(mamimumvideobitrate:)","title":"init(mamimumVideoBitrate: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let mamimumAudioBitRate: Int","path":"\/documentation\/haishinkit\/hkstreamvideoadaptivebitratestrategy\/mamimumaudiobitrate","type":"property"},{"type":"property","title":"let mamimumVideoBitRate: Int","path":"\/documentation\/haishinkit\/hkstreamvideoadaptivebitratestrategy\/mamimumvideobitrate"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func adjustBitrate(NetworkMonitorEvent, stream: some HKStream) async","path":"\/documentation\/haishinkit\/hkstreamvideoadaptivebitratestrategy\/adjustbitrate(_:stream:)","type":"method"},{"type":"groupMarker","title":"Type Properties"},{"path":"\/documentation\/haishinkit\/hkstreamvideoadaptivebitratestrategy\/statuscountsthreshold","title":"static let statusCountsThreshold: Int","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"type":"symbol","path":"\/documentation\/haishinkit\/hkstreamvideoadaptivebitratestrategy\/actor-implementations","title":"Actor Implementations","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/haishinkit\/hkstreamvideoadaptivebitratestrategy\/assertisolated(_:file:line:)"},{"type":"method","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","path":"\/documentation\/haishinkit\/hkstreamvideoadaptivebitratestrategy\/assumeisolated(_:file:line:)"},{"path":"\/documentation\/haishinkit\/hkstreamvideoadaptivebitratestrategy\/preconditionisolated(_:file:line:)","type":"method","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)"}]}],"title":"HKStreamVideoAdaptiveBitRateStrategy","path":"\/documentation\/haishinkit\/hkstreamvideoadaptivebitratestrategy","type":"class"},{"path":"\/documentation\/haishinkit\/imagescreenobject","type":"class","children":[{"type":"groupMarker","title":"Instance Properties"},{"title":"var cgImage: CGImage?","path":"\/documentation\/haishinkit\/imagescreenobject\/cgimage","type":"property"},{"type":"groupMarker","title":"Instance Methods"},{"title":"func makeBounds(CGSize) -> CGRect","path":"\/documentation\/haishinkit\/imagescreenobject\/makebounds(_:)","type":"method"},{"path":"\/documentation\/haishinkit\/imagescreenobject\/makeimage(_:)","type":"method","title":"func makeImage(some ScreenRenderer) -> CGImage?"}],"title":"ImageScreenObject"},{"type":"class","path":"\/documentation\/haishinkit\/mthkview","children":[{"type":"groupMarker","title":"Initializers"},{"title":"init(coder: NSCoder)","path":"\/documentation\/haishinkit\/mthkview\/init(coder:)","type":"init"},{"path":"\/documentation\/haishinkit\/mthkview\/init(frame:)","title":"init(frame: CGRect)","type":"init"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/mthkview\/audiotrackid","title":"var audioTrackId: UInt8?","type":"property"},{"title":"var videoGravity: AVLayerVideoGravity","path":"\/documentation\/haishinkit\/mthkview\/videogravity","type":"property"},{"type":"property","title":"var videoTrackId: UInt8?","path":"\/documentation\/haishinkit\/mthkview\/videotrackid"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func awakeFromNib()","path":"\/documentation\/haishinkit\/mthkview\/awakefromnib()","type":"method"},{"path":"\/documentation\/haishinkit\/mthkview\/draw(_:)","type":"method","title":"func draw(CGRect)"},{"title":"func registerVideoEffect(some VideoEffect) -> Bool","path":"\/documentation\/haishinkit\/mthkview\/registervideoeffect(_:)","type":"method"},{"path":"\/documentation\/haishinkit\/mthkview\/unregistervideoeffect(_:)","type":"method","title":"func unregisterVideoEffect(some VideoEffect) -> Bool"},{"type":"groupMarker","title":"Default Implementations"},{"title":"HKStreamOutput Implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/mthkview\/stream(_:didoutput:)","type":"method","title":"func stream(some HKStream, didOutput: CMSampleBuffer)"},{"type":"method","path":"\/documentation\/haishinkit\/mthkview\/stream(_:didoutput:when:)","title":"func stream(some HKStream, didOutput: AVAudioBuffer, when: AVAudioTime)"}],"type":"symbol","path":"\/documentation\/haishinkit\/mthkview\/hkstreamoutput-implementations"},{"children":[{"type":"groupMarker","title":"Instance Methods"},{"title":"func mixer(MediaMixer, didOutput: CMSampleBuffer)","path":"\/documentation\/haishinkit\/mthkview\/mixer(_:didoutput:)","type":"method"},{"path":"\/documentation\/haishinkit\/mthkview\/mixer(_:didoutput:when:)","title":"func mixer(MediaMixer, didOutput: AVAudioPCMBuffer, when: AVAudioTime)","type":"method"},{"type":"method","title":"func selectTrack(UInt8?, mediaType: CMFormatDescription.MediaType) async","path":"\/documentation\/haishinkit\/mthkview\/selecttrack(_:mediatype:)"}],"title":"MediaMixerOutput Implementations","path":"\/documentation\/haishinkit\/mthkview\/mediamixeroutput-implementations","type":"symbol"}],"title":"MTHKView"},{"type":"class","title":"MediaMixer","path":"\/documentation\/haishinkit\/mediamixer","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/mediamixer\/init(multitrackaudiomixingenabled:usemanualcapture:)","title":"init(multiTrackAudioMixingEnabled: Bool, useManualCapture: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/mediamixer\/audioinputformats","title":"var audioInputFormats: [UInt8 : AVAudioFormat]","type":"property"},{"type":"property","title":"var audioMixerSettings: AudioMixerSettings","path":"\/documentation\/haishinkit\/mediamixer\/audiomixersettings"},{"title":"var frameRate: Float64","path":"\/documentation\/haishinkit\/mediamixer\/framerate","type":"property"},{"path":"\/documentation\/haishinkit\/mediamixer\/iscapturing","type":"property","title":"var isCapturing: Bool"},{"type":"property","title":"var isInterputted: AsyncStream<Bool>","path":"\/documentation\/haishinkit\/mediamixer\/isinterputted"},{"type":"property","title":"var isMonitoringEnabled: Bool","path":"\/documentation\/haishinkit\/mediamixer\/ismonitoringenabled"},{"type":"property","title":"var isMultiTrackAudioMixingEnabled: Bool","path":"\/documentation\/haishinkit\/mediamixer\/ismultitrackaudiomixingenabled"},{"type":"property","title":"var isRunning: Bool","path":"\/documentation\/haishinkit\/mediamixer\/isrunning"},{"title":"var isTorchEnabled: Bool","path":"\/documentation\/haishinkit\/mediamixer\/istorchenabled","type":"property"},{"title":"var screen: Screen","type":"property","path":"\/documentation\/haishinkit\/mediamixer\/screen"},{"type":"property","path":"\/documentation\/haishinkit\/mediamixer\/sessionpreset","title":"var sessionPreset: AVCaptureSession.Preset"},{"title":"var videoInputFormats: [UInt8 : CMFormatDescription]","path":"\/documentation\/haishinkit\/mediamixer\/videoinputformats","type":"property"},{"type":"property","title":"var videoMixerSettings: VideoMixerSettings","path":"\/documentation\/haishinkit\/mediamixer\/videomixersettings"},{"type":"property","title":"var videoOrientation: AVCaptureVideoOrientation","path":"\/documentation\/haishinkit\/mediamixer\/videoorientation"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/mediamixer\/addoutput(_:)","type":"method","title":"func addOutput(some MediaMixerOutput)"},{"title":"func append(CMSampleBuffer, track: UInt8)","path":"\/documentation\/haishinkit\/mediamixer\/append(_:track:)","type":"method"},{"path":"\/documentation\/haishinkit\/mediamixer\/append(_:when:track:)","type":"method","title":"func append(AVAudioBuffer, when: AVAudioTime, track: UInt8)"},{"path":"\/documentation\/haishinkit\/mediamixer\/attachaudio(_:track:configuration:)","title":"func attachAudio(AVCaptureDevice?, track: UInt8, configuration: AudioDeviceConfigurationBlock?) async throws","type":"method"},{"title":"func attachVideo(AVCaptureDevice?, track: UInt8, configuration: VideoDeviceConfigurationBlock?) async throws","path":"\/documentation\/haishinkit\/mediamixer\/attachvideo(_:track:configuration:)","type":"method"},{"type":"method","title":"func configuration((AVCaptureSession) throws -> Void) rethrows","path":"\/documentation\/haishinkit\/mediamixer\/configuration(_:)"},{"title":"func configuration(audio: UInt8, configuration: (AudioDeviceUnit) throws -> Void) throws","type":"method","path":"\/documentation\/haishinkit\/mediamixer\/configuration(audio:configuration:)"},{"title":"func configuration(video: UInt8, configuration: (VideoDeviceUnit) throws -> Void) throws","path":"\/documentation\/haishinkit\/mediamixer\/configuration(video:configuration:)","type":"method"},{"title":"func removeOutput(some MediaMixerOutput)","path":"\/documentation\/haishinkit\/mediamixer\/removeoutput(_:)","type":"method"},{"path":"\/documentation\/haishinkit\/mediamixer\/setaudiomixersettings(_:)","type":"method","title":"func setAudioMixerSettings(AudioMixerSettings)"},{"title":"func setFrameRate(Float64)","type":"method","path":"\/documentation\/haishinkit\/mediamixer\/setframerate(_:)"},{"title":"func setMonitoringEnabled(Bool)","path":"\/documentation\/haishinkit\/mediamixer\/setmonitoringenabled(_:)","type":"method"},{"title":"func setSessionPreset(AVCaptureSession.Preset)","path":"\/documentation\/haishinkit\/mediamixer\/setsessionpreset(_:)","type":"method"},{"path":"\/documentation\/haishinkit\/mediamixer\/settorchenabled(_:)","type":"method","title":"func setTorchEnabled(Bool)"},{"path":"\/documentation\/haishinkit\/mediamixer\/setvideomixersettings(_:)","type":"method","title":"func setVideoMixerSettings(VideoMixerSettings)"},{"type":"method","path":"\/documentation\/haishinkit\/mediamixer\/setvideoorientation(_:)","title":"func setVideoOrientation(AVCaptureVideoOrientation)"},{"title":"func startCapturing()","path":"\/documentation\/haishinkit\/mediamixer\/startcapturing()","type":"method"},{"type":"method","path":"\/documentation\/haishinkit\/mediamixer\/stopcapturing()","title":"func stopCapturing()"},{"title":"Enumerations","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/mediamixer\/error","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case deviceNotFound","path":"\/documentation\/haishinkit\/mediamixer\/error\/devicenotfound","type":"case"},{"title":"case failedToAttach(any Error)","type":"case","path":"\/documentation\/haishinkit\/mediamixer\/error\/failedtoattach(_:)"},{"title":"Default Implementations","type":"groupMarker"},{"type":"symbol","title":"Error Implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var localizedDescription: String","path":"\/documentation\/haishinkit\/mediamixer\/error\/localizeddescription","type":"property"}],"path":"\/documentation\/haishinkit\/mediamixer\/error\/error-implementations"}],"type":"enum","title":"MediaMixer.Error"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method","path":"\/documentation\/haishinkit\/mediamixer\/assertisolated(_:file:line:)"},{"path":"\/documentation\/haishinkit\/mediamixer\/assumeisolated(_:file:line:)","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","type":"method"},{"path":"\/documentation\/haishinkit\/mediamixer\/preconditionisolated(_:file:line:)","type":"method","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)"}],"title":"Actor Implementations","path":"\/documentation\/haishinkit\/mediamixer\/actor-implementations"},{"type":"symbol","title":"AsyncRunner Implementations","path":"\/documentation\/haishinkit\/mediamixer\/asyncrunner-implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func startRunning()","path":"\/documentation\/haishinkit\/mediamixer\/startrunning()","type":"method"},{"path":"\/documentation\/haishinkit\/mediamixer\/stoprunning()","type":"method","title":"func stopRunning()"}]}]},{"type":"class","title":"NetworkMonitor","path":"\/documentation\/haishinkit\/networkmonitor","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/haishinkit\/networkmonitor\/init(_:)","title":"init(some NetworkTransportReporter)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var event: AsyncStream<NetworkMonitorEvent>","path":"\/documentation\/haishinkit\/networkmonitor\/event","type":"property"},{"title":"var isRunning: Bool","path":"\/documentation\/haishinkit\/networkmonitor\/isrunning","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/networkmonitor\/error\/invalidstate","type":"case","title":"case invalidState"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/haishinkit\/networkmonitor\/error\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/haishinkit\/networkmonitor\/error\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"type":"symbol","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/networkmonitor\/error\/localizeddescription","type":"property","title":"var localizedDescription: String"}],"title":"Error Implementations","path":"\/documentation\/haishinkit\/networkmonitor\/error\/error-implementations"}],"type":"enum","title":"NetworkMonitor.Error","path":"\/documentation\/haishinkit\/networkmonitor\/error"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","children":[{"type":"groupMarker","title":"Instance Methods"},{"title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method","path":"\/documentation\/haishinkit\/networkmonitor\/assertisolated(_:file:line:)"},{"title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","path":"\/documentation\/haishinkit\/networkmonitor\/assumeisolated(_:file:line:)","type":"method"},{"path":"\/documentation\/haishinkit\/networkmonitor\/preconditionisolated(_:file:line:)","type":"method","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)"}],"title":"Actor Implementations","path":"\/documentation\/haishinkit\/networkmonitor\/actor-implementations"},{"children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/networkmonitor\/startrunning()","type":"method","title":"func startRunning()"},{"path":"\/documentation\/haishinkit\/networkmonitor\/stoprunning()","title":"func stopRunning()","type":"method"}],"title":"AsyncRunner Implementations","path":"\/documentation\/haishinkit\/networkmonitor\/asyncrunner-implementations","type":"symbol"}]},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/piphkview\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"title":"init(frame: CGRect)","path":"\/documentation\/haishinkit\/piphkview\/init(frame:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/piphkview\/audiotrackid","type":"property","title":"var audioTrackId: UInt8?"},{"path":"\/documentation\/haishinkit\/piphkview\/videogravity","type":"property","title":"var videoGravity: AVLayerVideoGravity"},{"type":"property","title":"var videoTrackId: UInt8?","path":"\/documentation\/haishinkit\/piphkview\/videotrackid"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func awakeFromNib()","type":"method","path":"\/documentation\/haishinkit\/piphkview\/awakefromnib()"},{"type":"groupMarker","title":"Type Properties"},{"path":"\/documentation\/haishinkit\/piphkview\/defaultbackgroundcolor","title":"static var defaultBackgroundColor: NSColor","type":"property"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/piphkview\/stream(_:didoutput:)","title":"func stream(some HKStream, didOutput: CMSampleBuffer)","type":"method"},{"title":"func stream(some HKStream, didOutput: AVAudioBuffer, when: AVAudioTime)","path":"\/documentation\/haishinkit\/piphkview\/stream(_:didoutput:when:)","type":"method"}],"path":"\/documentation\/haishinkit\/piphkview\/hkstreamoutput-implementations","title":"HKStreamOutput Implementations"},{"children":[{"type":"groupMarker","title":"Instance Methods"},{"title":"func mixer(MediaMixer, didOutput: CMSampleBuffer)","path":"\/documentation\/haishinkit\/piphkview\/mixer(_:didoutput:)","type":"method"},{"title":"func mixer(MediaMixer, didOutput: AVAudioPCMBuffer, when: AVAudioTime)","path":"\/documentation\/haishinkit\/piphkview\/mixer(_:didoutput:when:)","type":"method"},{"type":"method","title":"func selectTrack(UInt8?, mediaType: CMFormatDescription.MediaType) async","path":"\/documentation\/haishinkit\/piphkview\/selecttrack(_:mediatype:)"}],"path":"\/documentation\/haishinkit\/piphkview\/mediamixeroutput-implementations","title":"MediaMixerOutput Implementations","type":"symbol"}],"path":"\/documentation\/haishinkit\/piphkview","title":"PiPHKView","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(swfUrl: String?, pageUrl: String?, flashVer: String, timeout: Int, requestTimeout: UInt64, chunkSize: Int, qualityOfService: DispatchQoS)","type":"init","path":"\/documentation\/haishinkit\/rtmpconnection\/init(swfurl:pageurl:flashver:timeout:requesttimeout:chunksize:qualityofservice:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let chunkSize: Int","path":"\/documentation\/haishinkit\/rtmpconnection\/chunksize","type":"property"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/connected","title":"var connected: Bool","type":"property"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/flashver","title":"let flashVer: String","type":"property"},{"title":"let objectEncoding: RTMPObjectEncoding","path":"\/documentation\/haishinkit\/rtmpconnection\/objectencoding","type":"property"},{"type":"property","title":"let pageUrl: String?","path":"\/documentation\/haishinkit\/rtmpconnection\/pageurl"},{"title":"let qualityOfService: DispatchQoS","path":"\/documentation\/haishinkit\/rtmpconnection\/qualityofservice","type":"property"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/requesttimeout","title":"let requestTimeout: UInt64","type":"property"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/status","type":"property","title":"var status: AsyncStream<RTMPStatus>"},{"type":"property","path":"\/documentation\/haishinkit\/rtmpconnection\/swfurl","title":"let swfUrl: String?"},{"type":"property","title":"let timeout: Int","path":"\/documentation\/haishinkit\/rtmpconnection\/timeout"},{"title":"var uri: URL?","path":"\/documentation\/haishinkit\/rtmpconnection\/uri","type":"property"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func call(String, arguments: (any Sendable)?...) async throws -> RTMPResponse","path":"\/documentation\/haishinkit\/rtmpconnection\/call(_:arguments:)"},{"type":"method","title":"func close() async throws","path":"\/documentation\/haishinkit\/rtmpconnection\/close()"},{"type":"method","title":"func connect(String, arguments: (any Sendable)?...) async throws -> RTMPResponse","path":"\/documentation\/haishinkit\/rtmpconnection\/connect(_:arguments:)"},{"type":"groupMarker","title":"Type Properties"},{"title":"static let defaultCapabilities: Int","type":"property","path":"\/documentation\/haishinkit\/rtmpconnection\/defaultcapabilities"},{"title":"static let defaultChunkSizeS: Int","path":"\/documentation\/haishinkit\/rtmpconnection\/defaultchunksizes","type":"property"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/defaultflashver","type":"property","title":"static let defaultFlashVer: String"},{"type":"property","title":"static let defaultObjectEncoding: RTMPObjectEncoding","path":"\/documentation\/haishinkit\/rtmpconnection\/defaultobjectencoding"},{"title":"static let defaultPort: Int","type":"property","path":"\/documentation\/haishinkit\/rtmpconnection\/defaultport"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/defaultrequesttimeout","title":"static let defaultRequestTimeout: UInt64","type":"property"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/defaultsecureport","title":"static let defaultSecurePort: Int","type":"property"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/defaulttimeout","title":"static let defaultTimeout: Int","type":"property"},{"title":"static let defaultWindowSizeS: Int64","path":"\/documentation\/haishinkit\/rtmpconnection\/defaultwindowsizes","type":"property"},{"type":"property","title":"static let supportedFourCcList: [String]","path":"\/documentation\/haishinkit\/rtmpconnection\/supportedfourcclist"},{"type":"property","title":"static let supportedProtocols: Set<String>","path":"\/documentation\/haishinkit\/rtmpconnection\/supportedprotocols"},{"title":"Enumerations","type":"groupMarker"},{"type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"title":"case callBadVersion","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/callbadversion","type":"case"},{"title":"case callFailed","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/callfailed","type":"case"},{"title":"case callProhibited","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/callprohibited","type":"case"},{"type":"case","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/connectappshutdown","title":"case connectAppshutdown"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/code\/connectclosed","title":"case connectClosed","type":"case"},{"type":"case","title":"case connectFailed","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/connectfailed"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/code\/connectidletimeout","type":"case","title":"case connectIdleTimeOut"},{"type":"case","title":"case connectInvalidApp","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/connectinvalidapp"},{"title":"case connectNetworkChange","type":"case","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/connectnetworkchange"},{"title":"case connectRejected","type":"case","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/connectrejected"},{"title":"case connectSuccess","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/connectsuccess","type":"case"},{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/init(rawvalue:)","title":"init?(rawValue: String)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var level: String","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/level","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"type":"symbol","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/equatable-implementations","title":"Equatable Implementations","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/code\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}]},{"title":"RawRepresentable Implementations","type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"type":"property","title":"var hashValue: Int","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/hashvalue"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/code\/hash(into:)","type":"method","title":"func hash(into: inout Hasher)"}],"path":"\/documentation\/haishinkit\/rtmpconnection\/code\/rawrepresentable-implementations"}],"path":"\/documentation\/haishinkit\/rtmpconnection\/code","title":"RTMPConnection.Code"},{"title":"RTMPConnection.Error","path":"\/documentation\/haishinkit\/rtmpconnection\/error","type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"title":"case connectionTimedOut","path":"\/documentation\/haishinkit\/rtmpconnection\/error\/connectiontimedout","type":"case"},{"title":"case invalidState","type":"case","path":"\/documentation\/haishinkit\/rtmpconnection\/error\/invalidstate"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/error\/requestfailed(response:)","title":"case requestFailed(response: RTMPResponse)","type":"case"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/error\/requesttimedout","type":"case","title":"case requestTimedOut"},{"title":"case socketErrorOccurred(any Error)","path":"\/documentation\/haishinkit\/rtmpconnection\/error\/socketerroroccurred(_:)","type":"case"},{"type":"case","path":"\/documentation\/haishinkit\/rtmpconnection\/error\/unsupportedcommand(_:)","title":"case unsupportedCommand(String)"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/error\/error-implementations","title":"Error Implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var localizedDescription: String","path":"\/documentation\/haishinkit\/rtmpconnection\/error\/localizeddescription","type":"property"}],"type":"symbol"}]},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/assertisolated(_:file:line:)","type":"method","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)"},{"type":"method","path":"\/documentation\/haishinkit\/rtmpconnection\/assumeisolated(_:file:line:)","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T"},{"title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/haishinkit\/rtmpconnection\/preconditionisolated(_:file:line:)","type":"method"}],"type":"symbol","path":"\/documentation\/haishinkit\/rtmpconnection\/actor-implementations","title":"Actor Implementations"}],"type":"class","title":"RTMPConnection","path":"\/documentation\/haishinkit\/rtmpconnection"},{"type":"class","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var data: AMFObject","path":"\/documentation\/haishinkit\/rtmpsharedobject\/data"},{"path":"\/documentation\/haishinkit\/rtmpsharedobject\/objectencoding","type":"property","title":"let objectEncoding: RTMPObjectEncoding"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func clear() async","path":"\/documentation\/haishinkit\/rtmpsharedobject\/clear()","type":"method"},{"path":"\/documentation\/haishinkit\/rtmpsharedobject\/close()","type":"method","title":"func close() async"},{"title":"func connect(RTMPConnection) async","path":"\/documentation\/haishinkit\/rtmpsharedobject\/connect(_:)","type":"method"},{"title":"func setProperty(String, (any Sendable)?) async","path":"\/documentation\/haishinkit\/rtmpsharedobject\/setproperty(_:_:)","type":"method"},{"type":"groupMarker","title":"Type Methods"},{"title":"static func getRemote(withName: String, remotePath: String, persistence: Bool) -> RTMPSharedObject","type":"method","path":"\/documentation\/haishinkit\/rtmpsharedobject\/getremote(withname:remotepath:persistence:)"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Instance Methods"},{"title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/haishinkit\/rtmpsharedobject\/assertisolated(_:file:line:)","type":"method"},{"type":"method","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","path":"\/documentation\/haishinkit\/rtmpsharedobject\/assumeisolated(_:file:line:)"},{"path":"\/documentation\/haishinkit\/rtmpsharedobject\/preconditionisolated(_:file:line:)","type":"method","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)"}],"type":"symbol","path":"\/documentation\/haishinkit\/rtmpsharedobject\/actor-implementations","title":"Actor Implementations"}],"path":"\/documentation\/haishinkit\/rtmpsharedobject","title":"RTMPSharedObject"},{"title":"RTMPStream","type":"class","path":"\/documentation\/haishinkit\/rtmpstream","children":[{"type":"groupMarker","title":"Initializers"},{"title":"init(connection: RTMPConnection, fcPublishName: String?)","path":"\/documentation\/haishinkit\/rtmpstream\/init(connection:fcpublishname:)","type":"init"},{"type":"groupMarker","title":"Instance Properties"},{"title":"var audioSampleAccess: Bool","path":"\/documentation\/haishinkit\/rtmpstream\/audiosampleaccess","type":"property"},{"path":"\/documentation\/haishinkit\/rtmpstream\/audiotrackid","type":"property","title":"var audioTrackId: UInt8?"},{"path":"\/documentation\/haishinkit\/rtmpstream\/currentfps","type":"property","title":"var currentFPS: UInt16"},{"title":"var fcPublishName: String?","path":"\/documentation\/haishinkit\/rtmpstream\/fcpublishname","type":"property"},{"type":"property","title":"var info: RTMPStreamInfo","path":"\/documentation\/haishinkit\/rtmpstream\/info"},{"title":"var metadata: AMFArray","type":"property","path":"\/documentation\/haishinkit\/rtmpstream\/metadata"},{"path":"\/documentation\/haishinkit\/rtmpstream\/objectencoding","type":"property","title":"var objectEncoding: RTMPObjectEncoding"},{"type":"property","path":"\/documentation\/haishinkit\/rtmpstream\/readystate","title":"var readyState: HKStreamReadyState"},{"title":"var status: AsyncStream<RTMPStatus>","path":"\/documentation\/haishinkit\/rtmpstream\/status","type":"property"},{"title":"var videoSampleAccess: Bool","path":"\/documentation\/haishinkit\/rtmpstream\/videosampleaccess","type":"property"},{"path":"\/documentation\/haishinkit\/rtmpstream\/videotrackid","title":"var videoTrackId: UInt8?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"type":"method","title":"func close() async throws -> RTMPResponse","path":"\/documentation\/haishinkit\/rtmpstream\/close()"},{"type":"method","title":"func pause(Bool) async throws -> RTMPResponse","path":"\/documentation\/haishinkit\/rtmpstream\/pause(_:)"},{"path":"\/documentation\/haishinkit\/rtmpstream\/play(_:)","title":"func play((any Sendable)?...) async throws -> RTMPResponse","type":"method"},{"path":"\/documentation\/haishinkit\/rtmpstream\/publish(_:type:)","type":"method","title":"func publish(String?, type: RTMPStream.HowToPublish) async throws -> RTMPResponse"},{"title":"func receiveAudio(Bool) async throws","type":"method","path":"\/documentation\/haishinkit\/rtmpstream\/receiveaudio(_:)"},{"path":"\/documentation\/haishinkit\/rtmpstream\/receivevideo(_:)","type":"method","title":"func receiveVideo(Bool) async throws"},{"path":"\/documentation\/haishinkit\/rtmpstream\/seek(_:)","title":"func seek(Double) async throws","type":"method"},{"path":"\/documentation\/haishinkit\/rtmpstream\/send(_:arguments:isresettimestamp:)","type":"method","title":"func send(String, arguments: (any Sendable)?..., isResetTimestamp: Bool) throws"},{"title":"func togglePause() async throws -> RTMPResponse","path":"\/documentation\/haishinkit\/rtmpstream\/togglepause()","type":"method"},{"type":"groupMarker","title":"Enumerations"},{"type":"enum","title":"RTMPStream.Code","path":"\/documentation\/haishinkit\/rtmpstream\/code","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"title":"case bufferEmpty","path":"\/documentation\/haishinkit\/rtmpstream\/code\/bufferempty","type":"case"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/bufferflush","type":"case","title":"case bufferFlush"},{"type":"case","title":"case bufferFull","path":"\/documentation\/haishinkit\/rtmpstream\/code\/bufferfull"},{"title":"case connectClosed","path":"\/documentation\/haishinkit\/rtmpstream\/code\/connectclosed","type":"case"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/connectfailed","title":"case connectFailed","type":"case"},{"title":"case connectRejected","path":"\/documentation\/haishinkit\/rtmpstream\/code\/connectrejected","type":"case"},{"type":"case","title":"case connectSuccess","path":"\/documentation\/haishinkit\/rtmpstream\/code\/connectsuccess"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/drmupdateneeded","title":"case drmUpdateNeeded","type":"case"},{"type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/code\/failed","title":"case failed"},{"type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/code\/multicaststreamreset","title":"case multicastStreamReset"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/pausenotify","type":"case","title":"case pauseNotify"},{"title":"case playFailed","path":"\/documentation\/haishinkit\/rtmpstream\/code\/playfailed","type":"case"},{"type":"case","title":"case playFileStructureInvalid","path":"\/documentation\/haishinkit\/rtmpstream\/code\/playfilestructureinvalid"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/playinsufficientbw","type":"case","title":"case playInsufficientBW"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/playnosupportedtrackfound","title":"case playNoSupportedTrackFound","type":"case"},{"title":"case playReset","type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/code\/playreset"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/playstart","title":"case playStart","type":"case"},{"title":"case playStop","path":"\/documentation\/haishinkit\/rtmpstream\/code\/playstop","type":"case"},{"type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/code\/playstreamnotfound","title":"case playStreamNotFound"},{"title":"case playTransition","type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/code\/playtransition"},{"type":"case","title":"case playUnpublishNotify","path":"\/documentation\/haishinkit\/rtmpstream\/code\/playunpublishnotify"},{"title":"case publishBadName","path":"\/documentation\/haishinkit\/rtmpstream\/code\/publishbadname","type":"case"},{"title":"case publishIdle","type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/code\/publishidle"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/publishstart","type":"case","title":"case publishStart"},{"type":"case","title":"case recordAlreadyExists","path":"\/documentation\/haishinkit\/rtmpstream\/code\/recordalreadyexists"},{"title":"case recordDiskQuotaExceeded","type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/code\/recorddiskquotaexceeded"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/recordfailed","type":"case","title":"case recordFailed"},{"title":"case recordNoAccess","type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/code\/recordnoaccess"},{"type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/code\/recordstart","title":"case recordStart"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/recordstop","type":"case","title":"case recordStop"},{"type":"case","title":"case secondScreenStart","path":"\/documentation\/haishinkit\/rtmpstream\/code\/secondscreenstart"},{"type":"case","title":"case secondScreenStop","path":"\/documentation\/haishinkit\/rtmpstream\/code\/secondscreenstop"},{"title":"case seekFailed","path":"\/documentation\/haishinkit\/rtmpstream\/code\/seekfailed","type":"case"},{"title":"case seekInvalidTime","path":"\/documentation\/haishinkit\/rtmpstream\/code\/seekinvalidtime","type":"case"},{"type":"case","title":"case seekNotify","path":"\/documentation\/haishinkit\/rtmpstream\/code\/seeknotify"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/stepnotify","type":"case","title":"case stepNotify"},{"type":"case","title":"case unpauseNotify","path":"\/documentation\/haishinkit\/rtmpstream\/code\/unpausenotify"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/unpublishsuccess","type":"case","title":"case unpublishSuccess"},{"type":"case","title":"case videoDimensionChange","path":"\/documentation\/haishinkit\/rtmpstream\/code\/videodimensionchange"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/init(rawvalue:)","type":"init","title":"init?(rawValue: String)"},{"type":"groupMarker","title":"Instance Properties"},{"title":"var level: String","path":"\/documentation\/haishinkit\/rtmpstream\/code\/level","type":"property"},{"type":"groupMarker","title":"Default Implementations"},{"title":"Equatable Implementations","path":"\/documentation\/haishinkit\/rtmpstream\/code\/equatable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/haishinkit\/rtmpstream\/code\/!=(_:_:)"}],"type":"symbol"},{"title":"RawRepresentable Implementations","path":"\/documentation\/haishinkit\/rtmpstream\/code\/rawrepresentable-implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var hashValue: Int","path":"\/documentation\/haishinkit\/rtmpstream\/code\/hashvalue"},{"title":"Instance Methods","type":"groupMarker"},{"type":"method","path":"\/documentation\/haishinkit\/rtmpstream\/code\/hash(into:)","title":"func hash(into: inout Hasher)"}],"type":"symbol"}]},{"children":[{"type":"groupMarker","title":"Enumeration Cases"},{"title":"case invalidState","type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/error\/invalidstate"},{"title":"case requestFailed(response: RTMPResponse)","path":"\/documentation\/haishinkit\/rtmpstream\/error\/requestfailed(response:)","type":"case"},{"title":"case requestTimedOut","path":"\/documentation\/haishinkit\/rtmpstream\/error\/requesttimedout","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Error Implementations","path":"\/documentation\/haishinkit\/rtmpstream\/error\/error-implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"type":"property","title":"var localizedDescription: String","path":"\/documentation\/haishinkit\/rtmpstream\/error\/localizeddescription"}],"type":"symbol"}],"type":"enum","title":"RTMPStream.Error","path":"\/documentation\/haishinkit\/rtmpstream\/error"},{"type":"enum","title":"RTMPStream.HowToPublish","path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"title":"case append","type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish\/append"},{"type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish\/appendwithgap","title":"case appendWithGap"},{"path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish\/live","type":"case","title":"case live"},{"title":"case record","path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish\/record","type":"case"},{"title":"Initializers","type":"groupMarker"},{"type":"init","path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish\/init(rawvalue:)","title":"init?(rawValue: String)"},{"title":"Default Implementations","type":"groupMarker"},{"type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish\/!=(_:_:)"}],"title":"Equatable Implementations","path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish\/equatable-implementations"},{"path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish\/hashvalue","title":"var hashValue: Int","type":"property"},{"type":"groupMarker","title":"Instance Methods"},{"title":"func hash(into: inout Hasher)","type":"method","path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish\/hash(into:)"}]}]},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/haishinkit\/rtmpstream\/actor-implementations","title":"Actor Implementations","type":"symbol","children":[{"title":"Instance Methods","type":"groupMarker"},{"type":"method","path":"\/documentation\/haishinkit\/rtmpstream\/assertisolated(_:file:line:)","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)"},{"path":"\/documentation\/haishinkit\/rtmpstream\/assumeisolated(_:file:line:)","type":"method","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T"},{"title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/haishinkit\/rtmpstream\/preconditionisolated(_:file:line:)","type":"method"}]},{"title":"HKStream Implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/rtmpstream\/audiosettings","title":"var audioSettings: AudioCodecSettings","type":"property"},{"path":"\/documentation\/haishinkit\/rtmpstream\/soundtransform","title":"var soundTransform: SoundTransform?","type":"property"},{"title":"var videoSettings: VideoCodecSettings","path":"\/documentation\/haishinkit\/rtmpstream\/videosettings","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"type":"method","title":"func addOutput(some HKStreamOutput)","path":"\/documentation\/haishinkit\/rtmpstream\/addoutput(_:)"},{"path":"\/documentation\/haishinkit\/rtmpstream\/append(_:)","type":"method","title":"func append(CMSampleBuffer)"},{"type":"method","path":"\/documentation\/haishinkit\/rtmpstream\/append(_:when:)","title":"func append(AVAudioBuffer, when: AVAudioTime)"},{"type":"method","path":"\/documentation\/haishinkit\/rtmpstream\/attachaudioplayer(_:)","title":"func attachAudioPlayer(AudioPlayer?) async"},{"path":"\/documentation\/haishinkit\/rtmpstream\/dispatch(_:)","type":"method","title":"func dispatch(NetworkMonitorEvent) async"},{"type":"method","title":"func removeOutput(some HKStreamOutput)","path":"\/documentation\/haishinkit\/rtmpstream\/removeoutput(_:)"},{"title":"func setAudioSettings(AudioCodecSettings)","path":"\/documentation\/haishinkit\/rtmpstream\/setaudiosettings(_:)","type":"method"},{"path":"\/documentation\/haishinkit\/rtmpstream\/setbitratestorategy(_:)","type":"method","title":"func setBitrateStorategy((some HKStreamBitRateStrategy)?)"},{"path":"\/documentation\/haishinkit\/rtmpstream\/setsoundtransform(_:)","type":"method","title":"func setSoundTransform(SoundTransform) async"},{"title":"func setVideoInputBufferCounts(Int)","path":"\/documentation\/haishinkit\/rtmpstream\/setvideoinputbuffercounts(_:)","type":"method"},{"type":"method","title":"func setVideoSettings(VideoCodecSettings)","path":"\/documentation\/haishinkit\/rtmpstream\/setvideosettings(_:)"}],"type":"symbol","path":"\/documentation\/haishinkit\/rtmpstream\/hkstream-implementations"},{"title":"MediaMixerOutput Implementations","path":"\/documentation\/haishinkit\/rtmpstream\/mediamixeroutput-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Methods"},{"title":"func mixer(MediaMixer, didOutput: CMSampleBuffer)","path":"\/documentation\/haishinkit\/rtmpstream\/mixer(_:didoutput:)","type":"method"},{"type":"method","title":"func mixer(MediaMixer, didOutput: AVAudioPCMBuffer, when: AVAudioTime)","path":"\/documentation\/haishinkit\/rtmpstream\/mixer(_:didoutput:when:)"},{"path":"\/documentation\/haishinkit\/rtmpstream\/selecttrack(_:mediatype:)","type":"method","title":"func selectTrack(UInt8?, mediaType: CMFormatDescription.MediaType)"}]}]},{"children":[{"title":"Initializers","type":"groupMarker"},{"title":"init()","type":"init","path":"\/documentation\/haishinkit\/screen\/init()"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var backgroundColor: CGColor","path":"\/documentation\/haishinkit\/screen\/backgroundcolor"},{"path":"\/documentation\/haishinkit\/screen\/childcounts","type":"property","title":"var childCounts: Int"},{"title":"var delegate: (any ScreenDelegate)?","path":"\/documentation\/haishinkit\/screen\/delegate","type":"property"},{"title":"var size: CGSize","path":"\/documentation\/haishinkit\/screen\/size-swift.property","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func addChild(ScreenObject?) throws","path":"\/documentation\/haishinkit\/screen\/addchild(_:)","type":"method"},{"path":"\/documentation\/haishinkit\/screen\/registervideoeffect(_:)","title":"func registerVideoEffect(some VideoEffect) -> Bool","type":"method"},{"type":"method","path":"\/documentation\/haishinkit\/screen\/removechild(_:)","title":"func removeChild(ScreenObject?)"},{"title":"func unregisterVideoEffect(some VideoEffect) -> Bool","type":"method","path":"\/documentation\/haishinkit\/screen\/unregistervideoeffect(_:)"},{"title":"Type Properties","type":"groupMarker"},{"type":"property","title":"static let size: CGSize","path":"\/documentation\/haishinkit\/screen\/size-swift.type.property"}],"type":"class","title":"Screen","path":"\/documentation\/haishinkit\/screen"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/screenactor\/shared","title":"static let shared: ScreenActor","type":"property"},{"type":"groupMarker","title":"Default Implementations"},{"title":"Actor Implementations","path":"\/documentation\/haishinkit\/screenactor\/actor-implementations","type":"symbol","children":[{"title":"Instance Methods","type":"groupMarker"},{"type":"method","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/haishinkit\/screenactor\/assertisolated(_:file:line:)"},{"title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","type":"method","path":"\/documentation\/haishinkit\/screenactor\/assumeisolated(_:file:line:)"},{"type":"method","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/haishinkit\/screenactor\/preconditionisolated(_:file:line:)"}]},{"title":"GlobalActor Implementations","path":"\/documentation\/haishinkit\/screenactor\/globalactor-implementations","type":"symbol","children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/screenactor\/sharedunownedexecutor","type":"property","title":"static var sharedUnownedExecutor: UnownedSerialExecutor"}]}],"path":"\/documentation\/haishinkit\/screenactor","type":"class","title":"ScreenActor"},{"children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/haishinkit\/screenobject\/init()","title":"init()"},{"type":"groupMarker","title":"Instance Properties"},{"title":"var bounds: CGRect","path":"\/documentation\/haishinkit\/screenobject\/bounds","type":"property"},{"type":"property","title":"var cornerRadius: CGFloat","path":"\/documentation\/haishinkit\/screenobject\/cornerradius"},{"path":"\/documentation\/haishinkit\/screenobject\/horizontalalignment-swift.property","type":"property","title":"var horizontalAlignment: ScreenObject.HorizontalAlignment"},{"title":"var isVisible: Bool","path":"\/documentation\/haishinkit\/screenobject\/isvisible","type":"property"},{"type":"property","path":"\/documentation\/haishinkit\/screenobject\/layoutmargin","title":"var layoutMargin: NSEdgeInsets"},{"type":"property","title":"var parent: ScreenObjectContainer?","path":"\/documentation\/haishinkit\/screenobject\/parent"},{"path":"\/documentation\/haishinkit\/screenobject\/size","type":"property","title":"var size: CGSize"},{"title":"var verticalAlignment: ScreenObject.VerticalAlignment","path":"\/documentation\/haishinkit\/screenobject\/verticalalignment-swift.property","type":"property"},{"type":"groupMarker","title":"Instance Methods"},{"title":"func invalidateLayout()","path":"\/documentation\/haishinkit\/screenobject\/invalidatelayout()","type":"method"},{"path":"\/documentation\/haishinkit\/screenobject\/makebounds(_:)","type":"method","title":"func makeBounds(CGSize) -> CGRect"},{"title":"func makeImage(some ScreenRenderer) -> CGImage?","type":"method","path":"\/documentation\/haishinkit\/screenobject\/makeimage(_:)"},{"title":"Enumerations","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/screenobject\/horizontalalignment-swift.enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/haishinkit\/screenobject\/horizontalalignment-swift.enum\/center","type":"case","title":"case center"},{"path":"\/documentation\/haishinkit\/screenobject\/horizontalalignment-swift.enum\/left","title":"case left","type":"case"},{"type":"case","title":"case right","path":"\/documentation\/haishinkit\/screenobject\/horizontalalignment-swift.enum\/right"},{"type":"groupMarker","title":"Default Implementations"},{"title":"Equatable Implementations","type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/haishinkit\/screenobject\/horizontalalignment-swift.enum\/!=(_:_:)"}],"path":"\/documentation\/haishinkit\/screenobject\/horizontalalignment-swift.enum\/equatable-implementations"}],"type":"enum","title":"ScreenObject.HorizontalAlignment"},{"path":"\/documentation\/haishinkit\/screenobject\/verticalalignment-swift.enum","type":"enum","title":"ScreenObject.VerticalAlignment","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"type":"case","path":"\/documentation\/haishinkit\/screenobject\/verticalalignment-swift.enum\/bottom","title":"case bottom"},{"path":"\/documentation\/haishinkit\/screenobject\/verticalalignment-swift.enum\/middle","type":"case","title":"case middle"},{"type":"case","path":"\/documentation\/haishinkit\/screenobject\/verticalalignment-swift.enum\/top","title":"case top"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/haishinkit\/screenobject\/verticalalignment-swift.enum\/!=(_:_:)"}],"title":"Equatable Implementations","type":"symbol","path":"\/documentation\/haishinkit\/screenobject\/verticalalignment-swift.enum\/equatable-implementations"}]},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","title":"Equatable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/haishinkit\/screenobject\/!=(_:_:)"},{"title":"static func == (ScreenObject, ScreenObject) -> Bool","path":"\/documentation\/haishinkit\/screenobject\/==(_:_:)","type":"op"}],"path":"\/documentation\/haishinkit\/screenobject\/equatable-implementations"},{"type":"symbol","path":"\/documentation\/haishinkit\/screenobject\/hashable-implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/screenobject\/hash(into:)","type":"method","title":"func hash(into: inout Hasher)"}],"title":"Hashable Implementations"}],"title":"ScreenObject","path":"\/documentation\/haishinkit\/screenobject","type":"class"},{"type":"class","title":"ScreenObjectContainer","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var childCounts: Int","type":"property","path":"\/documentation\/haishinkit\/screenobjectcontainer\/childcounts"},{"type":"groupMarker","title":"Instance Methods"},{"title":"func addChild(ScreenObject?) throws","path":"\/documentation\/haishinkit\/screenobjectcontainer\/addchild(_:)","type":"method"},{"path":"\/documentation\/haishinkit\/screenobjectcontainer\/removechild(_:)","type":"method","title":"func removeChild(ScreenObject?)"},{"title":"Enumerations","type":"groupMarker"},{"title":"ScreenObjectContainer.Error","type":"enum","path":"\/documentation\/haishinkit\/screenobjectcontainer\/error","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/screenobjectcontainer\/error\/alreadyexists","type":"case","title":"case alreadyExists"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/haishinkit\/screenobjectcontainer\/error\/!=(_:_:)"}],"type":"symbol","title":"Equatable Implementations","path":"\/documentation\/haishinkit\/screenobjectcontainer\/error\/equatable-implementations"},{"title":"Error Implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/screenobjectcontainer\/error\/localizeddescription","type":"property","title":"var localizedDescription: String"}],"path":"\/documentation\/haishinkit\/screenobjectcontainer\/error\/error-implementations"}]}],"path":"\/documentation\/haishinkit\/screenobjectcontainer"},{"type":"class","path":"\/documentation\/haishinkit\/streamscreenobject","title":"StreamScreenObject","children":[{"title":"Instance Properties","type":"groupMarker"},{"type":"property","title":"var chromaKeyColor: CGColor?","path":"\/documentation\/haishinkit\/streamscreenobject\/chromakeycolor"},{"path":"\/documentation\/haishinkit\/streamscreenobject\/videogravity","title":"var videoGravity: AVLayerVideoGravity","type":"property"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/streamscreenobject\/makebounds(_:)","type":"method","title":"func makeBounds(CGSize) -> CGRect"},{"title":"func makeImage(some ScreenRenderer) -> CGImage?","path":"\/documentation\/haishinkit\/streamscreenobject\/makeimage(_:)","type":"method"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","title":"HKStreamOutput Implementations","path":"\/documentation\/haishinkit\/streamscreenobject\/hkstreamoutput-implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func stream(some HKStream, didOutput: CMSampleBuffer)","type":"method","path":"\/documentation\/haishinkit\/streamscreenobject\/stream(_:didoutput:)"},{"type":"method","path":"\/documentation\/haishinkit\/streamscreenobject\/stream(_:didoutput:when:)","title":"func stream(some HKStream, didOutput: AVAudioBuffer, when: AVAudioTime)"}]}]},{"type":"class","title":"TSReader","children":[{"type":"groupMarker","title":"Initializers"},{"title":"init()","path":"\/documentation\/haishinkit\/tsreader\/init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/tsreader\/output","title":"var output: AsyncStream<(UInt16, CMSampleBuffer)>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/tsreader\/clear()","title":"func clear()","type":"method"},{"path":"\/documentation\/haishinkit\/tsreader\/read(_:)","title":"func read(Data) -> Int","type":"method"}],"path":"\/documentation\/haishinkit\/tsreader"},{"type":"class","title":"TSWriter","path":"\/documentation\/haishinkit\/tswriter","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(segmentDuration: Double)","path":"\/documentation\/haishinkit\/tswriter\/init(segmentduration:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"type":"property","title":"var audioFormat: AVAudioFormat?","path":"\/documentation\/haishinkit\/tswriter\/audioformat"},{"title":"var expectedMedias: Set<AVMediaType>","type":"property","path":"\/documentation\/haishinkit\/tswriter\/expectedmedias"},{"path":"\/documentation\/haishinkit\/tswriter\/output","title":"var output: AsyncStream<Data>","type":"property"},{"type":"property","path":"\/documentation\/haishinkit\/tswriter\/videoformat","title":"var videoFormat: CMFormatDescription?"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/tswriter\/append(_:)","type":"method","title":"func append(CMSampleBuffer)"},{"title":"func append(AVAudioBuffer, when: AVAudioTime)","type":"method","path":"\/documentation\/haishinkit\/tswriter\/append(_:when:)"},{"path":"\/documentation\/haishinkit\/tswriter\/clear()","type":"method","title":"func clear()"}]},{"type":"class","title":"TextScreenObject","children":[{"title":"Instance Properties","type":"groupMarker"},{"type":"property","title":"var attributes: [NSAttributedString.Key : Any]?","path":"\/documentation\/haishinkit\/textscreenobject\/attributes"},{"path":"\/documentation\/haishinkit\/textscreenobject\/bounds","title":"var bounds: CGRect","type":"property"},{"path":"\/documentation\/haishinkit\/textscreenobject\/string","title":"var string: String","type":"property"},{"type":"groupMarker","title":"Instance Methods"},{"title":"func makeBounds(CGSize) -> CGRect","type":"method","path":"\/documentation\/haishinkit\/textscreenobject\/makebounds(_:)"},{"title":"func makeImage(some ScreenRenderer) -> CGImage?","type":"method","path":"\/documentation\/haishinkit\/textscreenobject\/makeimage(_:)"}],"path":"\/documentation\/haishinkit\/textscreenobject"},{"type":"class","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var colorFormat: OSType","path":"\/documentation\/haishinkit\/videodeviceunit\/colorformat-swift.property","type":"property"},{"type":"property","title":"var connection: AVCaptureConnection?","path":"\/documentation\/haishinkit\/videodeviceunit\/connection"},{"type":"property","title":"var device: AVCaptureDevice?","path":"\/documentation\/haishinkit\/videodeviceunit\/device"},{"type":"property","path":"\/documentation\/haishinkit\/videodeviceunit\/input","title":"var input: AVCaptureInput?"},{"type":"property","title":"var isVideoMirrored: Bool","path":"\/documentation\/haishinkit\/videodeviceunit\/isvideomirrored"},{"title":"var output: VideoDeviceUnit.Output?","path":"\/documentation\/haishinkit\/videodeviceunit\/output-swift.property","type":"property"},{"type":"property","path":"\/documentation\/haishinkit\/videodeviceunit\/track","title":"let track: UInt8"},{"type":"property","path":"\/documentation\/haishinkit\/videodeviceunit\/videoorientation","title":"var videoOrientation: AVCaptureVideoOrientation"},{"type":"groupMarker","title":"Type Aliases"},{"type":"typealias","path":"\/documentation\/haishinkit\/videodeviceunit\/output-swift.typealias","title":"VideoDeviceUnit.Output"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videodeviceunit\/colorformat-swift.type.property","type":"property","title":"static let colorFormat: OSType"}],"title":"VideoDeviceUnit","path":"\/documentation\/haishinkit\/videodeviceunit"},{"type":"class","title":"VideoRotator","path":"\/documentation\/haishinkit\/videorotator","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videorotator\/init()","title":"init?()","type":"init"},{"type":"groupMarker","title":"Instance Methods"},{"title":"func rotate(buffer: CMSampleBuffer) -> Result<CMSampleBuffer, VideoRotator.Error>","path":"\/documentation\/haishinkit\/videorotator\/rotate(buffer:)","type":"method"},{"type":"groupMarker","title":"Enumerations"},{"type":"enum","path":"\/documentation\/haishinkit\/videorotator\/error","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"type":"case","title":"case cannotAllocatePixelBuffer(CVReturn)","path":"\/documentation\/haishinkit\/videorotator\/error\/cannotallocatepixelbuffer(_:)"},{"title":"case noImageBuffer","type":"case","path":"\/documentation\/haishinkit\/videorotator\/error\/noimagebuffer"},{"path":"\/documentation\/haishinkit\/videorotator\/error\/noorientationinfo","type":"case","title":"case noOrientationInfo"},{"path":"\/documentation\/haishinkit\/videorotator\/error\/rotationfailure(_:)","type":"case","title":"case rotationFailure(OSStatus)"},{"type":"case","title":"case unsupportedOrientation","path":"\/documentation\/haishinkit\/videorotator\/error\/unsupportedorientation"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","path":"\/documentation\/haishinkit\/videorotator\/error\/error-implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"type":"property","path":"\/documentation\/haishinkit\/videorotator\/error\/localizeddescription","title":"var localizedDescription: String"}],"title":"Error Implementations"}],"title":"VideoRotator.Error"}]},{"type":"class","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videotrackscreenobject\/init()","title":"init()","type":"init"},{"type":"groupMarker","title":"Instance Properties"},{"title":"var chromaKeyColor: CGColor?","type":"property","path":"\/documentation\/haishinkit\/videotrackscreenobject\/chromakeycolor"},{"path":"\/documentation\/haishinkit\/videotrackscreenobject\/framerate","title":"var frameRate: Int","type":"property"},{"path":"\/documentation\/haishinkit\/videotrackscreenobject\/track","title":"var track: UInt8","type":"property"},{"type":"property","title":"var videoGravity: AVLayerVideoGravity","path":"\/documentation\/haishinkit\/videotrackscreenobject\/videogravity"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func draw(some ScreenRenderer)","type":"method","path":"\/documentation\/haishinkit\/videotrackscreenobject\/draw(_:)"},{"title":"func makeBounds(CGSize) -> CGRect","type":"method","path":"\/documentation\/haishinkit\/videotrackscreenobject\/makebounds(_:)"},{"title":"func makeImage(some ScreenRenderer) -> CGImage?","path":"\/documentation\/haishinkit\/videotrackscreenobject\/makeimage(_:)","type":"method"},{"title":"func registerVideoEffect(some VideoEffect) -> Bool","type":"method","path":"\/documentation\/haishinkit\/videotrackscreenobject\/registervideoeffect(_:)"},{"type":"method","title":"func unregisterVideoEffect(some VideoEffect) -> Bool","path":"\/documentation\/haishinkit\/videotrackscreenobject\/unregistervideoeffect(_:)"}],"title":"VideoTrackScreenObject","path":"\/documentation\/haishinkit\/videotrackscreenobject"},{"title":"Protocols","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/asyncrunner","title":"AsyncRunner","type":"protocol","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/asyncrunner\/isrunning","type":"property","title":"var isRunning: Bool"},{"type":"groupMarker","title":"Instance Methods"},{"title":"func startRunning() async","path":"\/documentation\/haishinkit\/asyncrunner\/startrunning()","type":"method"},{"type":"method","path":"\/documentation\/haishinkit\/asyncrunner\/stoprunning()","title":"func stopRunning() async"}]},{"type":"protocol","title":"ChromaKeyProcessable","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var chromaKeyColor: CGColor?","type":"property","path":"\/documentation\/haishinkit\/chromakeyprocessable\/chromakeycolor"}],"path":"\/documentation\/haishinkit\/chromakeyprocessable"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var audioSettings: AudioCodecSettings","path":"\/documentation\/haishinkit\/hkstream\/audiosettings","type":"property"},{"path":"\/documentation\/haishinkit\/hkstream\/readystate","type":"property","title":"var readyState: HKStreamReadyState"},{"title":"var soundTransform: SoundTransform?","path":"\/documentation\/haishinkit\/hkstream\/soundtransform","type":"property"},{"title":"var videoSettings: VideoCodecSettings","path":"\/documentation\/haishinkit\/hkstream\/videosettings","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"type":"method","title":"func addOutput(some HKStreamOutput)","path":"\/documentation\/haishinkit\/hkstream\/addoutput(_:)"},{"path":"\/documentation\/haishinkit\/hkstream\/append(_:)","title":"func append(CMSampleBuffer)","type":"method"},{"path":"\/documentation\/haishinkit\/hkstream\/append(_:when:)","type":"method","title":"func append(AVAudioBuffer, when: AVAudioTime)"},{"path":"\/documentation\/haishinkit\/hkstream\/attachaudioplayer(_:)","title":"func attachAudioPlayer(AudioPlayer?) async","type":"method"},{"type":"method","path":"\/documentation\/haishinkit\/hkstream\/dispatch(_:)","title":"func dispatch(NetworkMonitorEvent) async"},{"type":"method","title":"func removeOutput(some HKStreamOutput)","path":"\/documentation\/haishinkit\/hkstream\/removeoutput(_:)"},{"title":"func setAudioSettings(AudioCodecSettings)","path":"\/documentation\/haishinkit\/hkstream\/setaudiosettings(_:)","type":"method"},{"title":"func setBitrateStorategy((some HKStreamBitRateStrategy)?)","path":"\/documentation\/haishinkit\/hkstream\/setbitratestorategy(_:)","type":"method"},{"type":"method","path":"\/documentation\/haishinkit\/hkstream\/setsoundtransform(_:)","title":"func setSoundTransform(SoundTransform) async"},{"path":"\/documentation\/haishinkit\/hkstream\/setvideoinputbuffercounts(_:)","type":"method","title":"func setVideoInputBufferCounts(Int)"},{"title":"func setVideoSettings(VideoCodecSettings)","type":"method","path":"\/documentation\/haishinkit\/hkstream\/setvideosettings(_:)"}],"type":"protocol","title":"HKStream","path":"\/documentation\/haishinkit\/hkstream"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"type":"property","title":"var mamimumAudioBitRate: Int","path":"\/documentation\/haishinkit\/hkstreambitratestrategy\/mamimumaudiobitrate"},{"type":"property","title":"var mamimumVideoBitRate: Int","path":"\/documentation\/haishinkit\/hkstreambitratestrategy\/mamimumvideobitrate"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/hkstreambitratestrategy\/adjustbitrate(_:stream:)","type":"method","title":"func adjustBitrate(NetworkMonitorEvent, stream: some HKStream) async"}],"title":"HKStreamBitRateStrategy","type":"protocol","path":"\/documentation\/haishinkit\/hkstreambitratestrategy"},{"type":"protocol","children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/hkstreamoutput\/stream(_:didoutput:)","title":"func stream(some HKStream, didOutput: CMSampleBuffer)","type":"method"},{"type":"method","path":"\/documentation\/haishinkit\/hkstreamoutput\/stream(_:didoutput:when:)","title":"func stream(some HKStream, didOutput: AVAudioBuffer, when: AVAudioTime)"}],"path":"\/documentation\/haishinkit\/hkstreamoutput","title":"HKStreamOutput"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"type":"property","title":"var audioTrackId: UInt8?","path":"\/documentation\/haishinkit\/mediamixeroutput\/audiotrackid"},{"path":"\/documentation\/haishinkit\/mediamixeroutput\/videotrackid","type":"property","title":"var videoTrackId: UInt8?"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func mixer(MediaMixer, didOutput: CMSampleBuffer)","path":"\/documentation\/haishinkit\/mediamixeroutput\/mixer(_:didoutput:)","type":"method"},{"path":"\/documentation\/haishinkit\/mediamixeroutput\/mixer(_:didoutput:when:)","type":"method","title":"func mixer(MediaMixer, didOutput: AVAudioPCMBuffer, when: AVAudioTime)"},{"path":"\/documentation\/haishinkit\/mediamixeroutput\/selecttrack(_:mediatype:)","type":"method","title":"func selectTrack(UInt8?, mediaType: CMFormatDescription.MediaType) async"}],"title":"MediaMixerOutput","type":"protocol","path":"\/documentation\/haishinkit\/mediamixeroutput"},{"type":"protocol","title":"NetworkConnection","children":[{"title":"Instance Properties","type":"groupMarker"},{"type":"property","title":"var connected: Bool","path":"\/documentation\/haishinkit\/networkconnection\/connected"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/networkconnection\/close()","title":"func close() async throws","type":"method"}],"path":"\/documentation\/haishinkit\/networkconnection"},{"title":"NetworkTransportReporter","path":"\/documentation\/haishinkit\/networktransportreporter","type":"protocol","children":[{"title":"Instance Methods","type":"groupMarker"},{"type":"method","path":"\/documentation\/haishinkit\/networktransportreporter\/makenetworkmonitor()","title":"func makeNetworkMonitor() async -> NetworkMonitor"},{"title":"func makeNetworkTransportReport() async -> NetworkTransportReport","path":"\/documentation\/haishinkit\/networktransportreporter\/makenetworktransportreport()","type":"method"}]},{"type":"protocol","title":"Runner","path":"\/documentation\/haishinkit\/runner","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var isRunning: Bool","path":"\/documentation\/haishinkit\/runner\/isrunning","type":"property"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func startRunning()","path":"\/documentation\/haishinkit\/runner\/startrunning()"},{"title":"func stopRunning()","path":"\/documentation\/haishinkit\/runner\/stoprunning()","type":"method"}]},{"type":"protocol","path":"\/documentation\/haishinkit\/screendelegate","title":"ScreenDelegate","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func screen(Screen, willLayout: CMTime)","type":"method","path":"\/documentation\/haishinkit\/screendelegate\/screen(_:willlayout:)"}]},{"path":"\/documentation\/haishinkit\/screenrenderer","type":"protocol","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/screenrenderer\/backgroundcolor","title":"var backgroundColor: CGColor","type":"property"},{"path":"\/documentation\/haishinkit\/screenrenderer\/bounds","type":"property","title":"var bounds: CGRect"},{"path":"\/documentation\/haishinkit\/screenrenderer\/context","title":"var context: CIContext","type":"property"},{"title":"var presentationTimeStamp: CMTime","path":"\/documentation\/haishinkit\/screenrenderer\/presentationtimestamp","type":"property"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/screenrenderer\/draw(_:)","type":"method","title":"func draw(ScreenObject)"},{"title":"func layout(ScreenObject)","path":"\/documentation\/haishinkit\/screenrenderer\/layout(_:)","type":"method"},{"path":"\/documentation\/haishinkit\/screenrenderer\/settarget(_:)","type":"method","title":"func setTarget(CVPixelBuffer?)"}],"title":"ScreenRenderer"},{"title":"VideoEffect","children":[{"type":"groupMarker","title":"Instance Methods"},{"title":"func execute(CIImage) -> CIImage","type":"method","path":"\/documentation\/haishinkit\/videoeffect\/execute(_:)"}],"type":"protocol","path":"\/documentation\/haishinkit\/videoeffect"},{"type":"groupMarker","title":"Structures"},{"path":"\/documentation\/haishinkit\/amfarray","type":"struct","title":"AMFArray","children":[{"type":"groupMarker","title":"Initializers"},{"title":"init(count: Int)","type":"init","path":"\/documentation\/haishinkit\/amfarray\/init(count:)"},{"type":"init","title":"init(data: [(any Sendable)?])","path":"\/documentation\/haishinkit\/amfarray\/init(data:)"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/amfarray\/length","type":"property","title":"var length: Int"},{"type":"groupMarker","title":"Subscripts"},{"path":"\/documentation\/haishinkit\/amfarray\/subscript(_:)","type":"subscript","title":"subscript(Any) -> (any Sendable)?"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","title":"CustomDebugStringConvertible Implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/amfarray\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/haishinkit\/amfarray\/customdebugstringconvertible-implementations"},{"type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/haishinkit\/amfarray\/!=(_:_:)"},{"title":"static func == (AMFArray, AMFArray) -> Bool","path":"\/documentation\/haishinkit\/amfarray\/==(_:_:)","type":"op"}],"title":"Equatable Implementations","path":"\/documentation\/haishinkit\/amfarray\/equatable-implementations"},{"title":"ExpressibleByArrayLiteral Implementations","type":"symbol","path":"\/documentation\/haishinkit\/amfarray\/expressiblebyarrayliteral-implementations","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/haishinkit\/amfarray\/init(arrayliteral:)","title":"init(arrayLiteral: (any Sendable)?...)"}]}]},{"title":"AMFTypedObject","path":"\/documentation\/haishinkit\/amftypedobject","type":"struct","children":[{"type":"groupMarker","title":"Instance Properties"},{"title":"let data: AMFObject","type":"property","path":"\/documentation\/haishinkit\/amftypedobject\/data"},{"type":"property","title":"let typeName: String","path":"\/documentation\/haishinkit\/amftypedobject\/typename"}]},{"path":"\/documentation\/haishinkit\/amfundefined","title":"AMFUndefined","type":"struct","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/amfundefined\/description","title":"var description: String","type":"property"}]},{"children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init(data: String)","path":"\/documentation\/haishinkit\/amfxml\/init(data:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var description: String","path":"\/documentation\/haishinkit\/amfxml\/description","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/haishinkit\/amfxml\/!=(_:_:)"},{"type":"op","title":"static func == (AMFXML, AMFXML) -> Bool","path":"\/documentation\/haishinkit\/amfxml\/==(_:_:)"}],"path":"\/documentation\/haishinkit\/amfxml\/equatable-implementations","title":"Equatable Implementations"}],"type":"struct","title":"AMFXML","path":"\/documentation\/haishinkit\/amfxml"},{"path":"\/documentation\/haishinkit\/amfxmldocument","title":"AMFXMLDocument","children":[{"type":"groupMarker","title":"Initializers"},{"title":"init(data: String)","path":"\/documentation\/haishinkit\/amfxmldocument\/init(data:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var description: String","path":"\/documentation\/haishinkit\/amfxmldocument\/description","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/haishinkit\/amfxmldocument\/!=(_:_:)"},{"path":"\/documentation\/haishinkit\/amfxmldocument\/==(_:_:)","type":"op","title":"static func == (AMFXMLDocument, AMFXMLDocument) -> Bool"}],"type":"symbol","path":"\/documentation\/haishinkit\/amfxmldocument\/equatable-implementations","title":"Equatable Implementations"}],"type":"struct"},{"title":"AudioCodecSettings","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/haishinkit\/audiocodecsettings\/init(bitrate:downmix:channelmap:samplerate:format:)","title":"init(bitRate: Int, downmix: Bool, channelMap: [Int]?, sampleRate: Float64, format: AudioCodecSettings.Format)","type":"init"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/haishinkit\/audiocodecsettings\/init(from:)","type":"init"},{"type":"groupMarker","title":"Instance Properties"},{"title":"var bitRate: Int","path":"\/documentation\/haishinkit\/audiocodecsettings\/bitrate","type":"property"},{"path":"\/documentation\/haishinkit\/audiocodecsettings\/channelmap","type":"property","title":"var channelMap: [Int]?"},{"type":"property","path":"\/documentation\/haishinkit\/audiocodecsettings\/downmix","title":"var downmix: Bool"},{"type":"property","title":"var format: AudioCodecSettings.Format","path":"\/documentation\/haishinkit\/audiocodecsettings\/format-swift.property"},{"type":"property","title":"let sampleRate: Float64","path":"\/documentation\/haishinkit\/audiocodecsettings\/samplerate"},{"type":"groupMarker","title":"Type Properties"},{"title":"static let `default`: AudioCodecSettings","path":"\/documentation\/haishinkit\/audiocodecsettings\/default","type":"property"},{"title":"static let defaultBitRate: Int","type":"property","path":"\/documentation\/haishinkit\/audiocodecsettings\/defaultbitrate"},{"title":"static let maximumNumberOfChannels: UInt32","type":"property","path":"\/documentation\/haishinkit\/audiocodecsettings\/maximumnumberofchannels"},{"title":"Enumerations","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/audiocodecsettings\/format-swift.enum","type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"type":"case","title":"case aac","path":"\/documentation\/haishinkit\/audiocodecsettings\/format-swift.enum\/aac"},{"title":"case opus","path":"\/documentation\/haishinkit\/audiocodecsettings\/format-swift.enum\/opus","type":"case"},{"title":"case pcm","path":"\/documentation\/haishinkit\/audiocodecsettings\/format-swift.enum\/pcm","type":"case"},{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","type":"init","path":"\/documentation\/haishinkit\/audiocodecsettings\/format-swift.enum\/init(from:)"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Operators"},{"type":"op","path":"\/documentation\/haishinkit\/audiocodecsettings\/format-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"}],"type":"symbol","path":"\/documentation\/haishinkit\/audiocodecsettings\/format-swift.enum\/equatable-implementations","title":"Equatable Implementations"}],"title":"AudioCodecSettings.Format"}],"path":"\/documentation\/haishinkit\/audiocodecsettings","type":"struct"},{"path":"\/documentation\/haishinkit\/audiomixersettings","children":[{"type":"groupMarker","title":"Initializers"},{"title":"init(sampleRate: Float64, channels: UInt32, isMuted: Bool, mainTrack: UInt8, tracks: [UInt8 : AudioMixerTrackSettings])","path":"\/documentation\/haishinkit\/audiomixersettings\/init(samplerate:channels:ismuted:maintrack:tracks:)","type":"init"},{"type":"groupMarker","title":"Instance Properties"},{"title":"let channels: UInt32","type":"property","path":"\/documentation\/haishinkit\/audiomixersettings\/channels"},{"type":"property","title":"var isMuted: Bool","path":"\/documentation\/haishinkit\/audiomixersettings\/ismuted"},{"title":"var mainTrack: UInt8","path":"\/documentation\/haishinkit\/audiomixersettings\/maintrack","type":"property"},{"title":"var maximumNumberOfChannels: UInt32","path":"\/documentation\/haishinkit\/audiomixersettings\/maximumnumberofchannels","type":"property"},{"title":"let sampleRate: Float64","type":"property","path":"\/documentation\/haishinkit\/audiomixersettings\/samplerate"},{"path":"\/documentation\/haishinkit\/audiomixersettings\/tracks","type":"property","title":"var tracks: [UInt8 : AudioMixerTrackSettings]"},{"title":"Type Properties","type":"groupMarker"},{"title":"static let `default`: AudioMixerSettings","path":"\/documentation\/haishinkit\/audiomixersettings\/default","type":"property"},{"path":"\/documentation\/haishinkit\/audiomixersettings\/maximumsamplerate","title":"static let maximumSampleRate: Float64","type":"property"}],"type":"struct","title":"AudioMixerSettings"},{"path":"\/documentation\/haishinkit\/audiomixertracksettings","title":"AudioMixerTrackSettings","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/haishinkit\/audiomixertracksettings\/init(from:)","type":"init"},{"title":"init(volume: Float, isMuted: Bool, downmix: Bool, channelMap: [Int]?)","path":"\/documentation\/haishinkit\/audiomixertracksettings\/init(volume:ismuted:downmix:channelmap:)","type":"init"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var channelMap: [Int]?","path":"\/documentation\/haishinkit\/audiomixertracksettings\/channelmap"},{"type":"property","title":"var downmix: Bool","path":"\/documentation\/haishinkit\/audiomixertracksettings\/downmix"},{"type":"property","title":"var isMuted: Bool","path":"\/documentation\/haishinkit\/audiomixertracksettings\/ismuted"},{"type":"property","title":"var volume: Float","path":"\/documentation\/haishinkit\/audiomixertracksettings\/volume"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/audiomixertracksettings\/default","type":"property","title":"static let `default`: AudioMixerTrackSettings"}],"type":"struct"},{"path":"\/documentation\/haishinkit\/hkatomic","title":"HKAtomic","type":"struct","children":[{"type":"groupMarker","title":"Initializers"},{"title":"init(A)","path":"\/documentation\/haishinkit\/hkatomic\/init(_:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var value: A","path":"\/documentation\/haishinkit\/hkatomic\/value","type":"property"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/hkatomic\/mutate(_:)","title":"func mutate((inout A) -> Void)","type":"method"}]},{"path":"\/documentation\/haishinkit\/networkmonitorreport","title":"NetworkMonitorReport","type":"struct","children":[{"type":"groupMarker","title":"Instance Properties"},{"title":"let currentBytesInPerSecond: Int","path":"\/documentation\/haishinkit\/networkmonitorreport\/currentbytesinpersecond","type":"property"},{"type":"property","title":"let currentBytesOutPerSecond: Int","path":"\/documentation\/haishinkit\/networkmonitorreport\/currentbytesoutpersecond"},{"title":"let currentQueueBytesOut: Int","path":"\/documentation\/haishinkit\/networkmonitorreport\/currentqueuebytesout","type":"property"},{"path":"\/documentation\/haishinkit\/networkmonitorreport\/totalbytesin","title":"let totalBytesIn: Int","type":"property"},{"path":"\/documentation\/haishinkit\/networkmonitorreport\/totalbytesout","title":"let totalBytesOut: Int","type":"property"}]},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/networktransportreport\/init(queuebytesout:totalbytesin:totalbytesout:)","type":"init","title":"init(queueBytesOut: Int, totalBytesIn: Int, totalBytesOut: Int)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"let queueBytesOut: Int","path":"\/documentation\/haishinkit\/networktransportreport\/queuebytesout"},{"path":"\/documentation\/haishinkit\/networktransportreport\/totalbytesin","type":"property","title":"let totalBytesIn: Int"},{"title":"let totalBytesOut: Int","type":"property","path":"\/documentation\/haishinkit\/networktransportreport\/totalbytesout"}],"title":"NetworkTransportReport","type":"struct","path":"\/documentation\/haishinkit\/networktransportreport"},{"type":"struct","path":"\/documentation\/haishinkit\/rtmpresponse","title":"RTMPResponse","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"let arguments: [(any Sendable)?]","path":"\/documentation\/haishinkit\/rtmpresponse\/arguments","type":"property"},{"title":"let status: RTMPStatus?","path":"\/documentation\/haishinkit\/rtmpresponse\/status","type":"property"}]},{"type":"struct","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"let code: String","path":"\/documentation\/haishinkit\/rtmpstatus\/code","type":"property"},{"title":"let description: String","path":"\/documentation\/haishinkit\/rtmpstatus\/description","type":"property"},{"type":"property","title":"let level: String","path":"\/documentation\/haishinkit\/rtmpstatus\/level"},{"type":"groupMarker","title":"Subscripts"},{"title":"subscript(dynamicMember _: String) -> Double?","path":"\/documentation\/haishinkit\/rtmpstatus\/subscript(dynamicmember:)-7qc0b","type":"subscript"},{"path":"\/documentation\/haishinkit\/rtmpstatus\/subscript(dynamicmember:)-9sprr","type":"subscript","title":"subscript(dynamicMember _: String) -> String?"}],"title":"RTMPStatus","path":"\/documentation\/haishinkit\/rtmpstatus"},{"path":"\/documentation\/haishinkit\/rtmpstreaminfo","title":"RTMPStreamInfo","children":[{"type":"groupMarker","title":"Instance Properties"},{"title":"var byteCount: Int","type":"property","path":"\/documentation\/haishinkit\/rtmpstreaminfo\/bytecount"},{"type":"property","path":"\/documentation\/haishinkit\/rtmpstreaminfo\/currentbytespersecond","title":"var currentBytesPerSecond: Int"},{"title":"var resourceName: String?","path":"\/documentation\/haishinkit\/rtmpstreaminfo\/resourcename","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/rtmpstreaminfo\/customdebugstringconvertible-implementations","type":"symbol","title":"CustomDebugStringConvertible Implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"type":"property","title":"var debugDescription: String","path":"\/documentation\/haishinkit\/rtmpstreaminfo\/debugdescription"}]}],"type":"struct"},{"children":[{"type":"groupMarker","title":"Initializers"},{"title":"init(volume: Float, pan: Float)","type":"init","path":"\/documentation\/haishinkit\/soundtransform\/init(volume:pan:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var pan: Float","type":"property","path":"\/documentation\/haishinkit\/soundtransform\/pan"},{"title":"var volume: Float","path":"\/documentation\/haishinkit\/soundtransform\/volume","type":"property"},{"type":"groupMarker","title":"Type Properties"},{"path":"\/documentation\/haishinkit\/soundtransform\/defaultpan","title":"static let defaultPan: Float","type":"property"},{"type":"property","title":"static let defaultVolume: Float","path":"\/documentation\/haishinkit\/soundtransform\/defaultvolume"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/soundtransform\/debugdescription","title":"var debugDescription: String","type":"property"}],"type":"symbol","path":"\/documentation\/haishinkit\/soundtransform\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations"},{"children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/haishinkit\/soundtransform\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"type":"symbol","path":"\/documentation\/haishinkit\/soundtransform\/equatable-implementations","title":"Equatable Implementations"}],"path":"\/documentation\/haishinkit\/soundtransform","type":"struct","title":"SoundTransform"},{"title":"VTSessionOption","path":"\/documentation\/haishinkit\/vtsessionoption","type":"struct","children":[{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/haishinkit\/vtsessionoption\/equatable-implementations","title":"Equatable Implementations","children":[{"type":"groupMarker","title":"Operators"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/haishinkit\/vtsessionoption\/!=(_:_:)"},{"type":"op","title":"static func == (VTSessionOption, VTSessionOption) -> Bool","path":"\/documentation\/haishinkit\/vtsessionoption\/==(_:_:)"}],"type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"type":"method","path":"\/documentation\/haishinkit\/vtsessionoption\/hash(into:)","title":"func hash(into: inout Hasher)"}],"type":"symbol","title":"Hashable Implementations","path":"\/documentation\/haishinkit\/vtsessionoption\/hashable-implementations"}]},{"path":"\/documentation\/haishinkit\/videocodecsettings","type":"struct","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init(from: any Decoder) throws","path":"\/documentation\/haishinkit\/videocodecsettings\/init(from:)"},{"type":"init","title":"init(videoSize: CGSize, bitRate: Int, profileLevel: String, scalingMode: VideoCodecSettings.ScalingMode, bitRateMode: VideoCodecSettings.BitRateMode, maxKeyFrameIntervalDuration: Int32, allowFrameReordering: Bool?, dataRateLimits: [Double]?, isHardwareEncoderEnabled: Bool)","path":"\/documentation\/haishinkit\/videocodecsettings\/init(videosize:bitrate:profilelevel:scalingmode:bitratemode:maxkeyframeintervalduration:allowframereordering:dataratelimits:ishardwareencoderenabled:)"},{"type":"groupMarker","title":"Instance Properties"},{"title":"var allowFrameReordering: Bool?","path":"\/documentation\/haishinkit\/videocodecsettings\/allowframereordering","type":"property"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/bitrate","type":"property","title":"var bitRate: Int"},{"title":"var bitRateMode: VideoCodecSettings.BitRateMode","type":"property","path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.property"},{"title":"var dataRateLimits: [Double]?","path":"\/documentation\/haishinkit\/videocodecsettings\/dataratelimits","type":"property"},{"title":"var frameInterval: Double","path":"\/documentation\/haishinkit\/videocodecsettings\/frameinterval","type":"property"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/ishardwareencoderenabled","type":"property","title":"var isHardwareEncoderEnabled: Bool"},{"title":"var maxKeyFrameIntervalDuration: Int32","path":"\/documentation\/haishinkit\/videocodecsettings\/maxkeyframeintervalduration","type":"property"},{"type":"property","path":"\/documentation\/haishinkit\/videocodecsettings\/profilelevel","title":"var profileLevel: String"},{"type":"property","title":"var scalingMode: VideoCodecSettings.ScalingMode","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.property"},{"title":"var videoSize: CGSize","type":"property","path":"\/documentation\/haishinkit\/videocodecsettings\/videosize"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/default","title":"static let `default`: VideoCodecSettings","type":"property"},{"title":"static let frameInterval01: Double","path":"\/documentation\/haishinkit\/videocodecsettings\/frameinterval01","type":"property"},{"type":"property","title":"static let frameInterval05: Double","path":"\/documentation\/haishinkit\/videocodecsettings\/frameinterval05"},{"title":"static let frameInterval10: Double","path":"\/documentation\/haishinkit\/videocodecsettings\/frameinterval10","type":"property"},{"title":"static let frameInterval30: Double","path":"\/documentation\/haishinkit\/videocodecsettings\/frameinterval30","type":"property"},{"type":"groupMarker","title":"Enumerations"},{"title":"VideoCodecSettings.BitRateMode","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case average","path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/average","type":"case"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/constant","type":"case","title":"case constant"},{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/init(rawvalue:)","type":"init","title":"init?(rawValue: String)"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"title":"Operators","type":"groupMarker"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/!=(_:_:)"}],"title":"Equatable Implementations","type":"symbol","path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/equatable-implementations"},{"children":[{"title":"Initializers","type":"groupMarker"},{"type":"init","title":"init(from: any Decoder) throws","path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/init(from:)"},{"type":"groupMarker","title":"Instance Properties"},{"title":"var hashValue: Int","path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/hashvalue","type":"property"},{"type":"groupMarker","title":"Instance Methods"},{"title":"func encode(to: any Encoder) throws","path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/encode(to:)","type":"method"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/hash(into:)","type":"method","title":"func hash(into: inout Hasher)"}],"type":"symbol","title":"RawRepresentable Implementations","path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/rawrepresentable-implementations"}],"type":"enum","path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum"},{"type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"title":"case cropSourceToCleanAperture","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/cropsourcetocleanaperture","type":"case"},{"title":"case letterbox","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/letterbox","type":"case"},{"type":"case","title":"case normal","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/normal"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/trim","title":"case trim","type":"case"},{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}],"type":"symbol","title":"Equatable Implementations"},{"type":"symbol","title":"RawRepresentable Implementations","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/rawrepresentable-implementations","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/init(from:)","type":"init","title":"init(from: any Decoder) throws"},{"title":"Instance Properties","type":"groupMarker"},{"type":"property","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/hashvalue","title":"var hashValue: Int"},{"type":"groupMarker","title":"Instance Methods"},{"title":"func encode(to: any Encoder) throws","type":"method","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/encode(to:)"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/hash(into:)","type":"method","title":"func hash(into: inout Hasher)"}]}],"title":"VideoCodecSettings.ScalingMode","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum"}],"title":"VideoCodecSettings"},{"title":"VideoMixerSettings","type":"struct","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","type":"init","path":"\/documentation\/haishinkit\/videomixersettings\/init(from:)"},{"type":"init","title":"init(mode: VideoMixerSettings.Mode, isMuted: Bool, mainTrack: UInt8)","path":"\/documentation\/haishinkit\/videomixersettings\/init(mode:ismuted:maintrack:)"},{"title":"Instance Properties","type":"groupMarker"},{"type":"property","path":"\/documentation\/haishinkit\/videomixersettings\/ismuted","title":"var isMuted: Bool"},{"path":"\/documentation\/haishinkit\/videomixersettings\/maintrack","type":"property","title":"var mainTrack: UInt8"},{"type":"property","title":"var mode: VideoMixerSettings.Mode","path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videomixersettings\/default","title":"static let `default`: VideoMixerSettings","type":"property"},{"type":"groupMarker","title":"Enumerations"},{"path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/offscreen","title":"case offscreen","type":"case"},{"path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/passthrough","type":"case","title":"case passthrough"},{"type":"groupMarker","title":"Initializers"},{"title":"init?(rawValue: String)","type":"init","path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/init(rawvalue:)"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/equatable-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/!=(_:_:)","type":"op"}]},{"type":"symbol","title":"RawRepresentable Implementations","path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/rawrepresentable-implementations","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/init(from:)","type":"init","title":"init(from: any Decoder) throws"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/hashvalue","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func encode(to: any Encoder) throws","type":"method","path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/encode(to:)"},{"path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/hash(into:)","type":"method","title":"func hash(into: inout Hasher)"}]}],"type":"enum","title":"VideoMixerSettings.Mode"}],"path":"\/documentation\/haishinkit\/videomixersettings"},{"title":"Variables","type":"groupMarker"},{"type":"var","title":"let kAMFUndefined: AMFUndefined","path":"\/documentation\/haishinkit\/kamfundefined"},{"title":"let kHaishinKitIdentifier: String","path":"\/documentation\/haishinkit\/khaishinkitidentifier","type":"var"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/amfobject","title":"AMFObject","type":"typealias"},{"type":"typealias","path":"\/documentation\/haishinkit\/audiodeviceconfigurationblock","title":"AudioDeviceConfigurationBlock"},{"path":"\/documentation\/haishinkit\/videodeviceconfigurationblock","type":"typealias","title":"VideoDeviceConfigurationBlock"},{"type":"groupMarker","title":"Enumerations"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/deviceutil\/device(withlocalizedname:mediatype:)","title":"static func device(withLocalizedName: String, mediaType: AVMediaType) -> AVCaptureDevice?","type":"method"}],"title":"DeviceUtil","type":"enum","path":"\/documentation\/haishinkit\/deviceutil"},{"title":"HKStreamReadyState","path":"\/documentation\/haishinkit\/hkstreamreadystate","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case idle","type":"case","path":"\/documentation\/haishinkit\/hkstreamreadystate\/idle"},{"type":"case","path":"\/documentation\/haishinkit\/hkstreamreadystate\/play","title":"case play"},{"type":"case","title":"case playing","path":"\/documentation\/haishinkit\/hkstreamreadystate\/playing"},{"title":"case publish","path":"\/documentation\/haishinkit\/hkstreamreadystate\/publish","type":"case"},{"type":"case","title":"case publishing","path":"\/documentation\/haishinkit\/hkstreamreadystate\/publishing"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/hkstreamreadystate\/init(rawvalue:)","type":"init","title":"init?(rawValue: Int)"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"type":"op","path":"\/documentation\/haishinkit\/hkstreamreadystate\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"}],"path":"\/documentation\/haishinkit\/hkstreamreadystate\/equatable-implementations"},{"type":"symbol","path":"\/documentation\/haishinkit\/hkstreamreadystate\/rawrepresentable-implementations","title":"RawRepresentable Implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/hkstreamreadystate\/hashvalue","type":"property","title":"var hashValue: Int"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func hash(into: inout Hasher)","path":"\/documentation\/haishinkit\/hkstreamreadystate\/hash(into:)","type":"method"}]}],"type":"enum"},{"type":"enum","title":"NetworkMonitorEvent","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/haishinkit\/networkmonitorevent\/publishinsufficientbwoccured(report:)","type":"case","title":"case publishInsufficientBWOccured(report: NetworkMonitorReport)"},{"type":"case","path":"\/documentation\/haishinkit\/networkmonitorevent\/reset","title":"case reset"},{"title":"case status(report: NetworkMonitorReport)","path":"\/documentation\/haishinkit\/networkmonitorevent\/status(report:)","type":"case"}],"path":"\/documentation\/haishinkit\/networkmonitorevent"},{"type":"enum","path":"\/documentation\/haishinkit\/rtmpobjectencoding","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/rtmpobjectencoding\/amf0","type":"case","title":"case amf0"},{"path":"\/documentation\/haishinkit\/rtmpobjectencoding\/amf3","type":"case","title":"case amf3"},{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/haishinkit\/rtmpobjectencoding\/init(rawvalue:)","title":"init?(rawValue: UInt8)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"type":"op","path":"\/documentation\/haishinkit\/rtmpobjectencoding\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"}],"path":"\/documentation\/haishinkit\/rtmpobjectencoding\/equatable-implementations","type":"symbol"},{"type":"symbol","title":"RawRepresentable Implementations","path":"\/documentation\/haishinkit\/rtmpobjectencoding\/rawrepresentable-implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/rtmpobjectencoding\/hashvalue","type":"property","title":"var hashValue: Int"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/rtmpobjectencoding\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}]}],"title":"RTMPObjectEncoding"},{"type":"groupMarker","title":"Extended Modules"},{"title":"CoreMedia","path":"\/documentation\/haishinkit\/coremedia","children":[{"title":"Extended Classes","type":"groupMarker"},{"title":"CMFormatDescription","children":[{"type":"groupMarker","title":"Instance Properties"},{"title":"var isCompressed: Bool","path":"\/documentation\/haishinkit\/coremedia\/cmformatdescription\/iscompressed","type":"property"}],"path":"\/documentation\/haishinkit\/coremedia\/cmformatdescription","type":"extension"}],"type":"extension"}]},{"type":"module","path":"\/documentation\/moqthaishinkit","children":[{"title":"Classes","type":"groupMarker"},{"type":"class","title":"MoQTConnection","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/init(_:requesttimeout:)","title":"init(MoQTSetupRole, requestTimeOut: UInt64)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/objectstream","type":"property","title":"var objectStream: AsyncStream<MoQTObject>"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/requesttimeout","title":"let requestTimeout: UInt64","type":"property"},{"title":"let role: MoQTSetupRole","type":"property","path":"\/documentation\/moqthaishinkit\/moqtconnection\/role"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func annouce([String], authInfo: String?) async throws -> Result<MoQTAnnounceOk, MoQTAnnounceError>","path":"\/documentation\/moqthaishinkit\/moqtconnection\/annouce(_:authinfo:)","type":"method"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/close()","title":"func close() async","type":"method"},{"type":"method","title":"func connect(String) async throws -> MoQTServerSetup","path":"\/documentation\/moqthaishinkit\/moqtconnection\/connect(_:)"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/send(_:header:)","title":"func send([MoQTObject], header: MoQTStreamHeaderSubgroup) async throws","type":"method"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/subscribe(_:name:authinfo:)","type":"method","title":"func subscribe([String], name: String, authInfo: String?) async throws -> Result<MoQTSubscribeOk, MoQTSubscribeError>"},{"type":"method","title":"func subscribeAnnouces([String], authInfo: String?) async throws -> Result<MoQTSubscribeAnnouncesOk, MoQTSubscribeAnnouncesError>","path":"\/documentation\/moqthaishinkit\/moqtconnection\/subscribeannouces(_:authinfo:)"},{"title":"Type Properties","type":"groupMarker"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtconnection\/defaultport","title":"static let defaultPort: Int"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/defaultrequesttimeout","type":"property","title":"static let defaultRequestTimeout: UInt64"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/supportedprotocols","title":"static let supportedProtocols: [String]","type":"property"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/supportedversions","title":"static let supportedVersions: [MoQTVersion]","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/error","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"title":"case connectionTimedOut","path":"\/documentation\/moqthaishinkit\/moqtconnection\/error\/connectiontimedout","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/error\/invalidstate","type":"case","title":"case invalidState"},{"type":"case","path":"\/documentation\/moqthaishinkit\/moqtconnection\/error\/requesttimedout","title":"case requestTimedOut"},{"type":"case","path":"\/documentation\/moqthaishinkit\/moqtconnection\/error\/socketerroroccurred(_:)","title":"case socketErrorOccurred(any Error)"},{"title":"case unknownResponse","type":"case","path":"\/documentation\/moqthaishinkit\/moqtconnection\/error\/unknownresponse"},{"title":"case unsupportedCommand(String)","path":"\/documentation\/moqthaishinkit\/moqtconnection\/error\/unsupportedcommand(_:)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Error Implementations","type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var localizedDescription: String","path":"\/documentation\/moqthaishinkit\/moqtconnection\/error\/localizeddescription","type":"property"}],"path":"\/documentation\/moqthaishinkit\/moqtconnection\/error\/error-implementations"}],"type":"enum","title":"MoQTConnection.Error"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","path":"\/documentation\/moqthaishinkit\/moqtconnection\/actor-implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/assertisolated(_:file:line:)","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method"},{"title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","path":"\/documentation\/moqthaishinkit\/moqtconnection\/assumeisolated(_:file:line:)","type":"method"},{"type":"method","path":"\/documentation\/moqthaishinkit\/moqtconnection\/preconditionisolated(_:file:line:)","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)"}],"title":"Actor Implementations"}],"path":"\/documentation\/moqthaishinkit\/moqtconnection"},{"type":"groupMarker","title":"Protocols"},{"title":"MoQTControlMessage","type":"protocol","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var payload: Data","path":"\/documentation\/moqthaishinkit\/moqtcontrolmessage\/payload","type":"property"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtcontrolmessage\/type","title":"var type: MoQTMessageType"}],"path":"\/documentation\/moqthaishinkit\/moqtcontrolmessage"},{"type":"groupMarker","title":"Structures"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/moqthaishinkit\/moqtannounce\/payload","type":"property","title":"var payload: Data"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtannounce\/subscribeparameters","title":"let subscribeParameters: [MoQTVersionSpecificParameter]"},{"title":"let trackNamespace: [String]","type":"property","path":"\/documentation\/moqthaishinkit\/moqtannounce\/tracknamespace"},{"title":"let type: MoQTMessageType","path":"\/documentation\/moqthaishinkit\/moqtannounce\/type","type":"property"}],"path":"\/documentation\/moqthaishinkit\/moqtannounce","title":"MoQTAnnounce","type":"struct"},{"path":"\/documentation\/moqthaishinkit\/moqtannounceerror","type":"struct","title":"MoQTAnnounceError","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtannounceerror\/code","type":"property","title":"let code: Int"},{"type":"property","title":"var payload: Data","path":"\/documentation\/moqthaishinkit\/moqtannounceerror\/payload"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtannounceerror\/reasonphrase","title":"let reasonPhrase: String"},{"path":"\/documentation\/moqthaishinkit\/moqtannounceerror\/tracknamespace","type":"property","title":"let trackNamespace: [String]"},{"type":"property","title":"let type: MoQTMessageType","path":"\/documentation\/moqthaishinkit\/moqtannounceerror\/type"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var localizedDescription: String","path":"\/documentation\/moqthaishinkit\/moqtannounceerror\/localizeddescription","type":"property"}],"title":"Error Implementations","type":"symbol","path":"\/documentation\/moqthaishinkit\/moqtannounceerror\/error-implementations"}]},{"type":"struct","title":"MoQTAnnounceOk","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var payload: Data","path":"\/documentation\/moqthaishinkit\/moqtannounceok\/payload"},{"title":"let trackNamespace: [String]","path":"\/documentation\/moqthaishinkit\/moqtannounceok\/tracknamespace","type":"property"},{"path":"\/documentation\/moqthaishinkit\/moqtannounceok\/type","type":"property","title":"let type: MoQTMessageType"}],"path":"\/documentation\/moqthaishinkit\/moqtannounceok"},{"title":"MoQTGoaway","children":[{"type":"groupMarker","title":"Instance Properties"},{"title":"let newSessionURI: String","path":"\/documentation\/moqthaishinkit\/moqtgoaway\/newsessionuri","type":"property"},{"title":"var payload: Data","path":"\/documentation\/moqthaishinkit\/moqtgoaway\/payload","type":"property"},{"type":"property","title":"let type: MoQTMessageType","path":"\/documentation\/moqthaishinkit\/moqtgoaway\/type"}],"path":"\/documentation\/moqthaishinkit\/moqtgoaway","type":"struct"},{"title":"MoQTObject","type":"struct","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(id: Int, status: Int?, data: Data)","path":"\/documentation\/moqthaishinkit\/moqtobject\/init(id:status:data:)","type":"init"},{"type":"groupMarker","title":"Instance Properties"},{"title":"let data: Data","path":"\/documentation\/moqthaishinkit\/moqtobject\/data","type":"property"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtobject\/id","title":"let id: Int"},{"title":"let status: Int?","type":"property","path":"\/documentation\/moqthaishinkit\/moqtobject\/status"}],"path":"\/documentation\/moqthaishinkit\/moqtobject"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtserversetup\/payload","title":"var payload: Data"},{"title":"let selectedVersion: Int","path":"\/documentation\/moqthaishinkit\/moqtserversetup\/selectedversion","type":"property"},{"path":"\/documentation\/moqthaishinkit\/moqtserversetup\/setupparameters","title":"let setupParameters: [MoQTSetupParameter]","type":"property"},{"title":"let type: MoQTMessageType","type":"property","path":"\/documentation\/moqthaishinkit\/moqtserversetup\/type"}],"title":"MoQTServerSetup","type":"struct","path":"\/documentation\/moqthaishinkit\/moqtserversetup"},{"title":"MoQTSetupParameter","path":"\/documentation\/moqthaishinkit\/moqtsetupparameter","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"let key: MoQTSetupParameterType","type":"property","path":"\/documentation\/moqthaishinkit\/moqtsetupparameter\/key"},{"type":"property","title":"let value: (any Sendable)","path":"\/documentation\/moqthaishinkit\/moqtsetupparameter\/value"}],"type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"type":"init","title":"init(trackAlias: Int, groupId: Int, subgroupId: Int, publisherPriority: Int)","path":"\/documentation\/moqthaishinkit\/moqtstreamheadersubgroup\/init(trackalias:groupid:subgroupid:publisherpriority:)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtstreamheadersubgroup\/groupid","title":"let groupId: Int"},{"type":"property","title":"var payload: Data","path":"\/documentation\/moqthaishinkit\/moqtstreamheadersubgroup\/payload"},{"path":"\/documentation\/moqthaishinkit\/moqtstreamheadersubgroup\/publisherpriority","type":"property","title":"let publisherPriority: Int"},{"path":"\/documentation\/moqthaishinkit\/moqtstreamheadersubgroup\/subgroupid","type":"property","title":"let subgroupId: Int"},{"type":"property","title":"let trackAlias: Int","path":"\/documentation\/moqthaishinkit\/moqtstreamheadersubgroup\/trackalias"},{"path":"\/documentation\/moqthaishinkit\/moqtstreamheadersubgroup\/type","title":"let type: MoQTDataStreamType","type":"property"}],"type":"struct","path":"\/documentation\/moqthaishinkit\/moqtstreamheadersubgroup","title":"MoQTStreamHeaderSubgroup"},{"title":"MoQTSubscribe","path":"\/documentation\/moqthaishinkit\/moqtsubscribe","type":"struct","children":[{"type":"groupMarker","title":"Instance Properties"},{"title":"let endGroup: Int?","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/endgroup","type":"property"},{"title":"let endObject: Int?","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/endobject","type":"property"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.property","title":"let filterType: MoQTSubscribe.FilterType"},{"title":"let groupOrder: MoQTSubscribe.GroupOrder","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.property","type":"property"},{"title":"var payload: Data","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/payload","type":"property"},{"type":"property","title":"let startGroup: Int?","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/startgroup"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/startobject","title":"let startObject: Int?","type":"property"},{"type":"property","title":"let subscribeId: Int","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/subscribeid"},{"title":"let subscribeParameters: [MoQTVersionSpecificParameter]","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/subscribeparameters","type":"property"},{"type":"property","title":"let subscribePriority: Int","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/subscribepriority"},{"type":"property","title":"let trackAlias: Int","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/trackalias"},{"title":"let trackName: String","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/trackname","type":"property"},{"title":"let trackNamespace: [String]","type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/tracknamespace"},{"title":"let type: MoQTMessageType","type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/type"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/absoluterange","title":"case absoluteRange","type":"case"},{"type":"case","title":"case absoluteStart","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/absolutestart"},{"title":"case latestGroup","type":"case","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/latestgroup"},{"type":"case","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/latestobject","title":"case latestObject"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: Int)","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/init(rawvalue:)","type":"init"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}],"type":"symbol","title":"Equatable Implementations","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/equatable-implementations"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/rawrepresentable-implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"title":"var hashValue: Int","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/hashvalue","type":"property"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func hash(into: inout Hasher)","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/hash(into:)"}],"title":"RawRepresentable Implementations","type":"symbol"}],"type":"enum","title":"MoQTSubscribe.FilterType","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"type":"case","title":"case ascending","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/ascending"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/descending","type":"case","title":"case descending"},{"title":"case original","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/original","type":"case"},{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/!=(_:_:)"}],"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/rawrepresentable-implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"type":"property","title":"var hashValue: Int","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/hashvalue"},{"title":"Instance Methods","type":"groupMarker"},{"type":"method","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)"}],"title":"RawRepresentable Implementations","type":"symbol"}],"type":"enum","title":"MoQTSubscribe.GroupOrder"}]},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounces","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounces\/parameters","title":"let parameters: [MoQTVersionSpecificParameter]","type":"property"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounces\/payload","title":"var payload: Data","type":"property"},{"title":"let trackNamespacePrefix: [String]","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounces\/tracknamespaceprefix","type":"property"},{"title":"let type: MoQTMessageType","type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounces\/type"}],"type":"struct","title":"MoQTSubscribeAnnounces"},{"title":"MoQTSubscribeAnnouncesError","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounceserror","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounceserror\/errorcode","title":"let errorCode: Int"},{"type":"property","title":"var payload: Data","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounceserror\/payload"},{"title":"let reasonPhrase: String","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounceserror\/reasonphrase","type":"property"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounceserror\/tracknamespaceprefix","title":"let trackNamespacePrefix: [String]","type":"property"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounceserror\/type","type":"property","title":"let type: MoQTMessageType"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Error Implementations","type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var localizedDescription: String","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounceserror\/localizeddescription","type":"property"}],"path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounceserror\/error-implementations"}],"type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var payload: Data","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannouncesok\/payload","type":"property"},{"title":"let trackNamespacePrefix: [String]","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannouncesok\/tracknamespaceprefix","type":"property"},{"title":"let type: MoQTMessageType","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannouncesok\/type","type":"property"}],"title":"MoQTSubscribeAnnouncesOk","type":"struct","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannouncesok"},{"title":"MoQTSubscribeError","path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror","type":"struct","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror\/code","title":"let code: Int","type":"property"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror\/payload","type":"property","title":"var payload: Data"},{"type":"property","title":"let reasonPhrase: String","path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror\/reasonphrase"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror\/subscribeid","title":"let subscribeId: Int"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror\/trackalias","title":"let trackAlias: Int","type":"property"},{"title":"let type: MoQTMessageType","type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror\/type"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror\/error-implementations","title":"Error Implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"type":"property","title":"var localizedDescription: String","path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror\/localizeddescription"}]}]},{"title":"MoQTSubscribeOk","type":"struct","path":"\/documentation\/moqthaishinkit\/moqtsubscribeok","children":[{"type":"groupMarker","title":"Instance Properties"},{"title":"let contentExists: Bool","path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/contentexists","type":"property"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/expires","title":"let expires: Int"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/grouporder","type":"property","title":"let groupOrder: MoQTSubscribe.GroupOrder"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/largestgroupid","title":"let largestGroupId: Int?","type":"property"},{"type":"property","title":"let largestObjectId: Int?","path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/largestobjectid"},{"title":"var payload: Data","type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/payload"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/subscribeid","title":"let subscribeId: Int","type":"property"},{"title":"let subscribeParameters: [MoQTVersionSpecificParameter]","path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/subscribeparameters","type":"property"},{"title":"let type: MoQTMessageType","type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/type"}]},{"type":"struct","title":"MoQTVersionSpecificParameter","path":"\/documentation\/moqthaishinkit\/moqtversionspecificparameter","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"let key: MoQTVersionSpecificType","type":"property","path":"\/documentation\/moqthaishinkit\/moqtversionspecificparameter\/key"},{"title":"let value: (any Sendable)","path":"\/documentation\/moqthaishinkit\/moqtversionspecificparameter\/value","type":"property"}]},{"title":"Enumerations","type":"groupMarker"},{"type":"enum","title":"MoQTDataStreamType","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/fetchheader","type":"case","title":"case fetchHeader"},{"path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/objectdatagram","title":"case objectDatagram","type":"case"},{"type":"case","path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/streamheadersubgroup","title":"case streamHeaderSubgroup"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/equatable-implementations","type":"symbol","title":"Equatable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}]},{"title":"RawRepresentable Implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/hashvalue","type":"property","title":"var hashValue: Int"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"type":"symbol","path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/rawrepresentable-implementations"}],"path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype"},{"type":"enum","title":"MoQTMessageType","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/announce","title":"case announce","type":"case"},{"title":"case announceCancel","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/announcecancel","type":"case"},{"title":"case announceError","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/announceerror","type":"case"},{"title":"case announceOk","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/announceok","type":"case"},{"title":"case clientSetup","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/clientsetup","type":"case"},{"type":"case","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/goaway","title":"case goaway"},{"type":"case","title":"case serverSetup","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/serversetup"},{"type":"case","title":"case subscribe","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/subscribe"},{"type":"case","title":"case subscribeAnnounuces","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/subscribeannounuces"},{"type":"case","title":"case subscribeAnnounucesError","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/subscribeannounuceserror"},{"title":"case subscribeAnnounucesOk","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/subscribeannounucesok","type":"case"},{"type":"case","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/subscribedone","title":"case subscribeDone"},{"type":"case","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/subscribeerror","title":"case subscribeError"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/subscribeok","type":"case","title":"case subscribeOk"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/subscribeupdate","type":"case","title":"case subscribeUpdate"},{"title":"case trackStatus","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/trackstatus","type":"case"},{"type":"case","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/trackstatusrequest","title":"case trackStatusRequest"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/unannounce","type":"case","title":"case unannounce"},{"title":"case unsubscribe","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/unsubscribe","type":"case"},{"type":"groupMarker","title":"Initializers"},{"title":"init?(rawValue: Int)","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/init(rawvalue:)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}],"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/equatable-implementations"},{"type":"symbol","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/rawrepresentable-implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/hashvalue","type":"property","title":"var hashValue: Int"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func hash(into: inout Hasher)","type":"method","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/hash(into:)"}],"title":"RawRepresentable Implementations"}],"path":"\/documentation\/moqthaishinkit\/moqtmessagetype"},{"title":"MoQTSetupParameterType","path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"type":"case","title":"case maxSubscribeId","path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/maxsubscribeid"},{"path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/path","title":"case path","type":"case"},{"title":"case role","path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/role","type":"case"},{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/init(rawvalue:)","title":"init?(rawValue: Int)"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","type":"symbol","path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}]},{"path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/rawrepresentable-implementations","type":"symbol","title":"RawRepresentable Implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var hashValue: Int","path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/hashvalue"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}]}],"type":"enum"},{"path":"\/documentation\/moqthaishinkit\/moqtsetuprole","type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/pubsub","type":"case","title":"case pubSub"},{"title":"case publisher","type":"case","path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/publisher"},{"path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/subscriber","title":"case subscriber","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/!=(_:_:)","type":"op"}],"path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/rawrepresentable-implementations","title":"RawRepresentable Implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"type":"property","title":"var hashValue: Int","path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/hashvalue"},{"title":"Instance Methods","type":"groupMarker"},{"type":"method","path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/hash(into:)","title":"func hash(into: inout Hasher)"}],"type":"symbol"}],"title":"MoQTSetupRole"},{"path":"\/documentation\/moqthaishinkit\/moqtversion","type":"enum","title":"MoQTVersion","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"title":"case draft01","path":"\/documentation\/moqthaishinkit\/moqtversion\/draft01","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtversion\/draft02","title":"case draft02","type":"case"},{"title":"case draft03","type":"case","path":"\/documentation\/moqthaishinkit\/moqtversion\/draft03"},{"type":"case","title":"case draft04","path":"\/documentation\/moqthaishinkit\/moqtversion\/draft04"},{"type":"case","title":"case draft05","path":"\/documentation\/moqthaishinkit\/moqtversion\/draft05"},{"path":"\/documentation\/moqthaishinkit\/moqtversion\/draft06","title":"case draft06","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtversion\/draft07","title":"case draft07","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtversion\/draft07exp","title":"case draft07Exp","type":"case"},{"type":"case","path":"\/documentation\/moqthaishinkit\/moqtversion\/draft07exp2","title":"case draft07Exp2"},{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init?(rawValue: Int)","path":"\/documentation\/moqthaishinkit\/moqtversion\/init(rawvalue:)"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/moqthaishinkit\/moqtversion\/!=(_:_:)"}],"path":"\/documentation\/moqthaishinkit\/moqtversion\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"title":"RawRepresentable Implementations","path":"\/documentation\/moqthaishinkit\/moqtversion\/rawrepresentable-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/moqthaishinkit\/moqtversion\/hashvalue","type":"property","title":"var hashValue: Int"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func hash(into: inout Hasher)","path":"\/documentation\/moqthaishinkit\/moqtversion\/hash(into:)"}]}]},{"path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype","type":"enum","title":"MoQTVersionSpecificType","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/authorizationinfo","type":"case","title":"case authorizationInfo"},{"type":"case","title":"case deliveryTimeout","path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/deliverytimeout"},{"type":"case","title":"case maxCacheDuration","path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/maxcacheduration"},{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/init(rawvalue:)","type":"init","title":"init?(rawValue: Int)"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/equatable-implementations","title":"Equatable Implementations","type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/!=(_:_:)","type":"op"}]},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var hashValue: Int","path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/hashvalue"},{"type":"groupMarker","title":"Instance Methods"},{"title":"func hash(into: inout Hasher)","type":"method","path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/hash(into:)"}],"title":"RawRepresentable Implementations","path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/rawrepresentable-implementations","type":"symbol"}]}],"title":"MoQTHaishinKit"},{"path":"\/documentation\/srthaishinkit","title":"SRTHaishinKit","type":"module","children":[{"title":"Classes","type":"groupMarker"},{"path":"\/documentation\/srthaishinkit\/srtconnection","title":"SRTConnection","type":"class","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init()","path":"\/documentation\/srthaishinkit\/srtconnection\/init()","type":"init"},{"type":"groupMarker","title":"Instance Properties"},{"title":"var connected: Bool","path":"\/documentation\/srthaishinkit\/srtconnection\/connected","type":"property"},{"title":"var performanceData: SRTPerformanceData?","type":"property","path":"\/documentation\/srthaishinkit\/srtconnection\/performancedata"},{"path":"\/documentation\/srthaishinkit\/srtconnection\/uri","type":"property","title":"var uri: URL?"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func close() async throws","path":"\/documentation\/srthaishinkit\/srtconnection\/close()","type":"method"},{"path":"\/documentation\/srthaishinkit\/srtconnection\/open(_:mode:)","title":"func open(URL?, mode: SRTMode) async throws","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/srthaishinkit\/srtconnection\/version","title":"static let version: String","type":"property"},{"type":"groupMarker","title":"Enumerations"},{"path":"\/documentation\/srthaishinkit\/srtconnection\/error","title":"SRTConnection.Error","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case failedToConnect(String, reson: Int32)","path":"\/documentation\/srthaishinkit\/srtconnection\/error\/failedtoconnect(_:reson:)","type":"case"},{"title":"case invalidState","type":"case","path":"\/documentation\/srthaishinkit\/srtconnection\/error\/invalidstate"},{"path":"\/documentation\/srthaishinkit\/srtconnection\/error\/unsupporteduri(_:)","title":"case unsupportedUri(URL?)","type":"case"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/srthaishinkit\/srtconnection\/error\/error-implementations","title":"Error Implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"title":"var localizedDescription: String","path":"\/documentation\/srthaishinkit\/srtconnection\/error\/localizeddescription","type":"property"}],"type":"symbol"}],"type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"type":"symbol","title":"Actor Implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/srthaishinkit\/srtconnection\/assertisolated(_:file:line:)","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method"},{"title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","path":"\/documentation\/srthaishinkit\/srtconnection\/assumeisolated(_:file:line:)","type":"method"},{"path":"\/documentation\/srthaishinkit\/srtconnection\/preconditionisolated(_:file:line:)","type":"method","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)"}],"path":"\/documentation\/srthaishinkit\/srtconnection\/actor-implementations"}]},{"type":"class","children":[{"title":"Initializers","type":"groupMarker"},{"type":"init","title":"init(connection: SRTConnection)","path":"\/documentation\/srthaishinkit\/srtstream\/init(connection:)"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/srthaishinkit\/srtstream\/audiotrackid","title":"var audioTrackId: UInt8?","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtstream\/readystate","title":"var readyState: HKStreamReadyState","type":"property"},{"title":"var videoTrackId: UInt8?","path":"\/documentation\/srthaishinkit\/srtstream\/videotrackid","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func close() async","path":"\/documentation\/srthaishinkit\/srtstream\/close()","type":"method"},{"path":"\/documentation\/srthaishinkit\/srtstream\/play(_:)","type":"method","title":"func play(String?) async"},{"title":"func publish(String?) async","type":"method","path":"\/documentation\/srthaishinkit\/srtstream\/publish(_:)"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Instance Methods"},{"title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/srthaishinkit\/srtstream\/assertisolated(_:file:line:)","type":"method"},{"title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","path":"\/documentation\/srthaishinkit\/srtstream\/assumeisolated(_:file:line:)","type":"method"},{"title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method","path":"\/documentation\/srthaishinkit\/srtstream\/preconditionisolated(_:file:line:)"}],"type":"symbol","title":"Actor Implementations","path":"\/documentation\/srthaishinkit\/srtstream\/actor-implementations"},{"type":"symbol","path":"\/documentation\/srthaishinkit\/srtstream\/hkstream-implementations","title":"HKStream Implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/srthaishinkit\/srtstream\/audiosettings","type":"property","title":"var audioSettings: AudioCodecSettings"},{"path":"\/documentation\/srthaishinkit\/srtstream\/soundtransform","type":"property","title":"var soundTransform: SoundTransform?"},{"title":"var videoSettings: VideoCodecSettings","path":"\/documentation\/srthaishinkit\/srtstream\/videosettings","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"type":"method","title":"func addOutput(some HKStreamOutput)","path":"\/documentation\/srthaishinkit\/srtstream\/addoutput(_:)"},{"type":"method","title":"func append(CMSampleBuffer)","path":"\/documentation\/srthaishinkit\/srtstream\/append(_:)"},{"title":"func append(AVAudioBuffer, when: AVAudioTime)","path":"\/documentation\/srthaishinkit\/srtstream\/append(_:when:)","type":"method"},{"path":"\/documentation\/srthaishinkit\/srtstream\/attachaudioplayer(_:)","type":"method","title":"func attachAudioPlayer(AudioPlayer?) async"},{"title":"func dispatch(NetworkMonitorEvent) async","path":"\/documentation\/srthaishinkit\/srtstream\/dispatch(_:)","type":"method"},{"path":"\/documentation\/srthaishinkit\/srtstream\/removeoutput(_:)","type":"method","title":"func removeOutput(some HKStreamOutput)"},{"path":"\/documentation\/srthaishinkit\/srtstream\/setaudiosettings(_:)","type":"method","title":"func setAudioSettings(AudioCodecSettings)"},{"title":"func setBitrateStorategy((some HKStreamBitRateStrategy)?)","path":"\/documentation\/srthaishinkit\/srtstream\/setbitratestorategy(_:)","type":"method"},{"path":"\/documentation\/srthaishinkit\/srtstream\/setsoundtransform(_:)","type":"method","title":"func setSoundTransform(SoundTransform) async"},{"path":"\/documentation\/srthaishinkit\/srtstream\/setvideoinputbuffercounts(_:)","title":"func setVideoInputBufferCounts(Int)","type":"method"},{"type":"method","path":"\/documentation\/srthaishinkit\/srtstream\/setvideosettings(_:)","title":"func setVideoSettings(VideoCodecSettings)"}]},{"path":"\/documentation\/srthaishinkit\/srtstream\/mediamixeroutput-implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/srthaishinkit\/srtstream\/mixer(_:didoutput:)","type":"method","title":"func mixer(MediaMixer, didOutput: CMSampleBuffer)"},{"path":"\/documentation\/srthaishinkit\/srtstream\/mixer(_:didoutput:when:)","type":"method","title":"func mixer(MediaMixer, didOutput: AVAudioPCMBuffer, when: AVAudioTime)"},{"path":"\/documentation\/srthaishinkit\/srtstream\/selecttrack(_:mediatype:)","type":"method","title":"func selectTrack(UInt8?, mediaType: CMFormatDescription.MediaType)"}],"title":"MediaMixerOutput Implementations","type":"symbol"}],"path":"\/documentation\/srthaishinkit\/srtstream","title":"SRTStream"},{"type":"groupMarker","title":"Structures"},{"title":"SRTLogger","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var functionalAreas: Set<SRTLogFunctionalArea>","type":"property","path":"\/documentation\/srthaishinkit\/srtlogger\/functionalareas"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtlogger\/level","title":"var level: SRTLogLevel"},{"type":"groupMarker","title":"Type Properties"},{"title":"static let shared: SRTLogger","path":"\/documentation\/srthaishinkit\/srtlogger\/shared","type":"property"}],"type":"struct","path":"\/documentation\/srthaishinkit\/srtlogger"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata","type":"struct","children":[{"type":"groupMarker","title":"Instance Properties"},{"title":"let byteAvailRcvBuf: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/byteavailrcvbuf","type":"property"},{"type":"property","title":"let byteAvailSndBuf: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/byteavailsndbuf"},{"type":"property","title":"let byteMSS: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytemss"},{"type":"property","title":"let byteRcvBuf: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytercvbuf"},{"title":"let byteRcvDrop: UInt64","type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytercvdrop"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytercvdroptotal","type":"property","title":"let byteRcvDropTotal: UInt64"},{"type":"property","title":"let byteRcvLoss: UInt64","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytercvloss"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytercvlosstotal","type":"property","title":"let byteRcvLossTotal: UInt64"},{"title":"let byteRcvUndecrypt: UInt64","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytercvundecrypt","type":"property"},{"type":"property","title":"let byteRcvUndecryptTotal: UInt64","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytercvundecrypttotal"},{"title":"let byteRecv: UInt64","path":"\/documentation\/srthaishinkit\/srtperformancedata\/byterecv","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/byterecvtotal","title":"let byteRecvTotal: UInt64","type":"property"},{"title":"let byteRetrans: UInt64","path":"\/documentation\/srthaishinkit\/srtperformancedata\/byteretrans","type":"property"},{"type":"property","title":"let byteRetransTotal: UInt64","path":"\/documentation\/srthaishinkit\/srtperformancedata\/byteretranstotal"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytesent","type":"property","title":"let byteSent: UInt64"},{"type":"property","title":"let byteSentTotal: UInt64","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytesenttotal"},{"title":"let byteSndBuf: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytesndbuf","type":"property"},{"type":"property","title":"let byteSndDrop: UInt64","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytesnddrop"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytesnddroptotal","type":"property","title":"let byteSndDropTotal: UInt64"},{"type":"property","title":"let mbpsBandwidth: Double","path":"\/documentation\/srthaishinkit\/srtperformancedata\/mbpsbandwidth"},{"title":"let mbpsMaxBW: Double","path":"\/documentation\/srthaishinkit\/srtperformancedata\/mbpsmaxbw","type":"property"},{"type":"property","title":"let mbpsRecvRate: Double","path":"\/documentation\/srthaishinkit\/srtperformancedata\/mbpsrecvrate"},{"type":"property","title":"let mbpsSendRate: Double","path":"\/documentation\/srthaishinkit\/srtperformancedata\/mbpssendrate"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/msrtt","title":"let msRTT: Double","type":"property"},{"title":"let msRcvBuf: Int32","type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/msrcvbuf"},{"type":"property","title":"let msRcvTsbPdDelay: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/msrcvtsbpddelay"},{"title":"let msSndBuf: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/mssndbuf","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/mssndtsbpddelay","type":"property","title":"let msSndTsbPdDelay: Int32"},{"type":"property","title":"let msTimeStamp: Int64","path":"\/documentation\/srthaishinkit\/srtperformancedata\/mstimestamp"},{"type":"property","title":"let pktCongestionWindow: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktcongestionwindow"},{"title":"let pktFlightSize: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktflightsize","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktflowwindow","title":"let pktFlowWindow: Int32","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvavgbelatedtime","title":"let pktRcvAvgBelatedTime: Double","type":"property"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvbelated","title":"let pktRcvBelated: Int64"},{"title":"let pktRcvBuf: Int32","type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvbuf"},{"type":"property","title":"let pktRcvDrop: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvdrop"},{"title":"let pktRcvDropTotal: Int32","type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvdroptotal"},{"type":"property","title":"let pktRcvFilterExtra: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvfilterextra"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvfilterextratotal","type":"property","title":"let pktRcvFilterExtraTotal: Int32"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvfilterloss","title":"let pktRcvFilterLoss: Int32","type":"property"},{"type":"property","title":"let pktRcvFilterLossTotal: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvfilterlosstotal"},{"type":"property","title":"let pktRcvFilterSupply: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvfiltersupply"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvfiltersupplytotal","title":"let pktRcvFilterSupplyTotal: Int32"},{"type":"property","title":"let pktRcvLoss: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvloss"},{"title":"let pktRcvLossTotal: Int32","type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvlosstotal"},{"title":"let pktRcvRetrans: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvretrans","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvundecrypt","title":"let pktRcvUndecrypt: Int32","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvundecrypttotal","type":"property","title":"let pktRcvUndecryptTotal: Int32"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrecv","type":"property","title":"let pktRecv: Int64"},{"title":"let pktRecvACK: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrecvack","type":"property"},{"type":"property","title":"let pktRecvACKTotal: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrecvacktotal"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrecvnak","title":"let pktRecvNAK: Int32"},{"type":"property","title":"let pktRecvNAKTotal: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrecvnaktotal"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrecvtotal","type":"property","title":"let pktRecvTotal: Int64"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktreorderdistance","title":"let pktReorderDistance: Int32","type":"property"},{"title":"let pktReorderTolerance: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktreordertolerance","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktretrans","type":"property","title":"let pktRetrans: Int32"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktretranstotal","title":"let pktRetransTotal: Int32","type":"property"},{"title":"let pktSent: Int64","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsent","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsentack","type":"property","title":"let pktSentACK: Int32"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsentacktotal","title":"let pktSentACKTotal: Int32","type":"property"},{"title":"let pktSentNAK: Int32","type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsentnak"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsentnaktotal","title":"let pktSentNAKTotal: Int32","type":"property"},{"title":"let pktSentTotal: Int64","type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsenttotal"},{"title":"let pktSndBuf: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsndbuf","type":"property"},{"title":"let pktSndDrop: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsnddrop","type":"property"},{"type":"property","title":"let pktSndDropTotal: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsnddroptotal"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsndfilterextra","title":"let pktSndFilterExtra: Int32","type":"property"},{"type":"property","title":"let pktSndFilterExtraTotal: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsndfilterextratotal"},{"title":"let pktSndLoss: Int32","type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsndloss"},{"title":"let pktSndLossTotal: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsndlosstotal","type":"property"},{"title":"let usPktSndPeriod: Double","path":"\/documentation\/srthaishinkit\/srtperformancedata\/uspktsndperiod","type":"property"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/ussndduration","title":"let usSndDuration: Int64"},{"type":"property","title":"let usSndDurationTotal: Int64","path":"\/documentation\/srthaishinkit\/srtperformancedata\/ussnddurationtotal"}],"title":"SRTPerformanceData"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"type":"case","title":"case apiCtrl","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/apictrl"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/apirecv","title":"case apiRecv","type":"case"},{"type":"case","title":"case apiSend","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/apisend"},{"title":"case applog","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/applog","type":"case"},{"title":"case bstats","type":"case","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/bstats"},{"type":"case","title":"case bufRecv","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/bufrecv"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/bufsend","type":"case","title":"case bufSend"},{"title":"case chanRecv","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/chanrecv","type":"case"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/chnmgmt","title":"case chnMgmt","type":"case"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/chnsend","title":"case chnSend","type":"case"},{"title":"case congest","type":"case","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/congest"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/control","title":"case control","type":"case"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/data","type":"case","title":"case data"},{"type":"case","title":"case epollApi","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/epollapi"},{"type":"case","title":"case epollUpd","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/epollupd"},{"type":"case","title":"case general","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/general"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/grpmgmt","type":"case","title":"case grpMgmt"},{"title":"case grpRecv","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/grprecv","type":"case"},{"title":"case grpSend","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/grpsend","type":"case"},{"title":"case haicrypt","type":"case","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/haicrypt"},{"title":"case `internal`","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/internal","type":"case"},{"title":"case pfilter","type":"case","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/pfilter"},{"type":"case","title":"case queCtrl","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/quectrl"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/quemgmt","type":"case","title":"case queMgmt"},{"type":"case","title":"case queRecv","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/querecv"},{"title":"case queSend","type":"case","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/quesend"},{"title":"case rsrc","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/rsrc","type":"case"},{"title":"case tsbpd","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/tsbpd","type":"case"},{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/init(rawvalue:)","title":"init?(rawValue: Int32)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/equatable-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}]},{"title":"RawRepresentable Implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/hashvalue","title":"var hashValue: Int"},{"type":"groupMarker","title":"Instance Methods"},{"title":"func hash(into: inout Hasher)","type":"method","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/hash(into:)"}],"type":"symbol","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/rawrepresentable-implementations"}],"type":"enum","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea","title":"SRTLogFunctionalArea"},{"path":"\/documentation\/srthaishinkit\/srtloglevel","title":"SRTLogLevel","type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/srthaishinkit\/srtloglevel\/crit","type":"case","title":"case crit"},{"path":"\/documentation\/srthaishinkit\/srtloglevel\/debug","type":"case","title":"case debug"},{"title":"case error","path":"\/documentation\/srthaishinkit\/srtloglevel\/error","type":"case"},{"title":"case notice","path":"\/documentation\/srthaishinkit\/srtloglevel\/notice","type":"case"},{"type":"case","title":"case warning","path":"\/documentation\/srthaishinkit\/srtloglevel\/warning"},{"title":"Default Implementations","type":"groupMarker"},{"type":"symbol","title":"Equatable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/srthaishinkit\/srtloglevel\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}],"path":"\/documentation\/srthaishinkit\/srtloglevel\/equatable-implementations"}]},{"type":"enum","title":"SRTMode","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case caller","path":"\/documentation\/srthaishinkit\/srtmode\/caller","type":"case"},{"path":"\/documentation\/srthaishinkit\/srtmode\/listener","type":"case","title":"case listener"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/srthaishinkit\/srtmode\/equatable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/srthaishinkit\/srtmode\/!=(_:_:)"}],"type":"symbol","title":"Equatable Implementations"}],"path":"\/documentation\/srthaishinkit\/srtmode"}]}]},"schemaVersion":{"major":0,"minor":1,"patch":2}}