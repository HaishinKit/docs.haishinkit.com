{"interfaceLanguages":{"swift":[{"type":"module","title":"Logboard","path":"\/documentation\/logboard","children":[{"type":"groupMarker","title":"Classes"},{"children":[{"type":"groupMarker","title":"Initializers"},{"title":"init()","path":"\/documentation\/logboard\/consoleappender\/init()","type":"init"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func append(LBLogger, level: LBLogger.Level, format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/consoleappender\/append(_:level:format:arguments:file:function:line:)"},{"type":"method","path":"\/documentation\/logboard\/consoleappender\/append(_:level:message:file:function:line:)","title":"func append(LBLogger, level: LBLogger.Level, message: [Any], file: StaticString, function: StaticString, line: Int)"}],"type":"class","title":"ConsoleAppender","path":"\/documentation\/logboard\/consoleappender"},{"type":"class","children":[{"title":"Structures","type":"groupMarker"},{"type":"struct","title":"LBLogger.Data","path":"\/documentation\/logboard\/lblogger\/data","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/logboard\/lblogger\/data\/init(_:)","type":"init","title":"init?(Data)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/logboard\/lblogger\/data\/date","title":"let date: Date"},{"path":"\/documentation\/logboard\/lblogger\/data\/file","title":"let file: String","type":"property"},{"path":"\/documentation\/logboard\/lblogger\/data\/function","title":"let function: String","type":"property"},{"title":"let identifier: String","type":"property","path":"\/documentation\/logboard\/lblogger\/data\/identifier"},{"path":"\/documentation\/logboard\/lblogger\/data\/level","type":"property","title":"let level: LBLogger.Level"},{"title":"let line: Int","path":"\/documentation\/logboard\/lblogger\/data\/line","type":"property"},{"title":"let message: String","path":"\/documentation\/logboard\/lblogger\/data\/message","type":"property"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","title":"CustomStringConvertible Implementations","path":"\/documentation\/logboard\/lblogger\/data\/customstringconvertible-implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var description: String","path":"\/documentation\/logboard\/lblogger\/data\/description"}]}]},{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/logboard\/lblogger\/init(_:)","type":"init","title":"init(String)"},{"type":"groupMarker","title":"Instance Properties"},{"title":"var appender: any LBLoggerAppender","path":"\/documentation\/logboard\/lblogger\/appender","type":"property"},{"type":"property","path":"\/documentation\/logboard\/lblogger\/identifier","title":"let identifier: String"},{"type":"property","title":"var level: LBLogger.Level","path":"\/documentation\/logboard\/lblogger\/level-swift.property"},{"title":"Instance Methods","type":"groupMarker"},{"type":"method","title":"func debug(Any..., file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/lblogger\/debug(_:file:function:line:)"},{"title":"func debug(format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/lblogger\/debug(format:arguments:file:function:line:)","type":"method"},{"title":"func error(Any..., file: StaticString, function: StaticString, line: Int)","type":"method","path":"\/documentation\/logboard\/lblogger\/error(_:file:function:line:)"},{"title":"func error(format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/lblogger\/error(format:arguments:file:function:line:)","type":"method"},{"type":"method","title":"func info(Any..., file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/lblogger\/info(_:file:function:line:)"},{"title":"func info(format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/lblogger\/info(format:arguments:file:function:line:)","type":"method"},{"title":"func isEnabledFor(level: LBLogger.Level) -> Bool","path":"\/documentation\/logboard\/lblogger\/isenabledfor(level:)","type":"method"},{"type":"method","path":"\/documentation\/logboard\/lblogger\/trace(_:file:function:line:)","title":"func trace(Any..., file: StaticString, function: StaticString, line: Int)"},{"title":"func trace(format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/lblogger\/trace(format:arguments:file:function:line:)","type":"method"},{"path":"\/documentation\/logboard\/lblogger\/warn(_:file:function:line:)","title":"func warn(Any..., file: StaticString, function: StaticString, line: Int)","type":"method"},{"type":"method","path":"\/documentation\/logboard\/lblogger\/warn(format:arguments:file:function:line:)","title":"func warn(format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)"},{"type":"groupMarker","title":"Type Properties"},{"title":"static var dateFormatter: DateFormatter","path":"\/documentation\/logboard\/lblogger\/dateformatter","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/logboard\/lblogger\/with(_:)","title":"static func with(String) -> LBLogger","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"path":"\/documentation\/logboard\/lblogger\/level-swift.enum","type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"title":"case debug","type":"case","path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/debug"},{"path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/error","type":"case","title":"case error"},{"path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/info","title":"case info","type":"case"},{"type":"case","title":"case trace","path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/trace"},{"title":"case warn","type":"case","path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/warn"},{"title":"Initializers","type":"groupMarker"},{"type":"init","path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/init(rawvalue:)","title":"init?(rawValue: Int)"},{"path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/init(string:)","type":"init","title":"init?(string: String)"},{"title":"Instance Properties","type":"groupMarker"},{"type":"property","path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/description","title":"var description: String"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Operators"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/!=(_:_:)","type":"op"}],"title":"Equatable Implementations","path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/equatable-implementations","type":"symbol"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var hashValue: Int","path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/hashvalue"},{"title":"Instance Methods","type":"groupMarker"},{"type":"method","title":"func hash(into: inout Hasher)","path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/hash(into:)"}],"path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/rawrepresentable-implementations","type":"symbol","title":"RawRepresentable Implementations"}],"title":"LBLogger.Level"}],"title":"LBLogger","path":"\/documentation\/logboard\/lblogger"},{"path":"\/documentation\/logboard\/multiappender","title":"MultiAppender","type":"class","children":[{"type":"groupMarker","title":"Initializers"},{"title":"init()","type":"init","path":"\/documentation\/logboard\/multiappender\/init()"},{"title":"Instance Properties","type":"groupMarker"},{"type":"property","title":"var appenders: [any LBLoggerAppender]","path":"\/documentation\/logboard\/multiappender\/appenders"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/logboard\/multiappender\/append(_:level:format:arguments:file:function:line:)","title":"func append(LBLogger, level: LBLogger.Level, format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)"},{"path":"\/documentation\/logboard\/multiappender\/append(_:level:message:file:function:line:)","title":"func append(LBLogger, level: LBLogger.Level, message: [Any], file: StaticString, function: StaticString, line: Int)","type":"method"}]},{"type":"class","title":"NullAppender","children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/logboard\/nullappender\/append(_:level:format:arguments:file:function:line:)","title":"func append(LBLogger, level: LBLogger.Level, format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)","type":"method"},{"type":"method","title":"func append(LBLogger, level: LBLogger.Level, message: [Any], file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/nullappender\/append(_:level:message:file:function:line:)"},{"title":"Type Properties","type":"groupMarker"},{"title":"static let shared: NullAppender","path":"\/documentation\/logboard\/nullappender\/shared","type":"property"}],"path":"\/documentation\/logboard\/nullappender"},{"title":"OSLoggerAppender","type":"class","path":"\/documentation\/logboard\/osloggerappender","children":[{"type":"groupMarker","title":"Initializers"},{"title":"init(sybsystem: String, category: String)","path":"\/documentation\/logboard\/osloggerappender\/init(sybsystem:category:)","type":"init"},{"type":"groupMarker","title":"Instance Methods"},{"title":"func append(LBLogger, level: LBLogger.Level, format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)","type":"method","path":"\/documentation\/logboard\/osloggerappender\/append(_:level:format:arguments:file:function:line:)"},{"path":"\/documentation\/logboard\/osloggerappender\/append(_:level:message:file:function:line:)","type":"method","title":"func append(LBLogger, level: LBLogger.Level, message: [Any], file: StaticString, function: StaticString, line: Int)"}]},{"title":"SocketAppender","path":"\/documentation\/logboard\/socketappender","type":"class","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init()","path":"\/documentation\/logboard\/socketappender\/init()"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/logboard\/socketappender\/append(_:level:format:arguments:file:function:line:)","type":"method","title":"func append(LBLogger, level: LBLogger.Level, format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)"},{"title":"func append(LBLogger, level: LBLogger.Level, message: [Any], file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/socketappender\/append(_:level:message:file:function:line:)","type":"method"},{"title":"func close()","path":"\/documentation\/logboard\/socketappender\/close()","type":"method"},{"title":"func connect(String, port: Int)","path":"\/documentation\/logboard\/socketappender\/connect(_:port:)","type":"method"}]},{"type":"groupMarker","title":"Protocols"},{"title":"LBLoggerAppender","children":[{"type":"groupMarker","title":"Instance Methods"},{"title":"func append(LBLogger, level: LBLogger.Level, format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/lbloggerappender\/append(_:level:format:arguments:file:function:line:)","type":"method"},{"title":"func append(LBLogger, level: LBLogger.Level, message: [Any], file: StaticString, function: StaticString, line: Int)","type":"method","path":"\/documentation\/logboard\/lbloggerappender\/append(_:level:message:file:function:line:)"}],"type":"protocol","path":"\/documentation\/logboard\/lbloggerappender"}]},{"children":[{"title":"Articles","type":"groupMarker"},{"title":"Enhanced RTMP","path":"\/documentation\/haishinkit\/e-rtmp","type":"article"},{"type":"groupMarker","title":"Classes"},{"path":"\/documentation\/haishinkit\/assetscreenobject","type":"class","children":[{"title":"Instance Properties","type":"groupMarker"},{"type":"property","title":"var chromaKeyColor: CGColor?","path":"\/documentation\/haishinkit\/assetscreenobject\/chromakeycolor"},{"title":"var isReading: Bool","path":"\/documentation\/haishinkit\/assetscreenobject\/isreading","type":"property"},{"title":"var videoGravity: AVLayerVideoGravity","type":"property","path":"\/documentation\/haishinkit\/assetscreenobject\/videogravity"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/assetscreenobject\/cancelreading()","title":"func cancelReading()","type":"method"},{"title":"func makeBounds(CGSize) -> CGRect","type":"method","path":"\/documentation\/haishinkit\/assetscreenobject\/makebounds(_:)"},{"type":"method","path":"\/documentation\/haishinkit\/assetscreenobject\/makeimage(_:)","title":"func makeImage(some ScreenRenderer) -> CGImage?"},{"path":"\/documentation\/haishinkit\/assetscreenobject\/startreading(_:)","type":"method","title":"func startReading(AVAsset) throws"}],"title":"AssetScreenObject"},{"path":"\/documentation\/haishinkit\/audiodeviceunit","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var connection: AVCaptureConnection?","path":"\/documentation\/haishinkit\/audiodeviceunit\/connection"},{"title":"var device: AVCaptureDevice?","path":"\/documentation\/haishinkit\/audiodeviceunit\/device","type":"property"},{"path":"\/documentation\/haishinkit\/audiodeviceunit\/input","title":"var input: AVCaptureInput?","type":"property"},{"type":"property","title":"var output: AudioDeviceUnit.Output?","path":"\/documentation\/haishinkit\/audiodeviceunit\/output-swift.property"},{"title":"let track: UInt8","path":"\/documentation\/haishinkit\/audiodeviceunit\/track","type":"property"},{"type":"groupMarker","title":"Type Aliases"},{"title":"AudioDeviceUnit.Output","path":"\/documentation\/haishinkit\/audiodeviceunit\/output-swift.typealias","type":"typealias"}],"title":"AudioDeviceUnit","type":"class"},{"title":"AudioPlayer","type":"class","children":[{"title":"Initializers","type":"groupMarker"},{"type":"init","title":"init(audioEngine: AVAudioEngine)","path":"\/documentation\/haishinkit\/audioplayer\/init(audioengine:)"},{"title":"Default Implementations","type":"groupMarker"},{"type":"symbol","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/haishinkit\/audioplayer\/assertisolated(_:file:line:)","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)"},{"type":"method","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","path":"\/documentation\/haishinkit\/audioplayer\/assumeisolated(_:file:line:)"},{"path":"\/documentation\/haishinkit\/audioplayer\/preconditionisolated(_:file:line:)","type":"method","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)"}],"path":"\/documentation\/haishinkit\/audioplayer\/actor-implementations","title":"Actor Implementations"}],"path":"\/documentation\/haishinkit\/audioplayer"},{"children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(some HKStream)","type":"init","path":"\/documentation\/haishinkit\/hkincomingstream\/init(_:)"},{"title":"Instance Properties","type":"groupMarker"},{"type":"property","title":"var isRunning: Bool","path":"\/documentation\/haishinkit\/hkincomingstream\/isrunning"},{"type":"property","title":"var soundTransfrom: SoundTransform?","path":"\/documentation\/haishinkit\/hkincomingstream\/soundtransfrom"},{"title":"Instance Methods","type":"groupMarker"},{"type":"method","title":"func append(CMSampleBuffer)","path":"\/documentation\/haishinkit\/hkincomingstream\/append(_:)"},{"title":"func append(AVAudioBuffer, when: AVAudioTime)","path":"\/documentation\/haishinkit\/hkincomingstream\/append(_:when:)","type":"method"},{"title":"func attachAudioPlayer(AudioPlayer?) async","type":"method","path":"\/documentation\/haishinkit\/hkincomingstream\/attachaudioplayer(_:)"},{"path":"\/documentation\/haishinkit\/hkincomingstream\/setsoundtransform(_:)","type":"method","title":"func setSoundTransform(SoundTransform) async"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Actor Implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"type":"method","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/haishinkit\/hkincomingstream\/assertisolated(_:file:line:)"},{"path":"\/documentation\/haishinkit\/hkincomingstream\/assumeisolated(_:file:line:)","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","type":"method"},{"title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method","path":"\/documentation\/haishinkit\/hkincomingstream\/preconditionisolated(_:file:line:)"}],"type":"symbol","path":"\/documentation\/haishinkit\/hkincomingstream\/actor-implementations"},{"title":"AsyncRunner Implementations","path":"\/documentation\/haishinkit\/hkincomingstream\/asyncrunner-implementations","type":"symbol","children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/hkincomingstream\/startrunning()","type":"method","title":"func startRunning()"},{"title":"func stopRunning()","path":"\/documentation\/haishinkit\/hkincomingstream\/stoprunning()","type":"method"}]}],"title":"HKIncomingStream","type":"class","path":"\/documentation\/haishinkit\/hkincomingstream"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/hkoutgoingstream\/init()","type":"init","title":"init()"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var audioInputFormat: CMFormatDescription?","path":"\/documentation\/haishinkit\/hkoutgoingstream\/audioinputformat","type":"property"},{"path":"\/documentation\/haishinkit\/hkoutgoingstream\/audiooutputstream","title":"var audioOutputStream: AsyncStream<(AVAudioBuffer, AVAudioTime)>","type":"property"},{"title":"var audioSettings: AudioCodecSettings","path":"\/documentation\/haishinkit\/hkoutgoingstream\/audiosettings","type":"property"},{"type":"property","title":"var isRunning: Bool","path":"\/documentation\/haishinkit\/hkoutgoingstream\/isrunning"},{"type":"property","title":"var videoInputBufferCounts: Int","path":"\/documentation\/haishinkit\/hkoutgoingstream\/videoinputbuffercounts"},{"type":"property","path":"\/documentation\/haishinkit\/hkoutgoingstream\/videoinputformat","title":"var videoInputFormat: CMFormatDescription?"},{"type":"property","path":"\/documentation\/haishinkit\/hkoutgoingstream\/videoinputstream","title":"var videoInputStream: AsyncStream<CMSampleBuffer>"},{"title":"var videoOutputStream: AsyncStream<CMSampleBuffer>","path":"\/documentation\/haishinkit\/hkoutgoingstream\/videooutputstream","type":"property"},{"title":"var videoSettings: VideoCodecSettings","path":"\/documentation\/haishinkit\/hkoutgoingstream\/videosettings","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/hkoutgoingstream\/append(_:)","title":"func append(CMSampleBuffer)","type":"method"},{"path":"\/documentation\/haishinkit\/hkoutgoingstream\/append(_:when:)","title":"func append(AVAudioBuffer, when: AVAudioTime)","type":"method"},{"path":"\/documentation\/haishinkit\/hkoutgoingstream\/append(video:)","type":"method","title":"func append(video: CMSampleBuffer)"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","children":[{"title":"Instance Methods","type":"groupMarker"},{"type":"method","title":"func startRunning()","path":"\/documentation\/haishinkit\/hkoutgoingstream\/startrunning()"},{"title":"func stopRunning()","type":"method","path":"\/documentation\/haishinkit\/hkoutgoingstream\/stoprunning()"}],"title":"Runner Implementations","path":"\/documentation\/haishinkit\/hkoutgoingstream\/runner-implementations"}],"type":"class","path":"\/documentation\/haishinkit\/hkoutgoingstream","title":"HKOutgoingStream"},{"type":"class","title":"HKStreamRecorder","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init()","path":"\/documentation\/haishinkit\/hkstreamrecorder\/init()","type":"init"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var audioTrackId: UInt8?","path":"\/documentation\/haishinkit\/hkstreamrecorder\/audiotrackid"},{"type":"property","title":"var isRecording: Bool","path":"\/documentation\/haishinkit\/hkstreamrecorder\/isrecording"},{"title":"var movieFragmentInterval: Double?","path":"\/documentation\/haishinkit\/hkstreamrecorder\/moviefragmentinterval","type":"property"},{"type":"property","path":"\/documentation\/haishinkit\/hkstreamrecorder\/moviesdirectory","title":"var moviesDirectory: URL"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/outputurl","title":"var outputURL: URL?","type":"property"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/settings","title":"var settings: [AVMediaType : [String : any Sendable]]","type":"property"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/videotrackid","title":"var videoTrackId: UInt8?","type":"property"},{"type":"groupMarker","title":"Instance Methods"},{"title":"func selectTrack(UInt8?, mediaType: CMFormatDescription.MediaType)","path":"\/documentation\/haishinkit\/hkstreamrecorder\/selecttrack(_:mediatype:)","type":"method"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/setmoviefragmentinterval(_:)","type":"method","title":"func setMovieFragmentInterval(Double?)"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/setmoviefragmentinterval(moviefragmentinterval:)","title":"func setMovieFragmentInterval(movieFragmentInterval: Double?)","type":"method"},{"type":"method","path":"\/documentation\/haishinkit\/hkstreamrecorder\/startrecording(_:settings:)","title":"func startRecording(URL?, settings: [AVMediaType : [String : any Sendable]]) async throws"},{"title":"func stopRecording() async throws -> URL","path":"\/documentation\/haishinkit\/hkstreamrecorder\/stoprecording()","type":"method"},{"type":"groupMarker","title":"Type Properties"},{"title":"static let defaultSettings: [AVMediaType : [String : any Sendable]]","type":"property","path":"\/documentation\/haishinkit\/hkstreamrecorder\/defaultsettings"},{"title":"Enumerations","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/error","type":"enum","title":"HKStreamRecorder.Error","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","path":"\/documentation\/haishinkit\/hkstreamrecorder\/error\/failedtoappend(error:)","title":"case failedToAppend(error: (any Error)?)"},{"type":"case","path":"\/documentation\/haishinkit\/hkstreamrecorder\/error\/failedtocreateassetwriter(error:)","title":"case failedToCreateAssetWriter(error: any Error)"},{"title":"case failedToCreateAssetWriterInput(error: any Error)","path":"\/documentation\/haishinkit\/hkstreamrecorder\/error\/failedtocreateassetwriterinput(error:)","type":"case"},{"title":"case failedToFinishWriting(error: (any Error)?)","type":"case","path":"\/documentation\/haishinkit\/hkstreamrecorder\/error\/failedtofinishwriting(error:)"},{"type":"case","title":"case fileAlreadyExists(outputURL: URL)","path":"\/documentation\/haishinkit\/hkstreamrecorder\/error\/filealreadyexists(outputurl:)"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/error\/invalidstate","title":"case invalidState","type":"case"},{"title":"case notSupportedFileType(pathExtension: String)","path":"\/documentation\/haishinkit\/hkstreamrecorder\/error\/notsupportedfiletype(pathextension:)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/haishinkit\/hkstreamrecorder\/error\/localizeddescription","title":"var localizedDescription: String"}],"path":"\/documentation\/haishinkit\/hkstreamrecorder\/error\/error-implementations","type":"symbol","title":"Error Implementations"}]},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/actor-implementations","children":[{"type":"groupMarker","title":"Instance Methods"},{"title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method","path":"\/documentation\/haishinkit\/hkstreamrecorder\/assertisolated(_:file:line:)"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/assumeisolated(_:file:line:)","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","type":"method"},{"title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method","path":"\/documentation\/haishinkit\/hkstreamrecorder\/preconditionisolated(_:file:line:)"}],"type":"symbol","title":"Actor Implementations"},{"title":"HKStreamOutput Implementations","type":"symbol","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func stream(some HKStream, didOutput: CMSampleBuffer)","path":"\/documentation\/haishinkit\/hkstreamrecorder\/stream(_:didoutput:)","type":"method"},{"title":"func stream(some HKStream, didOutput: AVAudioBuffer, when: AVAudioTime)","type":"method","path":"\/documentation\/haishinkit\/hkstreamrecorder\/stream(_:didoutput:when:)"}],"path":"\/documentation\/haishinkit\/hkstreamrecorder\/hkstreamoutput-implementations"},{"title":"MediaMixerOutput Implementations","children":[{"type":"groupMarker","title":"Instance Methods"},{"title":"func mixer(MediaMixer, didOutput: CMSampleBuffer)","type":"method","path":"\/documentation\/haishinkit\/hkstreamrecorder\/mixer(_:didoutput:)"},{"type":"method","path":"\/documentation\/haishinkit\/hkstreamrecorder\/mixer(_:didoutput:when:)","title":"func mixer(MediaMixer, didOutput: AVAudioPCMBuffer, when: AVAudioTime)"}],"type":"symbol","path":"\/documentation\/haishinkit\/hkstreamrecorder\/mediamixeroutput-implementations"}],"path":"\/documentation\/haishinkit\/hkstreamrecorder"},{"title":"HKStreamVideoAdaptiveBitRateStrategy","path":"\/documentation\/haishinkit\/hkstreamvideoadaptivebitratestrategy","type":"class","children":[{"title":"Initializers","type":"groupMarker"},{"type":"init","title":"init(mamimumVideoBitrate: Int)","path":"\/documentation\/haishinkit\/hkstreamvideoadaptivebitratestrategy\/init(mamimumvideobitrate:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let mamimumAudioBitRate: Int","path":"\/documentation\/haishinkit\/hkstreamvideoadaptivebitratestrategy\/mamimumaudiobitrate","type":"property"},{"title":"let mamimumVideoBitRate: Int","path":"\/documentation\/haishinkit\/hkstreamvideoadaptivebitratestrategy\/mamimumvideobitrate","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"type":"method","title":"func adjustBitrate(NetworkMonitorEvent, stream: some HKStream) async","path":"\/documentation\/haishinkit\/hkstreamvideoadaptivebitratestrategy\/adjustbitrate(_:stream:)"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/hkstreamvideoadaptivebitratestrategy\/statuscountsthreshold","title":"static let statusCountsThreshold: Int","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/hkstreamvideoadaptivebitratestrategy\/actor-implementations","children":[{"type":"groupMarker","title":"Instance Methods"},{"title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/haishinkit\/hkstreamvideoadaptivebitratestrategy\/assertisolated(_:file:line:)","type":"method"},{"title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","type":"method","path":"\/documentation\/haishinkit\/hkstreamvideoadaptivebitratestrategy\/assumeisolated(_:file:line:)"},{"type":"method","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/haishinkit\/hkstreamvideoadaptivebitratestrategy\/preconditionisolated(_:file:line:)"}],"title":"Actor Implementations","type":"symbol"}]},{"title":"ImageScreenObject","type":"class","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var cgImage: CGImage?","path":"\/documentation\/haishinkit\/imagescreenobject\/cgimage","type":"property"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/haishinkit\/imagescreenobject\/makebounds(_:)","title":"func makeBounds(CGSize) -> CGRect"},{"type":"method","title":"func makeImage(some ScreenRenderer) -> CGImage?","path":"\/documentation\/haishinkit\/imagescreenobject\/makeimage(_:)"}],"path":"\/documentation\/haishinkit\/imagescreenobject"},{"children":[{"type":"groupMarker","title":"Initializers"},{"title":"init(coder: NSCoder)","path":"\/documentation\/haishinkit\/mthkview\/init(coder:)","type":"init"},{"title":"init(frame: CGRect)","path":"\/documentation\/haishinkit\/mthkview\/init(frame:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/mthkview\/audiotrackid","type":"property","title":"var audioTrackId: UInt8?"},{"path":"\/documentation\/haishinkit\/mthkview\/videogravity","title":"var videoGravity: AVLayerVideoGravity","type":"property"},{"title":"var videoTrackId: UInt8?","type":"property","path":"\/documentation\/haishinkit\/mthkview\/videotrackid"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/mthkview\/awakefromnib()","title":"func awakeFromNib()","type":"method"},{"path":"\/documentation\/haishinkit\/mthkview\/draw(_:)","type":"method","title":"func draw(CGRect)"},{"title":"func registerVideoEffect(some VideoEffect) -> Bool","path":"\/documentation\/haishinkit\/mthkview\/registervideoeffect(_:)","type":"method"},{"path":"\/documentation\/haishinkit\/mthkview\/unregistervideoeffect(_:)","type":"method","title":"func unregisterVideoEffect(some VideoEffect) -> Bool"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/haishinkit\/mthkview\/hkstreamoutput-implementations","title":"HKStreamOutput Implementations","type":"symbol","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func stream(some HKStream, didOutput: CMSampleBuffer)","path":"\/documentation\/haishinkit\/mthkview\/stream(_:didoutput:)","type":"method"},{"title":"func stream(some HKStream, didOutput: AVAudioBuffer, when: AVAudioTime)","path":"\/documentation\/haishinkit\/mthkview\/stream(_:didoutput:when:)","type":"method"}]},{"path":"\/documentation\/haishinkit\/mthkview\/mediamixeroutput-implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"type":"method","title":"func mixer(MediaMixer, didOutput: CMSampleBuffer)","path":"\/documentation\/haishinkit\/mthkview\/mixer(_:didoutput:)"},{"path":"\/documentation\/haishinkit\/mthkview\/mixer(_:didoutput:when:)","type":"method","title":"func mixer(MediaMixer, didOutput: AVAudioPCMBuffer, when: AVAudioTime)"},{"path":"\/documentation\/haishinkit\/mthkview\/selecttrack(_:mediatype:)","type":"method","title":"func selectTrack(UInt8?, mediaType: CMFormatDescription.MediaType) async"}],"title":"MediaMixerOutput Implementations","type":"symbol"}],"title":"MTHKView","type":"class","path":"\/documentation\/haishinkit\/mthkview"},{"title":"MediaMixer","children":[{"title":"Initializers","type":"groupMarker"},{"type":"init","title":"init(multiTrackAudioMixingEnabled: Bool, useManualCapture: Bool)","path":"\/documentation\/haishinkit\/mediamixer\/init(multitrackaudiomixingenabled:usemanualcapture:)"},{"type":"groupMarker","title":"Instance Properties"},{"title":"var audioInputFormats: [UInt8 : AVAudioFormat]","type":"property","path":"\/documentation\/haishinkit\/mediamixer\/audioinputformats"},{"title":"var audioMixerSettings: AudioMixerSettings","path":"\/documentation\/haishinkit\/mediamixer\/audiomixersettings","type":"property"},{"path":"\/documentation\/haishinkit\/mediamixer\/framerate","type":"property","title":"var frameRate: Float64"},{"path":"\/documentation\/haishinkit\/mediamixer\/iscapturing","type":"property","title":"var isCapturing: Bool"},{"path":"\/documentation\/haishinkit\/mediamixer\/isinterputted","title":"var isInterputted: AsyncStream<Bool>","type":"property"},{"title":"var isMonitoringEnabled: Bool","path":"\/documentation\/haishinkit\/mediamixer\/ismonitoringenabled","type":"property"},{"path":"\/documentation\/haishinkit\/mediamixer\/ismultitrackaudiomixingenabled","type":"property","title":"var isMultiTrackAudioMixingEnabled: Bool"},{"path":"\/documentation\/haishinkit\/mediamixer\/isrunning","title":"var isRunning: Bool","type":"property"},{"title":"var isTorchEnabled: Bool","path":"\/documentation\/haishinkit\/mediamixer\/istorchenabled","type":"property"},{"path":"\/documentation\/haishinkit\/mediamixer\/screen","type":"property","title":"var screen: Screen"},{"title":"var sessionPreset: AVCaptureSession.Preset","path":"\/documentation\/haishinkit\/mediamixer\/sessionpreset","type":"property"},{"path":"\/documentation\/haishinkit\/mediamixer\/videoinputformats","type":"property","title":"var videoInputFormats: [UInt8 : CMFormatDescription]"},{"type":"property","title":"var videoMixerSettings: VideoMixerSettings","path":"\/documentation\/haishinkit\/mediamixer\/videomixersettings"},{"path":"\/documentation\/haishinkit\/mediamixer\/videoorientation","type":"property","title":"var videoOrientation: AVCaptureVideoOrientation"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/haishinkit\/mediamixer\/addoutput(_:)","title":"func addOutput(some MediaMixerOutput)"},{"path":"\/documentation\/haishinkit\/mediamixer\/append(_:track:)","type":"method","title":"func append(CMSampleBuffer, track: UInt8)"},{"title":"func append(AVAudioBuffer, when: AVAudioTime, track: UInt8)","path":"\/documentation\/haishinkit\/mediamixer\/append(_:when:track:)","type":"method"},{"type":"method","title":"func attachAudio(AVCaptureDevice?, track: UInt8, configuration: AudioDeviceConfigurationBlock?) async throws","path":"\/documentation\/haishinkit\/mediamixer\/attachaudio(_:track:configuration:)"},{"type":"method","path":"\/documentation\/haishinkit\/mediamixer\/attachvideo(_:track:configuration:)","title":"func attachVideo(AVCaptureDevice?, track: UInt8, configuration: VideoDeviceConfigurationBlock?) async throws"},{"title":"func configuration((AVCaptureSession) throws -> Void) rethrows","path":"\/documentation\/haishinkit\/mediamixer\/configuration(_:)","type":"method"},{"path":"\/documentation\/haishinkit\/mediamixer\/configuration(audio:configuration:)","type":"method","title":"func configuration(audio: UInt8, configuration: (AudioDeviceUnit) throws -> Void) throws"},{"path":"\/documentation\/haishinkit\/mediamixer\/configuration(video:configuration:)","type":"method","title":"func configuration(video: UInt8, configuration: (VideoDeviceUnit) throws -> Void) throws"},{"path":"\/documentation\/haishinkit\/mediamixer\/removeoutput(_:)","type":"method","title":"func removeOutput(some MediaMixerOutput)"},{"type":"method","title":"func setAudioMixerSettings(AudioMixerSettings)","path":"\/documentation\/haishinkit\/mediamixer\/setaudiomixersettings(_:)"},{"type":"method","title":"func setFrameRate(Float64)","path":"\/documentation\/haishinkit\/mediamixer\/setframerate(_:)"},{"path":"\/documentation\/haishinkit\/mediamixer\/setmonitoringenabled(_:)","title":"func setMonitoringEnabled(Bool)","type":"method"},{"type":"method","path":"\/documentation\/haishinkit\/mediamixer\/setsessionpreset(_:)","title":"func setSessionPreset(AVCaptureSession.Preset)"},{"path":"\/documentation\/haishinkit\/mediamixer\/settorchenabled(_:)","title":"func setTorchEnabled(Bool)","type":"method"},{"path":"\/documentation\/haishinkit\/mediamixer\/setvideomixersettings(_:)","type":"method","title":"func setVideoMixerSettings(VideoMixerSettings)"},{"path":"\/documentation\/haishinkit\/mediamixer\/setvideoorientation(_:)","title":"func setVideoOrientation(AVCaptureVideoOrientation)","type":"method"},{"type":"method","title":"func startCapturing()","path":"\/documentation\/haishinkit\/mediamixer\/startcapturing()"},{"path":"\/documentation\/haishinkit\/mediamixer\/stopcapturing()","type":"method","title":"func stopCapturing()"},{"type":"groupMarker","title":"Enumerations"},{"type":"enum","title":"MediaMixer.Error","path":"\/documentation\/haishinkit\/mediamixer\/error","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/haishinkit\/mediamixer\/error\/devicenotfound","title":"case deviceNotFound","type":"case"},{"type":"case","title":"case failedToAttach(any Error)","path":"\/documentation\/haishinkit\/mediamixer\/error\/failedtoattach(_:)"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var localizedDescription: String","type":"property","path":"\/documentation\/haishinkit\/mediamixer\/error\/localizeddescription"}],"path":"\/documentation\/haishinkit\/mediamixer\/error\/error-implementations","title":"Error Implementations","type":"symbol"}]},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/mediamixer\/actor-implementations","title":"Actor Implementations","children":[{"type":"groupMarker","title":"Instance Methods"},{"title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method","path":"\/documentation\/haishinkit\/mediamixer\/assertisolated(_:file:line:)"},{"title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","path":"\/documentation\/haishinkit\/mediamixer\/assumeisolated(_:file:line:)","type":"method"},{"title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/haishinkit\/mediamixer\/preconditionisolated(_:file:line:)","type":"method"}],"type":"symbol"},{"type":"symbol","path":"\/documentation\/haishinkit\/mediamixer\/asyncrunner-implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func startRunning()","type":"method","path":"\/documentation\/haishinkit\/mediamixer\/startrunning()"},{"path":"\/documentation\/haishinkit\/mediamixer\/stoprunning()","type":"method","title":"func stopRunning()"}],"title":"AsyncRunner Implementations"}],"type":"class","path":"\/documentation\/haishinkit\/mediamixer"},{"title":"NetworkMonitor","path":"\/documentation\/haishinkit\/networkmonitor","type":"class","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/networkmonitor\/init(_:)","type":"init","title":"init(some NetworkTransportReporter)"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/networkmonitor\/event","title":"var event: AsyncStream<NetworkMonitorEvent>","type":"property"},{"path":"\/documentation\/haishinkit\/networkmonitor\/isrunning","title":"var isRunning: Bool","type":"property"},{"type":"groupMarker","title":"Enumerations"},{"type":"enum","title":"NetworkMonitor.Error","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case invalidState","path":"\/documentation\/haishinkit\/networkmonitor\/error\/invalidstate","type":"case"},{"type":"groupMarker","title":"Default Implementations"},{"title":"Equatable Implementations","path":"\/documentation\/haishinkit\/networkmonitor\/error\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/haishinkit\/networkmonitor\/error\/!=(_:_:)"}],"type":"symbol"},{"path":"\/documentation\/haishinkit\/networkmonitor\/error\/error-implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var localizedDescription: String","type":"property","path":"\/documentation\/haishinkit\/networkmonitor\/error\/localizeddescription"}],"title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/haishinkit\/networkmonitor\/error"},{"title":"Default Implementations","type":"groupMarker"},{"type":"symbol","title":"Actor Implementations","children":[{"type":"groupMarker","title":"Instance Methods"},{"title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/haishinkit\/networkmonitor\/assertisolated(_:file:line:)","type":"method"},{"type":"method","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","path":"\/documentation\/haishinkit\/networkmonitor\/assumeisolated(_:file:line:)"},{"path":"\/documentation\/haishinkit\/networkmonitor\/preconditionisolated(_:file:line:)","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method"}],"path":"\/documentation\/haishinkit\/networkmonitor\/actor-implementations"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func startRunning()","path":"\/documentation\/haishinkit\/networkmonitor\/startrunning()","type":"method"},{"type":"method","title":"func stopRunning()","path":"\/documentation\/haishinkit\/networkmonitor\/stoprunning()"}],"type":"symbol","path":"\/documentation\/haishinkit\/networkmonitor\/asyncrunner-implementations","title":"AsyncRunner Implementations"}]},{"path":"\/documentation\/haishinkit\/piphkview","type":"class","title":"PiPHKView","children":[{"type":"groupMarker","title":"Initializers"},{"title":"init?(coder: NSCoder)","type":"init","path":"\/documentation\/haishinkit\/piphkview\/init(coder:)"},{"type":"init","title":"init(frame: CGRect)","path":"\/documentation\/haishinkit\/piphkview\/init(frame:)"},{"type":"groupMarker","title":"Instance Properties"},{"title":"var audioTrackId: UInt8?","path":"\/documentation\/haishinkit\/piphkview\/audiotrackid","type":"property"},{"title":"var videoGravity: AVLayerVideoGravity","path":"\/documentation\/haishinkit\/piphkview\/videogravity","type":"property"},{"path":"\/documentation\/haishinkit\/piphkview\/videotrackid","type":"property","title":"var videoTrackId: UInt8?"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/piphkview\/awakefromnib()","type":"method","title":"func awakeFromNib()"},{"title":"Type Properties","type":"groupMarker"},{"type":"property","title":"static var defaultBackgroundColor: NSColor","path":"\/documentation\/haishinkit\/piphkview\/defaultbackgroundcolor"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/haishinkit\/piphkview\/hkstreamoutput-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/piphkview\/stream(_:didoutput:)","title":"func stream(some HKStream, didOutput: CMSampleBuffer)","type":"method"},{"type":"method","path":"\/documentation\/haishinkit\/piphkview\/stream(_:didoutput:when:)","title":"func stream(some HKStream, didOutput: AVAudioBuffer, when: AVAudioTime)"}],"title":"HKStreamOutput Implementations"},{"title":"MediaMixerOutput Implementations","path":"\/documentation\/haishinkit\/piphkview\/mediamixeroutput-implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func mixer(MediaMixer, didOutput: CMSampleBuffer)","path":"\/documentation\/haishinkit\/piphkview\/mixer(_:didoutput:)","type":"method"},{"title":"func mixer(MediaMixer, didOutput: AVAudioPCMBuffer, when: AVAudioTime)","type":"method","path":"\/documentation\/haishinkit\/piphkview\/mixer(_:didoutput:when:)"},{"type":"method","path":"\/documentation\/haishinkit\/piphkview\/selecttrack(_:mediatype:)","title":"func selectTrack(UInt8?, mediaType: CMFormatDescription.MediaType) async"}],"type":"symbol"}]},{"title":"RTMPConnection","type":"class","children":[{"type":"groupMarker","title":"Initializers"},{"title":"init(swfUrl: String?, pageUrl: String?, flashVer: String, timeout: Int, requestTimeout: UInt64, chunkSize: Int, qualityOfService: DispatchQoS)","path":"\/documentation\/haishinkit\/rtmpconnection\/init(swfurl:pageurl:flashver:timeout:requesttimeout:chunksize:qualityofservice:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let chunkSize: Int","path":"\/documentation\/haishinkit\/rtmpconnection\/chunksize","type":"property"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/connected","title":"var connected: Bool","type":"property"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/flashver","type":"property","title":"let flashVer: String"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/objectencoding","type":"property","title":"let objectEncoding: RTMPObjectEncoding"},{"type":"property","title":"let pageUrl: String?","path":"\/documentation\/haishinkit\/rtmpconnection\/pageurl"},{"title":"let qualityOfService: DispatchQoS","type":"property","path":"\/documentation\/haishinkit\/rtmpconnection\/qualityofservice"},{"title":"let requestTimeout: UInt64","path":"\/documentation\/haishinkit\/rtmpconnection\/requesttimeout","type":"property"},{"title":"var status: AsyncStream<RTMPStatus>","type":"property","path":"\/documentation\/haishinkit\/rtmpconnection\/status"},{"type":"property","title":"let swfUrl: String?","path":"\/documentation\/haishinkit\/rtmpconnection\/swfurl"},{"type":"property","title":"let timeout: Int","path":"\/documentation\/haishinkit\/rtmpconnection\/timeout"},{"title":"var uri: URL?","path":"\/documentation\/haishinkit\/rtmpconnection\/uri","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"type":"method","title":"func call(String, arguments: (any Sendable)?...) async throws -> RTMPResponse","path":"\/documentation\/haishinkit\/rtmpconnection\/call(_:arguments:)"},{"type":"method","title":"func close() async throws","path":"\/documentation\/haishinkit\/rtmpconnection\/close()"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/connect(_:arguments:)","type":"method","title":"func connect(String, arguments: (any Sendable)?...) async throws -> RTMPResponse"},{"title":"Type Properties","type":"groupMarker"},{"type":"property","title":"static let defaultCapabilities: Int","path":"\/documentation\/haishinkit\/rtmpconnection\/defaultcapabilities"},{"title":"static let defaultChunkSizeS: Int","path":"\/documentation\/haishinkit\/rtmpconnection\/defaultchunksizes","type":"property"},{"title":"static let defaultFlashVer: String","type":"property","path":"\/documentation\/haishinkit\/rtmpconnection\/defaultflashver"},{"title":"static let defaultObjectEncoding: RTMPObjectEncoding","type":"property","path":"\/documentation\/haishinkit\/rtmpconnection\/defaultobjectencoding"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/defaultport","type":"property","title":"static let defaultPort: Int"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/defaultrequesttimeout","type":"property","title":"static let defaultRequestTimeout: UInt64"},{"title":"static let defaultSecurePort: Int","path":"\/documentation\/haishinkit\/rtmpconnection\/defaultsecureport","type":"property"},{"type":"property","title":"static let defaultTimeout: Int","path":"\/documentation\/haishinkit\/rtmpconnection\/defaulttimeout"},{"type":"property","title":"static let defaultWindowSizeS: Int64","path":"\/documentation\/haishinkit\/rtmpconnection\/defaultwindowsizes"},{"type":"property","title":"static let supportedFourCcList: [String]","path":"\/documentation\/haishinkit\/rtmpconnection\/supportedfourcclist"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/supportedprotocols","title":"static let supportedProtocols: Set<String>","type":"property"},{"type":"groupMarker","title":"Enumerations"},{"children":[{"type":"groupMarker","title":"Enumeration Cases"},{"title":"case callBadVersion","type":"case","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/callbadversion"},{"title":"case callFailed","type":"case","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/callfailed"},{"type":"case","title":"case callProhibited","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/callprohibited"},{"type":"case","title":"case connectAppshutdown","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/connectappshutdown"},{"title":"case connectClosed","type":"case","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/connectclosed"},{"title":"case connectFailed","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/connectfailed","type":"case"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/code\/connectidletimeout","title":"case connectIdleTimeOut","type":"case"},{"title":"case connectInvalidApp","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/connectinvalidapp","type":"case"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/code\/connectnetworkchange","title":"case connectNetworkChange","type":"case"},{"type":"case","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/connectrejected","title":"case connectRejected"},{"title":"case connectSuccess","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/connectsuccess","type":"case"},{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/code\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var level: String","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/level","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/!=(_:_:)"}],"type":"symbol","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/equatable-implementations"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/code\/rawrepresentable-implementations","type":"symbol","title":"RawRepresentable Implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/code\/hashvalue","type":"property","title":"var hashValue: Int"},{"title":"Instance Methods","type":"groupMarker"},{"type":"method","title":"func hash(into: inout Hasher)","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/hash(into:)"}]}],"path":"\/documentation\/haishinkit\/rtmpconnection\/code","title":"RTMPConnection.Code","type":"enum"},{"title":"RTMPConnection.Error","type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"title":"case connectionTimedOut","type":"case","path":"\/documentation\/haishinkit\/rtmpconnection\/error\/connectiontimedout"},{"title":"case invalidState","path":"\/documentation\/haishinkit\/rtmpconnection\/error\/invalidstate","type":"case"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/error\/requestfailed(response:)","title":"case requestFailed(response: RTMPResponse)","type":"case"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/error\/requesttimedout","type":"case","title":"case requestTimedOut"},{"type":"case","title":"case socketErrorOccurred(any Error)","path":"\/documentation\/haishinkit\/rtmpconnection\/error\/socketerroroccurred(_:)"},{"title":"case unsupportedCommand(String)","type":"case","path":"\/documentation\/haishinkit\/rtmpconnection\/error\/unsupportedcommand(_:)"},{"title":"Default Implementations","type":"groupMarker"},{"type":"symbol","path":"\/documentation\/haishinkit\/rtmpconnection\/error\/error-implementations","title":"Error Implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var localizedDescription: String","path":"\/documentation\/haishinkit\/rtmpconnection\/error\/localizeddescription","type":"property"}]}],"path":"\/documentation\/haishinkit\/rtmpconnection\/error"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","path":"\/documentation\/haishinkit\/rtmpconnection\/actor-implementations","title":"Actor Implementations","children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/assertisolated(_:file:line:)","type":"method","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)"},{"title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","type":"method","path":"\/documentation\/haishinkit\/rtmpconnection\/assumeisolated(_:file:line:)"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/preconditionisolated(_:file:line:)","type":"method","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)"}]}],"path":"\/documentation\/haishinkit\/rtmpconnection"},{"title":"RTMPSharedObject","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/haishinkit\/rtmpsharedobject\/data","title":"var data: AMFObject"},{"type":"property","title":"let objectEncoding: RTMPObjectEncoding","path":"\/documentation\/haishinkit\/rtmpsharedobject\/objectencoding"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func clear() async","type":"method","path":"\/documentation\/haishinkit\/rtmpsharedobject\/clear()"},{"title":"func close() async","type":"method","path":"\/documentation\/haishinkit\/rtmpsharedobject\/close()"},{"type":"method","title":"func connect(RTMPConnection) async","path":"\/documentation\/haishinkit\/rtmpsharedobject\/connect(_:)"},{"path":"\/documentation\/haishinkit\/rtmpsharedobject\/setproperty(_:_:)","type":"method","title":"func setProperty(String, (any Sendable)?) async"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/rtmpsharedobject\/getremote(withname:remotepath:persistence:)","title":"static func getRemote(withName: String, remotePath: String, persistence: Bool) -> RTMPSharedObject","type":"method"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/haishinkit\/rtmpsharedobject\/actor-implementations","title":"Actor Implementations","children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/rtmpsharedobject\/assertisolated(_:file:line:)","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method"},{"path":"\/documentation\/haishinkit\/rtmpsharedobject\/assumeisolated(_:file:line:)","type":"method","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T"},{"title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/haishinkit\/rtmpsharedobject\/preconditionisolated(_:file:line:)","type":"method"}],"type":"symbol"}],"type":"class","path":"\/documentation\/haishinkit\/rtmpsharedobject"},{"title":"RTMPStream","path":"\/documentation\/haishinkit\/rtmpstream","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(connection: RTMPConnection, fcPublishName: String?)","type":"init","path":"\/documentation\/haishinkit\/rtmpstream\/init(connection:fcpublishname:)"},{"title":"Instance Properties","type":"groupMarker"},{"type":"property","title":"var audioSampleAccess: Bool","path":"\/documentation\/haishinkit\/rtmpstream\/audiosampleaccess"},{"path":"\/documentation\/haishinkit\/rtmpstream\/audiotrackid","title":"var audioTrackId: UInt8?","type":"property"},{"type":"property","path":"\/documentation\/haishinkit\/rtmpstream\/currentfps","title":"var currentFPS: UInt16"},{"type":"property","title":"var fcPublishName: String?","path":"\/documentation\/haishinkit\/rtmpstream\/fcpublishname"},{"type":"property","title":"var info: RTMPStreamInfo","path":"\/documentation\/haishinkit\/rtmpstream\/info"},{"title":"var metadata: AMFArray","path":"\/documentation\/haishinkit\/rtmpstream\/metadata","type":"property"},{"title":"var objectEncoding: RTMPObjectEncoding","path":"\/documentation\/haishinkit\/rtmpstream\/objectencoding","type":"property"},{"path":"\/documentation\/haishinkit\/rtmpstream\/readystate","type":"property","title":"var readyState: HKStreamReadyState"},{"path":"\/documentation\/haishinkit\/rtmpstream\/status","title":"var status: AsyncStream<RTMPStatus>","type":"property"},{"title":"var videoSampleAccess: Bool","path":"\/documentation\/haishinkit\/rtmpstream\/videosampleaccess","type":"property"},{"path":"\/documentation\/haishinkit\/rtmpstream\/videotrackid","type":"property","title":"var videoTrackId: UInt8?"},{"title":"Instance Methods","type":"groupMarker"},{"type":"method","path":"\/documentation\/haishinkit\/rtmpstream\/close()","title":"func close() async throws -> RTMPResponse"},{"title":"func pause(Bool) async throws -> RTMPResponse","path":"\/documentation\/haishinkit\/rtmpstream\/pause(_:)","type":"method"},{"title":"func play((any Sendable)?...) async throws -> RTMPResponse","path":"\/documentation\/haishinkit\/rtmpstream\/play(_:)","type":"method"},{"type":"method","title":"func publish(String?, type: RTMPStream.HowToPublish) async throws -> RTMPResponse","path":"\/documentation\/haishinkit\/rtmpstream\/publish(_:type:)"},{"type":"method","title":"func receiveAudio(Bool) async throws","path":"\/documentation\/haishinkit\/rtmpstream\/receiveaudio(_:)"},{"title":"func receiveVideo(Bool) async throws","path":"\/documentation\/haishinkit\/rtmpstream\/receivevideo(_:)","type":"method"},{"type":"method","title":"func seek(Double) async throws","path":"\/documentation\/haishinkit\/rtmpstream\/seek(_:)"},{"title":"func send(String, arguments: (any Sendable)?..., isResetTimestamp: Bool) throws","type":"method","path":"\/documentation\/haishinkit\/rtmpstream\/send(_:arguments:isresettimestamp:)"},{"title":"func togglePause() async throws -> RTMPResponse","type":"method","path":"\/documentation\/haishinkit\/rtmpstream\/togglepause()"},{"title":"Enumerations","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code","title":"RTMPStream.Code","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case bufferEmpty","path":"\/documentation\/haishinkit\/rtmpstream\/code\/bufferempty","type":"case"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/bufferflush","type":"case","title":"case bufferFlush"},{"title":"case bufferFull","type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/code\/bufferfull"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/connectclosed","type":"case","title":"case connectClosed"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/connectfailed","title":"case connectFailed","type":"case"},{"title":"case connectRejected","type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/code\/connectrejected"},{"title":"case connectSuccess","type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/code\/connectsuccess"},{"type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/code\/drmupdateneeded","title":"case drmUpdateNeeded"},{"title":"case failed","path":"\/documentation\/haishinkit\/rtmpstream\/code\/failed","type":"case"},{"title":"case multicastStreamReset","path":"\/documentation\/haishinkit\/rtmpstream\/code\/multicaststreamreset","type":"case"},{"type":"case","title":"case pauseNotify","path":"\/documentation\/haishinkit\/rtmpstream\/code\/pausenotify"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/playfailed","type":"case","title":"case playFailed"},{"title":"case playFileStructureInvalid","path":"\/documentation\/haishinkit\/rtmpstream\/code\/playfilestructureinvalid","type":"case"},{"title":"case playInsufficientBW","path":"\/documentation\/haishinkit\/rtmpstream\/code\/playinsufficientbw","type":"case"},{"title":"case playNoSupportedTrackFound","type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/code\/playnosupportedtrackfound"},{"title":"case playReset","path":"\/documentation\/haishinkit\/rtmpstream\/code\/playreset","type":"case"},{"title":"case playStart","path":"\/documentation\/haishinkit\/rtmpstream\/code\/playstart","type":"case"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/playstop","title":"case playStop","type":"case"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/playstreamnotfound","title":"case playStreamNotFound","type":"case"},{"title":"case playTransition","path":"\/documentation\/haishinkit\/rtmpstream\/code\/playtransition","type":"case"},{"title":"case playUnpublishNotify","type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/code\/playunpublishnotify"},{"type":"case","title":"case publishBadName","path":"\/documentation\/haishinkit\/rtmpstream\/code\/publishbadname"},{"title":"case publishIdle","type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/code\/publishidle"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/publishstart","type":"case","title":"case publishStart"},{"type":"case","title":"case recordAlreadyExists","path":"\/documentation\/haishinkit\/rtmpstream\/code\/recordalreadyexists"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/recorddiskquotaexceeded","type":"case","title":"case recordDiskQuotaExceeded"},{"title":"case recordFailed","type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/code\/recordfailed"},{"title":"case recordNoAccess","path":"\/documentation\/haishinkit\/rtmpstream\/code\/recordnoaccess","type":"case"},{"title":"case recordStart","type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/code\/recordstart"},{"title":"case recordStop","path":"\/documentation\/haishinkit\/rtmpstream\/code\/recordstop","type":"case"},{"title":"case secondScreenStart","path":"\/documentation\/haishinkit\/rtmpstream\/code\/secondscreenstart","type":"case"},{"title":"case secondScreenStop","path":"\/documentation\/haishinkit\/rtmpstream\/code\/secondscreenstop","type":"case"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/seekfailed","title":"case seekFailed","type":"case"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/seekinvalidtime","type":"case","title":"case seekInvalidTime"},{"type":"case","title":"case seekNotify","path":"\/documentation\/haishinkit\/rtmpstream\/code\/seeknotify"},{"type":"case","title":"case stepNotify","path":"\/documentation\/haishinkit\/rtmpstream\/code\/stepnotify"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/unpausenotify","title":"case unpauseNotify","type":"case"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/unpublishsuccess","type":"case","title":"case unpublishSuccess"},{"title":"case videoDimensionChange","path":"\/documentation\/haishinkit\/rtmpstream\/code\/videodimensionchange","type":"case"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: String)","path":"\/documentation\/haishinkit\/rtmpstream\/code\/init(rawvalue:)","type":"init"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/level","type":"property","title":"var level: String"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/haishinkit\/rtmpstream\/code\/!=(_:_:)","type":"op"}],"title":"Equatable Implementations","path":"\/documentation\/haishinkit\/rtmpstream\/code\/equatable-implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/hashvalue","type":"property","title":"var hashValue: Int"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/haishinkit\/rtmpstream\/code\/hash(into:)","title":"func hash(into: inout Hasher)"}],"title":"RawRepresentable Implementations","path":"\/documentation\/haishinkit\/rtmpstream\/code\/rawrepresentable-implementations","type":"symbol"}],"type":"enum"},{"path":"\/documentation\/haishinkit\/rtmpstream\/error","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/rtmpstream\/error\/invalidstate","type":"case","title":"case invalidState"},{"type":"case","title":"case requestFailed(response: RTMPResponse)","path":"\/documentation\/haishinkit\/rtmpstream\/error\/requestfailed(response:)"},{"path":"\/documentation\/haishinkit\/rtmpstream\/error\/requesttimedout","type":"case","title":"case requestTimedOut"},{"title":"Default Implementations","type":"groupMarker"},{"type":"symbol","title":"Error Implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var localizedDescription: String","path":"\/documentation\/haishinkit\/rtmpstream\/error\/localizeddescription","type":"property"}],"path":"\/documentation\/haishinkit\/rtmpstream\/error\/error-implementations"}],"title":"RTMPStream.Error","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case append","path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish\/append","type":"case"},{"title":"case appendWithGap","path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish\/appendwithgap","type":"case"},{"title":"case live","path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish\/live","type":"case"},{"path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish\/record","type":"case","title":"case record"},{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish\/init(rawvalue:)","title":"init?(rawValue: String)"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish\/equatable-implementations","title":"Equatable Implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish\/!=(_:_:)"}],"type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"type":"symbol","title":"RawRepresentable Implementations","path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish\/rawrepresentable-implementations"}],"path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish","type":"enum","title":"RTMPStream.HowToPublish"},{"title":"Default Implementations","type":"groupMarker"},{"type":"symbol","path":"\/documentation\/haishinkit\/rtmpstream\/actor-implementations","title":"Actor Implementations","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/haishinkit\/rtmpstream\/assertisolated(_:file:line:)","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)"},{"title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","type":"method","path":"\/documentation\/haishinkit\/rtmpstream\/assumeisolated(_:file:line:)"},{"title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/haishinkit\/rtmpstream\/preconditionisolated(_:file:line:)","type":"method"}]},{"path":"\/documentation\/haishinkit\/rtmpstream\/hkstream-implementations","title":"HKStream Implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var audioSettings: AudioCodecSettings","path":"\/documentation\/haishinkit\/rtmpstream\/audiosettings","type":"property"},{"title":"var soundTransform: SoundTransform?","path":"\/documentation\/haishinkit\/rtmpstream\/soundtransform","type":"property"},{"path":"\/documentation\/haishinkit\/rtmpstream\/videosettings","type":"property","title":"var videoSettings: VideoCodecSettings"},{"title":"Instance Methods","type":"groupMarker"},{"type":"method","path":"\/documentation\/haishinkit\/rtmpstream\/addoutput(_:)","title":"func addOutput(some HKStreamOutput)"},{"type":"method","title":"func append(CMSampleBuffer)","path":"\/documentation\/haishinkit\/rtmpstream\/append(_:)"},{"type":"method","path":"\/documentation\/haishinkit\/rtmpstream\/append(_:when:)","title":"func append(AVAudioBuffer, when: AVAudioTime)"},{"type":"method","path":"\/documentation\/haishinkit\/rtmpstream\/attachaudioplayer(_:)","title":"func attachAudioPlayer(AudioPlayer?) async"},{"path":"\/documentation\/haishinkit\/rtmpstream\/dispatch(_:)","type":"method","title":"func dispatch(NetworkMonitorEvent) async"},{"path":"\/documentation\/haishinkit\/rtmpstream\/removeoutput(_:)","title":"func removeOutput(some HKStreamOutput)","type":"method"},{"type":"method","title":"func setAudioSettings(AudioCodecSettings)","path":"\/documentation\/haishinkit\/rtmpstream\/setaudiosettings(_:)"},{"path":"\/documentation\/haishinkit\/rtmpstream\/setbitratestorategy(_:)","type":"method","title":"func setBitrateStorategy((some HKStreamBitRateStrategy)?)"},{"path":"\/documentation\/haishinkit\/rtmpstream\/setsoundtransform(_:)","title":"func setSoundTransform(SoundTransform) async","type":"method"},{"title":"func setVideoInputBufferCounts(Int)","path":"\/documentation\/haishinkit\/rtmpstream\/setvideoinputbuffercounts(_:)","type":"method"},{"type":"method","path":"\/documentation\/haishinkit\/rtmpstream\/setvideosettings(_:)","title":"func setVideoSettings(VideoCodecSettings)"}],"type":"symbol"},{"path":"\/documentation\/haishinkit\/rtmpstream\/mediamixeroutput-implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func mixer(MediaMixer, didOutput: CMSampleBuffer)","path":"\/documentation\/haishinkit\/rtmpstream\/mixer(_:didoutput:)","type":"method"},{"type":"method","path":"\/documentation\/haishinkit\/rtmpstream\/mixer(_:didoutput:when:)","title":"func mixer(MediaMixer, didOutput: AVAudioPCMBuffer, when: AVAudioTime)"},{"path":"\/documentation\/haishinkit\/rtmpstream\/selecttrack(_:mediatype:)","type":"method","title":"func selectTrack(UInt8?, mediaType: CMFormatDescription.MediaType)"}],"title":"MediaMixerOutput Implementations","type":"symbol"}],"type":"class"},{"path":"\/documentation\/haishinkit\/screen","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/haishinkit\/screen\/init()","type":"init","title":"init()"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/screen\/backgroundcolor","title":"var backgroundColor: CGColor","type":"property"},{"title":"var childCounts: Int","type":"property","path":"\/documentation\/haishinkit\/screen\/childcounts"},{"type":"property","title":"var delegate: (any ScreenDelegate)?","path":"\/documentation\/haishinkit\/screen\/delegate"},{"path":"\/documentation\/haishinkit\/screen\/size-swift.property","title":"var size: CGSize","type":"property"},{"type":"groupMarker","title":"Instance Methods"},{"title":"func addChild(ScreenObject?) throws","path":"\/documentation\/haishinkit\/screen\/addchild(_:)","type":"method"},{"path":"\/documentation\/haishinkit\/screen\/registervideoeffect(_:)","type":"method","title":"func registerVideoEffect(some VideoEffect) -> Bool"},{"title":"func removeChild(ScreenObject?)","path":"\/documentation\/haishinkit\/screen\/removechild(_:)","type":"method"},{"title":"func unregisterVideoEffect(some VideoEffect) -> Bool","path":"\/documentation\/haishinkit\/screen\/unregistervideoeffect(_:)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"type":"property","path":"\/documentation\/haishinkit\/screen\/size-swift.type.property","title":"static let size: CGSize"}],"title":"Screen","type":"class"},{"children":[{"type":"groupMarker","title":"Type Properties"},{"title":"static let shared: ScreenActor","path":"\/documentation\/haishinkit\/screenactor\/shared","type":"property"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/haishinkit\/screenactor\/assertisolated(_:file:line:)"},{"path":"\/documentation\/haishinkit\/screenactor\/assumeisolated(_:file:line:)","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","type":"method"},{"title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/haishinkit\/screenactor\/preconditionisolated(_:file:line:)","type":"method"}],"type":"symbol","path":"\/documentation\/haishinkit\/screenactor\/actor-implementations","title":"Actor Implementations"},{"type":"symbol","title":"GlobalActor Implementations","path":"\/documentation\/haishinkit\/screenactor\/globalactor-implementations","children":[{"type":"groupMarker","title":"Type Properties"},{"path":"\/documentation\/haishinkit\/screenactor\/sharedunownedexecutor","type":"property","title":"static var sharedUnownedExecutor: UnownedSerialExecutor"}]}],"title":"ScreenActor","type":"class","path":"\/documentation\/haishinkit\/screenactor"},{"type":"class","children":[{"title":"Initializers","type":"groupMarker"},{"type":"init","title":"init()","path":"\/documentation\/haishinkit\/screenobject\/init()"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/screenobject\/bounds","title":"var bounds: CGRect","type":"property"},{"title":"var cornerRadius: CGFloat","type":"property","path":"\/documentation\/haishinkit\/screenobject\/cornerradius"},{"type":"property","path":"\/documentation\/haishinkit\/screenobject\/horizontalalignment-swift.property","title":"var horizontalAlignment: ScreenObject.HorizontalAlignment"},{"type":"property","title":"var isVisible: Bool","path":"\/documentation\/haishinkit\/screenobject\/isvisible"},{"type":"property","title":"var layoutMargin: NSEdgeInsets","path":"\/documentation\/haishinkit\/screenobject\/layoutmargin"},{"title":"var parent: ScreenObjectContainer?","path":"\/documentation\/haishinkit\/screenobject\/parent","type":"property"},{"type":"property","path":"\/documentation\/haishinkit\/screenobject\/size","title":"var size: CGSize"},{"title":"var verticalAlignment: ScreenObject.VerticalAlignment","path":"\/documentation\/haishinkit\/screenobject\/verticalalignment-swift.property","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func invalidateLayout()","path":"\/documentation\/haishinkit\/screenobject\/invalidatelayout()","type":"method"},{"type":"method","title":"func makeBounds(CGSize) -> CGRect","path":"\/documentation\/haishinkit\/screenobject\/makebounds(_:)"},{"title":"func makeImage(some ScreenRenderer) -> CGImage?","type":"method","path":"\/documentation\/haishinkit\/screenobject\/makeimage(_:)"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"type":"case","path":"\/documentation\/haishinkit\/screenobject\/horizontalalignment-swift.enum\/center","title":"case center"},{"title":"case left","type":"case","path":"\/documentation\/haishinkit\/screenobject\/horizontalalignment-swift.enum\/left"},{"type":"case","path":"\/documentation\/haishinkit\/screenobject\/horizontalalignment-swift.enum\/right","title":"case right"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/haishinkit\/screenobject\/horizontalalignment-swift.enum\/equatable-implementations","type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/haishinkit\/screenobject\/horizontalalignment-swift.enum\/!=(_:_:)","type":"op"}],"title":"Equatable Implementations"}],"path":"\/documentation\/haishinkit\/screenobject\/horizontalalignment-swift.enum","type":"enum","title":"ScreenObject.HorizontalAlignment"},{"path":"\/documentation\/haishinkit\/screenobject\/verticalalignment-swift.enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"title":"case bottom","type":"case","path":"\/documentation\/haishinkit\/screenobject\/verticalalignment-swift.enum\/bottom"},{"title":"case middle","path":"\/documentation\/haishinkit\/screenobject\/verticalalignment-swift.enum\/middle","type":"case"},{"title":"case top","path":"\/documentation\/haishinkit\/screenobject\/verticalalignment-swift.enum\/top","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/screenobject\/verticalalignment-swift.enum\/equatable-implementations","type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/screenobject\/verticalalignment-swift.enum\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}],"title":"Equatable Implementations"}],"type":"enum","title":"ScreenObject.VerticalAlignment"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/haishinkit\/screenobject\/equatable-implementations","type":"symbol","title":"Equatable Implementations","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/haishinkit\/screenobject\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"},{"type":"op","title":"static func == (ScreenObject, ScreenObject) -> Bool","path":"\/documentation\/haishinkit\/screenobject\/==(_:_:)"}]},{"title":"Hashable Implementations","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func hash(into: inout Hasher)","path":"\/documentation\/haishinkit\/screenobject\/hash(into:)"}],"path":"\/documentation\/haishinkit\/screenobject\/hashable-implementations","type":"symbol"}],"path":"\/documentation\/haishinkit\/screenobject","title":"ScreenObject"},{"type":"class","path":"\/documentation\/haishinkit\/screenobjectcontainer","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var childCounts: Int","path":"\/documentation\/haishinkit\/screenobjectcontainer\/childcounts","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/screenobjectcontainer\/addchild(_:)","type":"method","title":"func addChild(ScreenObject?) throws"},{"type":"method","title":"func removeChild(ScreenObject?)","path":"\/documentation\/haishinkit\/screenobjectcontainer\/removechild(_:)"},{"type":"groupMarker","title":"Enumerations"},{"children":[{"type":"groupMarker","title":"Enumeration Cases"},{"title":"case alreadyExists","path":"\/documentation\/haishinkit\/screenobjectcontainer\/error\/alreadyexists","type":"case"},{"type":"groupMarker","title":"Default Implementations"},{"title":"Equatable Implementations","path":"\/documentation\/haishinkit\/screenobjectcontainer\/error\/equatable-implementations","type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"type":"op","path":"\/documentation\/haishinkit\/screenobjectcontainer\/error\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"}]},{"path":"\/documentation\/haishinkit\/screenobjectcontainer\/error\/error-implementations","type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var localizedDescription: String","path":"\/documentation\/haishinkit\/screenobjectcontainer\/error\/localizeddescription","type":"property"}],"title":"Error Implementations"}],"type":"enum","title":"ScreenObjectContainer.Error","path":"\/documentation\/haishinkit\/screenobjectcontainer\/error"}],"title":"ScreenObjectContainer"},{"type":"class","path":"\/documentation\/haishinkit\/streamscreenobject","title":"StreamScreenObject","children":[{"type":"groupMarker","title":"Instance Properties"},{"title":"var chromaKeyColor: CGColor?","type":"property","path":"\/documentation\/haishinkit\/streamscreenobject\/chromakeycolor"},{"title":"var videoGravity: AVLayerVideoGravity","path":"\/documentation\/haishinkit\/streamscreenobject\/videogravity","type":"property"},{"type":"groupMarker","title":"Instance Methods"},{"title":"func makeBounds(CGSize) -> CGRect","type":"method","path":"\/documentation\/haishinkit\/streamscreenobject\/makebounds(_:)"},{"type":"method","path":"\/documentation\/haishinkit\/streamscreenobject\/makeimage(_:)","title":"func makeImage(some ScreenRenderer) -> CGImage?"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/streamscreenobject\/hkstreamoutput-implementations","title":"HKStreamOutput Implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/streamscreenobject\/stream(_:didoutput:)","title":"func stream(some HKStream, didOutput: CMSampleBuffer)","type":"method"},{"path":"\/documentation\/haishinkit\/streamscreenobject\/stream(_:didoutput:when:)","title":"func stream(some HKStream, didOutput: AVAudioBuffer, when: AVAudioTime)","type":"method"}]}]},{"type":"class","title":"TSReader","path":"\/documentation\/haishinkit\/tsreader","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init()","path":"\/documentation\/haishinkit\/tsreader\/init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"type":"property","title":"var output: AsyncStream<(UInt16, CMSampleBuffer)>","path":"\/documentation\/haishinkit\/tsreader\/output"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/tsreader\/clear()","type":"method","title":"func clear()"},{"type":"method","title":"func read(Data) -> Int","path":"\/documentation\/haishinkit\/tsreader\/read(_:)"}]},{"type":"class","path":"\/documentation\/haishinkit\/tswriter","children":[{"title":"Initializers","type":"groupMarker"},{"type":"init","title":"init(segmentDuration: Double)","path":"\/documentation\/haishinkit\/tswriter\/init(segmentduration:)"},{"title":"Instance Properties","type":"groupMarker"},{"type":"property","title":"var audioFormat: AVAudioFormat?","path":"\/documentation\/haishinkit\/tswriter\/audioformat"},{"type":"property","path":"\/documentation\/haishinkit\/tswriter\/expectedmedias","title":"var expectedMedias: Set<AVMediaType>"},{"path":"\/documentation\/haishinkit\/tswriter\/output","type":"property","title":"var output: AsyncStream<Data>"},{"title":"var videoFormat: CMFormatDescription?","path":"\/documentation\/haishinkit\/tswriter\/videoformat","type":"property"},{"type":"groupMarker","title":"Instance Methods"},{"title":"func append(CMSampleBuffer)","path":"\/documentation\/haishinkit\/tswriter\/append(_:)","type":"method"},{"title":"func append(AVAudioBuffer, when: AVAudioTime)","path":"\/documentation\/haishinkit\/tswriter\/append(_:when:)","type":"method"},{"title":"func clear()","type":"method","path":"\/documentation\/haishinkit\/tswriter\/clear()"}],"title":"TSWriter"},{"type":"class","children":[{"title":"Instance Properties","type":"groupMarker"},{"type":"property","title":"var attributes: [NSAttributedString.Key : Any]?","path":"\/documentation\/haishinkit\/textscreenobject\/attributes"},{"path":"\/documentation\/haishinkit\/textscreenobject\/bounds","title":"var bounds: CGRect","type":"property"},{"path":"\/documentation\/haishinkit\/textscreenobject\/string","title":"var string: String","type":"property"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/textscreenobject\/makebounds(_:)","type":"method","title":"func makeBounds(CGSize) -> CGRect"},{"type":"method","title":"func makeImage(some ScreenRenderer) -> CGImage?","path":"\/documentation\/haishinkit\/textscreenobject\/makeimage(_:)"}],"title":"TextScreenObject","path":"\/documentation\/haishinkit\/textscreenobject"},{"title":"VideoDeviceUnit","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/haishinkit\/videodeviceunit\/colorformat-swift.property","title":"var colorFormat: OSType"},{"type":"property","title":"var connection: AVCaptureConnection?","path":"\/documentation\/haishinkit\/videodeviceunit\/connection"},{"title":"var device: AVCaptureDevice?","path":"\/documentation\/haishinkit\/videodeviceunit\/device","type":"property"},{"path":"\/documentation\/haishinkit\/videodeviceunit\/input","type":"property","title":"var input: AVCaptureInput?"},{"path":"\/documentation\/haishinkit\/videodeviceunit\/isvideomirrored","type":"property","title":"var isVideoMirrored: Bool"},{"type":"property","title":"var output: VideoDeviceUnit.Output?","path":"\/documentation\/haishinkit\/videodeviceunit\/output-swift.property"},{"path":"\/documentation\/haishinkit\/videodeviceunit\/track","title":"let track: UInt8","type":"property"},{"path":"\/documentation\/haishinkit\/videodeviceunit\/videoorientation","type":"property","title":"var videoOrientation: AVCaptureVideoOrientation"},{"type":"groupMarker","title":"Type Aliases"},{"path":"\/documentation\/haishinkit\/videodeviceunit\/output-swift.typealias","type":"typealias","title":"VideoDeviceUnit.Output"},{"type":"groupMarker","title":"Type Properties"},{"type":"property","path":"\/documentation\/haishinkit\/videodeviceunit\/colorformat-swift.type.property","title":"static let colorFormat: OSType"}],"type":"class","path":"\/documentation\/haishinkit\/videodeviceunit"},{"title":"VideoRotator","path":"\/documentation\/haishinkit\/videorotator","children":[{"type":"groupMarker","title":"Initializers"},{"title":"init?()","path":"\/documentation\/haishinkit\/videorotator\/init()","type":"init"},{"type":"groupMarker","title":"Instance Methods"},{"title":"func rotate(buffer: CMSampleBuffer) -> Result<CMSampleBuffer, VideoRotator.Error>","path":"\/documentation\/haishinkit\/videorotator\/rotate(buffer:)","type":"method"},{"type":"groupMarker","title":"Enumerations"},{"title":"VideoRotator.Error","type":"enum","path":"\/documentation\/haishinkit\/videorotator\/error","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case cannotAllocatePixelBuffer(CVReturn)","type":"case","path":"\/documentation\/haishinkit\/videorotator\/error\/cannotallocatepixelbuffer(_:)"},{"title":"case noImageBuffer","path":"\/documentation\/haishinkit\/videorotator\/error\/noimagebuffer","type":"case"},{"title":"case noOrientationInfo","path":"\/documentation\/haishinkit\/videorotator\/error\/noorientationinfo","type":"case"},{"type":"case","title":"case rotationFailure(OSStatus)","path":"\/documentation\/haishinkit\/videorotator\/error\/rotationfailure(_:)"},{"path":"\/documentation\/haishinkit\/videorotator\/error\/unsupportedorientation","title":"case unsupportedOrientation","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videorotator\/error\/error-implementations","type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var localizedDescription: String","path":"\/documentation\/haishinkit\/videorotator\/error\/localizeddescription","type":"property"}],"title":"Error Implementations"}]}],"type":"class"},{"path":"\/documentation\/haishinkit\/videotrackscreenobject","title":"VideoTrackScreenObject","type":"class","children":[{"type":"groupMarker","title":"Initializers"},{"title":"init()","type":"init","path":"\/documentation\/haishinkit\/videotrackscreenobject\/init()"},{"type":"groupMarker","title":"Instance Properties"},{"title":"var chromaKeyColor: CGColor?","path":"\/documentation\/haishinkit\/videotrackscreenobject\/chromakeycolor","type":"property"},{"type":"property","path":"\/documentation\/haishinkit\/videotrackscreenobject\/framerate","title":"var frameRate: Int"},{"type":"property","path":"\/documentation\/haishinkit\/videotrackscreenobject\/track","title":"var track: UInt8"},{"path":"\/documentation\/haishinkit\/videotrackscreenobject\/videogravity","title":"var videoGravity: AVLayerVideoGravity","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videotrackscreenobject\/draw(_:)","type":"method","title":"func draw(some ScreenRenderer)"},{"path":"\/documentation\/haishinkit\/videotrackscreenobject\/makebounds(_:)","type":"method","title":"func makeBounds(CGSize) -> CGRect"},{"path":"\/documentation\/haishinkit\/videotrackscreenobject\/makeimage(_:)","type":"method","title":"func makeImage(some ScreenRenderer) -> CGImage?"},{"title":"func registerVideoEffect(some VideoEffect) -> Bool","path":"\/documentation\/haishinkit\/videotrackscreenobject\/registervideoeffect(_:)","type":"method"},{"path":"\/documentation\/haishinkit\/videotrackscreenobject\/unregistervideoeffect(_:)","type":"method","title":"func unregisterVideoEffect(some VideoEffect) -> Bool"}]},{"title":"Protocols","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"title":"var isRunning: Bool","path":"\/documentation\/haishinkit\/asyncrunner\/isrunning","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/asyncrunner\/startrunning()","type":"method","title":"func startRunning() async"},{"type":"method","path":"\/documentation\/haishinkit\/asyncrunner\/stoprunning()","title":"func stopRunning() async"}],"type":"protocol","path":"\/documentation\/haishinkit\/asyncrunner","title":"AsyncRunner"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"type":"property","path":"\/documentation\/haishinkit\/chromakeyprocessable\/chromakeycolor","title":"var chromaKeyColor: CGColor?"}],"path":"\/documentation\/haishinkit\/chromakeyprocessable","title":"ChromaKeyProcessable","type":"protocol"},{"type":"protocol","children":[{"title":"Instance Properties","type":"groupMarker"},{"type":"property","title":"var audioSettings: AudioCodecSettings","path":"\/documentation\/haishinkit\/hkstream\/audiosettings"},{"type":"property","title":"var readyState: HKStreamReadyState","path":"\/documentation\/haishinkit\/hkstream\/readystate"},{"title":"var soundTransform: SoundTransform?","path":"\/documentation\/haishinkit\/hkstream\/soundtransform","type":"property"},{"path":"\/documentation\/haishinkit\/hkstream\/videosettings","title":"var videoSettings: VideoCodecSettings","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/hkstream\/addoutput(_:)","title":"func addOutput(some HKStreamOutput)","type":"method"},{"path":"\/documentation\/haishinkit\/hkstream\/append(_:)","title":"func append(CMSampleBuffer)","type":"method"},{"path":"\/documentation\/haishinkit\/hkstream\/append(_:when:)","type":"method","title":"func append(AVAudioBuffer, when: AVAudioTime)"},{"title":"func attachAudioPlayer(AudioPlayer?) async","type":"method","path":"\/documentation\/haishinkit\/hkstream\/attachaudioplayer(_:)"},{"type":"method","path":"\/documentation\/haishinkit\/hkstream\/dispatch(_:)","title":"func dispatch(NetworkMonitorEvent) async"},{"type":"method","path":"\/documentation\/haishinkit\/hkstream\/removeoutput(_:)","title":"func removeOutput(some HKStreamOutput)"},{"type":"method","path":"\/documentation\/haishinkit\/hkstream\/setaudiosettings(_:)","title":"func setAudioSettings(AudioCodecSettings)"},{"type":"method","title":"func setBitrateStorategy((some HKStreamBitRateStrategy)?)","path":"\/documentation\/haishinkit\/hkstream\/setbitratestorategy(_:)"},{"title":"func setSoundTransform(SoundTransform) async","type":"method","path":"\/documentation\/haishinkit\/hkstream\/setsoundtransform(_:)"},{"title":"func setVideoInputBufferCounts(Int)","path":"\/documentation\/haishinkit\/hkstream\/setvideoinputbuffercounts(_:)","type":"method"},{"type":"method","path":"\/documentation\/haishinkit\/hkstream\/setvideosettings(_:)","title":"func setVideoSettings(VideoCodecSettings)"}],"path":"\/documentation\/haishinkit\/hkstream","title":"HKStream"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var mamimumAudioBitRate: Int","path":"\/documentation\/haishinkit\/hkstreambitratestrategy\/mamimumaudiobitrate"},{"type":"property","title":"var mamimumVideoBitRate: Int","path":"\/documentation\/haishinkit\/hkstreambitratestrategy\/mamimumvideobitrate"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/hkstreambitratestrategy\/adjustbitrate(_:stream:)","title":"func adjustBitrate(NetworkMonitorEvent, stream: some HKStream) async","type":"method"}],"path":"\/documentation\/haishinkit\/hkstreambitratestrategy","title":"HKStreamBitRateStrategy","type":"protocol"},{"type":"protocol","path":"\/documentation\/haishinkit\/hkstreamoutput","title":"HKStreamOutput","children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/hkstreamoutput\/stream(_:didoutput:)","type":"method","title":"func stream(some HKStream, didOutput: CMSampleBuffer)"},{"path":"\/documentation\/haishinkit\/hkstreamoutput\/stream(_:didoutput:when:)","type":"method","title":"func stream(some HKStream, didOutput: AVAudioBuffer, when: AVAudioTime)"}]},{"type":"protocol","path":"\/documentation\/haishinkit\/mediamixeroutput","title":"MediaMixerOutput","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var audioTrackId: UInt8?","path":"\/documentation\/haishinkit\/mediamixeroutput\/audiotrackid","type":"property"},{"type":"property","path":"\/documentation\/haishinkit\/mediamixeroutput\/videotrackid","title":"var videoTrackId: UInt8?"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func mixer(MediaMixer, didOutput: CMSampleBuffer)","type":"method","path":"\/documentation\/haishinkit\/mediamixeroutput\/mixer(_:didoutput:)"},{"path":"\/documentation\/haishinkit\/mediamixeroutput\/mixer(_:didoutput:when:)","title":"func mixer(MediaMixer, didOutput: AVAudioPCMBuffer, when: AVAudioTime)","type":"method"},{"type":"method","title":"func selectTrack(UInt8?, mediaType: CMFormatDescription.MediaType) async","path":"\/documentation\/haishinkit\/mediamixeroutput\/selecttrack(_:mediatype:)"}]},{"type":"protocol","title":"NetworkConnection","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/networkconnection\/connected","title":"var connected: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/networkconnection\/close()","title":"func close() async throws","type":"method"}],"path":"\/documentation\/haishinkit\/networkconnection"},{"type":"protocol","path":"\/documentation\/haishinkit\/networktransportreporter","title":"NetworkTransportReporter","children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/networktransportreporter\/makenetworkmonitor()","type":"method","title":"func makeNetworkMonitor() async -> NetworkMonitor"},{"title":"func makeNetworkTransportReport() async -> NetworkTransportReport","path":"\/documentation\/haishinkit\/networktransportreporter\/makenetworktransportreport()","type":"method"}]},{"title":"Runner","type":"protocol","children":[{"title":"Instance Properties","type":"groupMarker"},{"type":"property","title":"var isRunning: Bool","path":"\/documentation\/haishinkit\/runner\/isrunning"},{"type":"groupMarker","title":"Instance Methods"},{"title":"func startRunning()","path":"\/documentation\/haishinkit\/runner\/startrunning()","type":"method"},{"title":"func stopRunning()","path":"\/documentation\/haishinkit\/runner\/stoprunning()","type":"method"}],"path":"\/documentation\/haishinkit\/runner"},{"title":"ScreenDelegate","path":"\/documentation\/haishinkit\/screendelegate","children":[{"type":"groupMarker","title":"Instance Methods"},{"title":"func screen(Screen, willLayout: CMTime)","path":"\/documentation\/haishinkit\/screendelegate\/screen(_:willlayout:)","type":"method"}],"type":"protocol"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var backgroundColor: CGColor","path":"\/documentation\/haishinkit\/screenrenderer\/backgroundcolor"},{"path":"\/documentation\/haishinkit\/screenrenderer\/bounds","title":"var bounds: CGRect","type":"property"},{"title":"var context: CIContext","type":"property","path":"\/documentation\/haishinkit\/screenrenderer\/context"},{"type":"property","title":"var presentationTimeStamp: CMTime","path":"\/documentation\/haishinkit\/screenrenderer\/presentationtimestamp"},{"title":"Instance Methods","type":"groupMarker"},{"type":"method","title":"func draw(ScreenObject)","path":"\/documentation\/haishinkit\/screenrenderer\/draw(_:)"},{"title":"func layout(ScreenObject)","path":"\/documentation\/haishinkit\/screenrenderer\/layout(_:)","type":"method"},{"type":"method","title":"func setTarget(CVPixelBuffer?)","path":"\/documentation\/haishinkit\/screenrenderer\/settarget(_:)"}],"title":"ScreenRenderer","type":"protocol","path":"\/documentation\/haishinkit\/screenrenderer"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func execute(CIImage) -> CIImage","path":"\/documentation\/haishinkit\/videoeffect\/execute(_:)","type":"method"}],"type":"protocol","title":"VideoEffect","path":"\/documentation\/haishinkit\/videoeffect"},{"type":"groupMarker","title":"Structures"},{"title":"AMFArray","path":"\/documentation\/haishinkit\/amfarray","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/haishinkit\/amfarray\/init(count:)","title":"init(count: Int)"},{"title":"init(data: [(any Sendable)?])","type":"init","path":"\/documentation\/haishinkit\/amfarray\/init(data:)"},{"title":"Instance Properties","type":"groupMarker"},{"type":"property","path":"\/documentation\/haishinkit\/amfarray\/length","title":"var length: Int"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/amfarray\/subscript(_:)","type":"subscript","title":"subscript(Any) -> (any Sendable)?"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var debugDescription: String","type":"property","path":"\/documentation\/haishinkit\/amfarray\/debugdescription"}],"title":"CustomDebugStringConvertible Implementations","path":"\/documentation\/haishinkit\/amfarray\/customdebugstringconvertible-implementations","type":"symbol"},{"title":"Equatable Implementations","path":"\/documentation\/haishinkit\/amfarray\/equatable-implementations","type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"type":"op","path":"\/documentation\/haishinkit\/amfarray\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"},{"title":"static func == (AMFArray, AMFArray) -> Bool","path":"\/documentation\/haishinkit\/amfarray\/==(_:_:)","type":"op"}]},{"path":"\/documentation\/haishinkit\/amfarray\/expressiblebyarrayliteral-implementations","type":"symbol","title":"ExpressibleByArrayLiteral Implementations","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/amfarray\/init(arrayliteral:)","type":"init","title":"init(arrayLiteral: (any Sendable)?...)"}]}],"type":"struct"},{"path":"\/documentation\/haishinkit\/amftypedobject","type":"struct","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"let data: AMFObject","type":"property","path":"\/documentation\/haishinkit\/amftypedobject\/data"},{"type":"property","path":"\/documentation\/haishinkit\/amftypedobject\/typename","title":"let typeName: String"}],"title":"AMFTypedObject"},{"path":"\/documentation\/haishinkit\/amfundefined","type":"struct","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var description: String","path":"\/documentation\/haishinkit\/amfundefined\/description","type":"property"}],"title":"AMFUndefined"},{"title":"AMFXML","path":"\/documentation\/haishinkit\/amfxml","type":"struct","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/amfxml\/init(data:)","type":"init","title":"init(data: String)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/haishinkit\/amfxml\/description","title":"var description: String"},{"title":"Default Implementations","type":"groupMarker"},{"type":"symbol","title":"Equatable Implementations","path":"\/documentation\/haishinkit\/amfxml\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/haishinkit\/amfxml\/!=(_:_:)","type":"op"},{"title":"static func == (AMFXML, AMFXML) -> Bool","type":"op","path":"\/documentation\/haishinkit\/amfxml\/==(_:_:)"}]}]},{"type":"struct","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(data: String)","type":"init","path":"\/documentation\/haishinkit\/amfxmldocument\/init(data:)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var description: String","path":"\/documentation\/haishinkit\/amfxmldocument\/description"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/haishinkit\/amfxmldocument\/!=(_:_:)"},{"type":"op","title":"static func == (AMFXMLDocument, AMFXMLDocument) -> Bool","path":"\/documentation\/haishinkit\/amfxmldocument\/==(_:_:)"}],"path":"\/documentation\/haishinkit\/amfxmldocument\/equatable-implementations","type":"symbol"}],"title":"AMFXMLDocument","path":"\/documentation\/haishinkit\/amfxmldocument"},{"path":"\/documentation\/haishinkit\/audiocodecsettings","children":[{"type":"groupMarker","title":"Initializers"},{"title":"init(bitRate: Int, downmix: Bool, channelMap: [Int]?, sampleRate: Float64, format: AudioCodecSettings.Format)","type":"init","path":"\/documentation\/haishinkit\/audiocodecsettings\/init(bitrate:downmix:channelmap:samplerate:format:)"},{"title":"init(from: any Decoder) throws","type":"init","path":"\/documentation\/haishinkit\/audiocodecsettings\/init(from:)"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/audiocodecsettings\/bitrate","type":"property","title":"var bitRate: Int"},{"type":"property","title":"var channelMap: [Int]?","path":"\/documentation\/haishinkit\/audiocodecsettings\/channelmap"},{"title":"var downmix: Bool","path":"\/documentation\/haishinkit\/audiocodecsettings\/downmix","type":"property"},{"title":"var format: AudioCodecSettings.Format","path":"\/documentation\/haishinkit\/audiocodecsettings\/format-swift.property","type":"property"},{"path":"\/documentation\/haishinkit\/audiocodecsettings\/samplerate","title":"let sampleRate: Float64","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"type":"property","title":"static let `default`: AudioCodecSettings","path":"\/documentation\/haishinkit\/audiocodecsettings\/default"},{"path":"\/documentation\/haishinkit\/audiocodecsettings\/defaultbitrate","type":"property","title":"static let defaultBitRate: Int"},{"path":"\/documentation\/haishinkit\/audiocodecsettings\/maximumnumberofchannels","type":"property","title":"static let maximumNumberOfChannels: UInt32"},{"type":"groupMarker","title":"Enumerations"},{"title":"AudioCodecSettings.Format","path":"\/documentation\/haishinkit\/audiocodecsettings\/format-swift.enum","type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"title":"case aac","path":"\/documentation\/haishinkit\/audiocodecsettings\/format-swift.enum\/aac","type":"case"},{"type":"case","title":"case opus","path":"\/documentation\/haishinkit\/audiocodecsettings\/format-swift.enum\/opus"},{"title":"case pcm","type":"case","path":"\/documentation\/haishinkit\/audiocodecsettings\/format-swift.enum\/pcm"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/audiocodecsettings\/format-swift.enum\/init(from:)","type":"init","title":"init(from: any Decoder) throws"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/haishinkit\/audiocodecsettings\/format-swift.enum\/!=(_:_:)","type":"op"}],"title":"Equatable Implementations","path":"\/documentation\/haishinkit\/audiocodecsettings\/format-swift.enum\/equatable-implementations"}]}],"type":"struct","title":"AudioCodecSettings"},{"path":"\/documentation\/haishinkit\/audiomixersettings","children":[{"title":"Initializers","type":"groupMarker"},{"type":"init","title":"init(sampleRate: Float64, channels: UInt32, isMuted: Bool, mainTrack: UInt8, tracks: [UInt8 : AudioMixerTrackSettings])","path":"\/documentation\/haishinkit\/audiomixersettings\/init(samplerate:channels:ismuted:maintrack:tracks:)"},{"title":"Instance Properties","type":"groupMarker"},{"type":"property","path":"\/documentation\/haishinkit\/audiomixersettings\/channels","title":"let channels: UInt32"},{"path":"\/documentation\/haishinkit\/audiomixersettings\/ismuted","title":"var isMuted: Bool","type":"property"},{"type":"property","title":"var mainTrack: UInt8","path":"\/documentation\/haishinkit\/audiomixersettings\/maintrack"},{"path":"\/documentation\/haishinkit\/audiomixersettings\/maximumnumberofchannels","title":"var maximumNumberOfChannels: UInt32","type":"property"},{"title":"let sampleRate: Float64","type":"property","path":"\/documentation\/haishinkit\/audiomixersettings\/samplerate"},{"path":"\/documentation\/haishinkit\/audiomixersettings\/tracks","title":"var tracks: [UInt8 : AudioMixerTrackSettings]","type":"property"},{"type":"groupMarker","title":"Type Properties"},{"title":"static let `default`: AudioMixerSettings","path":"\/documentation\/haishinkit\/audiomixersettings\/default","type":"property"},{"title":"static let maximumSampleRate: Float64","type":"property","path":"\/documentation\/haishinkit\/audiomixersettings\/maximumsamplerate"}],"type":"struct","title":"AudioMixerSettings"},{"children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init(from: any Decoder) throws","path":"\/documentation\/haishinkit\/audiomixertracksettings\/init(from:)"},{"type":"init","path":"\/documentation\/haishinkit\/audiomixertracksettings\/init(volume:ismuted:downmix:channelmap:)","title":"init(volume: Float, isMuted: Bool, downmix: Bool, channelMap: [Int]?)"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/audiomixertracksettings\/channelmap","type":"property","title":"var channelMap: [Int]?"},{"path":"\/documentation\/haishinkit\/audiomixertracksettings\/downmix","type":"property","title":"var downmix: Bool"},{"title":"var isMuted: Bool","path":"\/documentation\/haishinkit\/audiomixertracksettings\/ismuted","type":"property"},{"path":"\/documentation\/haishinkit\/audiomixertracksettings\/volume","title":"var volume: Float","type":"property"},{"type":"groupMarker","title":"Type Properties"},{"title":"static let `default`: AudioMixerTrackSettings","path":"\/documentation\/haishinkit\/audiomixertracksettings\/default","type":"property"}],"path":"\/documentation\/haishinkit\/audiomixertracksettings","type":"struct","title":"AudioMixerTrackSettings"},{"title":"HKAtomic","type":"struct","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/haishinkit\/hkatomic\/init(_:)","title":"init(A)"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/hkatomic\/value","type":"property","title":"var value: A"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/hkatomic\/mutate(_:)","type":"method","title":"func mutate((inout A) -> Void)"}],"path":"\/documentation\/haishinkit\/hkatomic"},{"title":"NetworkMonitorReport","type":"struct","path":"\/documentation\/haishinkit\/networkmonitorreport","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"let currentBytesInPerSecond: Int","path":"\/documentation\/haishinkit\/networkmonitorreport\/currentbytesinpersecond"},{"title":"let currentBytesOutPerSecond: Int","path":"\/documentation\/haishinkit\/networkmonitorreport\/currentbytesoutpersecond","type":"property"},{"title":"let currentQueueBytesOut: Int","type":"property","path":"\/documentation\/haishinkit\/networkmonitorreport\/currentqueuebytesout"},{"path":"\/documentation\/haishinkit\/networkmonitorreport\/totalbytesin","type":"property","title":"let totalBytesIn: Int"},{"title":"let totalBytesOut: Int","type":"property","path":"\/documentation\/haishinkit\/networkmonitorreport\/totalbytesout"}]},{"path":"\/documentation\/haishinkit\/networktransportreport","type":"struct","title":"NetworkTransportReport","children":[{"type":"groupMarker","title":"Initializers"},{"title":"init(queueBytesOut: Int, totalBytesIn: Int, totalBytesOut: Int)","path":"\/documentation\/haishinkit\/networktransportreport\/init(queuebytesout:totalbytesin:totalbytesout:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"type":"property","title":"let queueBytesOut: Int","path":"\/documentation\/haishinkit\/networktransportreport\/queuebytesout"},{"path":"\/documentation\/haishinkit\/networktransportreport\/totalbytesin","type":"property","title":"let totalBytesIn: Int"},{"path":"\/documentation\/haishinkit\/networktransportreport\/totalbytesout","title":"let totalBytesOut: Int","type":"property"}]},{"title":"RTMPResponse","type":"struct","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"let arguments: [(any Sendable)?]","type":"property","path":"\/documentation\/haishinkit\/rtmpresponse\/arguments"},{"title":"let status: RTMPStatus?","type":"property","path":"\/documentation\/haishinkit\/rtmpresponse\/status"}],"path":"\/documentation\/haishinkit\/rtmpresponse"},{"title":"RTMPStatus","type":"struct","path":"\/documentation\/haishinkit\/rtmpstatus","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"let code: String","path":"\/documentation\/haishinkit\/rtmpstatus\/code"},{"type":"property","path":"\/documentation\/haishinkit\/rtmpstatus\/description","title":"let description: String"},{"path":"\/documentation\/haishinkit\/rtmpstatus\/level","type":"property","title":"let level: String"},{"type":"groupMarker","title":"Subscripts"},{"type":"subscript","title":"subscript(dynamicMember _: String) -> Double?","path":"\/documentation\/haishinkit\/rtmpstatus\/subscript(dynamicmember:)-7qc0b"},{"title":"subscript(dynamicMember _: String) -> String?","type":"subscript","path":"\/documentation\/haishinkit\/rtmpstatus\/subscript(dynamicmember:)-9sprr"}]},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/rtmpstreaminfo\/bytecount","type":"property","title":"var byteCount: Int"},{"title":"var currentBytesPerSecond: Int","type":"property","path":"\/documentation\/haishinkit\/rtmpstreaminfo\/currentbytespersecond"},{"title":"var resourceName: String?","type":"property","path":"\/documentation\/haishinkit\/rtmpstreaminfo\/resourcename"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/rtmpstreaminfo\/customdebugstringconvertible-implementations","type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var debugDescription: String","type":"property","path":"\/documentation\/haishinkit\/rtmpstreaminfo\/debugdescription"}],"title":"CustomDebugStringConvertible Implementations"}],"title":"RTMPStreamInfo","type":"struct","path":"\/documentation\/haishinkit\/rtmpstreaminfo"},{"type":"struct","title":"SoundTransform","path":"\/documentation\/haishinkit\/soundtransform","children":[{"type":"groupMarker","title":"Initializers"},{"title":"init(volume: Float, pan: Float)","type":"init","path":"\/documentation\/haishinkit\/soundtransform\/init(volume:pan:)"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/soundtransform\/pan","title":"var pan: Float","type":"property"},{"title":"var volume: Float","path":"\/documentation\/haishinkit\/soundtransform\/volume","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"title":"static let defaultPan: Float","path":"\/documentation\/haishinkit\/soundtransform\/defaultpan","type":"property"},{"path":"\/documentation\/haishinkit\/soundtransform\/defaultvolume","type":"property","title":"static let defaultVolume: Float"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/soundtransform\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/haishinkit\/soundtransform\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol"},{"type":"symbol","title":"Equatable Implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/haishinkit\/soundtransform\/!=(_:_:)"}],"path":"\/documentation\/haishinkit\/soundtransform\/equatable-implementations"}]},{"title":"VTSessionOption","type":"struct","path":"\/documentation\/haishinkit\/vtsessionoption","children":[{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","path":"\/documentation\/haishinkit\/vtsessionoption\/equatable-implementations","title":"Equatable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/vtsessionoption\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"},{"title":"static func == (VTSessionOption, VTSessionOption) -> Bool","path":"\/documentation\/haishinkit\/vtsessionoption\/==(_:_:)","type":"op"}]},{"type":"symbol","path":"\/documentation\/haishinkit\/vtsessionoption\/hashable-implementations","title":"Hashable Implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func hash(into: inout Hasher)","path":"\/documentation\/haishinkit\/vtsessionoption\/hash(into:)","type":"method"}]}]},{"children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/init(videosize:bitrate:profilelevel:scalingmode:bitratemode:maxkeyframeintervalduration:allowframereordering:dataratelimits:ishardwareencoderenabled:)","type":"init","title":"init(videoSize: CGSize, bitRate: Int, profileLevel: String, scalingMode: VideoCodecSettings.ScalingMode, bitRateMode: VideoCodecSettings.BitRateMode, maxKeyFrameIntervalDuration: Int32, allowFrameReordering: Bool?, dataRateLimits: [Double]?, isHardwareEncoderEnabled: Bool)"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/allowframereordering","title":"var allowFrameReordering: Bool?","type":"property"},{"type":"property","path":"\/documentation\/haishinkit\/videocodecsettings\/bitrate","title":"var bitRate: Int"},{"type":"property","title":"var bitRateMode: VideoCodecSettings.BitRateMode","path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.property"},{"title":"var dataRateLimits: [Double]?","path":"\/documentation\/haishinkit\/videocodecsettings\/dataratelimits","type":"property"},{"title":"var frameInterval: Double","path":"\/documentation\/haishinkit\/videocodecsettings\/frameinterval","type":"property"},{"title":"var isHardwareEncoderEnabled: Bool","path":"\/documentation\/haishinkit\/videocodecsettings\/ishardwareencoderenabled","type":"property"},{"title":"var maxKeyFrameIntervalDuration: Int32","type":"property","path":"\/documentation\/haishinkit\/videocodecsettings\/maxkeyframeintervalduration"},{"type":"property","title":"var profileLevel: String","path":"\/documentation\/haishinkit\/videocodecsettings\/profilelevel"},{"title":"var scalingMode: VideoCodecSettings.ScalingMode","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.property","type":"property"},{"type":"property","title":"var videoSize: CGSize","path":"\/documentation\/haishinkit\/videocodecsettings\/videosize"},{"type":"groupMarker","title":"Type Properties"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/default","type":"property","title":"static let `default`: VideoCodecSettings"},{"title":"static let frameInterval01: Double","type":"property","path":"\/documentation\/haishinkit\/videocodecsettings\/frameinterval01"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/frameinterval05","type":"property","title":"static let frameInterval05: Double"},{"title":"static let frameInterval10: Double","path":"\/documentation\/haishinkit\/videocodecsettings\/frameinterval10","type":"property"},{"type":"property","title":"static let frameInterval30: Double","path":"\/documentation\/haishinkit\/videocodecsettings\/frameinterval30"},{"title":"Enumerations","type":"groupMarker"},{"title":"VideoCodecSettings.BitRateMode","type":"enum","path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/average","type":"case","title":"case average"},{"type":"case","path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/constant","title":"case constant"},{"title":"Initializers","type":"groupMarker"},{"type":"init","title":"init?(rawValue: String)","path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/init(rawvalue:)"},{"title":"Default Implementations","type":"groupMarker"},{"type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/!=(_:_:)"}],"title":"Equatable Implementations","path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/equatable-implementations"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/rawrepresentable-implementations","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var hashValue: Int","path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/hashvalue"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/encode(to:)","title":"func encode(to: any Encoder) throws"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"title":"RawRepresentable Implementations","type":"symbol"}]},{"title":"VideoCodecSettings.ScalingMode","type":"enum","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"title":"case cropSourceToCleanAperture","type":"case","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/cropsourcetocleanaperture"},{"type":"case","title":"case letterbox","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/letterbox"},{"title":"case normal","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/normal","type":"case"},{"type":"case","title":"case trim","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/trim"},{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init?(rawValue: String)","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/init(rawvalue:)"},{"type":"groupMarker","title":"Default Implementations"},{"title":"Equatable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/!=(_:_:)"}],"path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/equatable-implementations","type":"symbol"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/rawrepresentable-implementations","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/init(from:)","type":"init","title":"init(from: any Decoder) throws"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/hashvalue","type":"property"},{"type":"groupMarker","title":"Instance Methods"},{"title":"func encode(to: any Encoder) throws","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/encode(to:)","type":"method"},{"title":"func hash(into: inout Hasher)","type":"method","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/hash(into:)"}],"title":"RawRepresentable Implementations","type":"symbol"}]}],"type":"struct","title":"VideoCodecSettings","path":"\/documentation\/haishinkit\/videocodecsettings"},{"type":"struct","title":"VideoMixerSettings","path":"\/documentation\/haishinkit\/videomixersettings","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/haishinkit\/videomixersettings\/init(from:)","type":"init"},{"type":"init","path":"\/documentation\/haishinkit\/videomixersettings\/init(mode:ismuted:maintrack:)","title":"init(mode: VideoMixerSettings.Mode, isMuted: Bool, mainTrack: UInt8)"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videomixersettings\/ismuted","title":"var isMuted: Bool","type":"property"},{"title":"var mainTrack: UInt8","type":"property","path":"\/documentation\/haishinkit\/videomixersettings\/maintrack"},{"path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.property","type":"property","title":"var mode: VideoMixerSettings.Mode"},{"type":"groupMarker","title":"Type Properties"},{"title":"static let `default`: VideoMixerSettings","type":"property","path":"\/documentation\/haishinkit\/videomixersettings\/default"},{"title":"Enumerations","type":"groupMarker"},{"title":"VideoMixerSettings.Mode","path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum","type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/offscreen","title":"case offscreen"},{"path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/passthrough","type":"case","title":"case passthrough"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: String)","type":"init","path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/init(rawvalue:)"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Operators"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/!=(_:_:)","type":"op"}],"path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/equatable-implementations","type":"symbol","title":"Equatable Implementations"},{"type":"symbol","title":"RawRepresentable Implementations","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/encode(to:)","title":"func encode(to: any Encoder) throws"},{"path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/hash(into:)","type":"method","title":"func hash(into: inout Hasher)"}],"path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/rawrepresentable-implementations"}]}]},{"title":"Variables","type":"groupMarker"},{"title":"let kAMFUndefined: AMFUndefined","path":"\/documentation\/haishinkit\/kamfundefined","type":"var"},{"path":"\/documentation\/haishinkit\/khaishinkitidentifier","type":"var","title":"let kHaishinKitIdentifier: String"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/amfobject","title":"AMFObject","type":"typealias"},{"title":"AudioDeviceConfigurationBlock","path":"\/documentation\/haishinkit\/audiodeviceconfigurationblock","type":"typealias"},{"type":"typealias","title":"VideoDeviceConfigurationBlock","path":"\/documentation\/haishinkit\/videodeviceconfigurationblock"},{"title":"Enumerations","type":"groupMarker"},{"type":"enum","children":[{"type":"groupMarker","title":"Type Methods"},{"path":"\/documentation\/haishinkit\/deviceutil\/device(withlocalizedname:mediatype:)","type":"method","title":"static func device(withLocalizedName: String, mediaType: AVMediaType) -> AVCaptureDevice?"}],"title":"DeviceUtil","path":"\/documentation\/haishinkit\/deviceutil"},{"path":"\/documentation\/haishinkit\/hkstreamreadystate","type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"title":"case idle","path":"\/documentation\/haishinkit\/hkstreamreadystate\/idle","type":"case"},{"type":"case","path":"\/documentation\/haishinkit\/hkstreamreadystate\/play","title":"case play"},{"type":"case","title":"case playing","path":"\/documentation\/haishinkit\/hkstreamreadystate\/playing"},{"type":"case","title":"case publish","path":"\/documentation\/haishinkit\/hkstreamreadystate\/publish"},{"title":"case publishing","path":"\/documentation\/haishinkit\/hkstreamreadystate\/publishing","type":"case"},{"type":"groupMarker","title":"Initializers"},{"title":"init?(rawValue: Int)","type":"init","path":"\/documentation\/haishinkit\/hkstreamreadystate\/init(rawvalue:)"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"type":"op","path":"\/documentation\/haishinkit\/hkstreamreadystate\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"}],"title":"Equatable Implementations","type":"symbol","path":"\/documentation\/haishinkit\/hkstreamreadystate\/equatable-implementations"},{"path":"\/documentation\/haishinkit\/hkstreamreadystate\/rawrepresentable-implementations","type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"type":"property","title":"var hashValue: Int","path":"\/documentation\/haishinkit\/hkstreamreadystate\/hashvalue"},{"type":"groupMarker","title":"Instance Methods"},{"title":"func hash(into: inout Hasher)","path":"\/documentation\/haishinkit\/hkstreamreadystate\/hash(into:)","type":"method"}],"title":"RawRepresentable Implementations"}],"title":"HKStreamReadyState"},{"path":"\/documentation\/haishinkit\/networkmonitorevent","title":"NetworkMonitorEvent","type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/networkmonitorevent\/publishinsufficientbwoccured(report:)","title":"case publishInsufficientBWOccured(report: NetworkMonitorReport)","type":"case"},{"title":"case reset","path":"\/documentation\/haishinkit\/networkmonitorevent\/reset","type":"case"},{"path":"\/documentation\/haishinkit\/networkmonitorevent\/status(report:)","type":"case","title":"case status(report: NetworkMonitorReport)"}]},{"title":"RTMPObjectEncoding","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"title":"case amf0","path":"\/documentation\/haishinkit\/rtmpobjectencoding\/amf0","type":"case"},{"title":"case amf3","type":"case","path":"\/documentation\/haishinkit\/rtmpobjectencoding\/amf3"},{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/haishinkit\/rtmpobjectencoding\/init(rawvalue:)","type":"init","title":"init?(rawValue: UInt8)"},{"title":"Default Implementations","type":"groupMarker"},{"type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/haishinkit\/rtmpobjectencoding\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"title":"Equatable Implementations","path":"\/documentation\/haishinkit\/rtmpobjectencoding\/equatable-implementations"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/rtmpobjectencoding\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"type":"method","title":"func hash(into: inout Hasher)","path":"\/documentation\/haishinkit\/rtmpobjectencoding\/hash(into:)"}],"title":"RawRepresentable Implementations","type":"symbol","path":"\/documentation\/haishinkit\/rtmpobjectencoding\/rawrepresentable-implementations"}],"type":"enum","path":"\/documentation\/haishinkit\/rtmpobjectencoding"},{"type":"groupMarker","title":"Extended Modules"},{"children":[{"type":"groupMarker","title":"Extended Classes"},{"title":"CMFormatDescription","children":[{"type":"groupMarker","title":"Instance Properties"},{"title":"var isCompressed: Bool","path":"\/documentation\/haishinkit\/coremedia\/cmformatdescription\/iscompressed","type":"property"}],"path":"\/documentation\/haishinkit\/coremedia\/cmformatdescription","type":"extension"}],"title":"CoreMedia","type":"extension","path":"\/documentation\/haishinkit\/coremedia"}],"title":"HaishinKit","path":"\/documentation\/haishinkit","type":"module"},{"path":"\/documentation\/moqthaishinkit","type":"module","children":[{"title":"Classes","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/init(_:requesttimeout:)","title":"init(MoQTSetupRole, requestTimeOut: UInt64)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var objectStream: AsyncStream<MoQTObject>","path":"\/documentation\/moqthaishinkit\/moqtconnection\/objectstream","type":"property"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/requesttimeout","type":"property","title":"let requestTimeout: UInt64"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/role","type":"property","title":"let role: MoQTSetupRole"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/annouce(_:authinfo:)","type":"method","title":"func annouce([String], authInfo: String?) async throws -> Result<MoQTAnnounceOk, MoQTAnnounceError>"},{"title":"func close() async","path":"\/documentation\/moqthaishinkit\/moqtconnection\/close()","type":"method"},{"type":"method","path":"\/documentation\/moqthaishinkit\/moqtconnection\/connect(_:)","title":"func connect(String) async throws -> MoQTServerSetup"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/send(_:header:)","type":"method","title":"func send([MoQTObject], header: MoQTStreamHeaderSubgroup) async throws"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/subscribe(_:name:authinfo:)","title":"func subscribe([String], name: String, authInfo: String?) async throws -> Result<MoQTSubscribeOk, MoQTSubscribeError>","type":"method"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/subscribeannouces(_:authinfo:)","title":"func subscribeAnnouces([String], authInfo: String?) async throws -> Result<MoQTSubscribeAnnouncesOk, MoQTSubscribeAnnouncesError>","type":"method"},{"type":"groupMarker","title":"Type Properties"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/defaultport","type":"property","title":"static let defaultPort: Int"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtconnection\/defaultrequesttimeout","title":"static let defaultRequestTimeout: UInt64"},{"type":"property","title":"static let supportedProtocols: [String]","path":"\/documentation\/moqthaishinkit\/moqtconnection\/supportedprotocols"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/supportedversions","title":"static let supportedVersions: [MoQTVersion]","type":"property"},{"type":"groupMarker","title":"Enumerations"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/error","type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"type":"case","path":"\/documentation\/moqthaishinkit\/moqtconnection\/error\/connectiontimedout","title":"case connectionTimedOut"},{"type":"case","title":"case invalidState","path":"\/documentation\/moqthaishinkit\/moqtconnection\/error\/invalidstate"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/error\/requesttimedout","type":"case","title":"case requestTimedOut"},{"title":"case socketErrorOccurred(any Error)","path":"\/documentation\/moqthaishinkit\/moqtconnection\/error\/socketerroroccurred(_:)","type":"case"},{"title":"case unknownResponse","type":"case","path":"\/documentation\/moqthaishinkit\/moqtconnection\/error\/unknownresponse"},{"title":"case unsupportedCommand(String)","type":"case","path":"\/documentation\/moqthaishinkit\/moqtconnection\/error\/unsupportedcommand(_:)"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtconnection\/error\/localizeddescription","title":"var localizedDescription: String"}],"title":"Error Implementations","type":"symbol","path":"\/documentation\/moqthaishinkit\/moqtconnection\/error\/error-implementations"}],"title":"MoQTConnection.Error"},{"type":"groupMarker","title":"Default Implementations"},{"title":"Actor Implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/assertisolated(_:file:line:)","type":"method","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)"},{"title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","type":"method","path":"\/documentation\/moqthaishinkit\/moqtconnection\/assumeisolated(_:file:line:)"},{"title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/moqthaishinkit\/moqtconnection\/preconditionisolated(_:file:line:)","type":"method"}],"path":"\/documentation\/moqthaishinkit\/moqtconnection\/actor-implementations","type":"symbol"}],"title":"MoQTConnection","path":"\/documentation\/moqthaishinkit\/moqtconnection","type":"class"},{"title":"Protocols","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/moqthaishinkit\/moqtcontrolmessage\/payload","title":"var payload: Data","type":"property"},{"title":"var type: MoQTMessageType","path":"\/documentation\/moqthaishinkit\/moqtcontrolmessage\/type","type":"property"}],"path":"\/documentation\/moqthaishinkit\/moqtcontrolmessage","type":"protocol","title":"MoQTControlMessage"},{"type":"groupMarker","title":"Structures"},{"title":"MoQTAnnounce","path":"\/documentation\/moqthaishinkit\/moqtannounce","type":"struct","children":[{"title":"Instance Properties","type":"groupMarker"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtannounce\/payload","title":"var payload: Data"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtannounce\/subscribeparameters","title":"let subscribeParameters: [MoQTVersionSpecificParameter]"},{"type":"property","title":"let trackNamespace: [String]","path":"\/documentation\/moqthaishinkit\/moqtannounce\/tracknamespace"},{"title":"let type: MoQTMessageType","path":"\/documentation\/moqthaishinkit\/moqtannounce\/type","type":"property"}]},{"title":"MoQTAnnounceError","path":"\/documentation\/moqthaishinkit\/moqtannounceerror","children":[{"type":"groupMarker","title":"Instance Properties"},{"title":"let code: Int","type":"property","path":"\/documentation\/moqthaishinkit\/moqtannounceerror\/code"},{"type":"property","title":"var payload: Data","path":"\/documentation\/moqthaishinkit\/moqtannounceerror\/payload"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtannounceerror\/reasonphrase","title":"let reasonPhrase: String"},{"title":"let trackNamespace: [String]","type":"property","path":"\/documentation\/moqthaishinkit\/moqtannounceerror\/tracknamespace"},{"title":"let type: MoQTMessageType","path":"\/documentation\/moqthaishinkit\/moqtannounceerror\/type","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Error Implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var localizedDescription: String","path":"\/documentation\/moqthaishinkit\/moqtannounceerror\/localizeddescription","type":"property"}],"type":"symbol","path":"\/documentation\/moqthaishinkit\/moqtannounceerror\/error-implementations"}],"type":"struct"},{"title":"MoQTAnnounceOk","type":"struct","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var payload: Data","path":"\/documentation\/moqthaishinkit\/moqtannounceok\/payload"},{"path":"\/documentation\/moqthaishinkit\/moqtannounceok\/tracknamespace","type":"property","title":"let trackNamespace: [String]"},{"title":"let type: MoQTMessageType","type":"property","path":"\/documentation\/moqthaishinkit\/moqtannounceok\/type"}],"path":"\/documentation\/moqthaishinkit\/moqtannounceok"},{"title":"MoQTGoaway","type":"struct","path":"\/documentation\/moqthaishinkit\/moqtgoaway","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"let newSessionURI: String","type":"property","path":"\/documentation\/moqthaishinkit\/moqtgoaway\/newsessionuri"},{"type":"property","title":"var payload: Data","path":"\/documentation\/moqthaishinkit\/moqtgoaway\/payload"},{"path":"\/documentation\/moqthaishinkit\/moqtgoaway\/type","type":"property","title":"let type: MoQTMessageType"}]},{"title":"MoQTObject","type":"struct","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtobject\/init(id:status:data:)","type":"init","title":"init(id: Int, status: Int?, data: Data)"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtobject\/data","type":"property","title":"let data: Data"},{"path":"\/documentation\/moqthaishinkit\/moqtobject\/id","title":"let id: Int","type":"property"},{"title":"let status: Int?","path":"\/documentation\/moqthaishinkit\/moqtobject\/status","type":"property"}],"path":"\/documentation\/moqthaishinkit\/moqtobject"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var payload: Data","path":"\/documentation\/moqthaishinkit\/moqtserversetup\/payload"},{"title":"let selectedVersion: Int","path":"\/documentation\/moqthaishinkit\/moqtserversetup\/selectedversion","type":"property"},{"title":"let setupParameters: [MoQTSetupParameter]","path":"\/documentation\/moqthaishinkit\/moqtserversetup\/setupparameters","type":"property"},{"type":"property","title":"let type: MoQTMessageType","path":"\/documentation\/moqthaishinkit\/moqtserversetup\/type"}],"path":"\/documentation\/moqthaishinkit\/moqtserversetup","type":"struct","title":"MoQTServerSetup"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"let key: MoQTSetupParameterType","path":"\/documentation\/moqthaishinkit\/moqtsetupparameter\/key"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtsetupparameter\/value","title":"let value: (any Sendable)"}],"path":"\/documentation\/moqthaishinkit\/moqtsetupparameter","type":"struct","title":"MoQTSetupParameter"},{"type":"struct","title":"MoQTStreamHeaderSubgroup","path":"\/documentation\/moqthaishinkit\/moqtstreamheadersubgroup","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/moqthaishinkit\/moqtstreamheadersubgroup\/init(trackalias:groupid:subgroupid:publisherpriority:)","title":"init(trackAlias: Int, groupId: Int, subgroupId: Int, publisherPriority: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtstreamheadersubgroup\/groupid","type":"property","title":"let groupId: Int"},{"type":"property","title":"var payload: Data","path":"\/documentation\/moqthaishinkit\/moqtstreamheadersubgroup\/payload"},{"title":"let publisherPriority: Int","path":"\/documentation\/moqthaishinkit\/moqtstreamheadersubgroup\/publisherpriority","type":"property"},{"title":"let subgroupId: Int","type":"property","path":"\/documentation\/moqthaishinkit\/moqtstreamheadersubgroup\/subgroupid"},{"title":"let trackAlias: Int","path":"\/documentation\/moqthaishinkit\/moqtstreamheadersubgroup\/trackalias","type":"property"},{"title":"let type: MoQTDataStreamType","path":"\/documentation\/moqthaishinkit\/moqtstreamheadersubgroup\/type","type":"property"}]},{"title":"MoQTSubscribe","path":"\/documentation\/moqthaishinkit\/moqtsubscribe","type":"struct","children":[{"type":"groupMarker","title":"Instance Properties"},{"title":"let endGroup: Int?","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/endgroup","type":"property"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/endobject","type":"property","title":"let endObject: Int?"},{"title":"let filterType: MoQTSubscribe.FilterType","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.property","type":"property"},{"title":"let groupOrder: MoQTSubscribe.GroupOrder","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.property","type":"property"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/payload","type":"property","title":"var payload: Data"},{"title":"let startGroup: Int?","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/startgroup","type":"property"},{"type":"property","title":"let startObject: Int?","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/startobject"},{"title":"let subscribeId: Int","type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/subscribeid"},{"title":"let subscribeParameters: [MoQTVersionSpecificParameter]","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/subscribeparameters","type":"property"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/subscribepriority","title":"let subscribePriority: Int"},{"title":"let trackAlias: Int","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/trackalias","type":"property"},{"title":"let trackName: String","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/trackname","type":"property"},{"type":"property","title":"let trackNamespace: [String]","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/tracknamespace"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/type","type":"property","title":"let type: MoQTMessageType"},{"type":"groupMarker","title":"Enumerations"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/absoluterange","title":"case absoluteRange","type":"case"},{"title":"case absoluteStart","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/absolutestart","type":"case"},{"title":"case latestGroup","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/latestgroup","type":"case"},{"title":"case latestObject","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/latestobject","type":"case"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: Int)","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/init(rawvalue:)","type":"init"},{"type":"groupMarker","title":"Default Implementations"},{"title":"Equatable Implementations","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}],"type":"symbol"},{"title":"RawRepresentable Implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"type":"method","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)"}],"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/rawrepresentable-implementations"}],"type":"enum","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum","title":"MoQTSubscribe.FilterType"},{"title":"MoQTSubscribe.GroupOrder","type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/ascending","title":"case ascending","type":"case"},{"type":"case","title":"case descending","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/descending"},{"title":"case original","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/original","type":"case"},{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/equatable-implementations","type":"symbol","title":"Equatable Implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"}]},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/rawrepresentable-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var hashValue: Int","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/hashvalue"},{"type":"groupMarker","title":"Instance Methods"},{"title":"func hash(into: inout Hasher)","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/hash(into:)","type":"method"}],"title":"RawRepresentable Implementations"}],"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum"}]},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounces","title":"MoQTSubscribeAnnounces","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounces\/parameters","type":"property","title":"let parameters: [MoQTVersionSpecificParameter]"},{"title":"var payload: Data","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounces\/payload","type":"property"},{"title":"let trackNamespacePrefix: [String]","type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounces\/tracknamespaceprefix"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounces\/type","type":"property","title":"let type: MoQTMessageType"}],"type":"struct"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounceserror","title":"MoQTSubscribeAnnouncesError","type":"struct","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounceserror\/errorcode","title":"let errorCode: Int","type":"property"},{"title":"var payload: Data","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounceserror\/payload","type":"property"},{"title":"let reasonPhrase: String","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounceserror\/reasonphrase","type":"property"},{"title":"let trackNamespacePrefix: [String]","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounceserror\/tracknamespaceprefix","type":"property"},{"title":"let type: MoQTMessageType","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounceserror\/type","type":"property"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounceserror\/error-implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var localizedDescription: String","type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounceserror\/localizeddescription"}],"title":"Error Implementations"}]},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeannouncesok","type":"struct","title":"MoQTSubscribeAnnouncesOk","children":[{"title":"Instance Properties","type":"groupMarker"},{"type":"property","title":"var payload: Data","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannouncesok\/payload"},{"type":"property","title":"let trackNamespacePrefix: [String]","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannouncesok\/tracknamespaceprefix"},{"title":"let type: MoQTMessageType","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannouncesok\/type","type":"property"}]},{"type":"struct","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror\/code","title":"let code: Int","type":"property"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror\/payload","type":"property","title":"var payload: Data"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror\/reasonphrase","title":"let reasonPhrase: String","type":"property"},{"title":"let subscribeId: Int","path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror\/subscribeid","type":"property"},{"type":"property","title":"let trackAlias: Int","path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror\/trackalias"},{"type":"property","title":"let type: MoQTMessageType","path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror\/type"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror\/error-implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var localizedDescription: String","path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror\/localizeddescription"}],"type":"symbol","title":"Error Implementations"}],"path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror","title":"MoQTSubscribeError"},{"title":"MoQTSubscribeOk","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"let contentExists: Bool","path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/contentexists","type":"property"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/expires","title":"let expires: Int"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/grouporder","title":"let groupOrder: MoQTSubscribe.GroupOrder"},{"type":"property","title":"let largestGroupId: Int?","path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/largestgroupid"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/largestobjectid","type":"property","title":"let largestObjectId: Int?"},{"title":"var payload: Data","path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/payload","type":"property"},{"type":"property","title":"let subscribeId: Int","path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/subscribeid"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/subscribeparameters","title":"let subscribeParameters: [MoQTVersionSpecificParameter]"},{"title":"let type: MoQTMessageType","type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/type"}],"path":"\/documentation\/moqthaishinkit\/moqtsubscribeok","type":"struct"},{"path":"\/documentation\/moqthaishinkit\/moqtversionspecificparameter","title":"MoQTVersionSpecificParameter","type":"struct","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"let key: MoQTVersionSpecificType","path":"\/documentation\/moqthaishinkit\/moqtversionspecificparameter\/key","type":"property"},{"title":"let value: (any Sendable)","path":"\/documentation\/moqthaishinkit\/moqtversionspecificparameter\/value","type":"property"}]},{"title":"Enumerations","type":"groupMarker"},{"title":"MoQTDataStreamType","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"type":"case","title":"case fetchHeader","path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/fetchheader"},{"type":"case","title":"case objectDatagram","path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/objectdatagram"},{"path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/streamheadersubgroup","type":"case","title":"case streamHeaderSubgroup"},{"type":"groupMarker","title":"Initializers"},{"title":"init?(rawValue: Int)","type":"init","path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/init(rawvalue:)"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/equatable-implementations","title":"Equatable Implementations","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}],"type":"symbol"},{"path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"type":"method","title":"func hash(into: inout Hasher)","path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/hash(into:)"}],"type":"symbol"}],"path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype","type":"enum"},{"children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/announce","title":"case announce","type":"case"},{"title":"case announceCancel","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/announcecancel","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/announceerror","type":"case","title":"case announceError"},{"title":"case announceOk","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/announceok","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/clientsetup","title":"case clientSetup","type":"case"},{"title":"case goaway","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/goaway","type":"case"},{"type":"case","title":"case serverSetup","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/serversetup"},{"title":"case subscribe","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/subscribe","type":"case"},{"type":"case","title":"case subscribeAnnounuces","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/subscribeannounuces"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/subscribeannounuceserror","title":"case subscribeAnnounucesError","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/subscribeannounucesok","title":"case subscribeAnnounucesOk","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/subscribedone","title":"case subscribeDone","type":"case"},{"type":"case","title":"case subscribeError","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/subscribeerror"},{"type":"case","title":"case subscribeOk","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/subscribeok"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/subscribeupdate","type":"case","title":"case subscribeUpdate"},{"type":"case","title":"case trackStatus","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/trackstatus"},{"title":"case trackStatusRequest","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/trackstatusrequest","type":"case"},{"title":"case unannounce","type":"case","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/unannounce"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/unsubscribe","type":"case","title":"case unsubscribe"},{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"type":"groupMarker","title":"Default Implementations"},{"title":"Equatable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/!=(_:_:)"}],"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/equatable-implementations","type":"symbol"},{"title":"RawRepresentable Implementations","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/rawrepresentable-implementations","type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/hashvalue","title":"var hashValue: Int"},{"type":"groupMarker","title":"Instance Methods"},{"title":"func hash(into: inout Hasher)","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/hash(into:)","type":"method"}]}],"path":"\/documentation\/moqthaishinkit\/moqtmessagetype","type":"enum","title":"MoQTMessageType"},{"title":"MoQTSetupParameterType","path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype","type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case maxSubscribeId","path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/maxsubscribeid","type":"case"},{"type":"case","title":"case path","path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/path"},{"type":"case","title":"case role","path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/role"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: Int)","path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/init(rawvalue:)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/equatable-implementations","type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"type":"op","path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"}],"title":"Equatable Implementations"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"title":"var hashValue: Int","type":"property","path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/hashvalue"},{"title":"Instance Methods","type":"groupMarker"},{"type":"method","title":"func hash(into: inout Hasher)","path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/hash(into:)"}],"title":"RawRepresentable Implementations","type":"symbol","path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/rawrepresentable-implementations"}]},{"title":"MoQTSetupRole","path":"\/documentation\/moqthaishinkit\/moqtsetuprole","type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"type":"case","title":"case pubSub","path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/pubsub"},{"path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/publisher","type":"case","title":"case publisher"},{"type":"case","title":"case subscriber","path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/subscriber"},{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"type":"groupMarker","title":"Default Implementations"},{"title":"Equatable Implementations","type":"symbol","path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/!=(_:_:)","type":"op"}]},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/hashvalue","title":"var hashValue: Int"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func hash(into: inout Hasher)","path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/hash(into:)","type":"method"}],"title":"RawRepresentable Implementations","type":"symbol","path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/rawrepresentable-implementations"}]},{"type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"type":"case","title":"case draft01","path":"\/documentation\/moqthaishinkit\/moqtversion\/draft01"},{"type":"case","title":"case draft02","path":"\/documentation\/moqthaishinkit\/moqtversion\/draft02"},{"title":"case draft03","path":"\/documentation\/moqthaishinkit\/moqtversion\/draft03","type":"case"},{"type":"case","title":"case draft04","path":"\/documentation\/moqthaishinkit\/moqtversion\/draft04"},{"path":"\/documentation\/moqthaishinkit\/moqtversion\/draft05","type":"case","title":"case draft05"},{"title":"case draft06","type":"case","path":"\/documentation\/moqthaishinkit\/moqtversion\/draft06"},{"path":"\/documentation\/moqthaishinkit\/moqtversion\/draft07","type":"case","title":"case draft07"},{"path":"\/documentation\/moqthaishinkit\/moqtversion\/draft07exp","type":"case","title":"case draft07Exp"},{"title":"case draft07Exp2","type":"case","path":"\/documentation\/moqthaishinkit\/moqtversion\/draft07exp2"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtversion\/init(rawvalue:)","type":"init","title":"init?(rawValue: Int)"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"type":"groupMarker","title":"Operators"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/moqthaishinkit\/moqtversion\/!=(_:_:)"}],"title":"Equatable Implementations","path":"\/documentation\/moqthaishinkit\/moqtversion\/equatable-implementations","type":"symbol"},{"title":"RawRepresentable Implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/moqthaishinkit\/moqtversion\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"type":"method","title":"func hash(into: inout Hasher)","path":"\/documentation\/moqthaishinkit\/moqtversion\/hash(into:)"}],"type":"symbol","path":"\/documentation\/moqthaishinkit\/moqtversion\/rawrepresentable-implementations"}],"path":"\/documentation\/moqthaishinkit\/moqtversion","title":"MoQTVersion"},{"title":"MoQTVersionSpecificType","type":"enum","path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/authorizationinfo","type":"case","title":"case authorizationInfo"},{"path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/deliverytimeout","type":"case","title":"case deliveryTimeout"},{"title":"case maxCacheDuration","path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/maxcacheduration","type":"case"},{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init?(rawValue: Int)","path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/init(rawvalue:)"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","title":"Equatable Implementations","children":[{"type":"groupMarker","title":"Operators"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/!=(_:_:)","type":"op"}],"path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/equatable-implementations"},{"path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/rawrepresentable-implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/hashvalue","type":"property"},{"type":"groupMarker","title":"Instance Methods"},{"title":"func hash(into: inout Hasher)","path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/hash(into:)","type":"method"}],"title":"RawRepresentable Implementations","type":"symbol"}]}],"title":"MoQTHaishinKit"},{"type":"module","title":"SRTHaishinKit","children":[{"title":"Classes","type":"groupMarker"},{"path":"\/documentation\/srthaishinkit\/srtconnection","title":"SRTConnection","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init()","path":"\/documentation\/srthaishinkit\/srtconnection\/init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var connected: Bool","type":"property","path":"\/documentation\/srthaishinkit\/srtconnection\/connected"},{"path":"\/documentation\/srthaishinkit\/srtconnection\/performancedata","title":"var performanceData: SRTPerformanceData?","type":"property"},{"title":"var uri: URL?","path":"\/documentation\/srthaishinkit\/srtconnection\/uri","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/srthaishinkit\/srtconnection\/close()","title":"func close() async","type":"method"},{"title":"func connect(URL?) async throws","path":"\/documentation\/srthaishinkit\/srtconnection\/connect(_:)","type":"method"},{"type":"method","path":"\/documentation\/srthaishinkit\/srtconnection\/open(_:mode:)","title":"func open(URL?, mode: SRTMode) async throws"},{"type":"groupMarker","title":"Type Properties"},{"path":"\/documentation\/srthaishinkit\/srtconnection\/version","type":"property","title":"static let version: String"},{"title":"Enumerations","type":"groupMarker"},{"type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/srthaishinkit\/srtconnection\/error\/failedtoconnect(_:reson:)","title":"case failedToConnect(String, reson: Int32)","type":"case"},{"type":"case","title":"case invalidState","path":"\/documentation\/srthaishinkit\/srtconnection\/error\/invalidstate"},{"title":"case unsupportedUri(URL?)","path":"\/documentation\/srthaishinkit\/srtconnection\/error\/unsupporteduri(_:)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/srthaishinkit\/srtconnection\/error\/error-implementations","title":"Error Implementations","type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var localizedDescription: String","path":"\/documentation\/srthaishinkit\/srtconnection\/error\/localizeddescription","type":"property"}]}],"title":"SRTConnection.Error","path":"\/documentation\/srthaishinkit\/srtconnection\/error"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Instance Methods"},{"title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/srthaishinkit\/srtconnection\/assertisolated(_:file:line:)","type":"method"},{"type":"method","path":"\/documentation\/srthaishinkit\/srtconnection\/assumeisolated(_:file:line:)","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T"},{"title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method","path":"\/documentation\/srthaishinkit\/srtconnection\/preconditionisolated(_:file:line:)"}],"path":"\/documentation\/srthaishinkit\/srtconnection\/actor-implementations","type":"symbol","title":"Actor Implementations"}],"type":"class"},{"title":"SRTLogger","type":"class","children":[{"type":"groupMarker","title":"Instance Properties"},{"title":"var functionalAreas: Set<SRTLogFunctionalArea>","path":"\/documentation\/srthaishinkit\/srtlogger\/functionalareas","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtlogger\/level","title":"var level: SRTLogLevel","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func setFunctionalAreas(Set<SRTLogFunctionalArea>)","path":"\/documentation\/srthaishinkit\/srtlogger\/setfunctionalareas(_:)","type":"method"},{"type":"method","path":"\/documentation\/srthaishinkit\/srtlogger\/setlevel(_:)","title":"func setLevel(SRTLogLevel)"},{"type":"groupMarker","title":"Type Properties"},{"title":"static let shared: SRTLogger","path":"\/documentation\/srthaishinkit\/srtlogger\/shared","type":"property"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/srthaishinkit\/srtlogger\/assertisolated(_:file:line:)","type":"method","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)"},{"type":"method","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","path":"\/documentation\/srthaishinkit\/srtlogger\/assumeisolated(_:file:line:)"},{"title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/srthaishinkit\/srtlogger\/preconditionisolated(_:file:line:)","type":"method"}],"type":"symbol","title":"Actor Implementations","path":"\/documentation\/srthaishinkit\/srtlogger\/actor-implementations"}],"path":"\/documentation\/srthaishinkit\/srtlogger"},{"title":"SRTStream","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/srthaishinkit\/srtstream\/init(connection:)","title":"init(connection: SRTConnection)","type":"init"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var audioTrackId: UInt8?","path":"\/documentation\/srthaishinkit\/srtstream\/audiotrackid"},{"title":"var readyState: HKStreamReadyState","type":"property","path":"\/documentation\/srthaishinkit\/srtstream\/readystate"},{"title":"var videoTrackId: UInt8?","type":"property","path":"\/documentation\/srthaishinkit\/srtstream\/videotrackid"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/srthaishinkit\/srtstream\/close()","title":"func close() async","type":"method"},{"path":"\/documentation\/srthaishinkit\/srtstream\/play(_:)","type":"method","title":"func play(String?) async"},{"path":"\/documentation\/srthaishinkit\/srtstream\/publish(_:)","type":"method","title":"func publish(String?) async"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/srthaishinkit\/srtstream\/assertisolated(_:file:line:)","type":"method"},{"type":"method","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","path":"\/documentation\/srthaishinkit\/srtstream\/assumeisolated(_:file:line:)"},{"type":"method","path":"\/documentation\/srthaishinkit\/srtstream\/preconditionisolated(_:file:line:)","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)"}],"type":"symbol","title":"Actor Implementations","path":"\/documentation\/srthaishinkit\/srtstream\/actor-implementations"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var audioSettings: AudioCodecSettings","path":"\/documentation\/srthaishinkit\/srtstream\/audiosettings","type":"property"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtstream\/soundtransform","title":"var soundTransform: SoundTransform?"},{"type":"property","title":"var videoSettings: VideoCodecSettings","path":"\/documentation\/srthaishinkit\/srtstream\/videosettings"},{"title":"Instance Methods","type":"groupMarker"},{"type":"method","title":"func addOutput(some HKStreamOutput)","path":"\/documentation\/srthaishinkit\/srtstream\/addoutput(_:)"},{"title":"func append(CMSampleBuffer)","path":"\/documentation\/srthaishinkit\/srtstream\/append(_:)","type":"method"},{"type":"method","title":"func append(AVAudioBuffer, when: AVAudioTime)","path":"\/documentation\/srthaishinkit\/srtstream\/append(_:when:)"},{"type":"method","path":"\/documentation\/srthaishinkit\/srtstream\/attachaudioplayer(_:)","title":"func attachAudioPlayer(AudioPlayer?) async"},{"title":"func dispatch(NetworkMonitorEvent) async","path":"\/documentation\/srthaishinkit\/srtstream\/dispatch(_:)","type":"method"},{"type":"method","title":"func removeOutput(some HKStreamOutput)","path":"\/documentation\/srthaishinkit\/srtstream\/removeoutput(_:)"},{"type":"method","title":"func setAudioSettings(AudioCodecSettings)","path":"\/documentation\/srthaishinkit\/srtstream\/setaudiosettings(_:)"},{"title":"func setBitrateStorategy((some HKStreamBitRateStrategy)?)","path":"\/documentation\/srthaishinkit\/srtstream\/setbitratestorategy(_:)","type":"method"},{"title":"func setSoundTransform(SoundTransform) async","path":"\/documentation\/srthaishinkit\/srtstream\/setsoundtransform(_:)","type":"method"},{"path":"\/documentation\/srthaishinkit\/srtstream\/setvideoinputbuffercounts(_:)","type":"method","title":"func setVideoInputBufferCounts(Int)"},{"path":"\/documentation\/srthaishinkit\/srtstream\/setvideosettings(_:)","type":"method","title":"func setVideoSettings(VideoCodecSettings)"}],"title":"HKStream Implementations","type":"symbol","path":"\/documentation\/srthaishinkit\/srtstream\/hkstream-implementations"},{"type":"symbol","children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/srthaishinkit\/srtstream\/mixer(_:didoutput:)","type":"method","title":"func mixer(MediaMixer, didOutput: CMSampleBuffer)"},{"type":"method","path":"\/documentation\/srthaishinkit\/srtstream\/mixer(_:didoutput:when:)","title":"func mixer(MediaMixer, didOutput: AVAudioPCMBuffer, when: AVAudioTime)"},{"path":"\/documentation\/srthaishinkit\/srtstream\/selecttrack(_:mediatype:)","type":"method","title":"func selectTrack(UInt8?, mediaType: CMFormatDescription.MediaType)"}],"path":"\/documentation\/srthaishinkit\/srtstream\/mediamixeroutput-implementations","title":"MediaMixerOutput Implementations"}],"path":"\/documentation\/srthaishinkit\/srtstream","type":"class"},{"type":"groupMarker","title":"Structures"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"let byteAvailRcvBuf: Int32","type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/byteavailrcvbuf"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/byteavailsndbuf","title":"let byteAvailSndBuf: Int32"},{"title":"let byteMSS: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytemss","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytercvbuf","type":"property","title":"let byteRcvBuf: Int32"},{"title":"let byteRcvDrop: UInt64","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytercvdrop","type":"property"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytercvdroptotal","title":"let byteRcvDropTotal: UInt64"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytercvloss","title":"let byteRcvLoss: UInt64","type":"property"},{"title":"let byteRcvLossTotal: UInt64","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytercvlosstotal","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytercvundecrypt","title":"let byteRcvUndecrypt: UInt64","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytercvundecrypttotal","type":"property","title":"let byteRcvUndecryptTotal: UInt64"},{"title":"let byteRecv: UInt64","type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/byterecv"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/byterecvtotal","title":"let byteRecvTotal: UInt64","type":"property"},{"title":"let byteRetrans: UInt64","type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/byteretrans"},{"title":"let byteRetransTotal: UInt64","path":"\/documentation\/srthaishinkit\/srtperformancedata\/byteretranstotal","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytesent","type":"property","title":"let byteSent: UInt64"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytesenttotal","title":"let byteSentTotal: UInt64"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytesndbuf","title":"let byteSndBuf: Int32","type":"property"},{"title":"let byteSndDrop: UInt64","type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytesnddrop"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytesnddroptotal","type":"property","title":"let byteSndDropTotal: UInt64"},{"title":"let mbpsBandwidth: Double","path":"\/documentation\/srthaishinkit\/srtperformancedata\/mbpsbandwidth","type":"property"},{"type":"property","title":"let mbpsMaxBW: Double","path":"\/documentation\/srthaishinkit\/srtperformancedata\/mbpsmaxbw"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/mbpsrecvrate","title":"let mbpsRecvRate: Double","type":"property"},{"title":"let mbpsSendRate: Double","path":"\/documentation\/srthaishinkit\/srtperformancedata\/mbpssendrate","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/msrtt","title":"let msRTT: Double","type":"property"},{"title":"let msRcvBuf: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/msrcvbuf","type":"property"},{"title":"let msRcvTsbPdDelay: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/msrcvtsbpddelay","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/mssndbuf","type":"property","title":"let msSndBuf: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/mssndtsbpddelay","title":"let msSndTsbPdDelay: Int32"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/mstimestamp","type":"property","title":"let msTimeStamp: Int64"},{"title":"let pktCongestionWindow: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktcongestionwindow","type":"property"},{"title":"let pktFlightSize: Int32","type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktflightsize"},{"title":"let pktFlowWindow: Int32","type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktflowwindow"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvavgbelatedtime","type":"property","title":"let pktRcvAvgBelatedTime: Double"},{"title":"let pktRcvBelated: Int64","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvbelated","type":"property"},{"title":"let pktRcvBuf: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvbuf","type":"property"},{"title":"let pktRcvDrop: Int32","type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvdrop"},{"title":"let pktRcvDropTotal: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvdroptotal","type":"property"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvfilterextra","title":"let pktRcvFilterExtra: Int32"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvfilterextratotal","title":"let pktRcvFilterExtraTotal: Int32","type":"property"},{"type":"property","title":"let pktRcvFilterLoss: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvfilterloss"},{"title":"let pktRcvFilterLossTotal: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvfilterlosstotal","type":"property"},{"title":"let pktRcvFilterSupply: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvfiltersupply","type":"property"},{"title":"let pktRcvFilterSupplyTotal: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvfiltersupplytotal","type":"property"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvloss","title":"let pktRcvLoss: Int32"},{"title":"let pktRcvLossTotal: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvlosstotal","type":"property"},{"title":"let pktRcvRetrans: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvretrans","type":"property"},{"title":"let pktRcvUndecrypt: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvundecrypt","type":"property"},{"title":"let pktRcvUndecryptTotal: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvundecrypttotal","type":"property"},{"title":"let pktRecv: Int64","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrecv","type":"property"},{"type":"property","title":"let pktRecvACK: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrecvack"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrecvacktotal","title":"let pktRecvACKTotal: Int32"},{"title":"let pktRecvNAK: Int32","type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrecvnak"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrecvnaktotal","type":"property","title":"let pktRecvNAKTotal: Int32"},{"title":"let pktRecvTotal: Int64","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrecvtotal","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktreorderdistance","title":"let pktReorderDistance: Int32","type":"property"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktreordertolerance","title":"let pktReorderTolerance: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktretrans","title":"let pktRetrans: Int32"},{"title":"let pktRetransTotal: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktretranstotal","type":"property"},{"type":"property","title":"let pktSent: Int64","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsent"},{"title":"let pktSentACK: Int32","type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsentack"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsentacktotal","title":"let pktSentACKTotal: Int32","type":"property"},{"title":"let pktSentNAK: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsentnak","type":"property"},{"title":"let pktSentNAKTotal: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsentnaktotal","type":"property"},{"title":"let pktSentTotal: Int64","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsenttotal","type":"property"},{"type":"property","title":"let pktSndBuf: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsndbuf"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsnddrop","title":"let pktSndDrop: Int32"},{"title":"let pktSndDropTotal: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsnddroptotal","type":"property"},{"title":"let pktSndFilterExtra: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsndfilterextra","type":"property"},{"title":"let pktSndFilterExtraTotal: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsndfilterextratotal","type":"property"},{"title":"let pktSndLoss: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsndloss","type":"property"},{"type":"property","title":"let pktSndLossTotal: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsndlosstotal"},{"type":"property","title":"let usPktSndPeriod: Double","path":"\/documentation\/srthaishinkit\/srtperformancedata\/uspktsndperiod"},{"title":"let usSndDuration: Int64","type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/ussndduration"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/ussnddurationtotal","type":"property","title":"let usSndDurationTotal: Int64"}],"type":"struct","title":"SRTPerformanceData"},{"type":"groupMarker","title":"Enumerations"},{"children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/apictrl","title":"case apiCtrl","type":"case"},{"title":"case apiRecv","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/apirecv","type":"case"},{"title":"case apiSend","type":"case","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/apisend"},{"title":"case applog","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/applog","type":"case"},{"title":"case bstats","type":"case","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/bstats"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/bufrecv","title":"case bufRecv","type":"case"},{"type":"case","title":"case bufSend","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/bufsend"},{"type":"case","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/chanrecv","title":"case chanRecv"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/chnmgmt","title":"case chnMgmt","type":"case"},{"type":"case","title":"case chnSend","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/chnsend"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/congest","type":"case","title":"case congest"},{"title":"case control","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/control","type":"case"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/data","type":"case","title":"case data"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/epollapi","type":"case","title":"case epollApi"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/epollupd","type":"case","title":"case epollUpd"},{"type":"case","title":"case general","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/general"},{"type":"case","title":"case grpMgmt","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/grpmgmt"},{"type":"case","title":"case grpRecv","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/grprecv"},{"title":"case grpSend","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/grpsend","type":"case"},{"type":"case","title":"case haicrypt","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/haicrypt"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/internal","type":"case","title":"case `internal`"},{"title":"case pfilter","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/pfilter","type":"case"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/quectrl","type":"case","title":"case queCtrl"},{"title":"case queMgmt","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/quemgmt","type":"case"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/querecv","type":"case","title":"case queRecv"},{"title":"case queSend","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/quesend","type":"case"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/rsrc","type":"case","title":"case rsrc"},{"type":"case","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/tsbpd","title":"case tsbpd"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: Int32)","type":"init","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/init(rawvalue:)"},{"title":"Default Implementations","type":"groupMarker"},{"type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/!=(_:_:)","type":"op"}],"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/equatable-implementations","title":"Equatable Implementations"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/rawrepresentable-implementations","type":"symbol","title":"RawRepresentable Implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/hashvalue","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func hash(into: inout Hasher)","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/hash(into:)","type":"method"}]}],"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea","title":"SRTLogFunctionalArea","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case crit","path":"\/documentation\/srthaishinkit\/srtloglevel\/crit","type":"case"},{"title":"case debug","type":"case","path":"\/documentation\/srthaishinkit\/srtloglevel\/debug"},{"type":"case","path":"\/documentation\/srthaishinkit\/srtloglevel\/error","title":"case error"},{"type":"case","title":"case notice","path":"\/documentation\/srthaishinkit\/srtloglevel\/notice"},{"path":"\/documentation\/srthaishinkit\/srtloglevel\/warning","type":"case","title":"case warning"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/srthaishinkit\/srtloglevel\/equatable-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/srthaishinkit\/srtloglevel\/!=(_:_:)"}],"title":"Equatable Implementations"}],"title":"SRTLogLevel","path":"\/documentation\/srthaishinkit\/srtloglevel","type":"enum"},{"path":"\/documentation\/srthaishinkit\/srtmode","type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case caller","path":"\/documentation\/srthaishinkit\/srtmode\/caller","type":"case"},{"type":"case","path":"\/documentation\/srthaishinkit\/srtmode\/listener","title":"case listener"},{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/srthaishinkit\/srtmode\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Operators"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/srthaishinkit\/srtmode\/!=(_:_:)","type":"op"}],"type":"symbol","path":"\/documentation\/srthaishinkit\/srtmode\/equatable-implementations","title":"Equatable Implementations"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/srthaishinkit\/srtmode\/hashvalue","title":"var hashValue: Int","type":"property"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/srthaishinkit\/srtmode\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"type":"symbol","path":"\/documentation\/srthaishinkit\/srtmode\/rawrepresentable-implementations","title":"RawRepresentable Implementations"}],"title":"SRTMode"}],"path":"\/documentation\/srthaishinkit"}]},"schemaVersion":{"patch":2,"minor":1,"major":0},"includedArchiveIdentifiers":["Logboard","HaishinKit","MoQTHaishinKit","SRTHaishinKit"]}