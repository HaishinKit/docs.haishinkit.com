{"schemaVersion":{"major":0,"minor":1,"patch":2},"includedArchiveIdentifiers":["Logboard","HaishinKit","MoQTHaishinKit","SRTHaishinKit"],"interfaceLanguages":{"swift":[{"children":[{"title":"Logboard","type":"module","path":"\/documentation\/logboard","children":[{"type":"groupMarker","title":"Classes"},{"type":"class","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/logboard\/consoleappender\/init()","type":"init","title":"init()"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/logboard\/consoleappender\/append(_:level:format:arguments:file:function:line:)","type":"method","title":"func append(LBLogger, level: LBLogger.Level, format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)"},{"path":"\/documentation\/logboard\/consoleappender\/append(_:level:message:file:function:line:)","type":"method","title":"func append(LBLogger, level: LBLogger.Level, message: [Any], file: StaticString, function: StaticString, line: Int)"}],"title":"ConsoleAppender","path":"\/documentation\/logboard\/consoleappender"},{"type":"class","children":[{"title":"Structures","type":"groupMarker"},{"title":"LBLogger.Data","path":"\/documentation\/logboard\/lblogger\/data","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init?(Data)","path":"\/documentation\/logboard\/lblogger\/data\/init(_:)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"let date: Date","path":"\/documentation\/logboard\/lblogger\/data\/date"},{"type":"property","title":"let file: String","path":"\/documentation\/logboard\/lblogger\/data\/file"},{"type":"property","title":"let function: String","path":"\/documentation\/logboard\/lblogger\/data\/function"},{"type":"property","title":"let identifier: String","path":"\/documentation\/logboard\/lblogger\/data\/identifier"},{"type":"property","title":"let level: LBLogger.Level","path":"\/documentation\/logboard\/lblogger\/data\/level"},{"type":"property","title":"let line: Int","path":"\/documentation\/logboard\/lblogger\/data\/line"},{"type":"property","title":"let message: String","path":"\/documentation\/logboard\/lblogger\/data\/message"},{"type":"groupMarker","title":"Default Implementations"},{"title":"CustomStringConvertible Implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/logboard\/lblogger\/data\/description","type":"property","title":"var description: String"}],"type":"symbol","path":"\/documentation\/logboard\/lblogger\/data\/customstringconvertible-implementations"}],"type":"struct"},{"title":"Initializers","type":"groupMarker"},{"title":"init(String)","path":"\/documentation\/logboard\/lblogger\/init(_:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var appender: any LBLoggerAppender","path":"\/documentation\/logboard\/lblogger\/appender","type":"property"},{"title":"let identifier: String","path":"\/documentation\/logboard\/lblogger\/identifier","type":"property"},{"title":"var level: LBLogger.Level","path":"\/documentation\/logboard\/lblogger\/level-swift.property","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func debug(Any..., file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/lblogger\/debug(_:file:function:line:)","type":"method"},{"title":"func debug(format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/lblogger\/debug(format:arguments:file:function:line:)","type":"method"},{"title":"func error(Any..., file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/lblogger\/error(_:file:function:line:)","type":"method"},{"title":"func error(format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/lblogger\/error(format:arguments:file:function:line:)","type":"method"},{"title":"func info(Any..., file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/lblogger\/info(_:file:function:line:)","type":"method"},{"title":"func info(format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/lblogger\/info(format:arguments:file:function:line:)","type":"method"},{"title":"func isEnabledFor(level: LBLogger.Level) -> Bool","path":"\/documentation\/logboard\/lblogger\/isenabledfor(level:)","type":"method"},{"title":"func trace(Any..., file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/lblogger\/trace(_:file:function:line:)","type":"method"},{"title":"func trace(format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/lblogger\/trace(format:arguments:file:function:line:)","type":"method"},{"title":"func warn(Any..., file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/lblogger\/warn(_:file:function:line:)","type":"method"},{"title":"func warn(format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/lblogger\/warn(format:arguments:file:function:line:)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"title":"static var dateFormatter: DateFormatter","path":"\/documentation\/logboard\/lblogger\/dateformatter","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"title":"static func with(String) -> LBLogger","path":"\/documentation\/logboard\/lblogger\/with(_:)","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"title":"LBLogger.Level","path":"\/documentation\/logboard\/lblogger\/level-swift.enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/debug","type":"case","title":"case debug"},{"path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/error","type":"case","title":"case error"},{"path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/info","type":"case","title":"case info"},{"path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/trace","type":"case","title":"case trace"},{"path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/warn","type":"case","title":"case warn"},{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/init(rawvalue:)","type":"init","title":"init?(rawValue: Int)"},{"path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/init(string:)","type":"init","title":"init?(string: String)"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/description","type":"property","title":"var description: String"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/equatable-implementations","type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/!=(_:_:)","type":"op"}],"title":"Equatable Implementations"},{"path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/rawrepresentable-implementations","type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/hashvalue","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func hash(into: inout Hasher)","path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/hash(into:)","type":"method"}],"title":"RawRepresentable Implementations"}],"type":"enum"}],"title":"LBLogger","path":"\/documentation\/logboard\/lblogger"},{"type":"class","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init()","path":"\/documentation\/logboard\/multiappender\/init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var appenders: [any LBLoggerAppender]","path":"\/documentation\/logboard\/multiappender\/appenders","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func append(LBLogger, level: LBLogger.Level, format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/multiappender\/append(_:level:format:arguments:file:function:line:)","type":"method"},{"title":"func append(LBLogger, level: LBLogger.Level, message: [Any], file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/multiappender\/append(_:level:message:file:function:line:)","type":"method"}],"title":"MultiAppender","path":"\/documentation\/logboard\/multiappender"},{"type":"class","children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/logboard\/nullappender\/append(_:level:format:arguments:file:function:line:)","type":"method","title":"func append(LBLogger, level: LBLogger.Level, format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)"},{"path":"\/documentation\/logboard\/nullappender\/append(_:level:message:file:function:line:)","type":"method","title":"func append(LBLogger, level: LBLogger.Level, message: [Any], file: StaticString, function: StaticString, line: Int)"},{"type":"groupMarker","title":"Type Properties"},{"path":"\/documentation\/logboard\/nullappender\/shared","type":"property","title":"static let shared: NullAppender"}],"title":"NullAppender","path":"\/documentation\/logboard\/nullappender"},{"type":"class","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(sybsystem: String, category: String)","type":"init","path":"\/documentation\/logboard\/osloggerappender\/init(sybsystem:category:)"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func append(LBLogger, level: LBLogger.Level, format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)","type":"method","path":"\/documentation\/logboard\/osloggerappender\/append(_:level:format:arguments:file:function:line:)"},{"title":"func append(LBLogger, level: LBLogger.Level, message: [Any], file: StaticString, function: StaticString, line: Int)","type":"method","path":"\/documentation\/logboard\/osloggerappender\/append(_:level:message:file:function:line:)"}],"title":"OSLoggerAppender","path":"\/documentation\/logboard\/osloggerappender"},{"type":"class","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init()","path":"\/documentation\/logboard\/socketappender\/init()"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func append(LBLogger, level: LBLogger.Level, format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/socketappender\/append(_:level:format:arguments:file:function:line:)"},{"type":"method","title":"func append(LBLogger, level: LBLogger.Level, message: [Any], file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/socketappender\/append(_:level:message:file:function:line:)"},{"type":"method","title":"func close()","path":"\/documentation\/logboard\/socketappender\/close()"},{"type":"method","title":"func connect(String, port: Int)","path":"\/documentation\/logboard\/socketappender\/connect(_:port:)"}],"title":"SocketAppender","path":"\/documentation\/logboard\/socketappender"},{"type":"groupMarker","title":"Protocols"},{"type":"protocol","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func append(LBLogger, level: LBLogger.Level, format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)","type":"method","path":"\/documentation\/logboard\/lbloggerappender\/append(_:level:format:arguments:file:function:line:)"},{"title":"func append(LBLogger, level: LBLogger.Level, message: [Any], file: StaticString, function: StaticString, line: Int)","type":"method","path":"\/documentation\/logboard\/lbloggerappender\/append(_:level:message:file:function:line:)"}],"title":"LBLoggerAppender","path":"\/documentation\/logboard\/lbloggerappender"}]},{"title":"HaishinKit","type":"module","path":"\/documentation\/haishinkit","children":[{"title":"Articles","type":"groupMarker"},{"title":"Enhanced RTMP","path":"\/documentation\/haishinkit\/e-rtmp","type":"article"},{"title":"FAQ","path":"\/documentation\/haishinkit\/faq","type":"article"},{"title":"Offscreen rendering api.","path":"\/documentation\/haishinkit\/offscreen","type":"article"},{"title":"Classes","type":"groupMarker"},{"title":"AssetScreenObject","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var chromaKeyColor: CGColor?","type":"property","path":"\/documentation\/haishinkit\/assetscreenobject\/chromakeycolor"},{"title":"var isReading: Bool","type":"property","path":"\/documentation\/haishinkit\/assetscreenobject\/isreading"},{"title":"var videoGravity: AVLayerVideoGravity","type":"property","path":"\/documentation\/haishinkit\/assetscreenobject\/videogravity"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func cancelReading()","type":"method","path":"\/documentation\/haishinkit\/assetscreenobject\/cancelreading()"},{"title":"func makeBounds(CGSize) -> CGRect","type":"method","path":"\/documentation\/haishinkit\/assetscreenobject\/makebounds(_:)"},{"title":"func makeImage(some ScreenRenderer) -> CGImage?","type":"method","path":"\/documentation\/haishinkit\/assetscreenobject\/makeimage(_:)"},{"title":"func startReading(AVAsset) throws","type":"method","path":"\/documentation\/haishinkit\/assetscreenobject\/startreading(_:)"}],"path":"\/documentation\/haishinkit\/assetscreenobject","type":"class"},{"title":"AudioDeviceUnit","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var connection: AVCaptureConnection?","type":"property","path":"\/documentation\/haishinkit\/audiodeviceunit\/connection"},{"title":"var device: AVCaptureDevice?","type":"property","path":"\/documentation\/haishinkit\/audiodeviceunit\/device"},{"title":"var input: AVCaptureInput?","type":"property","path":"\/documentation\/haishinkit\/audiodeviceunit\/input"},{"title":"var output: AudioDeviceUnit.Output?","type":"property","path":"\/documentation\/haishinkit\/audiodeviceunit\/output-swift.property"},{"title":"let track: UInt8","type":"property","path":"\/documentation\/haishinkit\/audiodeviceunit\/track"},{"title":"Type Aliases","type":"groupMarker"},{"title":"AudioDeviceUnit.Output","type":"typealias","path":"\/documentation\/haishinkit\/audiodeviceunit\/output-swift.typealias"}],"path":"\/documentation\/haishinkit\/audiodeviceunit","type":"class"},{"title":"AudioPlayer","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/haishinkit\/audioplayer\/init(audioengine:)","title":"init(audioEngine: AVAudioEngine)"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/haishinkit\/audioplayer\/assertisolated(_:file:line:)"},{"type":"method","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","path":"\/documentation\/haishinkit\/audioplayer\/assumeisolated(_:file:line:)"},{"type":"method","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/haishinkit\/audioplayer\/preconditionisolated(_:file:line:)"}],"path":"\/documentation\/haishinkit\/audioplayer\/actor-implementations","title":"Actor Implementations"}],"path":"\/documentation\/haishinkit\/audioplayer","type":"class"},{"title":"HKIncomingStream","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/haishinkit\/hkincomingstream\/init(_:)","type":"init","title":"init(some HKStream)"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/hkincomingstream\/isrunning","type":"property","title":"var isRunning: Bool"},{"path":"\/documentation\/haishinkit\/hkincomingstream\/soundtransfrom","type":"property","title":"var soundTransfrom: SoundTransform?"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/hkincomingstream\/append(_:)","type":"method","title":"func append(CMSampleBuffer)"},{"path":"\/documentation\/haishinkit\/hkincomingstream\/append(_:when:)","type":"method","title":"func append(AVAudioBuffer, when: AVAudioTime)"},{"path":"\/documentation\/haishinkit\/hkincomingstream\/attachaudioplayer(_:)","type":"method","title":"func attachAudioPlayer(AudioPlayer?) async"},{"path":"\/documentation\/haishinkit\/hkincomingstream\/setsoundtransform(_:)","type":"method","title":"func setSoundTransform(SoundTransform) async"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/haishinkit\/hkincomingstream\/actor-implementations","type":"symbol","title":"Actor Implementations","children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/hkincomingstream\/assertisolated(_:file:line:)","type":"method","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)"},{"path":"\/documentation\/haishinkit\/hkincomingstream\/assumeisolated(_:file:line:)","type":"method","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T"},{"path":"\/documentation\/haishinkit\/hkincomingstream\/preconditionisolated(_:file:line:)","type":"method","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)"}]},{"path":"\/documentation\/haishinkit\/hkincomingstream\/asyncrunner-implementations","type":"symbol","title":"AsyncRunner Implementations","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/haishinkit\/hkincomingstream\/startrunning()","title":"func startRunning()"},{"type":"method","path":"\/documentation\/haishinkit\/hkincomingstream\/stoprunning()","title":"func stopRunning()"}]}],"path":"\/documentation\/haishinkit\/hkincomingstream","type":"class"},{"title":"HKOutgoingStream","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init()","path":"\/documentation\/haishinkit\/hkoutgoingstream\/init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var audioInputFormat: CMFormatDescription?","path":"\/documentation\/haishinkit\/hkoutgoingstream\/audioinputformat","type":"property"},{"title":"var audioOutputStream: AsyncStream<(AVAudioBuffer, AVAudioTime)>","path":"\/documentation\/haishinkit\/hkoutgoingstream\/audiooutputstream","type":"property"},{"title":"var audioSettings: AudioCodecSettings","path":"\/documentation\/haishinkit\/hkoutgoingstream\/audiosettings","type":"property"},{"title":"var isRunning: Bool","path":"\/documentation\/haishinkit\/hkoutgoingstream\/isrunning","type":"property"},{"title":"var videoInputBufferCounts: Int","path":"\/documentation\/haishinkit\/hkoutgoingstream\/videoinputbuffercounts","type":"property"},{"title":"var videoInputFormat: CMFormatDescription?","path":"\/documentation\/haishinkit\/hkoutgoingstream\/videoinputformat","type":"property"},{"title":"var videoInputStream: AsyncStream<CMSampleBuffer>","path":"\/documentation\/haishinkit\/hkoutgoingstream\/videoinputstream","type":"property"},{"title":"var videoOutputStream: AsyncStream<CMSampleBuffer>","path":"\/documentation\/haishinkit\/hkoutgoingstream\/videooutputstream","type":"property"},{"title":"var videoSettings: VideoCodecSettings","path":"\/documentation\/haishinkit\/hkoutgoingstream\/videosettings","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func append(CMSampleBuffer)","path":"\/documentation\/haishinkit\/hkoutgoingstream\/append(_:)","type":"method"},{"title":"func append(AVAudioBuffer, when: AVAudioTime)","path":"\/documentation\/haishinkit\/hkoutgoingstream\/append(_:when:)","type":"method"},{"title":"func append(video: CMSampleBuffer)","path":"\/documentation\/haishinkit\/hkoutgoingstream\/append(video:)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Runner Implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func startRunning()","type":"method","path":"\/documentation\/haishinkit\/hkoutgoingstream\/startrunning()"},{"title":"func stopRunning()","type":"method","path":"\/documentation\/haishinkit\/hkoutgoingstream\/stoprunning()"}],"path":"\/documentation\/haishinkit\/hkoutgoingstream\/runner-implementations","type":"symbol"}],"path":"\/documentation\/haishinkit\/hkoutgoingstream","type":"class"},{"title":"HKStreamRecorder","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init()","path":"\/documentation\/haishinkit\/hkstreamrecorder\/init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var audioTrackId: UInt8?","path":"\/documentation\/haishinkit\/hkstreamrecorder\/audiotrackid","type":"property"},{"title":"var isRecording: Bool","path":"\/documentation\/haishinkit\/hkstreamrecorder\/isrecording","type":"property"},{"title":"var movieFragmentInterval: Double?","path":"\/documentation\/haishinkit\/hkstreamrecorder\/moviefragmentinterval","type":"property"},{"title":"var moviesDirectory: URL","path":"\/documentation\/haishinkit\/hkstreamrecorder\/moviesdirectory","type":"property"},{"title":"var outputURL: URL?","path":"\/documentation\/haishinkit\/hkstreamrecorder\/outputurl","type":"property"},{"title":"var settings: [AVMediaType : [String : any Sendable]]","path":"\/documentation\/haishinkit\/hkstreamrecorder\/settings","type":"property"},{"title":"var videoTrackId: UInt8?","path":"\/documentation\/haishinkit\/hkstreamrecorder\/videotrackid","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/selecttrack(_:mediatype:)","title":"func selectTrack(UInt8?, mediaType: CMFormatDescription.MediaType)","type":"method"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/setmoviefragmentinterval(_:)","title":"func setMovieFragmentInterval(Double?)","type":"method"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/setmoviefragmentinterval(moviefragmentinterval:)","title":"func setMovieFragmentInterval(movieFragmentInterval: Double?)","type":"method"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/startrecording(_:settings:)","title":"func startRecording(URL?, settings: [AVMediaType : [String : any Sendable]]) async throws","type":"method"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/stoprecording()","title":"func stopRecording() async throws -> URL","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/defaultsettings","title":"static let defaultSettings: [AVMediaType : [String : any Sendable]]","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/error","title":"HKStreamRecorder.Error","type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case failedToAppend(error: (any Error)?)","path":"\/documentation\/haishinkit\/hkstreamrecorder\/error\/failedtoappend(error:)","type":"case"},{"title":"case failedToCreateAssetWriter(error: any Error)","path":"\/documentation\/haishinkit\/hkstreamrecorder\/error\/failedtocreateassetwriter(error:)","type":"case"},{"title":"case failedToCreateAssetWriterInput(error: any Error)","path":"\/documentation\/haishinkit\/hkstreamrecorder\/error\/failedtocreateassetwriterinput(error:)","type":"case"},{"title":"case failedToFinishWriting(error: (any Error)?)","path":"\/documentation\/haishinkit\/hkstreamrecorder\/error\/failedtofinishwriting(error:)","type":"case"},{"title":"case fileAlreadyExists(outputURL: URL)","path":"\/documentation\/haishinkit\/hkstreamrecorder\/error\/filealreadyexists(outputurl:)","type":"case"},{"title":"case invalidState","path":"\/documentation\/haishinkit\/hkstreamrecorder\/error\/invalidstate","type":"case"},{"title":"case notSupportedFileType(pathExtension: String)","path":"\/documentation\/haishinkit\/hkstreamrecorder\/error\/notsupportedfiletype(pathextension:)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var localizedDescription: String","type":"property","path":"\/documentation\/haishinkit\/hkstreamrecorder\/error\/localizeddescription"}],"title":"Error Implementations","path":"\/documentation\/haishinkit\/hkstreamrecorder\/error\/error-implementations","type":"symbol"}]},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/actor-implementations","title":"Actor Implementations","type":"symbol","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/haishinkit\/hkstreamrecorder\/assertisolated(_:file:line:)","type":"method"},{"title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","path":"\/documentation\/haishinkit\/hkstreamrecorder\/assumeisolated(_:file:line:)","type":"method"},{"title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/haishinkit\/hkstreamrecorder\/preconditionisolated(_:file:line:)","type":"method"}]},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/hkstreamoutput-implementations","title":"HKStreamOutput Implementations","type":"symbol","children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/stream(_:didoutput:)","title":"func stream(some HKStream, didOutput: CMSampleBuffer)","type":"method"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/stream(_:didoutput:when:)","title":"func stream(some HKStream, didOutput: AVAudioBuffer, when: AVAudioTime)","type":"method"}]},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/mediamixeroutput-implementations","title":"MediaMixerOutput Implementations","type":"symbol","children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/mixer(_:didoutput:)","title":"func mixer(MediaMixer, didOutput: CMSampleBuffer)","type":"method"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/mixer(_:didoutput:when:)","title":"func mixer(MediaMixer, didOutput: AVAudioPCMBuffer, when: AVAudioTime)","type":"method"}]}],"path":"\/documentation\/haishinkit\/hkstreamrecorder","type":"class"},{"title":"HKStreamVideoAdaptiveBitRateStrategy","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/haishinkit\/hkstreamvideoadaptivebitratestrategy\/init(mamimumvideobitrate:)","title":"init(mamimumVideoBitrate: Int)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/haishinkit\/hkstreamvideoadaptivebitratestrategy\/mamimumaudiobitrate","title":"let mamimumAudioBitRate: Int"},{"type":"property","path":"\/documentation\/haishinkit\/hkstreamvideoadaptivebitratestrategy\/mamimumvideobitrate","title":"let mamimumVideoBitRate: Int"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/haishinkit\/hkstreamvideoadaptivebitratestrategy\/adjustbitrate(_:stream:)","title":"func adjustBitrate(NetworkMonitorEvent, stream: some HKStream) async"},{"type":"groupMarker","title":"Type Properties"},{"type":"property","path":"\/documentation\/haishinkit\/hkstreamvideoadaptivebitratestrategy\/statuscountsthreshold","title":"static let statusCountsThreshold: Int"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/hkstreamvideoadaptivebitratestrategy\/assertisolated(_:file:line:)","type":"method","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)"},{"path":"\/documentation\/haishinkit\/hkstreamvideoadaptivebitratestrategy\/assumeisolated(_:file:line:)","type":"method","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T"},{"path":"\/documentation\/haishinkit\/hkstreamvideoadaptivebitratestrategy\/preconditionisolated(_:file:line:)","type":"method","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)"}],"path":"\/documentation\/haishinkit\/hkstreamvideoadaptivebitratestrategy\/actor-implementations","title":"Actor Implementations"}],"path":"\/documentation\/haishinkit\/hkstreamvideoadaptivebitratestrategy","type":"class"},{"title":"ImageScreenObject","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var cgImage: CGImage?","path":"\/documentation\/haishinkit\/imagescreenobject\/cgimage"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func makeBounds(CGSize) -> CGRect","path":"\/documentation\/haishinkit\/imagescreenobject\/makebounds(_:)"},{"type":"method","title":"func makeImage(some ScreenRenderer) -> CGImage?","path":"\/documentation\/haishinkit\/imagescreenobject\/makeimage(_:)"}],"path":"\/documentation\/haishinkit\/imagescreenobject","type":"class"},{"title":"MTHKView","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(coder: NSCoder)","type":"init","path":"\/documentation\/haishinkit\/mthkview\/init(coder:)"},{"title":"init(frame: CGRect)","type":"init","path":"\/documentation\/haishinkit\/mthkview\/init(frame:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var audioTrackId: UInt8?","type":"property","path":"\/documentation\/haishinkit\/mthkview\/audiotrackid"},{"title":"var videoGravity: AVLayerVideoGravity","type":"property","path":"\/documentation\/haishinkit\/mthkview\/videogravity"},{"title":"var videoTrackId: UInt8?","type":"property","path":"\/documentation\/haishinkit\/mthkview\/videotrackid"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func awakeFromNib()","type":"method","path":"\/documentation\/haishinkit\/mthkview\/awakefromnib()"},{"title":"func draw(CGRect)","type":"method","path":"\/documentation\/haishinkit\/mthkview\/draw(_:)"},{"title":"func registerVideoEffect(some VideoEffect) -> Bool","type":"method","path":"\/documentation\/haishinkit\/mthkview\/registervideoeffect(_:)"},{"title":"func unregisterVideoEffect(some VideoEffect) -> Bool","type":"method","path":"\/documentation\/haishinkit\/mthkview\/unregistervideoeffect(_:)"},{"title":"Default Implementations","type":"groupMarker"},{"title":"HKStreamOutput Implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func stream(some HKStream, didOutput: CMSampleBuffer)","path":"\/documentation\/haishinkit\/mthkview\/stream(_:didoutput:)","type":"method"},{"title":"func stream(some HKStream, didOutput: AVAudioBuffer, when: AVAudioTime)","path":"\/documentation\/haishinkit\/mthkview\/stream(_:didoutput:when:)","type":"method"}],"type":"symbol","path":"\/documentation\/haishinkit\/mthkview\/hkstreamoutput-implementations"},{"title":"MediaMixerOutput Implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func mixer(MediaMixer, didOutput: CMSampleBuffer)","path":"\/documentation\/haishinkit\/mthkview\/mixer(_:didoutput:)","type":"method"},{"title":"func mixer(MediaMixer, didOutput: AVAudioPCMBuffer, when: AVAudioTime)","path":"\/documentation\/haishinkit\/mthkview\/mixer(_:didoutput:when:)","type":"method"},{"title":"func selectTrack(UInt8?, mediaType: CMFormatDescription.MediaType) async","path":"\/documentation\/haishinkit\/mthkview\/selecttrack(_:mediatype:)","type":"method"}],"type":"symbol","path":"\/documentation\/haishinkit\/mthkview\/mediamixeroutput-implementations"}],"path":"\/documentation\/haishinkit\/mthkview","type":"class"},{"title":"MediaMixer","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/haishinkit\/mediamixer\/init(multitrackaudiomixingenabled:usemanualcapture:)","title":"init(multiTrackAudioMixingEnabled: Bool, useManualCapture: Bool)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/haishinkit\/mediamixer\/audioinputformats","title":"var audioInputFormats: [UInt8 : AVAudioFormat]"},{"type":"property","path":"\/documentation\/haishinkit\/mediamixer\/audiomixersettings","title":"var audioMixerSettings: AudioMixerSettings"},{"type":"property","path":"\/documentation\/haishinkit\/mediamixer\/framerate","title":"var frameRate: Float64"},{"type":"property","path":"\/documentation\/haishinkit\/mediamixer\/iscapturing","title":"var isCapturing: Bool"},{"type":"property","path":"\/documentation\/haishinkit\/mediamixer\/isinterputted","title":"var isInterputted: AsyncStream<Bool>"},{"type":"property","path":"\/documentation\/haishinkit\/mediamixer\/ismonitoringenabled","title":"var isMonitoringEnabled: Bool"},{"type":"property","path":"\/documentation\/haishinkit\/mediamixer\/ismultitrackaudiomixingenabled","title":"var isMultiTrackAudioMixingEnabled: Bool"},{"type":"property","path":"\/documentation\/haishinkit\/mediamixer\/isrunning","title":"var isRunning: Bool"},{"type":"property","path":"\/documentation\/haishinkit\/mediamixer\/istorchenabled","title":"var isTorchEnabled: Bool"},{"type":"property","path":"\/documentation\/haishinkit\/mediamixer\/screen","title":"var screen: Screen"},{"type":"property","path":"\/documentation\/haishinkit\/mediamixer\/sessionpreset","title":"var sessionPreset: AVCaptureSession.Preset"},{"type":"property","path":"\/documentation\/haishinkit\/mediamixer\/videoinputformats","title":"var videoInputFormats: [UInt8 : CMFormatDescription]"},{"type":"property","path":"\/documentation\/haishinkit\/mediamixer\/videomixersettings","title":"var videoMixerSettings: VideoMixerSettings"},{"type":"property","path":"\/documentation\/haishinkit\/mediamixer\/videoorientation","title":"var videoOrientation: AVCaptureVideoOrientation"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/haishinkit\/mediamixer\/addoutput(_:)","title":"func addOutput(some MediaMixerOutput)"},{"type":"method","path":"\/documentation\/haishinkit\/mediamixer\/append(_:track:)","title":"func append(CMSampleBuffer, track: UInt8)"},{"type":"method","path":"\/documentation\/haishinkit\/mediamixer\/append(_:when:track:)","title":"func append(AVAudioBuffer, when: AVAudioTime, track: UInt8)"},{"type":"method","path":"\/documentation\/haishinkit\/mediamixer\/attachaudio(_:track:configuration:)","title":"func attachAudio(AVCaptureDevice?, track: UInt8, configuration: AudioDeviceConfigurationBlock?) async throws"},{"type":"method","path":"\/documentation\/haishinkit\/mediamixer\/attachvideo(_:track:configuration:)","title":"func attachVideo(AVCaptureDevice?, track: UInt8, configuration: VideoDeviceConfigurationBlock?) async throws"},{"type":"method","path":"\/documentation\/haishinkit\/mediamixer\/configuration(_:)","title":"func configuration((AVCaptureSession) throws -> Void) rethrows"},{"type":"method","path":"\/documentation\/haishinkit\/mediamixer\/configuration(audio:configuration:)","title":"func configuration(audio: UInt8, configuration: (AudioDeviceUnit) throws -> Void) throws"},{"type":"method","path":"\/documentation\/haishinkit\/mediamixer\/configuration(video:configuration:)","title":"func configuration(video: UInt8, configuration: (VideoDeviceUnit) throws -> Void) throws"},{"type":"method","path":"\/documentation\/haishinkit\/mediamixer\/removeoutput(_:)","title":"func removeOutput(some MediaMixerOutput)"},{"type":"method","path":"\/documentation\/haishinkit\/mediamixer\/setaudiomixersettings(_:)","title":"func setAudioMixerSettings(AudioMixerSettings)"},{"type":"method","path":"\/documentation\/haishinkit\/mediamixer\/setframerate(_:)","title":"func setFrameRate(Float64)"},{"type":"method","path":"\/documentation\/haishinkit\/mediamixer\/setmonitoringenabled(_:)","title":"func setMonitoringEnabled(Bool)"},{"type":"method","path":"\/documentation\/haishinkit\/mediamixer\/setsessionpreset(_:)","title":"func setSessionPreset(AVCaptureSession.Preset)"},{"type":"method","path":"\/documentation\/haishinkit\/mediamixer\/settorchenabled(_:)","title":"func setTorchEnabled(Bool)"},{"type":"method","path":"\/documentation\/haishinkit\/mediamixer\/setvideomixersettings(_:)","title":"func setVideoMixerSettings(VideoMixerSettings)"},{"type":"method","path":"\/documentation\/haishinkit\/mediamixer\/setvideoorientation(_:)","title":"func setVideoOrientation(AVCaptureVideoOrientation)"},{"type":"method","path":"\/documentation\/haishinkit\/mediamixer\/startcapturing()","title":"func startCapturing()"},{"type":"method","path":"\/documentation\/haishinkit\/mediamixer\/stopcapturing()","title":"func stopCapturing()"},{"type":"groupMarker","title":"Enumerations"},{"type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/mediamixer\/error\/devicenotfound","title":"case deviceNotFound","type":"case"},{"path":"\/documentation\/haishinkit\/mediamixer\/error\/failedtoattach(_:)","title":"case failedToAttach(any Error)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/mediamixer\/error\/error-implementations","title":"Error Implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/mediamixer\/error\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"type":"symbol"}],"path":"\/documentation\/haishinkit\/mediamixer\/error","title":"MediaMixer.Error"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/mediamixer\/assertisolated(_:file:line:)","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method"},{"path":"\/documentation\/haishinkit\/mediamixer\/assumeisolated(_:file:line:)","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","type":"method"},{"path":"\/documentation\/haishinkit\/mediamixer\/preconditionisolated(_:file:line:)","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method"}],"path":"\/documentation\/haishinkit\/mediamixer\/actor-implementations","title":"Actor Implementations"},{"type":"symbol","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func startRunning()","path":"\/documentation\/haishinkit\/mediamixer\/startrunning()","type":"method"},{"title":"func stopRunning()","path":"\/documentation\/haishinkit\/mediamixer\/stoprunning()","type":"method"}],"path":"\/documentation\/haishinkit\/mediamixer\/asyncrunner-implementations","title":"AsyncRunner Implementations"}],"path":"\/documentation\/haishinkit\/mediamixer","type":"class"},{"title":"NetworkMonitor","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(some NetworkTransportReporter)","type":"init","path":"\/documentation\/haishinkit\/networkmonitor\/init(_:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var event: AsyncStream<NetworkMonitorEvent>","type":"property","path":"\/documentation\/haishinkit\/networkmonitor\/event"},{"title":"var isRunning: Bool","type":"property","path":"\/documentation\/haishinkit\/networkmonitor\/isrunning"},{"title":"Enumerations","type":"groupMarker"},{"title":"NetworkMonitor.Error","type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/networkmonitor\/error\/invalidstate","title":"case invalidState","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/networkmonitor\/error\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/haishinkit\/networkmonitor\/error\/!=(_:_:)"}],"title":"Equatable Implementations","type":"symbol"},{"path":"\/documentation\/haishinkit\/networkmonitor\/error\/error-implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var localizedDescription: String","path":"\/documentation\/haishinkit\/networkmonitor\/error\/localizeddescription"}],"title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/haishinkit\/networkmonitor\/error"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Actor Implementations","type":"symbol","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method","path":"\/documentation\/haishinkit\/networkmonitor\/assertisolated(_:file:line:)"},{"title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","type":"method","path":"\/documentation\/haishinkit\/networkmonitor\/assumeisolated(_:file:line:)"},{"title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method","path":"\/documentation\/haishinkit\/networkmonitor\/preconditionisolated(_:file:line:)"}],"path":"\/documentation\/haishinkit\/networkmonitor\/actor-implementations"},{"title":"AsyncRunner Implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func startRunning()","path":"\/documentation\/haishinkit\/networkmonitor\/startrunning()"},{"type":"method","title":"func stopRunning()","path":"\/documentation\/haishinkit\/networkmonitor\/stoprunning()"}],"path":"\/documentation\/haishinkit\/networkmonitor\/asyncrunner-implementations"}],"path":"\/documentation\/haishinkit\/networkmonitor","type":"class"},{"title":"PiPHKView","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/haishinkit\/piphkview\/init(coder:)","title":"init?(coder: NSCoder)"},{"type":"init","path":"\/documentation\/haishinkit\/piphkview\/init(frame:)","title":"init(frame: CGRect)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/haishinkit\/piphkview\/audiotrackid","title":"var audioTrackId: UInt8?"},{"type":"property","path":"\/documentation\/haishinkit\/piphkview\/videogravity","title":"var videoGravity: AVLayerVideoGravity"},{"type":"property","path":"\/documentation\/haishinkit\/piphkview\/videotrackid","title":"var videoTrackId: UInt8?"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/haishinkit\/piphkview\/awakefromnib()","title":"func awakeFromNib()"},{"type":"groupMarker","title":"Type Properties"},{"type":"property","path":"\/documentation\/haishinkit\/piphkview\/defaultbackgroundcolor","title":"static var defaultBackgroundColor: NSColor"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","path":"\/documentation\/haishinkit\/piphkview\/hkstreamoutput-implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/piphkview\/stream(_:didoutput:)","title":"func stream(some HKStream, didOutput: CMSampleBuffer)","type":"method"},{"path":"\/documentation\/haishinkit\/piphkview\/stream(_:didoutput:when:)","title":"func stream(some HKStream, didOutput: AVAudioBuffer, when: AVAudioTime)","type":"method"}],"title":"HKStreamOutput Implementations"},{"type":"symbol","path":"\/documentation\/haishinkit\/piphkview\/mediamixeroutput-implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"type":"method","title":"func mixer(MediaMixer, didOutput: CMSampleBuffer)","path":"\/documentation\/haishinkit\/piphkview\/mixer(_:didoutput:)"},{"type":"method","title":"func mixer(MediaMixer, didOutput: AVAudioPCMBuffer, when: AVAudioTime)","path":"\/documentation\/haishinkit\/piphkview\/mixer(_:didoutput:when:)"},{"type":"method","title":"func selectTrack(UInt8?, mediaType: CMFormatDescription.MediaType) async","path":"\/documentation\/haishinkit\/piphkview\/selecttrack(_:mediatype:)"}],"title":"MediaMixerOutput Implementations"}],"path":"\/documentation\/haishinkit\/piphkview","type":"class"},{"title":"RTMPConnection","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(swfUrl: String?, pageUrl: String?, flashVer: String, fourCcList: [String]?, videoFourCcInfoMap: AMFObject?, audioFourCcInfoMap: AMFObject?, capsEx: Int, timeout: Int, requestTimeout: UInt64, chunkSize: Int, qualityOfService: DispatchQoS)","path":"\/documentation\/haishinkit\/rtmpconnection\/init(swfurl:pageurl:flashver:fourcclist:videofourccinfomap:audiofourccinfomap:capsex:timeout:requesttimeout:chunksize:qualityofservice:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let audioFourCcInfoMap: AMFObject?","path":"\/documentation\/haishinkit\/rtmpconnection\/audiofourccinfomap","type":"property"},{"title":"let capsEx: Int","path":"\/documentation\/haishinkit\/rtmpconnection\/capsex","type":"property"},{"title":"let chunkSize: Int","path":"\/documentation\/haishinkit\/rtmpconnection\/chunksize","type":"property"},{"title":"var connected: Bool","path":"\/documentation\/haishinkit\/rtmpconnection\/connected","type":"property"},{"title":"let flashVer: String","path":"\/documentation\/haishinkit\/rtmpconnection\/flashver","type":"property"},{"title":"let fourCcList: [String]?","path":"\/documentation\/haishinkit\/rtmpconnection\/fourcclist","type":"property"},{"title":"let objectEncoding: RTMPObjectEncoding","path":"\/documentation\/haishinkit\/rtmpconnection\/objectencoding","type":"property"},{"title":"let pageUrl: String?","path":"\/documentation\/haishinkit\/rtmpconnection\/pageurl","type":"property"},{"title":"let qualityOfService: DispatchQoS","path":"\/documentation\/haishinkit\/rtmpconnection\/qualityofservice","type":"property"},{"title":"let requestTimeout: UInt64","path":"\/documentation\/haishinkit\/rtmpconnection\/requesttimeout","type":"property"},{"title":"var status: AsyncStream<RTMPStatus>","path":"\/documentation\/haishinkit\/rtmpconnection\/status","type":"property"},{"title":"let swfUrl: String?","path":"\/documentation\/haishinkit\/rtmpconnection\/swfurl","type":"property"},{"title":"let timeout: Int","path":"\/documentation\/haishinkit\/rtmpconnection\/timeout","type":"property"},{"title":"var uri: URL?","path":"\/documentation\/haishinkit\/rtmpconnection\/uri","type":"property"},{"title":"let videoFourCcInfoMap: AMFObject?","path":"\/documentation\/haishinkit\/rtmpconnection\/videofourccinfomap","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func call(String, arguments: (any Sendable)?...) async throws -> RTMPResponse","path":"\/documentation\/haishinkit\/rtmpconnection\/call(_:arguments:)","type":"method"},{"title":"func close() async throws","path":"\/documentation\/haishinkit\/rtmpconnection\/close()","type":"method"},{"title":"func connect(String, arguments: (any Sendable)?...) async throws -> RTMPResponse","path":"\/documentation\/haishinkit\/rtmpconnection\/connect(_:arguments:)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"title":"static let defaultCapabilities: Int","path":"\/documentation\/haishinkit\/rtmpconnection\/defaultcapabilities","type":"property"},{"title":"static let defaultChunkSizeS: Int","path":"\/documentation\/haishinkit\/rtmpconnection\/defaultchunksizes","type":"property"},{"title":"static let defaultFlashVer: String","path":"\/documentation\/haishinkit\/rtmpconnection\/defaultflashver","type":"property"},{"title":"static let defaultObjectEncoding: RTMPObjectEncoding","path":"\/documentation\/haishinkit\/rtmpconnection\/defaultobjectencoding","type":"property"},{"title":"static let defaultPort: Int","path":"\/documentation\/haishinkit\/rtmpconnection\/defaultport","type":"property"},{"title":"static let defaultRequestTimeout: UInt64","path":"\/documentation\/haishinkit\/rtmpconnection\/defaultrequesttimeout","type":"property"},{"title":"static let defaultSecurePort: Int","path":"\/documentation\/haishinkit\/rtmpconnection\/defaultsecureport","type":"property"},{"title":"static let defaultTimeout: Int","path":"\/documentation\/haishinkit\/rtmpconnection\/defaulttimeout","type":"property"},{"title":"static let defaultWindowSizeS: Int64","path":"\/documentation\/haishinkit\/rtmpconnection\/defaultwindowsizes","type":"property"},{"title":"static let supportedAudioFourCcInfoMap: AMFObject","path":"\/documentation\/haishinkit\/rtmpconnection\/supportedaudiofourccinfomap","type":"property"},{"title":"static let supportedFourCcList: [String]","path":"\/documentation\/haishinkit\/rtmpconnection\/supportedfourcclist","type":"property"},{"title":"static let supportedProtocols: Set<String>","path":"\/documentation\/haishinkit\/rtmpconnection\/supportedprotocols","type":"property"},{"title":"static let supportedVideoFourCcInfoMap: AMFObject","path":"\/documentation\/haishinkit\/rtmpconnection\/supportedvideofourccinfomap","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case callBadVersion","type":"case","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/callbadversion"},{"title":"case callFailed","type":"case","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/callfailed"},{"title":"case callProhibited","type":"case","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/callprohibited"},{"title":"case connectAppshutdown","type":"case","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/connectappshutdown"},{"title":"case connectClosed","type":"case","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/connectclosed"},{"title":"case connectFailed","type":"case","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/connectfailed"},{"title":"case connectIdleTimeOut","type":"case","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/connectidletimeout"},{"title":"case connectInvalidApp","type":"case","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/connectinvalidapp"},{"title":"case connectNetworkChange","type":"case","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/connectnetworkchange"},{"title":"case connectRejected","type":"case","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/connectrejected"},{"title":"case connectSuccess","type":"case","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/connectsuccess"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: String)","type":"init","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/init(rawvalue:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var level: String","type":"property","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/level"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/!=(_:_:)"}],"title":"Equatable Implementations","type":"symbol","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/equatable-implementations"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/code\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/code\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"title":"RawRepresentable Implementations","type":"symbol","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/rawrepresentable-implementations"}],"title":"RTMPConnection.Code","path":"\/documentation\/haishinkit\/rtmpconnection\/code","type":"enum"},{"children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","path":"\/documentation\/haishinkit\/rtmpconnection\/error\/connectiontimedout","title":"case connectionTimedOut"},{"type":"case","path":"\/documentation\/haishinkit\/rtmpconnection\/error\/invalidstate","title":"case invalidState"},{"type":"case","path":"\/documentation\/haishinkit\/rtmpconnection\/error\/requestfailed(response:)","title":"case requestFailed(response: RTMPResponse)"},{"type":"case","path":"\/documentation\/haishinkit\/rtmpconnection\/error\/requesttimedout","title":"case requestTimedOut"},{"type":"case","path":"\/documentation\/haishinkit\/rtmpconnection\/error\/socketerroroccurred(_:)","title":"case socketErrorOccurred(any Error)"},{"type":"case","path":"\/documentation\/haishinkit\/rtmpconnection\/error\/unsupportedcommand(_:)","title":"case unsupportedCommand(String)"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","path":"\/documentation\/haishinkit\/rtmpconnection\/error\/error-implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/error\/localizeddescription","type":"property","title":"var localizedDescription: String"}],"title":"Error Implementations"}],"title":"RTMPConnection.Error","path":"\/documentation\/haishinkit\/rtmpconnection\/error","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/assertisolated(_:file:line:)","type":"method","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/assumeisolated(_:file:line:)","type":"method","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/preconditionisolated(_:file:line:)","type":"method","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)"}],"title":"Actor Implementations","path":"\/documentation\/haishinkit\/rtmpconnection\/actor-implementations","type":"symbol"}],"path":"\/documentation\/haishinkit\/rtmpconnection","type":"class"},{"title":"RTMPSharedObject","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/haishinkit\/rtmpsharedobject\/data","title":"var data: AMFObject"},{"type":"property","path":"\/documentation\/haishinkit\/rtmpsharedobject\/objectencoding","title":"let objectEncoding: RTMPObjectEncoding"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/haishinkit\/rtmpsharedobject\/clear()","title":"func clear() async"},{"type":"method","path":"\/documentation\/haishinkit\/rtmpsharedobject\/close()","title":"func close() async"},{"type":"method","path":"\/documentation\/haishinkit\/rtmpsharedobject\/connect(_:)","title":"func connect(RTMPConnection) async"},{"type":"method","path":"\/documentation\/haishinkit\/rtmpsharedobject\/setproperty(_:_:)","title":"func setProperty(String, (any Sendable)?) async"},{"type":"groupMarker","title":"Type Methods"},{"type":"method","path":"\/documentation\/haishinkit\/rtmpsharedobject\/getremote(withname:remotepath:persistence:)","title":"static func getRemote(withName: String, remotePath: String, persistence: Bool) -> RTMPSharedObject"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/haishinkit\/rtmpsharedobject\/assertisolated(_:file:line:)"},{"type":"method","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","path":"\/documentation\/haishinkit\/rtmpsharedobject\/assumeisolated(_:file:line:)"},{"type":"method","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/haishinkit\/rtmpsharedobject\/preconditionisolated(_:file:line:)"}],"path":"\/documentation\/haishinkit\/rtmpsharedobject\/actor-implementations","title":"Actor Implementations"}],"path":"\/documentation\/haishinkit\/rtmpsharedobject","type":"class"},{"title":"RTMPStream","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/haishinkit\/rtmpstream\/init(connection:fcpublishname:)","type":"init","title":"init(connection: RTMPConnection, fcPublishName: String?)"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/rtmpstream\/audiosampleaccess","type":"property","title":"var audioSampleAccess: Bool"},{"path":"\/documentation\/haishinkit\/rtmpstream\/audiotrackid","type":"property","title":"var audioTrackId: UInt8?"},{"path":"\/documentation\/haishinkit\/rtmpstream\/currentfps","type":"property","title":"var currentFPS: UInt16"},{"path":"\/documentation\/haishinkit\/rtmpstream\/fcpublishname","type":"property","title":"var fcPublishName: String?"},{"path":"\/documentation\/haishinkit\/rtmpstream\/info","type":"property","title":"var info: RTMPStreamInfo"},{"path":"\/documentation\/haishinkit\/rtmpstream\/metadata","type":"property","title":"var metadata: AMFArray"},{"path":"\/documentation\/haishinkit\/rtmpstream\/objectencoding","type":"property","title":"var objectEncoding: RTMPObjectEncoding"},{"path":"\/documentation\/haishinkit\/rtmpstream\/readystate","type":"property","title":"var readyState: HKStreamReadyState"},{"path":"\/documentation\/haishinkit\/rtmpstream\/status","type":"property","title":"var status: AsyncStream<RTMPStatus>"},{"path":"\/documentation\/haishinkit\/rtmpstream\/videosampleaccess","type":"property","title":"var videoSampleAccess: Bool"},{"path":"\/documentation\/haishinkit\/rtmpstream\/videotrackid","type":"property","title":"var videoTrackId: UInt8?"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/rtmpstream\/close()","type":"method","title":"func close() async throws -> RTMPResponse"},{"path":"\/documentation\/haishinkit\/rtmpstream\/pause(_:)","type":"method","title":"func pause(Bool) async throws -> RTMPResponse"},{"path":"\/documentation\/haishinkit\/rtmpstream\/play(_:)","type":"method","title":"func play((any Sendable)?...) async throws -> RTMPResponse"},{"path":"\/documentation\/haishinkit\/rtmpstream\/publish(_:type:)","type":"method","title":"func publish(String?, type: RTMPStream.HowToPublish) async throws -> RTMPResponse"},{"path":"\/documentation\/haishinkit\/rtmpstream\/receiveaudio(_:)","type":"method","title":"func receiveAudio(Bool) async throws"},{"path":"\/documentation\/haishinkit\/rtmpstream\/receivevideo(_:)","type":"method","title":"func receiveVideo(Bool) async throws"},{"path":"\/documentation\/haishinkit\/rtmpstream\/seek(_:)","type":"method","title":"func seek(Double) async throws"},{"path":"\/documentation\/haishinkit\/rtmpstream\/send(_:arguments:isresettimestamp:)","type":"method","title":"func send(String, arguments: (any Sendable)?..., isResetTimestamp: Bool) throws"},{"path":"\/documentation\/haishinkit\/rtmpstream\/togglepause()","type":"method","title":"func togglePause() async throws -> RTMPResponse"},{"type":"groupMarker","title":"Enumerations"},{"children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/bufferempty","type":"case","title":"case bufferEmpty"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/bufferflush","type":"case","title":"case bufferFlush"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/bufferfull","type":"case","title":"case bufferFull"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/connectclosed","type":"case","title":"case connectClosed"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/connectfailed","type":"case","title":"case connectFailed"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/connectrejected","type":"case","title":"case connectRejected"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/connectsuccess","type":"case","title":"case connectSuccess"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/drmupdateneeded","type":"case","title":"case drmUpdateNeeded"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/failed","type":"case","title":"case failed"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/multicaststreamreset","type":"case","title":"case multicastStreamReset"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/pausenotify","type":"case","title":"case pauseNotify"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/playfailed","type":"case","title":"case playFailed"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/playfilestructureinvalid","type":"case","title":"case playFileStructureInvalid"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/playinsufficientbw","type":"case","title":"case playInsufficientBW"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/playnosupportedtrackfound","type":"case","title":"case playNoSupportedTrackFound"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/playreset","type":"case","title":"case playReset"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/playstart","type":"case","title":"case playStart"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/playstop","type":"case","title":"case playStop"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/playstreamnotfound","type":"case","title":"case playStreamNotFound"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/playtransition","type":"case","title":"case playTransition"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/playunpublishnotify","type":"case","title":"case playUnpublishNotify"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/publishbadname","type":"case","title":"case publishBadName"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/publishidle","type":"case","title":"case publishIdle"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/publishstart","type":"case","title":"case publishStart"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/recordalreadyexists","type":"case","title":"case recordAlreadyExists"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/recorddiskquotaexceeded","type":"case","title":"case recordDiskQuotaExceeded"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/recordfailed","type":"case","title":"case recordFailed"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/recordnoaccess","type":"case","title":"case recordNoAccess"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/recordstart","type":"case","title":"case recordStart"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/recordstop","type":"case","title":"case recordStop"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/secondscreenstart","type":"case","title":"case secondScreenStart"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/secondscreenstop","type":"case","title":"case secondScreenStop"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/seekfailed","type":"case","title":"case seekFailed"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/seekinvalidtime","type":"case","title":"case seekInvalidTime"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/seeknotify","type":"case","title":"case seekNotify"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/stepnotify","type":"case","title":"case stepNotify"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/unpausenotify","type":"case","title":"case unpauseNotify"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/unpublishsuccess","type":"case","title":"case unpublishSuccess"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/videodimensionchange","type":"case","title":"case videoDimensionChange"},{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/init(rawvalue:)","type":"init","title":"init?(rawValue: String)"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/level","type":"property","title":"var level: String"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/equatable-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/haishinkit\/rtmpstream\/code\/!=(_:_:)"}],"title":"Equatable Implementations"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/rawrepresentable-implementations","type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","path":"\/documentation\/haishinkit\/rtmpstream\/code\/hashvalue","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func hash(into: inout Hasher)","path":"\/documentation\/haishinkit\/rtmpstream\/code\/hash(into:)","type":"method"}],"title":"RawRepresentable Implementations"}],"path":"\/documentation\/haishinkit\/rtmpstream\/code","type":"enum","title":"RTMPStream.Code"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case invalidState","type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/error\/invalidstate"},{"title":"case requestFailed(response: RTMPResponse)","type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/error\/requestfailed(response:)"},{"title":"case requestTimedOut","type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/error\/requesttimedout"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var localizedDescription: String","path":"\/documentation\/haishinkit\/rtmpstream\/error\/localizeddescription","type":"property"}],"title":"Error Implementations","type":"symbol","path":"\/documentation\/haishinkit\/rtmpstream\/error\/error-implementations"}],"path":"\/documentation\/haishinkit\/rtmpstream\/error","type":"enum","title":"RTMPStream.Error"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case append","path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish\/append","type":"case"},{"title":"case appendWithGap","path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish\/appendwithgap","type":"case"},{"title":"case live","path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish\/live","type":"case"},{"title":"case record","path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish\/record","type":"case"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: String)","path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish\/init(rawvalue:)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"title":"Equatable Implementations","path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish\/equatable-implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"title":"RawRepresentable Implementations","path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish\/rawrepresentable-implementations","type":"symbol"}],"path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish","type":"enum","title":"RTMPStream.HowToPublish"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method","path":"\/documentation\/haishinkit\/rtmpstream\/assertisolated(_:file:line:)"},{"title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","type":"method","path":"\/documentation\/haishinkit\/rtmpstream\/assumeisolated(_:file:line:)"},{"title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method","path":"\/documentation\/haishinkit\/rtmpstream\/preconditionisolated(_:file:line:)"}],"path":"\/documentation\/haishinkit\/rtmpstream\/actor-implementations","type":"symbol","title":"Actor Implementations"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"type":"property","title":"var audioSettings: AudioCodecSettings","path":"\/documentation\/haishinkit\/rtmpstream\/audiosettings"},{"type":"property","title":"var soundTransform: SoundTransform?","path":"\/documentation\/haishinkit\/rtmpstream\/soundtransform"},{"type":"property","title":"var videoSettings: VideoCodecSettings","path":"\/documentation\/haishinkit\/rtmpstream\/videosettings"},{"title":"Instance Methods","type":"groupMarker"},{"type":"method","title":"func addOutput(some HKStreamOutput)","path":"\/documentation\/haishinkit\/rtmpstream\/addoutput(_:)"},{"type":"method","title":"func append(CMSampleBuffer)","path":"\/documentation\/haishinkit\/rtmpstream\/append(_:)"},{"type":"method","title":"func append(AVAudioBuffer, when: AVAudioTime)","path":"\/documentation\/haishinkit\/rtmpstream\/append(_:when:)"},{"type":"method","title":"func attachAudioPlayer(AudioPlayer?) async","path":"\/documentation\/haishinkit\/rtmpstream\/attachaudioplayer(_:)"},{"type":"method","title":"func dispatch(NetworkMonitorEvent) async","path":"\/documentation\/haishinkit\/rtmpstream\/dispatch(_:)"},{"type":"method","title":"func removeOutput(some HKStreamOutput)","path":"\/documentation\/haishinkit\/rtmpstream\/removeoutput(_:)"},{"type":"method","title":"func setAudioSettings(AudioCodecSettings)","path":"\/documentation\/haishinkit\/rtmpstream\/setaudiosettings(_:)"},{"type":"method","title":"func setBitrateStorategy((some HKStreamBitRateStrategy)?)","path":"\/documentation\/haishinkit\/rtmpstream\/setbitratestorategy(_:)"},{"type":"method","title":"func setSoundTransform(SoundTransform) async","path":"\/documentation\/haishinkit\/rtmpstream\/setsoundtransform(_:)"},{"type":"method","title":"func setVideoInputBufferCounts(Int)","path":"\/documentation\/haishinkit\/rtmpstream\/setvideoinputbuffercounts(_:)"},{"type":"method","title":"func setVideoSettings(VideoCodecSettings)","path":"\/documentation\/haishinkit\/rtmpstream\/setvideosettings(_:)"}],"path":"\/documentation\/haishinkit\/rtmpstream\/hkstream-implementations","type":"symbol","title":"HKStream Implementations"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func mixer(MediaMixer, didOutput: CMSampleBuffer)","path":"\/documentation\/haishinkit\/rtmpstream\/mixer(_:didoutput:)","type":"method"},{"title":"func mixer(MediaMixer, didOutput: AVAudioPCMBuffer, when: AVAudioTime)","path":"\/documentation\/haishinkit\/rtmpstream\/mixer(_:didoutput:when:)","type":"method"},{"title":"func selectTrack(UInt8?, mediaType: CMFormatDescription.MediaType)","path":"\/documentation\/haishinkit\/rtmpstream\/selecttrack(_:mediatype:)","type":"method"}],"path":"\/documentation\/haishinkit\/rtmpstream\/mediamixeroutput-implementations","type":"symbol","title":"MediaMixerOutput Implementations"}],"path":"\/documentation\/haishinkit\/rtmpstream","type":"class"},{"title":"Screen","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/haishinkit\/screen\/init()","title":"init()"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/haishinkit\/screen\/backgroundcolor","title":"var backgroundColor: CGColor"},{"type":"property","path":"\/documentation\/haishinkit\/screen\/childcounts","title":"var childCounts: Int"},{"type":"property","path":"\/documentation\/haishinkit\/screen\/delegate","title":"var delegate: (any ScreenDelegate)?"},{"type":"property","path":"\/documentation\/haishinkit\/screen\/size-swift.property","title":"var size: CGSize"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/haishinkit\/screen\/addchild(_:)","title":"func addChild(ScreenObject?) throws"},{"type":"method","path":"\/documentation\/haishinkit\/screen\/registervideoeffect(_:)","title":"func registerVideoEffect(some VideoEffect) -> Bool"},{"type":"method","path":"\/documentation\/haishinkit\/screen\/removechild(_:)","title":"func removeChild(ScreenObject?)"},{"type":"method","path":"\/documentation\/haishinkit\/screen\/unregistervideoeffect(_:)","title":"func unregisterVideoEffect(some VideoEffect) -> Bool"},{"type":"groupMarker","title":"Type Properties"},{"type":"property","path":"\/documentation\/haishinkit\/screen\/size-swift.type.property","title":"static let size: CGSize"}],"path":"\/documentation\/haishinkit\/screen","type":"class"},{"title":"ScreenActor","children":[{"title":"Type Properties","type":"groupMarker"},{"title":"static let shared: ScreenActor","type":"property","path":"\/documentation\/haishinkit\/screenactor\/shared"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Actor Implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/haishinkit\/screenactor\/assertisolated(_:file:line:)","type":"method"},{"title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","path":"\/documentation\/haishinkit\/screenactor\/assumeisolated(_:file:line:)","type":"method"},{"title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/haishinkit\/screenactor\/preconditionisolated(_:file:line:)","type":"method"}],"type":"symbol","path":"\/documentation\/haishinkit\/screenactor\/actor-implementations"},{"title":"GlobalActor Implementations","children":[{"title":"Type Properties","type":"groupMarker"},{"title":"static var sharedUnownedExecutor: UnownedSerialExecutor","path":"\/documentation\/haishinkit\/screenactor\/sharedunownedexecutor","type":"property"}],"type":"symbol","path":"\/documentation\/haishinkit\/screenactor\/globalactor-implementations"}],"path":"\/documentation\/haishinkit\/screenactor","type":"class"},{"title":"ScreenObject","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/screenobject\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/screenobject\/bounds","title":"var bounds: CGRect","type":"property"},{"path":"\/documentation\/haishinkit\/screenobject\/cornerradius","title":"var cornerRadius: CGFloat","type":"property"},{"path":"\/documentation\/haishinkit\/screenobject\/horizontalalignment-swift.property","title":"var horizontalAlignment: ScreenObject.HorizontalAlignment","type":"property"},{"path":"\/documentation\/haishinkit\/screenobject\/isvisible","title":"var isVisible: Bool","type":"property"},{"path":"\/documentation\/haishinkit\/screenobject\/layoutmargin","title":"var layoutMargin: NSEdgeInsets","type":"property"},{"path":"\/documentation\/haishinkit\/screenobject\/parent","title":"var parent: ScreenObjectContainer?","type":"property"},{"path":"\/documentation\/haishinkit\/screenobject\/size","title":"var size: CGSize","type":"property"},{"path":"\/documentation\/haishinkit\/screenobject\/verticalalignment-swift.property","title":"var verticalAlignment: ScreenObject.VerticalAlignment","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/screenobject\/invalidatelayout()","title":"func invalidateLayout()","type":"method"},{"path":"\/documentation\/haishinkit\/screenobject\/makebounds(_:)","title":"func makeBounds(CGSize) -> CGRect","type":"method"},{"path":"\/documentation\/haishinkit\/screenobject\/makeimage(_:)","title":"func makeImage(some ScreenRenderer) -> CGImage?","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","title":"case center","path":"\/documentation\/haishinkit\/screenobject\/horizontalalignment-swift.enum\/center"},{"type":"case","title":"case left","path":"\/documentation\/haishinkit\/screenobject\/horizontalalignment-swift.enum\/left"},{"type":"case","title":"case right","path":"\/documentation\/haishinkit\/screenobject\/horizontalalignment-swift.enum\/right"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","title":"Equatable Implementations","path":"\/documentation\/haishinkit\/screenobject\/horizontalalignment-swift.enum\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/screenobject\/horizontalalignment-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}]}],"path":"\/documentation\/haishinkit\/screenobject\/horizontalalignment-swift.enum","title":"ScreenObject.HorizontalAlignment","type":"enum"},{"children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/haishinkit\/screenobject\/verticalalignment-swift.enum\/bottom","type":"case","title":"case bottom"},{"path":"\/documentation\/haishinkit\/screenobject\/verticalalignment-swift.enum\/middle","type":"case","title":"case middle"},{"path":"\/documentation\/haishinkit\/screenobject\/verticalalignment-swift.enum\/top","type":"case","title":"case top"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/haishinkit\/screenobject\/verticalalignment-swift.enum\/equatable-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/haishinkit\/screenobject\/verticalalignment-swift.enum\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}],"title":"Equatable Implementations"}],"path":"\/documentation\/haishinkit\/screenobject\/verticalalignment-swift.enum","title":"ScreenObject.VerticalAlignment","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/haishinkit\/screenobject\/!=(_:_:)"},{"type":"op","title":"static func == (ScreenObject, ScreenObject) -> Bool","path":"\/documentation\/haishinkit\/screenobject\/==(_:_:)"}],"path":"\/documentation\/haishinkit\/screenobject\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/screenobject\/hash(into:)","type":"method","title":"func hash(into: inout Hasher)"}],"path":"\/documentation\/haishinkit\/screenobject\/hashable-implementations","title":"Hashable Implementations","type":"symbol"}],"path":"\/documentation\/haishinkit\/screenobject","type":"class"},{"title":"ScreenObjectContainer","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var childCounts: Int","path":"\/documentation\/haishinkit\/screenobjectcontainer\/childcounts"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func addChild(ScreenObject?) throws","path":"\/documentation\/haishinkit\/screenobjectcontainer\/addchild(_:)"},{"type":"method","title":"func removeChild(ScreenObject?)","path":"\/documentation\/haishinkit\/screenobjectcontainer\/removechild(_:)"},{"type":"groupMarker","title":"Enumerations"},{"type":"enum","title":"ScreenObjectContainer.Error","path":"\/documentation\/haishinkit\/screenobjectcontainer\/error","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case alreadyExists","path":"\/documentation\/haishinkit\/screenobjectcontainer\/error\/alreadyexists","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/haishinkit\/screenobjectcontainer\/error\/!=(_:_:)","type":"op"}],"title":"Equatable Implementations","path":"\/documentation\/haishinkit\/screenobjectcontainer\/error\/equatable-implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/screenobjectcontainer\/error\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"title":"Error Implementations","path":"\/documentation\/haishinkit\/screenobjectcontainer\/error\/error-implementations","type":"symbol"}]}],"path":"\/documentation\/haishinkit\/screenobjectcontainer","type":"class"},{"title":"SessionBuilderFactory","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/haishinkit\/sessionbuilderfactory\/make(_:)","title":"func make(URL?) throws -> SessionBuilder"},{"type":"method","path":"\/documentation\/haishinkit\/sessionbuilderfactory\/register(_:)","title":"func register(some SessionFactory)"},{"type":"groupMarker","title":"Type Properties"},{"type":"property","path":"\/documentation\/haishinkit\/sessionbuilderfactory\/shared","title":"static let shared: SessionBuilderFactory"},{"type":"groupMarker","title":"Enumerations"},{"type":"enum","path":"\/documentation\/haishinkit\/sessionbuilderfactory\/error","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","title":"case illegalArgument","path":"\/documentation\/haishinkit\/sessionbuilderfactory\/error\/illegalargument"},{"type":"case","title":"case notFound","path":"\/documentation\/haishinkit\/sessionbuilderfactory\/error\/notfound"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","title":"Equatable Implementations","path":"\/documentation\/haishinkit\/sessionbuilderfactory\/error\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/sessionbuilderfactory\/error\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}]},{"type":"symbol","title":"Error Implementations","path":"\/documentation\/haishinkit\/sessionbuilderfactory\/error\/error-implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var localizedDescription: String","type":"property","path":"\/documentation\/haishinkit\/sessionbuilderfactory\/error\/localizeddescription"}]}],"title":"SessionBuilderFactory.Error"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","path":"\/documentation\/haishinkit\/sessionbuilderfactory\/actor-implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/haishinkit\/sessionbuilderfactory\/assertisolated(_:file:line:)","type":"method"},{"title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","path":"\/documentation\/haishinkit\/sessionbuilderfactory\/assumeisolated(_:file:line:)","type":"method"},{"title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/haishinkit\/sessionbuilderfactory\/preconditionisolated(_:file:line:)","type":"method"}],"title":"Actor Implementations"}],"path":"\/documentation\/haishinkit\/sessionbuilderfactory","type":"class"},{"title":"StreamScreenObject","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var chromaKeyColor: CGColor?","type":"property","path":"\/documentation\/haishinkit\/streamscreenobject\/chromakeycolor"},{"title":"var videoGravity: AVLayerVideoGravity","type":"property","path":"\/documentation\/haishinkit\/streamscreenobject\/videogravity"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func makeBounds(CGSize) -> CGRect","type":"method","path":"\/documentation\/haishinkit\/streamscreenobject\/makebounds(_:)"},{"title":"func makeImage(some ScreenRenderer) -> CGImage?","type":"method","path":"\/documentation\/haishinkit\/streamscreenobject\/makeimage(_:)"},{"title":"Default Implementations","type":"groupMarker"},{"title":"HKStreamOutput Implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/haishinkit\/streamscreenobject\/stream(_:didoutput:)","title":"func stream(some HKStream, didOutput: CMSampleBuffer)"},{"type":"method","path":"\/documentation\/haishinkit\/streamscreenobject\/stream(_:didoutput:when:)","title":"func stream(some HKStream, didOutput: AVAudioBuffer, when: AVAudioTime)"}],"path":"\/documentation\/haishinkit\/streamscreenobject\/hkstreamoutput-implementations"}],"path":"\/documentation\/haishinkit\/streamscreenobject","type":"class"},{"title":"TSReader","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init()","type":"init","path":"\/documentation\/haishinkit\/tsreader\/init()"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var output: AsyncStream<(UInt16, CMSampleBuffer)>","type":"property","path":"\/documentation\/haishinkit\/tsreader\/output"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func clear()","type":"method","path":"\/documentation\/haishinkit\/tsreader\/clear()"},{"title":"func read(Data) -> Int","type":"method","path":"\/documentation\/haishinkit\/tsreader\/read(_:)"}],"path":"\/documentation\/haishinkit\/tsreader","type":"class"},{"title":"TSWriter","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/haishinkit\/tswriter\/init(segmentduration:)","title":"init(segmentDuration: Double)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/haishinkit\/tswriter\/audioformat","title":"var audioFormat: AVAudioFormat?"},{"type":"property","path":"\/documentation\/haishinkit\/tswriter\/expectedmedias","title":"var expectedMedias: Set<AVMediaType>"},{"type":"property","path":"\/documentation\/haishinkit\/tswriter\/output","title":"var output: AsyncStream<Data>"},{"type":"property","path":"\/documentation\/haishinkit\/tswriter\/videoformat","title":"var videoFormat: CMFormatDescription?"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/haishinkit\/tswriter\/append(_:)","title":"func append(CMSampleBuffer)"},{"type":"method","path":"\/documentation\/haishinkit\/tswriter\/append(_:when:)","title":"func append(AVAudioBuffer, when: AVAudioTime)"},{"type":"method","path":"\/documentation\/haishinkit\/tswriter\/clear()","title":"func clear()"}],"path":"\/documentation\/haishinkit\/tswriter","type":"class"},{"title":"TextScreenObject","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var attributes: [NSAttributedString.Key : Any]?","path":"\/documentation\/haishinkit\/textscreenobject\/attributes","type":"property"},{"title":"var bounds: CGRect","path":"\/documentation\/haishinkit\/textscreenobject\/bounds","type":"property"},{"title":"var string: String","path":"\/documentation\/haishinkit\/textscreenobject\/string","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func makeBounds(CGSize) -> CGRect","path":"\/documentation\/haishinkit\/textscreenobject\/makebounds(_:)","type":"method"},{"title":"func makeImage(some ScreenRenderer) -> CGImage?","path":"\/documentation\/haishinkit\/textscreenobject\/makeimage(_:)","type":"method"}],"path":"\/documentation\/haishinkit\/textscreenobject","type":"class"},{"title":"VideoDeviceUnit","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var colorFormat: OSType","type":"property","path":"\/documentation\/haishinkit\/videodeviceunit\/colorformat-swift.property"},{"title":"var connection: AVCaptureConnection?","type":"property","path":"\/documentation\/haishinkit\/videodeviceunit\/connection"},{"title":"var device: AVCaptureDevice?","type":"property","path":"\/documentation\/haishinkit\/videodeviceunit\/device"},{"title":"var input: AVCaptureInput?","type":"property","path":"\/documentation\/haishinkit\/videodeviceunit\/input"},{"title":"var isVideoMirrored: Bool","type":"property","path":"\/documentation\/haishinkit\/videodeviceunit\/isvideomirrored"},{"title":"var output: VideoDeviceUnit.Output?","type":"property","path":"\/documentation\/haishinkit\/videodeviceunit\/output-swift.property"},{"title":"let track: UInt8","type":"property","path":"\/documentation\/haishinkit\/videodeviceunit\/track"},{"title":"var videoOrientation: AVCaptureVideoOrientation","type":"property","path":"\/documentation\/haishinkit\/videodeviceunit\/videoorientation"},{"title":"Type Aliases","type":"groupMarker"},{"title":"VideoDeviceUnit.Output","type":"typealias","path":"\/documentation\/haishinkit\/videodeviceunit\/output-swift.typealias"},{"title":"Type Properties","type":"groupMarker"},{"title":"static let colorFormat: OSType","type":"property","path":"\/documentation\/haishinkit\/videodeviceunit\/colorformat-swift.type.property"}],"path":"\/documentation\/haishinkit\/videodeviceunit","type":"class"},{"title":"VideoRotator","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init?()","path":"\/documentation\/haishinkit\/videorotator\/init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func rotate(buffer: CMSampleBuffer) -> Result<CMSampleBuffer, VideoRotator.Error>","path":"\/documentation\/haishinkit\/videorotator\/rotate(buffer:)","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"title":"VideoRotator.Error","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","path":"\/documentation\/haishinkit\/videorotator\/error\/cannotallocatepixelbuffer(_:)","title":"case cannotAllocatePixelBuffer(CVReturn)"},{"type":"case","path":"\/documentation\/haishinkit\/videorotator\/error\/noimagebuffer","title":"case noImageBuffer"},{"type":"case","path":"\/documentation\/haishinkit\/videorotator\/error\/noorientationinfo","title":"case noOrientationInfo"},{"type":"case","path":"\/documentation\/haishinkit\/videorotator\/error\/rotationfailure(_:)","title":"case rotationFailure(OSStatus)"},{"type":"case","path":"\/documentation\/haishinkit\/videorotator\/error\/unsupportedorientation","title":"case unsupportedOrientation"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","path":"\/documentation\/haishinkit\/videorotator\/error\/error-implementations","title":"Error Implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var localizedDescription: String","path":"\/documentation\/haishinkit\/videorotator\/error\/localizeddescription"}]}],"path":"\/documentation\/haishinkit\/videorotator\/error","type":"enum"}],"path":"\/documentation\/haishinkit\/videorotator","type":"class"},{"title":"VideoTrackScreenObject","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init()","type":"init","path":"\/documentation\/haishinkit\/videotrackscreenobject\/init()"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var chromaKeyColor: CGColor?","type":"property","path":"\/documentation\/haishinkit\/videotrackscreenobject\/chromakeycolor"},{"title":"var frameRate: Int","type":"property","path":"\/documentation\/haishinkit\/videotrackscreenobject\/framerate"},{"title":"var track: UInt8","type":"property","path":"\/documentation\/haishinkit\/videotrackscreenobject\/track"},{"title":"var videoGravity: AVLayerVideoGravity","type":"property","path":"\/documentation\/haishinkit\/videotrackscreenobject\/videogravity"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func draw(some ScreenRenderer)","type":"method","path":"\/documentation\/haishinkit\/videotrackscreenobject\/draw(_:)"},{"title":"func makeBounds(CGSize) -> CGRect","type":"method","path":"\/documentation\/haishinkit\/videotrackscreenobject\/makebounds(_:)"},{"title":"func makeImage(some ScreenRenderer) -> CGImage?","type":"method","path":"\/documentation\/haishinkit\/videotrackscreenobject\/makeimage(_:)"},{"title":"func registerVideoEffect(some VideoEffect) -> Bool","type":"method","path":"\/documentation\/haishinkit\/videotrackscreenobject\/registervideoeffect(_:)"},{"title":"func unregisterVideoEffect(some VideoEffect) -> Bool","type":"method","path":"\/documentation\/haishinkit\/videotrackscreenobject\/unregistervideoeffect(_:)"}],"path":"\/documentation\/haishinkit\/videotrackscreenobject","type":"class"},{"title":"Protocols","type":"groupMarker"},{"title":"AsyncRunner","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var isRunning: Bool","type":"property","path":"\/documentation\/haishinkit\/asyncrunner\/isrunning"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func startRunning() async","type":"method","path":"\/documentation\/haishinkit\/asyncrunner\/startrunning()"},{"title":"func stopRunning() async","type":"method","path":"\/documentation\/haishinkit\/asyncrunner\/stoprunning()"}],"path":"\/documentation\/haishinkit\/asyncrunner","type":"protocol"},{"title":"ChromaKeyProcessable","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/chromakeyprocessable\/chromakeycolor","title":"var chromaKeyColor: CGColor?","type":"property"}],"path":"\/documentation\/haishinkit\/chromakeyprocessable","type":"protocol"},{"title":"HKStream","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var audioSettings: AudioCodecSettings","path":"\/documentation\/haishinkit\/hkstream\/audiosettings"},{"type":"property","title":"var readyState: HKStreamReadyState","path":"\/documentation\/haishinkit\/hkstream\/readystate"},{"type":"property","title":"var soundTransform: SoundTransform?","path":"\/documentation\/haishinkit\/hkstream\/soundtransform"},{"type":"property","title":"var videoSettings: VideoCodecSettings","path":"\/documentation\/haishinkit\/hkstream\/videosettings"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func addOutput(some HKStreamOutput)","path":"\/documentation\/haishinkit\/hkstream\/addoutput(_:)"},{"type":"method","title":"func append(CMSampleBuffer)","path":"\/documentation\/haishinkit\/hkstream\/append(_:)"},{"type":"method","title":"func append(AVAudioBuffer, when: AVAudioTime)","path":"\/documentation\/haishinkit\/hkstream\/append(_:when:)"},{"type":"method","title":"func attachAudioPlayer(AudioPlayer?) async","path":"\/documentation\/haishinkit\/hkstream\/attachaudioplayer(_:)"},{"type":"method","title":"func dispatch(NetworkMonitorEvent) async","path":"\/documentation\/haishinkit\/hkstream\/dispatch(_:)"},{"type":"method","title":"func removeOutput(some HKStreamOutput)","path":"\/documentation\/haishinkit\/hkstream\/removeoutput(_:)"},{"type":"method","title":"func setAudioSettings(AudioCodecSettings)","path":"\/documentation\/haishinkit\/hkstream\/setaudiosettings(_:)"},{"type":"method","title":"func setBitrateStorategy((some HKStreamBitRateStrategy)?)","path":"\/documentation\/haishinkit\/hkstream\/setbitratestorategy(_:)"},{"type":"method","title":"func setSoundTransform(SoundTransform) async","path":"\/documentation\/haishinkit\/hkstream\/setsoundtransform(_:)"},{"type":"method","title":"func setVideoInputBufferCounts(Int)","path":"\/documentation\/haishinkit\/hkstream\/setvideoinputbuffercounts(_:)"},{"type":"method","title":"func setVideoSettings(VideoCodecSettings)","path":"\/documentation\/haishinkit\/hkstream\/setvideosettings(_:)"}],"path":"\/documentation\/haishinkit\/hkstream","type":"protocol"},{"title":"HKStreamBitRateStrategy","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/haishinkit\/hkstreambitratestrategy\/mamimumaudiobitrate","title":"var mamimumAudioBitRate: Int"},{"type":"property","path":"\/documentation\/haishinkit\/hkstreambitratestrategy\/mamimumvideobitrate","title":"var mamimumVideoBitRate: Int"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/haishinkit\/hkstreambitratestrategy\/adjustbitrate(_:stream:)","title":"func adjustBitrate(NetworkMonitorEvent, stream: some HKStream) async"}],"path":"\/documentation\/haishinkit\/hkstreambitratestrategy","type":"protocol"},{"title":"HKStreamOutput","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func stream(some HKStream, didOutput: CMSampleBuffer)","type":"method","path":"\/documentation\/haishinkit\/hkstreamoutput\/stream(_:didoutput:)"},{"title":"func stream(some HKStream, didOutput: AVAudioBuffer, when: AVAudioTime)","type":"method","path":"\/documentation\/haishinkit\/hkstreamoutput\/stream(_:didoutput:when:)"}],"path":"\/documentation\/haishinkit\/hkstreamoutput","type":"protocol"},{"title":"MediaMixerOutput","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var audioTrackId: UInt8?","type":"property","path":"\/documentation\/haishinkit\/mediamixeroutput\/audiotrackid"},{"title":"var videoTrackId: UInt8?","type":"property","path":"\/documentation\/haishinkit\/mediamixeroutput\/videotrackid"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func mixer(MediaMixer, didOutput: CMSampleBuffer)","type":"method","path":"\/documentation\/haishinkit\/mediamixeroutput\/mixer(_:didoutput:)"},{"title":"func mixer(MediaMixer, didOutput: AVAudioPCMBuffer, when: AVAudioTime)","type":"method","path":"\/documentation\/haishinkit\/mediamixeroutput\/mixer(_:didoutput:when:)"},{"title":"func selectTrack(UInt8?, mediaType: CMFormatDescription.MediaType) async","type":"method","path":"\/documentation\/haishinkit\/mediamixeroutput\/selecttrack(_:mediatype:)"}],"path":"\/documentation\/haishinkit\/mediamixeroutput","type":"protocol"},{"title":"NetworkConnection","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/networkconnection\/connected","type":"property","title":"var connected: Bool"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/networkconnection\/close()","type":"method","title":"func close() async throws"}],"path":"\/documentation\/haishinkit\/networkconnection","type":"protocol"},{"title":"NetworkTransportReporter","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func makeNetworkMonitor() async -> NetworkMonitor","path":"\/documentation\/haishinkit\/networktransportreporter\/makenetworkmonitor()"},{"type":"method","title":"func makeNetworkTransportReport() async -> NetworkTransportReport","path":"\/documentation\/haishinkit\/networktransportreporter\/makenetworktransportreport()"}],"path":"\/documentation\/haishinkit\/networktransportreporter","type":"protocol"},{"title":"Runner","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/runner\/isrunning","type":"property","title":"var isRunning: Bool"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/runner\/startrunning()","type":"method","title":"func startRunning()"},{"path":"\/documentation\/haishinkit\/runner\/stoprunning()","type":"method","title":"func stopRunning()"}],"path":"\/documentation\/haishinkit\/runner","type":"protocol"},{"title":"ScreenDelegate","children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/screendelegate\/screen(_:willlayout:)","title":"func screen(Screen, willLayout: CMTime)","type":"method"}],"path":"\/documentation\/haishinkit\/screendelegate","type":"protocol"},{"title":"ScreenRenderer","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var backgroundColor: CGColor","path":"\/documentation\/haishinkit\/screenrenderer\/backgroundcolor","type":"property"},{"title":"var bounds: CGRect","path":"\/documentation\/haishinkit\/screenrenderer\/bounds","type":"property"},{"title":"var context: CIContext","path":"\/documentation\/haishinkit\/screenrenderer\/context","type":"property"},{"title":"var presentationTimeStamp: CMTime","path":"\/documentation\/haishinkit\/screenrenderer\/presentationtimestamp","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func draw(ScreenObject)","path":"\/documentation\/haishinkit\/screenrenderer\/draw(_:)","type":"method"},{"title":"func layout(ScreenObject)","path":"\/documentation\/haishinkit\/screenrenderer\/layout(_:)","type":"method"},{"title":"func setTarget(CVPixelBuffer?)","path":"\/documentation\/haishinkit\/screenrenderer\/settarget(_:)","type":"method"}],"path":"\/documentation\/haishinkit\/screenrenderer","type":"protocol"},{"title":"Session","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/session\/init(uri:)","title":"init(uri: URL)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/session\/isconnected","title":"var isConnected: Bool","type":"property"},{"path":"\/documentation\/haishinkit\/session\/stream","title":"var stream: any HKStream","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/session\/close()","title":"func close() async throws","type":"method"},{"path":"\/documentation\/haishinkit\/session\/connect(_:)","title":"func connect(SessionMethod) async throws","type":"method"}],"path":"\/documentation\/haishinkit\/session","type":"protocol"},{"title":"SessionFactory","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/sessionfactory\/supportedprotocols","type":"property","title":"var supportedProtocols: Set<String>"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/sessionfactory\/make(uri:)","type":"method","title":"func make(uri: URL) -> any Session"}],"path":"\/documentation\/haishinkit\/sessionfactory","type":"protocol"},{"title":"VideoEffect","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func execute(CIImage) -> CIImage","type":"method","path":"\/documentation\/haishinkit\/videoeffect\/execute(_:)"}],"path":"\/documentation\/haishinkit\/videoeffect","type":"protocol"},{"title":"Structures","type":"groupMarker"},{"title":"AMFArray","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/amfarray\/init(count:)","title":"init(count: Int)","type":"init"},{"path":"\/documentation\/haishinkit\/amfarray\/init(data:)","title":"init(data: [(any Sendable)?])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/amfarray\/length","title":"var length: Int","type":"property"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/amfarray\/subscript(_:)","title":"subscript(Any) -> (any Sendable)?","type":"subscript"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/amfarray\/debugdescription","type":"property","title":"var debugDescription: String"}],"path":"\/documentation\/haishinkit\/amfarray\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/haishinkit\/amfarray\/!=(_:_:)"},{"title":"static func == (AMFArray, AMFArray) -> Bool","type":"op","path":"\/documentation\/haishinkit\/amfarray\/==(_:_:)"}],"path":"\/documentation\/haishinkit\/amfarray\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/haishinkit\/amfarray\/init(arrayliteral:)","type":"init","title":"init(arrayLiteral: (any Sendable)?...)"}],"path":"\/documentation\/haishinkit\/amfarray\/expressiblebyarrayliteral-implementations","title":"ExpressibleByArrayLiteral Implementations","type":"symbol"}],"path":"\/documentation\/haishinkit\/amfarray","type":"struct"},{"title":"AMFTypedObject","children":[{"title":"Instance Properties","type":"groupMarker"},{"type":"property","title":"let data: AMFObject","path":"\/documentation\/haishinkit\/amftypedobject\/data"},{"type":"property","title":"let typeName: String","path":"\/documentation\/haishinkit\/amftypedobject\/typename"}],"path":"\/documentation\/haishinkit\/amftypedobject","type":"struct"},{"title":"AMFUndefined","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var description: String","path":"\/documentation\/haishinkit\/amfundefined\/description"}],"path":"\/documentation\/haishinkit\/amfundefined","type":"struct"},{"title":"AMFXML","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/haishinkit\/amfxml\/init(data:)","type":"init","title":"init(data: String)"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/amfxml\/description","type":"property","title":"var description: String"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/haishinkit\/amfxml\/equatable-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/haishinkit\/amfxml\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"},{"path":"\/documentation\/haishinkit\/amfxml\/==(_:_:)","type":"op","title":"static func == (AMFXML, AMFXML) -> Bool"}],"title":"Equatable Implementations"}],"path":"\/documentation\/haishinkit\/amfxml","type":"struct"},{"title":"AMFXMLDocument","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/haishinkit\/amfxmldocument\/init(data:)","title":"init(data: String)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/haishinkit\/amfxmldocument\/description","title":"var description: String"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/haishinkit\/amfxmldocument\/!=(_:_:)"},{"type":"op","title":"static func == (AMFXMLDocument, AMFXMLDocument) -> Bool","path":"\/documentation\/haishinkit\/amfxmldocument\/==(_:_:)"}],"type":"symbol","path":"\/documentation\/haishinkit\/amfxmldocument\/equatable-implementations","title":"Equatable Implementations"}],"path":"\/documentation\/haishinkit\/amfxmldocument","type":"struct"},{"title":"AudioCodecSettings","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(bitRate: Int, downmix: Bool, channelMap: [Int]?, sampleRate: Float64, format: AudioCodecSettings.Format)","path":"\/documentation\/haishinkit\/audiocodecsettings\/init(bitrate:downmix:channelmap:samplerate:format:)","type":"init"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/haishinkit\/audiocodecsettings\/init(from:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var bitRate: Int","path":"\/documentation\/haishinkit\/audiocodecsettings\/bitrate","type":"property"},{"title":"var channelMap: [Int]?","path":"\/documentation\/haishinkit\/audiocodecsettings\/channelmap","type":"property"},{"title":"var downmix: Bool","path":"\/documentation\/haishinkit\/audiocodecsettings\/downmix","type":"property"},{"title":"var format: AudioCodecSettings.Format","path":"\/documentation\/haishinkit\/audiocodecsettings\/format-swift.property","type":"property"},{"title":"let sampleRate: Float64","path":"\/documentation\/haishinkit\/audiocodecsettings\/samplerate","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"title":"static let `default`: AudioCodecSettings","path":"\/documentation\/haishinkit\/audiocodecsettings\/default","type":"property"},{"title":"static let defaultBitRate: Int","path":"\/documentation\/haishinkit\/audiocodecsettings\/defaultbitrate","type":"property"},{"title":"static let maximumNumberOfChannels: UInt32","path":"\/documentation\/haishinkit\/audiocodecsettings\/maximumnumberofchannels","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"title":"AudioCodecSettings.Format","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/haishinkit\/audiocodecsettings\/format-swift.enum\/aac","type":"case","title":"case aac"},{"path":"\/documentation\/haishinkit\/audiocodecsettings\/format-swift.enum\/opus","type":"case","title":"case opus"},{"path":"\/documentation\/haishinkit\/audiocodecsettings\/format-swift.enum\/pcm","type":"case","title":"case pcm"},{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/haishinkit\/audiocodecsettings\/format-swift.enum\/init(from:)","type":"init","title":"init(from: any Decoder) throws"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/haishinkit\/audiocodecsettings\/format-swift.enum\/equatable-implementations","type":"symbol","title":"Equatable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/haishinkit\/audiocodecsettings\/format-swift.enum\/!=(_:_:)","type":"op"}]}],"path":"\/documentation\/haishinkit\/audiocodecsettings\/format-swift.enum","type":"enum"}],"path":"\/documentation\/haishinkit\/audiocodecsettings","type":"struct"},{"title":"AudioMixerSettings","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(sampleRate: Float64, channels: UInt32, isMuted: Bool, mainTrack: UInt8, tracks: [UInt8 : AudioMixerTrackSettings])","path":"\/documentation\/haishinkit\/audiomixersettings\/init(samplerate:channels:ismuted:maintrack:tracks:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let channels: UInt32","path":"\/documentation\/haishinkit\/audiomixersettings\/channels","type":"property"},{"title":"var isMuted: Bool","path":"\/documentation\/haishinkit\/audiomixersettings\/ismuted","type":"property"},{"title":"var mainTrack: UInt8","path":"\/documentation\/haishinkit\/audiomixersettings\/maintrack","type":"property"},{"title":"var maximumNumberOfChannels: UInt32","path":"\/documentation\/haishinkit\/audiomixersettings\/maximumnumberofchannels","type":"property"},{"title":"let sampleRate: Float64","path":"\/documentation\/haishinkit\/audiomixersettings\/samplerate","type":"property"},{"title":"var tracks: [UInt8 : AudioMixerTrackSettings]","path":"\/documentation\/haishinkit\/audiomixersettings\/tracks","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"title":"static let `default`: AudioMixerSettings","path":"\/documentation\/haishinkit\/audiomixersettings\/default","type":"property"},{"title":"static let maximumSampleRate: Float64","path":"\/documentation\/haishinkit\/audiomixersettings\/maximumsamplerate","type":"property"}],"path":"\/documentation\/haishinkit\/audiomixersettings","type":"struct"},{"title":"AudioMixerTrackSettings","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","type":"init","path":"\/documentation\/haishinkit\/audiomixertracksettings\/init(from:)"},{"title":"init(volume: Float, isMuted: Bool, downmix: Bool, channelMap: [Int]?)","type":"init","path":"\/documentation\/haishinkit\/audiomixertracksettings\/init(volume:ismuted:downmix:channelmap:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var channelMap: [Int]?","type":"property","path":"\/documentation\/haishinkit\/audiomixertracksettings\/channelmap"},{"title":"var downmix: Bool","type":"property","path":"\/documentation\/haishinkit\/audiomixertracksettings\/downmix"},{"title":"var isMuted: Bool","type":"property","path":"\/documentation\/haishinkit\/audiomixertracksettings\/ismuted"},{"title":"var volume: Float","type":"property","path":"\/documentation\/haishinkit\/audiomixertracksettings\/volume"},{"title":"Type Properties","type":"groupMarker"},{"title":"static let `default`: AudioMixerTrackSettings","type":"property","path":"\/documentation\/haishinkit\/audiomixertracksettings\/default"}],"path":"\/documentation\/haishinkit\/audiomixertracksettings","type":"struct"},{"title":"HKAtomic","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/haishinkit\/hkatomic\/init(_:)","title":"init(A)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/haishinkit\/hkatomic\/value","title":"var value: A"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/haishinkit\/hkatomic\/mutate(_:)","title":"func mutate((inout A) -> Void)"}],"path":"\/documentation\/haishinkit\/hkatomic","type":"struct"},{"title":"NetworkMonitorReport","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"let currentBytesInPerSecond: Int","type":"property","path":"\/documentation\/haishinkit\/networkmonitorreport\/currentbytesinpersecond"},{"title":"let currentBytesOutPerSecond: Int","type":"property","path":"\/documentation\/haishinkit\/networkmonitorreport\/currentbytesoutpersecond"},{"title":"let currentQueueBytesOut: Int","type":"property","path":"\/documentation\/haishinkit\/networkmonitorreport\/currentqueuebytesout"},{"title":"let totalBytesIn: Int","type":"property","path":"\/documentation\/haishinkit\/networkmonitorreport\/totalbytesin"},{"title":"let totalBytesOut: Int","type":"property","path":"\/documentation\/haishinkit\/networkmonitorreport\/totalbytesout"}],"path":"\/documentation\/haishinkit\/networkmonitorreport","type":"struct"},{"title":"NetworkTransportReport","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/networktransportreport\/init(queuebytesout:totalbytesin:totalbytesout:)","title":"init(queueBytesOut: Int, totalBytesIn: Int, totalBytesOut: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/networktransportreport\/queuebytesout","title":"let queueBytesOut: Int","type":"property"},{"path":"\/documentation\/haishinkit\/networktransportreport\/totalbytesin","title":"let totalBytesIn: Int","type":"property"},{"path":"\/documentation\/haishinkit\/networktransportreport\/totalbytesout","title":"let totalBytesOut: Int","type":"property"}],"path":"\/documentation\/haishinkit\/networktransportreport","type":"struct"},{"title":"RTMPResponse","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"let arguments: [(any Sendable)?]","type":"property","path":"\/documentation\/haishinkit\/rtmpresponse\/arguments"},{"title":"let status: RTMPStatus?","type":"property","path":"\/documentation\/haishinkit\/rtmpresponse\/status"}],"path":"\/documentation\/haishinkit\/rtmpresponse","type":"struct"},{"title":"RTMPSessionFactory","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init()","path":"\/documentation\/haishinkit\/rtmpsessionfactory\/init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let supportedProtocols: Set<String>","path":"\/documentation\/haishinkit\/rtmpsessionfactory\/supportedprotocols","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func make(uri: URL) -> any Session","path":"\/documentation\/haishinkit\/rtmpsessionfactory\/make(uri:)","type":"method"}],"path":"\/documentation\/haishinkit\/rtmpsessionfactory","type":"struct"},{"title":"RTMPStatus","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/rtmpstatus\/code","type":"property","title":"let code: String"},{"path":"\/documentation\/haishinkit\/rtmpstatus\/description","type":"property","title":"let description: String"},{"path":"\/documentation\/haishinkit\/rtmpstatus\/level","type":"property","title":"let level: String"},{"type":"groupMarker","title":"Subscripts"},{"path":"\/documentation\/haishinkit\/rtmpstatus\/subscript(dynamicmember:)-7qc0b","type":"subscript","title":"subscript(dynamicMember _: String) -> Double?"},{"path":"\/documentation\/haishinkit\/rtmpstatus\/subscript(dynamicmember:)-9sprr","type":"subscript","title":"subscript(dynamicMember _: String) -> String?"}],"path":"\/documentation\/haishinkit\/rtmpstatus","type":"struct"},{"title":"RTMPStreamInfo","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var byteCount: Int","path":"\/documentation\/haishinkit\/rtmpstreaminfo\/bytecount","type":"property"},{"title":"var currentBytesPerSecond: Int","path":"\/documentation\/haishinkit\/rtmpstreaminfo\/currentbytespersecond","type":"property"},{"title":"var resourceName: String?","path":"\/documentation\/haishinkit\/rtmpstreaminfo\/resourcename","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"title":"CustomDebugStringConvertible Implementations","path":"\/documentation\/haishinkit\/rtmpstreaminfo\/customdebugstringconvertible-implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var debugDescription: String","path":"\/documentation\/haishinkit\/rtmpstreaminfo\/debugdescription","type":"property"}],"type":"symbol"}],"path":"\/documentation\/haishinkit\/rtmpstreaminfo","type":"struct"},{"title":"SessionBuilder","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func build() async throws -> (any Session)?","path":"\/documentation\/haishinkit\/sessionbuilder\/build()","type":"method"}],"path":"\/documentation\/haishinkit\/sessionbuilder","type":"struct"},{"title":"SoundTransform","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/soundtransform\/init(volume:pan:)","title":"init(volume: Float, pan: Float)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/soundtransform\/pan","title":"var pan: Float","type":"property"},{"path":"\/documentation\/haishinkit\/soundtransform\/volume","title":"var volume: Float","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/soundtransform\/defaultpan","title":"static let defaultPan: Float","type":"property"},{"path":"\/documentation\/haishinkit\/soundtransform\/defaultvolume","title":"static let defaultVolume: Float","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var debugDescription: String","type":"property","path":"\/documentation\/haishinkit\/soundtransform\/debugdescription"}],"path":"\/documentation\/haishinkit\/soundtransform\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/haishinkit\/soundtransform\/!=(_:_:)","type":"op"}],"path":"\/documentation\/haishinkit\/soundtransform\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/haishinkit\/soundtransform","type":"struct"},{"title":"VTSessionOption","children":[{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","path":"\/documentation\/haishinkit\/vtsessionoption\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"},{"type":"op","path":"\/documentation\/haishinkit\/vtsessionoption\/==(_:_:)","title":"static func == (VTSessionOption, VTSessionOption) -> Bool"}],"title":"Equatable Implementations","path":"\/documentation\/haishinkit\/vtsessionoption\/equatable-implementations"},{"type":"symbol","children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/vtsessionoption\/hash(into:)","type":"method","title":"func hash(into: inout Hasher)"}],"title":"Hashable Implementations","path":"\/documentation\/haishinkit\/vtsessionoption\/hashable-implementations"}],"path":"\/documentation\/haishinkit\/vtsessionoption","type":"struct"},{"title":"VideoCodecSettings","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/haishinkit\/videocodecsettings\/init(from:)","title":"init(from: any Decoder) throws"},{"type":"init","path":"\/documentation\/haishinkit\/videocodecsettings\/init(videosize:bitrate:profilelevel:scalingmode:bitratemode:maxkeyframeintervalduration:allowframereordering:dataratelimits:ishardwareencoderenabled:)","title":"init(videoSize: CGSize, bitRate: Int, profileLevel: String, scalingMode: VideoCodecSettings.ScalingMode, bitRateMode: VideoCodecSettings.BitRateMode, maxKeyFrameIntervalDuration: Int32, allowFrameReordering: Bool?, dataRateLimits: [Double]?, isHardwareEncoderEnabled: Bool)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/haishinkit\/videocodecsettings\/allowframereordering","title":"var allowFrameReordering: Bool?"},{"type":"property","path":"\/documentation\/haishinkit\/videocodecsettings\/bitrate","title":"var bitRate: Int"},{"type":"property","path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.property","title":"var bitRateMode: VideoCodecSettings.BitRateMode"},{"type":"property","path":"\/documentation\/haishinkit\/videocodecsettings\/dataratelimits","title":"var dataRateLimits: [Double]?"},{"type":"property","path":"\/documentation\/haishinkit\/videocodecsettings\/frameinterval","title":"var frameInterval: Double"},{"type":"property","path":"\/documentation\/haishinkit\/videocodecsettings\/ishardwareencoderenabled","title":"var isHardwareEncoderEnabled: Bool"},{"type":"property","path":"\/documentation\/haishinkit\/videocodecsettings\/maxkeyframeintervalduration","title":"var maxKeyFrameIntervalDuration: Int32"},{"type":"property","path":"\/documentation\/haishinkit\/videocodecsettings\/profilelevel","title":"var profileLevel: String"},{"type":"property","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.property","title":"var scalingMode: VideoCodecSettings.ScalingMode"},{"type":"property","path":"\/documentation\/haishinkit\/videocodecsettings\/videosize","title":"var videoSize: CGSize"},{"type":"groupMarker","title":"Type Properties"},{"type":"property","path":"\/documentation\/haishinkit\/videocodecsettings\/default","title":"static let `default`: VideoCodecSettings"},{"type":"property","path":"\/documentation\/haishinkit\/videocodecsettings\/frameinterval01","title":"static let frameInterval01: Double"},{"type":"property","path":"\/documentation\/haishinkit\/videocodecsettings\/frameinterval05","title":"static let frameInterval05: Double"},{"type":"property","path":"\/documentation\/haishinkit\/videocodecsettings\/frameinterval10","title":"static let frameInterval10: Double"},{"type":"property","path":"\/documentation\/haishinkit\/videocodecsettings\/frameinterval30","title":"static let frameInterval30: Double"},{"type":"groupMarker","title":"Enumerations"},{"type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case average","path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/average","type":"case"},{"title":"case constant","path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/constant","type":"case"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: String)","path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/init(rawvalue:)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/equatable-implementations","type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/!=(_:_:)","type":"op"}]},{"title":"RawRepresentable Implementations","path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/rawrepresentable-implementations","type":"symbol","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/init(from:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/hashvalue","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func encode(to: any Encoder) throws","path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/encode(to:)","type":"method"},{"title":"func hash(into: inout Hasher)","path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/hash(into:)","type":"method"}]}],"path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum","title":"VideoCodecSettings.BitRateMode"},{"type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","title":"case cropSourceToCleanAperture","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/cropsourcetocleanaperture"},{"type":"case","title":"case letterbox","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/letterbox"},{"type":"case","title":"case normal","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/normal"},{"type":"case","title":"case trim","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/trim"},{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init?(rawValue: String)","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/init(rawvalue:)"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","title":"Equatable Implementations","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/equatable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/!=(_:_:)"}]},{"type":"symbol","title":"RawRepresentable Implementations","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/rawrepresentable-implementations","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","type":"init","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/init(from:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","type":"property","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/hashvalue"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func encode(to: any Encoder) throws","type":"method","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/encode(to:)"},{"title":"func hash(into: inout Hasher)","type":"method","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/hash(into:)"}]}],"path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum","title":"VideoCodecSettings.ScalingMode"}],"path":"\/documentation\/haishinkit\/videocodecsettings","type":"struct"},{"title":"VideoMixerSettings","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videomixersettings\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/haishinkit\/videomixersettings\/init(mode:ismuted:maintrack:)","title":"init(mode: VideoMixerSettings.Mode, isMuted: Bool, mainTrack: UInt8)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videomixersettings\/ismuted","title":"var isMuted: Bool","type":"property"},{"path":"\/documentation\/haishinkit\/videomixersettings\/maintrack","title":"var mainTrack: UInt8","type":"property"},{"path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.property","title":"var mode: VideoMixerSettings.Mode","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videomixersettings\/default","title":"static let `default`: VideoMixerSettings","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum","title":"VideoMixerSettings.Mode","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/offscreen","type":"case","title":"case offscreen"},{"path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/passthrough","type":"case","title":"case passthrough"},{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/init(rawvalue:)","type":"init","title":"init?(rawValue: String)"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/equatable-implementations","type":"symbol","title":"Equatable Implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/!=(_:_:)"}]},{"path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/rawrepresentable-implementations","type":"symbol","title":"RawRepresentable Implementations","children":[{"title":"Initializers","type":"groupMarker"},{"type":"init","title":"init(from: any Decoder) throws","path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/init(from:)"},{"title":"Instance Properties","type":"groupMarker"},{"type":"property","title":"var hashValue: Int","path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/hashvalue"},{"title":"Instance Methods","type":"groupMarker"},{"type":"method","title":"func encode(to: any Encoder) throws","path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/encode(to:)"},{"type":"method","title":"func hash(into: inout Hasher)","path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/hash(into:)"}]}],"type":"enum"}],"path":"\/documentation\/haishinkit\/videomixersettings","type":"struct"},{"title":"Variables","type":"groupMarker"},{"title":"let kAMFUndefined: AMFUndefined","path":"\/documentation\/haishinkit\/kamfundefined","type":"var"},{"title":"let kHaishinKitIdentifier: String","path":"\/documentation\/haishinkit\/khaishinkitidentifier","type":"var"},{"title":"Type Aliases","type":"groupMarker"},{"title":"AMFObject","path":"\/documentation\/haishinkit\/amfobject","type":"typealias"},{"title":"AudioDeviceConfigurationBlock","path":"\/documentation\/haishinkit\/audiodeviceconfigurationblock","type":"typealias"},{"title":"VideoDeviceConfigurationBlock","path":"\/documentation\/haishinkit\/videodeviceconfigurationblock","type":"typealias"},{"title":"Enumerations","type":"groupMarker"},{"title":"DeviceUtil","children":[{"type":"groupMarker","title":"Type Methods"},{"type":"method","path":"\/documentation\/haishinkit\/deviceutil\/device(withlocalizedname:mediatype:)","title":"static func device(withLocalizedName: String, mediaType: AVMediaType) -> AVCaptureDevice?"}],"path":"\/documentation\/haishinkit\/deviceutil","type":"enum"},{"title":"HKStreamReadyState","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/hkstreamreadystate\/idle","title":"case idle","type":"case"},{"path":"\/documentation\/haishinkit\/hkstreamreadystate\/play","title":"case play","type":"case"},{"path":"\/documentation\/haishinkit\/hkstreamreadystate\/playing","title":"case playing","type":"case"},{"path":"\/documentation\/haishinkit\/hkstreamreadystate\/publish","title":"case publish","type":"case"},{"path":"\/documentation\/haishinkit\/hkstreamreadystate\/publishing","title":"case publishing","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/hkstreamreadystate\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/haishinkit\/hkstreamreadystate\/!=(_:_:)"}],"path":"\/documentation\/haishinkit\/hkstreamreadystate\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var hashValue: Int","path":"\/documentation\/haishinkit\/hkstreamreadystate\/hashvalue"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func hash(into: inout Hasher)","path":"\/documentation\/haishinkit\/hkstreamreadystate\/hash(into:)"}],"path":"\/documentation\/haishinkit\/hkstreamreadystate\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/haishinkit\/hkstreamreadystate","type":"enum"},{"title":"NetworkMonitorEvent","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/networkmonitorevent\/publishinsufficientbwoccured(report:)","title":"case publishInsufficientBWOccured(report: NetworkMonitorReport)","type":"case"},{"path":"\/documentation\/haishinkit\/networkmonitorevent\/reset","title":"case reset","type":"case"},{"path":"\/documentation\/haishinkit\/networkmonitorevent\/status(report:)","title":"case status(report: NetworkMonitorReport)","type":"case"}],"path":"\/documentation\/haishinkit\/networkmonitorevent","type":"enum"},{"title":"RTMPObjectEncoding","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case amf0","path":"\/documentation\/haishinkit\/rtmpobjectencoding\/amf0","type":"case"},{"title":"case amf3","path":"\/documentation\/haishinkit\/rtmpobjectencoding\/amf3","type":"case"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: UInt8)","path":"\/documentation\/haishinkit\/rtmpobjectencoding\/init(rawvalue:)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/rtmpobjectencoding\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"title":"Equatable Implementations","path":"\/documentation\/haishinkit\/rtmpobjectencoding\/equatable-implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","type":"property","path":"\/documentation\/haishinkit\/rtmpobjectencoding\/hashvalue"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func hash(into: inout Hasher)","type":"method","path":"\/documentation\/haishinkit\/rtmpobjectencoding\/hash(into:)"}],"title":"RawRepresentable Implementations","path":"\/documentation\/haishinkit\/rtmpobjectencoding\/rawrepresentable-implementations","type":"symbol"}],"path":"\/documentation\/haishinkit\/rtmpobjectencoding","type":"enum"},{"title":"SessionMethod","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case ingest","path":"\/documentation\/haishinkit\/sessionmethod\/ingest","type":"case"},{"title":"case playback","path":"\/documentation\/haishinkit\/sessionmethod\/playback","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","path":"\/documentation\/haishinkit\/sessionmethod\/equatable-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/haishinkit\/sessionmethod\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}]}],"path":"\/documentation\/haishinkit\/sessionmethod","type":"enum"},{"title":"Extended Modules","type":"groupMarker"},{"title":"CoreMedia","children":[{"title":"Extended Classes","type":"groupMarker"},{"type":"extension","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var isCompressed: Bool","type":"property","path":"\/documentation\/haishinkit\/coremedia\/cmformatdescription\/iscompressed"}],"title":"CMFormatDescription","path":"\/documentation\/haishinkit\/coremedia\/cmformatdescription"}],"path":"\/documentation\/haishinkit\/coremedia","type":"extension"}]},{"title":"MoQTHaishinKit","type":"module","path":"\/documentation\/moqthaishinkit","children":[{"title":"Classes","type":"groupMarker"},{"title":"MoQTConnection","type":"class","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(MoQTSetupRole, requestTimeOut: UInt64)","type":"init","path":"\/documentation\/moqthaishinkit\/moqtconnection\/init(_:requesttimeout:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var objectStream: AsyncStream<MoQTObject>","type":"property","path":"\/documentation\/moqthaishinkit\/moqtconnection\/objectstream"},{"title":"let requestTimeout: UInt64","type":"property","path":"\/documentation\/moqthaishinkit\/moqtconnection\/requesttimeout"},{"title":"let role: MoQTSetupRole","type":"property","path":"\/documentation\/moqthaishinkit\/moqtconnection\/role"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func annouce([String], authInfo: String?) async throws -> Result<MoQTAnnounceOk, MoQTAnnounceError>","type":"method","path":"\/documentation\/moqthaishinkit\/moqtconnection\/annouce(_:authinfo:)"},{"title":"func close() async","type":"method","path":"\/documentation\/moqthaishinkit\/moqtconnection\/close()"},{"title":"func connect(String) async throws -> MoQTServerSetup","type":"method","path":"\/documentation\/moqthaishinkit\/moqtconnection\/connect(_:)"},{"title":"func send([MoQTObject], header: MoQTStreamHeaderSubgroup) async throws","type":"method","path":"\/documentation\/moqthaishinkit\/moqtconnection\/send(_:header:)"},{"title":"func subscribe([String], name: String, authInfo: String?) async throws -> Result<MoQTSubscribeOk, MoQTSubscribeError>","type":"method","path":"\/documentation\/moqthaishinkit\/moqtconnection\/subscribe(_:name:authinfo:)"},{"title":"func subscribeAnnouces([String], authInfo: String?) async throws -> Result<MoQTSubscribeAnnouncesOk, MoQTSubscribeAnnouncesError>","type":"method","path":"\/documentation\/moqthaishinkit\/moqtconnection\/subscribeannouces(_:authinfo:)"},{"title":"Type Properties","type":"groupMarker"},{"title":"static let defaultPort: Int","type":"property","path":"\/documentation\/moqthaishinkit\/moqtconnection\/defaultport"},{"title":"static let defaultRequestTimeout: UInt64","type":"property","path":"\/documentation\/moqthaishinkit\/moqtconnection\/defaultrequesttimeout"},{"title":"static let supportedProtocols: [String]","type":"property","path":"\/documentation\/moqthaishinkit\/moqtconnection\/supportedprotocols"},{"title":"static let supportedVersions: [MoQTVersion]","type":"property","path":"\/documentation\/moqthaishinkit\/moqtconnection\/supportedversions"},{"title":"Enumerations","type":"groupMarker"},{"title":"MoQTConnection.Error","type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/error\/connectiontimedout","title":"case connectionTimedOut","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/error\/invalidstate","title":"case invalidState","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/error\/requesttimedout","title":"case requestTimedOut","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/error\/socketerroroccurred(_:)","title":"case socketErrorOccurred(any Error)","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/error\/unknownresponse","title":"case unknownResponse","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/error\/unsupportedcommand(_:)","title":"case unsupportedCommand(String)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/error\/error-implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var localizedDescription: String","path":"\/documentation\/moqthaishinkit\/moqtconnection\/error\/localizeddescription"}],"title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/moqthaishinkit\/moqtconnection\/error"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Actor Implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/moqthaishinkit\/moqtconnection\/assertisolated(_:file:line:)"},{"type":"method","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","path":"\/documentation\/moqthaishinkit\/moqtconnection\/assumeisolated(_:file:line:)"},{"type":"method","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/moqthaishinkit\/moqtconnection\/preconditionisolated(_:file:line:)"}],"path":"\/documentation\/moqthaishinkit\/moqtconnection\/actor-implementations"}],"path":"\/documentation\/moqthaishinkit\/moqtconnection"},{"title":"Protocols","type":"groupMarker"},{"title":"MoQTControlMessage","type":"protocol","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtcontrolmessage\/payload","title":"var payload: Data"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtcontrolmessage\/type","title":"var type: MoQTMessageType"}],"path":"\/documentation\/moqthaishinkit\/moqtcontrolmessage"},{"title":"Structures","type":"groupMarker"},{"title":"MoQTAnnounce","type":"struct","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var payload: Data","path":"\/documentation\/moqthaishinkit\/moqtannounce\/payload"},{"type":"property","title":"let subscribeParameters: [MoQTVersionSpecificParameter]","path":"\/documentation\/moqthaishinkit\/moqtannounce\/subscribeparameters"},{"type":"property","title":"let trackNamespace: [String]","path":"\/documentation\/moqthaishinkit\/moqtannounce\/tracknamespace"},{"type":"property","title":"let type: MoQTMessageType","path":"\/documentation\/moqthaishinkit\/moqtannounce\/type"}],"path":"\/documentation\/moqthaishinkit\/moqtannounce"},{"title":"MoQTAnnounceError","type":"struct","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/moqthaishinkit\/moqtannounceerror\/code","type":"property","title":"let code: Int"},{"path":"\/documentation\/moqthaishinkit\/moqtannounceerror\/payload","type":"property","title":"var payload: Data"},{"path":"\/documentation\/moqthaishinkit\/moqtannounceerror\/reasonphrase","type":"property","title":"let reasonPhrase: String"},{"path":"\/documentation\/moqthaishinkit\/moqtannounceerror\/tracknamespace","type":"property","title":"let trackNamespace: [String]"},{"path":"\/documentation\/moqthaishinkit\/moqtannounceerror\/type","type":"property","title":"let type: MoQTMessageType"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/moqthaishinkit\/moqtannounceerror\/localizeddescription","type":"property","title":"var localizedDescription: String"}],"path":"\/documentation\/moqthaishinkit\/moqtannounceerror\/error-implementations","type":"symbol","title":"Error Implementations"}],"path":"\/documentation\/moqthaishinkit\/moqtannounceerror"},{"title":"MoQTAnnounceOk","type":"struct","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var payload: Data","type":"property","path":"\/documentation\/moqthaishinkit\/moqtannounceok\/payload"},{"title":"let trackNamespace: [String]","type":"property","path":"\/documentation\/moqthaishinkit\/moqtannounceok\/tracknamespace"},{"title":"let type: MoQTMessageType","type":"property","path":"\/documentation\/moqthaishinkit\/moqtannounceok\/type"}],"path":"\/documentation\/moqthaishinkit\/moqtannounceok"},{"title":"MoQTGoaway","type":"struct","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtgoaway\/newsessionuri","title":"let newSessionURI: String"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtgoaway\/payload","title":"var payload: Data"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtgoaway\/type","title":"let type: MoQTMessageType"}],"path":"\/documentation\/moqthaishinkit\/moqtgoaway"},{"title":"MoQTObject","type":"struct","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/moqthaishinkit\/moqtobject\/init(id:status:data:)","type":"init","title":"init(id: Int, status: Int?, data: Data)"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/moqthaishinkit\/moqtobject\/data","type":"property","title":"let data: Data"},{"path":"\/documentation\/moqthaishinkit\/moqtobject\/id","type":"property","title":"let id: Int"},{"path":"\/documentation\/moqthaishinkit\/moqtobject\/status","type":"property","title":"let status: Int?"}],"path":"\/documentation\/moqthaishinkit\/moqtobject"},{"title":"MoQTServerSetup","type":"struct","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var payload: Data","path":"\/documentation\/moqthaishinkit\/moqtserversetup\/payload"},{"type":"property","title":"let selectedVersion: Int","path":"\/documentation\/moqthaishinkit\/moqtserversetup\/selectedversion"},{"type":"property","title":"let setupParameters: [MoQTSetupParameter]","path":"\/documentation\/moqthaishinkit\/moqtserversetup\/setupparameters"},{"type":"property","title":"let type: MoQTMessageType","path":"\/documentation\/moqthaishinkit\/moqtserversetup\/type"}],"path":"\/documentation\/moqthaishinkit\/moqtserversetup"},{"title":"MoQTSetupParameter","type":"struct","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"let key: MoQTSetupParameterType","path":"\/documentation\/moqthaishinkit\/moqtsetupparameter\/key","type":"property"},{"title":"let value: any Sendable","path":"\/documentation\/moqthaishinkit\/moqtsetupparameter\/value","type":"property"}],"path":"\/documentation\/moqthaishinkit\/moqtsetupparameter"},{"title":"MoQTStreamHeaderSubgroup","type":"struct","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(trackAlias: Int, groupId: Int, subgroupId: Int, publisherPriority: Int)","path":"\/documentation\/moqthaishinkit\/moqtstreamheadersubgroup\/init(trackalias:groupid:subgroupid:publisherpriority:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let groupId: Int","path":"\/documentation\/moqthaishinkit\/moqtstreamheadersubgroup\/groupid","type":"property"},{"title":"var payload: Data","path":"\/documentation\/moqthaishinkit\/moqtstreamheadersubgroup\/payload","type":"property"},{"title":"let publisherPriority: Int","path":"\/documentation\/moqthaishinkit\/moqtstreamheadersubgroup\/publisherpriority","type":"property"},{"title":"let subgroupId: Int","path":"\/documentation\/moqthaishinkit\/moqtstreamheadersubgroup\/subgroupid","type":"property"},{"title":"let trackAlias: Int","path":"\/documentation\/moqthaishinkit\/moqtstreamheadersubgroup\/trackalias","type":"property"},{"title":"let type: MoQTDataStreamType","path":"\/documentation\/moqthaishinkit\/moqtstreamheadersubgroup\/type","type":"property"}],"path":"\/documentation\/moqthaishinkit\/moqtstreamheadersubgroup"},{"title":"MoQTSubscribe","type":"struct","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/endgroup","title":"let endGroup: Int?","type":"property"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/endobject","title":"let endObject: Int?","type":"property"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.property","title":"let filterType: MoQTSubscribe.FilterType","type":"property"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.property","title":"let groupOrder: MoQTSubscribe.GroupOrder","type":"property"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/payload","title":"var payload: Data","type":"property"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/startgroup","title":"let startGroup: Int?","type":"property"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/startobject","title":"let startObject: Int?","type":"property"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/subscribeid","title":"let subscribeId: Int","type":"property"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/subscribeparameters","title":"let subscribeParameters: [MoQTVersionSpecificParameter]","type":"property"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/subscribepriority","title":"let subscribePriority: Int","type":"property"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/trackalias","title":"let trackAlias: Int","type":"property"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/trackname","title":"let trackName: String","type":"property"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/tracknamespace","title":"let trackNamespace: [String]","type":"property"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/type","title":"let type: MoQTMessageType","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum","title":"MoQTSubscribe.FilterType","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","title":"case absoluteRange","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/absoluterange"},{"type":"case","title":"case absoluteStart","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/absolutestart"},{"type":"case","title":"case latestGroup","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/latestgroup"},{"type":"case","title":"case latestObject","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/latestobject"},{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init?(rawValue: Int)","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/init(rawvalue:)"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/!=(_:_:)"}],"type":"symbol","title":"Equatable Implementations","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/equatable-implementations"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"type":"symbol","title":"RawRepresentable Implementations","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/rawrepresentable-implementations"}],"type":"enum"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum","title":"MoQTSubscribe.GroupOrder","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case ascending","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/ascending","type":"case"},{"title":"case descending","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/descending","type":"case"},{"title":"case original","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/original","type":"case"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: Int)","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/init(rawvalue:)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/!=(_:_:)","type":"op"}],"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/equatable-implementations","type":"symbol"},{"title":"RawRepresentable Implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/hashvalue","type":"property","title":"var hashValue: Int"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/hash(into:)","type":"method","title":"func hash(into: inout Hasher)"}],"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/rawrepresentable-implementations","type":"symbol"}],"type":"enum"}],"path":"\/documentation\/moqthaishinkit\/moqtsubscribe"},{"title":"MoQTSubscribeAnnounces","type":"struct","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"let parameters: [MoQTVersionSpecificParameter]","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounces\/parameters"},{"type":"property","title":"var payload: Data","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounces\/payload"},{"type":"property","title":"let trackNamespacePrefix: [String]","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounces\/tracknamespaceprefix"},{"type":"property","title":"let type: MoQTMessageType","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounces\/type"}],"path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounces"},{"title":"MoQTSubscribeAnnouncesError","type":"struct","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"let errorCode: Int","type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounceserror\/errorcode"},{"title":"var payload: Data","type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounceserror\/payload"},{"title":"let reasonPhrase: String","type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounceserror\/reasonphrase"},{"title":"let trackNamespacePrefix: [String]","type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounceserror\/tracknamespaceprefix"},{"title":"let type: MoQTMessageType","type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounceserror\/type"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Error Implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounceserror\/localizeddescription","type":"property","title":"var localizedDescription: String"}],"path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounceserror\/error-implementations"}],"path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounceserror"},{"title":"MoQTSubscribeAnnouncesOk","type":"struct","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeannouncesok\/payload","type":"property","title":"var payload: Data"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeannouncesok\/tracknamespaceprefix","type":"property","title":"let trackNamespacePrefix: [String]"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeannouncesok\/type","type":"property","title":"let type: MoQTMessageType"}],"path":"\/documentation\/moqthaishinkit\/moqtsubscribeannouncesok"},{"title":"MoQTSubscribeError","type":"struct","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"let code: Int","path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror\/code"},{"type":"property","title":"var payload: Data","path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror\/payload"},{"type":"property","title":"let reasonPhrase: String","path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror\/reasonphrase"},{"type":"property","title":"let subscribeId: Int","path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror\/subscribeid"},{"type":"property","title":"let trackAlias: Int","path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror\/trackalias"},{"type":"property","title":"let type: MoQTMessageType","path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror\/type"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","title":"Error Implementations","path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror\/error-implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var localizedDescription: String","path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror\/localizeddescription"}]}],"path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror"},{"title":"MoQTSubscribeOk","type":"struct","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"let contentExists: Bool","path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/contentexists","type":"property"},{"title":"let expires: Int","path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/expires","type":"property"},{"title":"let groupOrder: MoQTSubscribe.GroupOrder","path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/grouporder","type":"property"},{"title":"let largestGroupId: Int?","path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/largestgroupid","type":"property"},{"title":"let largestObjectId: Int?","path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/largestobjectid","type":"property"},{"title":"var payload: Data","path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/payload","type":"property"},{"title":"let subscribeId: Int","path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/subscribeid","type":"property"},{"title":"let subscribeParameters: [MoQTVersionSpecificParameter]","path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/subscribeparameters","type":"property"},{"title":"let type: MoQTMessageType","path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/type","type":"property"}],"path":"\/documentation\/moqthaishinkit\/moqtsubscribeok"},{"title":"MoQTVersionSpecificParameter","type":"struct","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"let key: MoQTVersionSpecificType","path":"\/documentation\/moqthaishinkit\/moqtversionspecificparameter\/key","type":"property"},{"title":"let value: any Sendable","path":"\/documentation\/moqthaishinkit\/moqtversionspecificparameter\/value","type":"property"}],"path":"\/documentation\/moqthaishinkit\/moqtversionspecificparameter"},{"title":"Enumerations","type":"groupMarker"},{"title":"MoQTDataStreamType","type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case fetchHeader","type":"case","path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/fetchheader"},{"title":"case objectDatagram","type":"case","path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/objectdatagram"},{"title":"case streamHeaderSubgroup","type":"case","path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/streamheadersubgroup"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: Int)","type":"init","path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/init(rawvalue:)"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"title":"Equatable Implementations","type":"symbol","path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/equatable-implementations"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"type":"property","title":"var hashValue: Int","path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/hashvalue"},{"title":"Instance Methods","type":"groupMarker"},{"type":"method","title":"func hash(into: inout Hasher)","path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/hash(into:)"}],"title":"RawRepresentable Implementations","type":"symbol","path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/rawrepresentable-implementations"}],"path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype"},{"title":"MoQTMessageType","type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","title":"case announce","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/announce"},{"type":"case","title":"case announceCancel","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/announcecancel"},{"type":"case","title":"case announceError","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/announceerror"},{"type":"case","title":"case announceOk","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/announceok"},{"type":"case","title":"case clientSetup","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/clientsetup"},{"type":"case","title":"case goaway","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/goaway"},{"type":"case","title":"case serverSetup","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/serversetup"},{"type":"case","title":"case subscribe","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/subscribe"},{"type":"case","title":"case subscribeAnnounuces","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/subscribeannounuces"},{"type":"case","title":"case subscribeAnnounucesError","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/subscribeannounuceserror"},{"type":"case","title":"case subscribeAnnounucesOk","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/subscribeannounucesok"},{"type":"case","title":"case subscribeDone","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/subscribedone"},{"type":"case","title":"case subscribeError","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/subscribeerror"},{"type":"case","title":"case subscribeOk","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/subscribeok"},{"type":"case","title":"case subscribeUpdate","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/subscribeupdate"},{"type":"case","title":"case trackStatus","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/trackstatus"},{"type":"case","title":"case trackStatusRequest","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/trackstatusrequest"},{"type":"case","title":"case unannounce","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/unannounce"},{"type":"case","title":"case unsubscribe","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/unsubscribe"},{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init?(rawValue: Int)","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/init(rawvalue:)"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}],"type":"symbol","title":"Equatable Implementations","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/equatable-implementations"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/hashvalue","type":"property","title":"var hashValue: Int"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/hash(into:)","type":"method","title":"func hash(into: inout Hasher)"}],"type":"symbol","title":"RawRepresentable Implementations","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/rawrepresentable-implementations"}],"path":"\/documentation\/moqthaishinkit\/moqtmessagetype"},{"title":"MoQTSetupParameterType","type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","title":"case maxSubscribeId","path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/maxsubscribeid"},{"type":"case","title":"case path","path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/path"},{"type":"case","title":"case role","path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/role"},{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init?(rawValue: Int)","path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/init(rawvalue:)"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/!=(_:_:)","type":"op"}],"title":"Equatable Implementations","path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/equatable-implementations"},{"type":"symbol","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/hashvalue","type":"property","title":"var hashValue: Int"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/hash(into:)","type":"method","title":"func hash(into: inout Hasher)"}],"title":"RawRepresentable Implementations","path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/rawrepresentable-implementations"}],"path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype"},{"title":"MoQTSetupRole","type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case pubSub","type":"case","path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/pubsub"},{"title":"case publisher","type":"case","path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/publisher"},{"title":"case subscriber","type":"case","path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/subscriber"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: Int)","type":"init","path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/init(rawvalue:)"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/!=(_:_:)","type":"op"}],"path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/equatable-implementations"},{"title":"RawRepresentable Implementations","type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/hashvalue","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func hash(into: inout Hasher)","path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/hash(into:)","type":"method"}],"path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/rawrepresentable-implementations"}],"path":"\/documentation\/moqthaishinkit\/moqtsetuprole"},{"title":"MoQTVersion","type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case draft01","type":"case","path":"\/documentation\/moqthaishinkit\/moqtversion\/draft01"},{"title":"case draft02","type":"case","path":"\/documentation\/moqthaishinkit\/moqtversion\/draft02"},{"title":"case draft03","type":"case","path":"\/documentation\/moqthaishinkit\/moqtversion\/draft03"},{"title":"case draft04","type":"case","path":"\/documentation\/moqthaishinkit\/moqtversion\/draft04"},{"title":"case draft05","type":"case","path":"\/documentation\/moqthaishinkit\/moqtversion\/draft05"},{"title":"case draft06","type":"case","path":"\/documentation\/moqthaishinkit\/moqtversion\/draft06"},{"title":"case draft07","type":"case","path":"\/documentation\/moqthaishinkit\/moqtversion\/draft07"},{"title":"case draft07Exp","type":"case","path":"\/documentation\/moqthaishinkit\/moqtversion\/draft07exp"},{"title":"case draft07Exp2","type":"case","path":"\/documentation\/moqthaishinkit\/moqtversion\/draft07exp2"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: Int)","type":"init","path":"\/documentation\/moqthaishinkit\/moqtversion\/init(rawvalue:)"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/moqthaishinkit\/moqtversion\/!=(_:_:)"}],"path":"\/documentation\/moqthaishinkit\/moqtversion\/equatable-implementations"},{"title":"RawRepresentable Implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var hashValue: Int","path":"\/documentation\/moqthaishinkit\/moqtversion\/hashvalue"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func hash(into: inout Hasher)","path":"\/documentation\/moqthaishinkit\/moqtversion\/hash(into:)"}],"path":"\/documentation\/moqthaishinkit\/moqtversion\/rawrepresentable-implementations"}],"path":"\/documentation\/moqthaishinkit\/moqtversion"},{"title":"MoQTVersionSpecificType","type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case authorizationInfo","path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/authorizationinfo","type":"case"},{"title":"case deliveryTimeout","path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/deliverytimeout","type":"case"},{"title":"case maxCacheDuration","path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/maxcacheduration","type":"case"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: Int)","path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/init(rawvalue:)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/equatable-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}]},{"title":"RawRepresentable Implementations","path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/rawrepresentable-implementations","type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}]}],"path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype"}]},{"title":"SRTHaishinKit","type":"module","path":"\/documentation\/srthaishinkit","children":[{"type":"groupMarker","title":"Classes"},{"type":"class","title":"SRTConnection","path":"\/documentation\/srthaishinkit\/srtconnection","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/srthaishinkit\/srtconnection\/init()","title":"init()"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtconnection\/connected","title":"var connected: Bool"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtconnection\/performancedata","title":"var performanceData: SRTPerformanceData?"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtconnection\/uri","title":"var uri: URL?"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/srthaishinkit\/srtconnection\/close()","title":"func close() async"},{"type":"method","path":"\/documentation\/srthaishinkit\/srtconnection\/connect(_:)","title":"func connect(URL?) async throws"},{"type":"method","path":"\/documentation\/srthaishinkit\/srtconnection\/getsocketoption(_:)","title":"func getSocketOption(SRTSocketOption.Name) async throws -> SRTSocketOption?"},{"type":"method","path":"\/documentation\/srthaishinkit\/srtconnection\/open(_:mode:)","title":"func open(URL?, mode: SRTMode) async throws"},{"type":"method","path":"\/documentation\/srthaishinkit\/srtconnection\/setsocketoption(_:)","title":"func setSocketOption(SRTSocketOption) async throws"},{"type":"groupMarker","title":"Type Properties"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtconnection\/version","title":"static let version: String"},{"type":"groupMarker","title":"Enumerations"},{"type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/srthaishinkit\/srtconnection\/error\/failedtoconnect(_:reson:)","title":"case failedToConnect(String, reson: Int32)","type":"case"},{"path":"\/documentation\/srthaishinkit\/srtconnection\/error\/invalidstate","title":"case invalidState","type":"case"},{"path":"\/documentation\/srthaishinkit\/srtconnection\/error\/unsupporteduri(_:)","title":"case unsupportedUri(URL?)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/srthaishinkit\/srtconnection\/error\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/srthaishinkit\/srtconnection\/error\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/srthaishinkit\/srtconnection\/error","title":"SRTConnection.Error"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/srthaishinkit\/srtconnection\/assertisolated(_:file:line:)","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method"},{"path":"\/documentation\/srthaishinkit\/srtconnection\/assumeisolated(_:file:line:)","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","type":"method"},{"path":"\/documentation\/srthaishinkit\/srtconnection\/preconditionisolated(_:file:line:)","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method"}],"path":"\/documentation\/srthaishinkit\/srtconnection\/actor-implementations","title":"Actor Implementations"}]},{"type":"class","title":"SRTLogger","path":"\/documentation\/srthaishinkit\/srtlogger","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtlogger\/functionalareas","title":"var functionalAreas: Set<SRTLogFunctionalArea>"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtlogger\/level","title":"var level: SRTLogLevel"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/srthaishinkit\/srtlogger\/setfunctionalareas(_:)","title":"func setFunctionalAreas(Set<SRTLogFunctionalArea>)"},{"type":"method","path":"\/documentation\/srthaishinkit\/srtlogger\/setlevel(_:)","title":"func setLevel(SRTLogLevel)"},{"type":"groupMarker","title":"Type Properties"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtlogger\/shared","title":"static let shared: SRTLogger"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","path":"\/documentation\/srthaishinkit\/srtlogger\/actor-implementations","title":"Actor Implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/srthaishinkit\/srtlogger\/assertisolated(_:file:line:)","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method"},{"path":"\/documentation\/srthaishinkit\/srtlogger\/assumeisolated(_:file:line:)","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","type":"method"},{"path":"\/documentation\/srthaishinkit\/srtlogger\/preconditionisolated(_:file:line:)","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method"}]}]},{"type":"class","title":"SRTStream","path":"\/documentation\/srthaishinkit\/srtstream","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(connection: SRTConnection)","path":"\/documentation\/srthaishinkit\/srtstream\/init(connection:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var audioTrackId: UInt8?","path":"\/documentation\/srthaishinkit\/srtstream\/audiotrackid","type":"property"},{"title":"var readyState: HKStreamReadyState","path":"\/documentation\/srthaishinkit\/srtstream\/readystate","type":"property"},{"title":"var videoTrackId: UInt8?","path":"\/documentation\/srthaishinkit\/srtstream\/videotrackid","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func close() async","path":"\/documentation\/srthaishinkit\/srtstream\/close()","type":"method"},{"title":"func play(String?) async","path":"\/documentation\/srthaishinkit\/srtstream\/play(_:)","type":"method"},{"title":"func publish(String?) async","path":"\/documentation\/srthaishinkit\/srtstream\/publish(_:)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Actor Implementations","path":"\/documentation\/srthaishinkit\/srtstream\/actor-implementations","type":"symbol","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/srthaishinkit\/srtstream\/assertisolated(_:file:line:)","type":"method"},{"title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","path":"\/documentation\/srthaishinkit\/srtstream\/assumeisolated(_:file:line:)","type":"method"},{"title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/srthaishinkit\/srtstream\/preconditionisolated(_:file:line:)","type":"method"}]},{"title":"HKStream Implementations","path":"\/documentation\/srthaishinkit\/srtstream\/hkstream-implementations","type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var audioSettings: AudioCodecSettings","path":"\/documentation\/srthaishinkit\/srtstream\/audiosettings","type":"property"},{"title":"var soundTransform: SoundTransform?","path":"\/documentation\/srthaishinkit\/srtstream\/soundtransform","type":"property"},{"title":"var videoSettings: VideoCodecSettings","path":"\/documentation\/srthaishinkit\/srtstream\/videosettings","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func addOutput(some HKStreamOutput)","path":"\/documentation\/srthaishinkit\/srtstream\/addoutput(_:)","type":"method"},{"title":"func append(CMSampleBuffer)","path":"\/documentation\/srthaishinkit\/srtstream\/append(_:)","type":"method"},{"title":"func append(AVAudioBuffer, when: AVAudioTime)","path":"\/documentation\/srthaishinkit\/srtstream\/append(_:when:)","type":"method"},{"title":"func attachAudioPlayer(AudioPlayer?) async","path":"\/documentation\/srthaishinkit\/srtstream\/attachaudioplayer(_:)","type":"method"},{"title":"func dispatch(NetworkMonitorEvent) async","path":"\/documentation\/srthaishinkit\/srtstream\/dispatch(_:)","type":"method"},{"title":"func removeOutput(some HKStreamOutput)","path":"\/documentation\/srthaishinkit\/srtstream\/removeoutput(_:)","type":"method"},{"title":"func setAudioSettings(AudioCodecSettings)","path":"\/documentation\/srthaishinkit\/srtstream\/setaudiosettings(_:)","type":"method"},{"title":"func setBitrateStorategy((some HKStreamBitRateStrategy)?)","path":"\/documentation\/srthaishinkit\/srtstream\/setbitratestorategy(_:)","type":"method"},{"title":"func setSoundTransform(SoundTransform) async","path":"\/documentation\/srthaishinkit\/srtstream\/setsoundtransform(_:)","type":"method"},{"title":"func setVideoInputBufferCounts(Int)","path":"\/documentation\/srthaishinkit\/srtstream\/setvideoinputbuffercounts(_:)","type":"method"},{"title":"func setVideoSettings(VideoCodecSettings)","path":"\/documentation\/srthaishinkit\/srtstream\/setvideosettings(_:)","type":"method"}]},{"title":"MediaMixerOutput Implementations","path":"\/documentation\/srthaishinkit\/srtstream\/mediamixeroutput-implementations","type":"symbol","children":[{"title":"Instance Methods","type":"groupMarker"},{"type":"method","title":"func mixer(MediaMixer, didOutput: CMSampleBuffer)","path":"\/documentation\/srthaishinkit\/srtstream\/mixer(_:didoutput:)"},{"type":"method","title":"func mixer(MediaMixer, didOutput: AVAudioPCMBuffer, when: AVAudioTime)","path":"\/documentation\/srthaishinkit\/srtstream\/mixer(_:didoutput:when:)"},{"type":"method","title":"func selectTrack(UInt8?, mediaType: CMFormatDescription.MediaType)","path":"\/documentation\/srthaishinkit\/srtstream\/selecttrack(_:mediatype:)"}]}]},{"type":"groupMarker","title":"Structures"},{"type":"struct","title":"SRTPerformanceData","path":"\/documentation\/srthaishinkit\/srtperformancedata","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/byteavailrcvbuf","title":"let byteAvailRcvBuf: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/byteavailsndbuf","title":"let byteAvailSndBuf: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytemss","title":"let byteMSS: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytercvbuf","title":"let byteRcvBuf: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytercvdrop","title":"let byteRcvDrop: UInt64"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytercvdroptotal","title":"let byteRcvDropTotal: UInt64"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytercvloss","title":"let byteRcvLoss: UInt64"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytercvlosstotal","title":"let byteRcvLossTotal: UInt64"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytercvundecrypt","title":"let byteRcvUndecrypt: UInt64"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytercvundecrypttotal","title":"let byteRcvUndecryptTotal: UInt64"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/byterecv","title":"let byteRecv: UInt64"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/byterecvtotal","title":"let byteRecvTotal: UInt64"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/byteretrans","title":"let byteRetrans: UInt64"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/byteretranstotal","title":"let byteRetransTotal: UInt64"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytesent","title":"let byteSent: UInt64"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytesenttotal","title":"let byteSentTotal: UInt64"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytesndbuf","title":"let byteSndBuf: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytesnddrop","title":"let byteSndDrop: UInt64"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytesnddroptotal","title":"let byteSndDropTotal: UInt64"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/mbpsbandwidth","title":"let mbpsBandwidth: Double"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/mbpsmaxbw","title":"let mbpsMaxBW: Double"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/mbpsrecvrate","title":"let mbpsRecvRate: Double"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/mbpssendrate","title":"let mbpsSendRate: Double"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/msrtt","title":"let msRTT: Double"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/msrcvbuf","title":"let msRcvBuf: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/msrcvtsbpddelay","title":"let msRcvTsbPdDelay: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/mssndbuf","title":"let msSndBuf: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/mssndtsbpddelay","title":"let msSndTsbPdDelay: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/mstimestamp","title":"let msTimeStamp: Int64"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktcongestionwindow","title":"let pktCongestionWindow: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktflightsize","title":"let pktFlightSize: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktflowwindow","title":"let pktFlowWindow: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvavgbelatedtime","title":"let pktRcvAvgBelatedTime: Double"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvbelated","title":"let pktRcvBelated: Int64"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvbuf","title":"let pktRcvBuf: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvdrop","title":"let pktRcvDrop: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvdroptotal","title":"let pktRcvDropTotal: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvfilterextra","title":"let pktRcvFilterExtra: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvfilterextratotal","title":"let pktRcvFilterExtraTotal: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvfilterloss","title":"let pktRcvFilterLoss: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvfilterlosstotal","title":"let pktRcvFilterLossTotal: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvfiltersupply","title":"let pktRcvFilterSupply: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvfiltersupplytotal","title":"let pktRcvFilterSupplyTotal: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvloss","title":"let pktRcvLoss: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvlosstotal","title":"let pktRcvLossTotal: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvretrans","title":"let pktRcvRetrans: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvundecrypt","title":"let pktRcvUndecrypt: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvundecrypttotal","title":"let pktRcvUndecryptTotal: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrecv","title":"let pktRecv: Int64"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrecvack","title":"let pktRecvACK: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrecvacktotal","title":"let pktRecvACKTotal: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrecvnak","title":"let pktRecvNAK: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrecvnaktotal","title":"let pktRecvNAKTotal: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrecvtotal","title":"let pktRecvTotal: Int64"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktreorderdistance","title":"let pktReorderDistance: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktreordertolerance","title":"let pktReorderTolerance: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktretrans","title":"let pktRetrans: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktretranstotal","title":"let pktRetransTotal: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsent","title":"let pktSent: Int64"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsentack","title":"let pktSentACK: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsentacktotal","title":"let pktSentACKTotal: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsentnak","title":"let pktSentNAK: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsentnaktotal","title":"let pktSentNAKTotal: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsenttotal","title":"let pktSentTotal: Int64"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsndbuf","title":"let pktSndBuf: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsnddrop","title":"let pktSndDrop: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsnddroptotal","title":"let pktSndDropTotal: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsndfilterextra","title":"let pktSndFilterExtra: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsndfilterextratotal","title":"let pktSndFilterExtraTotal: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsndloss","title":"let pktSndLoss: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsndlosstotal","title":"let pktSndLossTotal: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/uspktsndperiod","title":"let usPktSndPeriod: Double"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/ussndduration","title":"let usSndDuration: Int64"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/ussnddurationtotal","title":"let usSndDurationTotal: Int64"}]},{"type":"struct","title":"SRTSessionFactory","path":"\/documentation\/srthaishinkit\/srtsessionfactory","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init()","type":"init","path":"\/documentation\/srthaishinkit\/srtsessionfactory\/init()"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let supportedProtocols: Set<String>","type":"property","path":"\/documentation\/srthaishinkit\/srtsessionfactory\/supportedprotocols"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func make(uri: URL) -> any Session","type":"method","path":"\/documentation\/srthaishinkit\/srtsessionfactory\/make(uri:)"}]},{"type":"struct","title":"SRTSocketOption","path":"\/documentation\/srthaishinkit\/srtsocketoption","children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/init(rawvalue:symbol:restriction:type:)","title":"init(rawValue: String, symbol: SRT_SOCKOPT, restriction: SRTSocketOption.Restriction?, type: SRTSocketOption.CType)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/rawvalue-swift.property","title":"let rawValue: String","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/rawvalue-swift.typealias","title":"SRTSocketOption.Name.RawValue","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/bindtodevice","title":"static let bindtodevice: SRTSocketOption.Name","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/congestion","title":"static let congestion: SRTSocketOption.Name","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/conntimeo","title":"static let conntimeo: SRTSocketOption.Name","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/drifttracer","title":"static let drifttracer: SRTSocketOption.Name","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/enforcedencryption","title":"static let enforcedencryption: SRTSocketOption.Name","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/event","title":"static let event: SRTSocketOption.Name","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/fc","title":"static let fc: SRTSocketOption.Name","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/groupconnect","title":"static let groupconnect: SRTSocketOption.Name","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/groupminstabletimeo","title":"static let groupminstabletimeo: SRTSocketOption.Name","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/grouptype","title":"static let grouptype: SRTSocketOption.Name","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/inputbw","title":"static let inputbw: SRTSocketOption.Name","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/iptos","title":"static let iptos: SRTSocketOption.Name","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/ipttl","title":"static let ipttl: SRTSocketOption.Name","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/ipv6only","title":"static let ipv6only: SRTSocketOption.Name","type":"property"},{"title":"static let isn: SRTSocketOption.Name","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/isn"},{"title":"static let kmpreannounce: SRTSocketOption.Name","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/kmpreannounce"},{"title":"static let kmrefreshrate: SRTSocketOption.Name","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/kmrefreshrate"},{"title":"static let kmstate: SRTSocketOption.Name","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/kmstate"},{"title":"static let latency: SRTSocketOption.Name","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/latency"},{"title":"static let lossmaxttl: SRTSocketOption.Name","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/lossmaxttl"},{"title":"static let maxbw: SRTSocketOption.Name","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/maxbw"},{"title":"static let messageapi: SRTSocketOption.Name","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/messageapi"},{"title":"static let mininputbw: SRTSocketOption.Name","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/mininputbw"},{"title":"static let minversion: SRTSocketOption.Name","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/minversion"},{"title":"static let mss: SRTSocketOption.Name","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/mss"},{"title":"static let nakreport: SRTSocketOption.Name","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/nakreport"},{"title":"static let oheadbw: SRTSocketOption.Name","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/oheadbw"},{"title":"static let packetfilter: SRTSocketOption.Name","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/packetfilter"},{"title":"static let passphrase: SRTSocketOption.Name","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/passphrase"},{"title":"static let pbkeylen: SRTSocketOption.Name","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/pbkeylen"},{"title":"static let peeridletimeo: SRTSocketOption.Name","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/peeridletimeo"},{"title":"static let peerlatency: SRTSocketOption.Name","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/peerlatency"},{"title":"static let peerversion: SRTSocketOption.Name","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/peerversion"},{"title":"static let rcvbuf: SRTSocketOption.Name","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/rcvbuf"},{"title":"static let rcvdata: SRTSocketOption.Name","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/rcvdata"},{"title":"static let rcvlatency: SRTSocketOption.Name","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/rcvlatency"},{"title":"static let rcvsyn: SRTSocketOption.Name","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/rcvsyn"},{"title":"static let rcvtimeo: SRTSocketOption.Name","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/rcvtimeo"},{"title":"static let rendezvous: SRTSocketOption.Name","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/rendezvous"},{"title":"static let retransmitalgo: SRTSocketOption.Name","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/retransmitalgo"},{"title":"static let reuseaddr: SRTSocketOption.Name","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/reuseaddr"},{"title":"static let sender: SRTSocketOption.Name","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/sender"},{"title":"static let sndbuf: SRTSocketOption.Name","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/sndbuf"},{"title":"static let snddata: SRTSocketOption.Name","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/snddata"},{"title":"static let snddropdelay: SRTSocketOption.Name","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/snddropdelay"},{"title":"static let sndkmstate: SRTSocketOption.Name","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/sndkmstate"},{"title":"static let sndsyn: SRTSocketOption.Name","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/sndsyn"},{"title":"static let sndtimeo: SRTSocketOption.Name","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/sndtimeo"},{"title":"static let state: SRTSocketOption.Name","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/state"},{"title":"static let streamid: SRTSocketOption.Name","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/streamid"},{"title":"static let tlpktdrop: SRTSocketOption.Name","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/tlpktdrop"},{"title":"static let transtype: SRTSocketOption.Name","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/transtype"},{"title":"static let tsbpdmode: SRTSocketOption.Name","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/tsbpdmode"},{"title":"static let udpRcvbuf: SRTSocketOption.Name","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/udprcvbuf"},{"title":"static let udpSndbuf: SRTSocketOption.Name","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/udpsndbuf"},{"title":"static let version: SRTSocketOption.Name","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/version"},{"title":"Default Implementations","type":"groupMarker"},{"title":"RawRepresentable Implementations","type":"symbol","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/rawrepresentable-implementations","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/init(rawvalue:)","type":"init","title":"init?(rawValue: String)"}]}],"title":"SRTSocketOption.Name","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"title":"init(name: SRTSocketOption.Name, value: String) throws","path":"\/documentation\/srthaishinkit\/srtsocketoption\/init(name:value:)-3uyvp","type":"init"},{"title":"init(name: SRTSocketOption.Name, value: Int) throws","path":"\/documentation\/srthaishinkit\/srtsocketoption\/init(name:value:)-66kiu","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var boolValue: Bool","path":"\/documentation\/srthaishinkit\/srtsocketoption\/boolvalue","type":"property"},{"title":"var intValue: Int","path":"\/documentation\/srthaishinkit\/srtsocketoption\/intvalue","type":"property"},{"title":"let name: SRTSocketOption.Name","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.property","type":"property"},{"title":"var stringValue: String","path":"\/documentation\/srthaishinkit\/srtsocketoption\/stringvalue","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/ctype\/bool","type":"case","title":"case bool"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/ctype\/int32","type":"case","title":"case int32"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/ctype\/int64","type":"case","title":"case int64"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/ctype\/string","type":"case","title":"case string"},{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/ctype\/init(rawvalue:)","type":"init","title":"init?(rawValue: Int)"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/ctype\/equatable-implementations","type":"symbol","title":"Equatable Implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/srthaishinkit\/srtsocketoption\/ctype\/!=(_:_:)"}]},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/ctype\/rawrepresentable-implementations","type":"symbol","title":"RawRepresentable Implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/ctype\/hashvalue","title":"var hashValue: Int"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/srthaishinkit\/srtsocketoption\/ctype\/hash(into:)","title":"func hash(into: inout Hasher)"}]}],"title":"SRTSocketOption.CType","path":"\/documentation\/srthaishinkit\/srtsocketoption\/ctype","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/restriction\/post","title":"case post","type":"case"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/restriction\/pre","title":"case pre","type":"case"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/restriction\/prebind","title":"case preBind","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/restriction\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/restriction\/equatable-implementations","title":"Equatable Implementations","type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","path":"\/documentation\/srthaishinkit\/srtsocketoption\/restriction\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"}]},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/restriction\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/restriction\/hashvalue","type":"property","title":"var hashValue: Int"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/restriction\/hash(into:)","type":"method","title":"func hash(into: inout Hasher)"}]}],"title":"SRTSocketOption.Restriction","path":"\/documentation\/srthaishinkit\/srtsocketoption\/restriction","type":"enum"}]},{"type":"groupMarker","title":"Enumerations"},{"type":"enum","title":"SRTLogFunctionalArea","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case apiCtrl","type":"case","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/apictrl"},{"title":"case apiRecv","type":"case","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/apirecv"},{"title":"case apiSend","type":"case","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/apisend"},{"title":"case applog","type":"case","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/applog"},{"title":"case bstats","type":"case","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/bstats"},{"title":"case bufRecv","type":"case","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/bufrecv"},{"title":"case bufSend","type":"case","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/bufsend"},{"title":"case chanRecv","type":"case","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/chanrecv"},{"title":"case chnMgmt","type":"case","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/chnmgmt"},{"title":"case chnSend","type":"case","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/chnsend"},{"title":"case congest","type":"case","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/congest"},{"title":"case control","type":"case","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/control"},{"title":"case data","type":"case","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/data"},{"title":"case epollApi","type":"case","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/epollapi"},{"title":"case epollUpd","type":"case","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/epollupd"},{"title":"case general","type":"case","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/general"},{"title":"case grpMgmt","type":"case","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/grpmgmt"},{"title":"case grpRecv","type":"case","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/grprecv"},{"title":"case grpSend","type":"case","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/grpsend"},{"title":"case haicrypt","type":"case","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/haicrypt"},{"title":"case `internal`","type":"case","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/internal"},{"title":"case pfilter","type":"case","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/pfilter"},{"title":"case queCtrl","type":"case","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/quectrl"},{"title":"case queMgmt","type":"case","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/quemgmt"},{"title":"case queRecv","type":"case","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/querecv"},{"title":"case queSend","type":"case","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/quesend"},{"title":"case rsrc","type":"case","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/rsrc"},{"title":"case tsbpd","type":"case","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/tsbpd"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: Int32)","type":"init","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/init(rawvalue:)"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"}],"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/equatable-implementations"},{"title":"RawRepresentable Implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/hashvalue","title":"var hashValue: Int"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/hash(into:)","title":"func hash(into: inout Hasher)"}],"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/rawrepresentable-implementations"}]},{"type":"enum","title":"SRTLogLevel","path":"\/documentation\/srthaishinkit\/srtloglevel","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case crit","type":"case","path":"\/documentation\/srthaishinkit\/srtloglevel\/crit"},{"title":"case debug","type":"case","path":"\/documentation\/srthaishinkit\/srtloglevel\/debug"},{"title":"case error","type":"case","path":"\/documentation\/srthaishinkit\/srtloglevel\/error"},{"title":"case notice","type":"case","path":"\/documentation\/srthaishinkit\/srtloglevel\/notice"},{"title":"case warning","type":"case","path":"\/documentation\/srthaishinkit\/srtloglevel\/warning"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Operators"},{"type":"op","path":"\/documentation\/srthaishinkit\/srtloglevel\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"}],"title":"Equatable Implementations","type":"symbol","path":"\/documentation\/srthaishinkit\/srtloglevel\/equatable-implementations"}]},{"type":"enum","title":"SRTMode","path":"\/documentation\/srthaishinkit\/srtmode","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/srthaishinkit\/srtmode\/caller","title":"case caller","type":"case"},{"path":"\/documentation\/srthaishinkit\/srtmode\/listener","title":"case listener","type":"case"},{"path":"\/documentation\/srthaishinkit\/srtmode\/rendezvous","title":"case rendezvous","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/srthaishinkit\/srtmode\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/srthaishinkit\/srtmode\/equatable-implementations","title":"Equatable Implementations","type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/srthaishinkit\/srtmode\/!=(_:_:)","type":"op"}]},{"path":"\/documentation\/srthaishinkit\/srtmode\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"type":"property","title":"var hashValue: Int","path":"\/documentation\/srthaishinkit\/srtmode\/hashvalue"},{"title":"Instance Methods","type":"groupMarker"},{"type":"method","title":"func hash(into: inout Hasher)","path":"\/documentation\/srthaishinkit\/srtmode\/hash(into:)"}]}]}]}],"title":"HaishinKit","path":"\/documentation","type":"module"}]}}