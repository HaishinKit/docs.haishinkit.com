{"interfaceLanguages":{"swift":[{"type":"module","children":[{"children":[{"type":"groupMarker","title":"Classes"},{"type":"class","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init()","path":"\/documentation\/logboard\/consoleappender\/init()"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func append(LBLogger, level: LBLogger.Level, format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/consoleappender\/append(_:level:format:arguments:file:function:line:)"},{"type":"method","title":"func append(LBLogger, level: LBLogger.Level, message: [Any], file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/consoleappender\/append(_:level:message:file:function:line:)"}],"path":"\/documentation\/logboard\/consoleappender","title":"ConsoleAppender"},{"type":"class","children":[{"title":"Structures","type":"groupMarker"},{"title":"LBLogger.Data","path":"\/documentation\/logboard\/lblogger\/data","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/logboard\/lblogger\/data\/init(_:)","title":"init?(Data)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/logboard\/lblogger\/data\/date","title":"let date: Date","type":"property"},{"path":"\/documentation\/logboard\/lblogger\/data\/file","title":"let file: String","type":"property"},{"path":"\/documentation\/logboard\/lblogger\/data\/function","title":"let function: String","type":"property"},{"path":"\/documentation\/logboard\/lblogger\/data\/identifier","title":"let identifier: String","type":"property"},{"path":"\/documentation\/logboard\/lblogger\/data\/level","title":"let level: LBLogger.Level","type":"property"},{"path":"\/documentation\/logboard\/lblogger\/data\/line","title":"let line: Int","type":"property"},{"path":"\/documentation\/logboard\/lblogger\/data\/message","title":"let message: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"title":"CustomStringConvertible Implementations","path":"\/documentation\/logboard\/lblogger\/data\/customstringconvertible-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/logboard\/lblogger\/data\/description","title":"var description: String"}]}],"type":"struct"},{"title":"Initializers","type":"groupMarker"},{"title":"init(String)","path":"\/documentation\/logboard\/lblogger\/init(_:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var appender: any LBLoggerAppender","path":"\/documentation\/logboard\/lblogger\/appender","type":"property"},{"title":"let identifier: String","path":"\/documentation\/logboard\/lblogger\/identifier","type":"property"},{"title":"var level: LBLogger.Level","path":"\/documentation\/logboard\/lblogger\/level-swift.property","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func debug(Any..., file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/lblogger\/debug(_:file:function:line:)","type":"method"},{"title":"func debug(format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/lblogger\/debug(format:arguments:file:function:line:)","type":"method"},{"title":"func error(Any..., file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/lblogger\/error(_:file:function:line:)","type":"method"},{"title":"func error(format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/lblogger\/error(format:arguments:file:function:line:)","type":"method"},{"title":"func info(Any..., file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/lblogger\/info(_:file:function:line:)","type":"method"},{"title":"func info(format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/lblogger\/info(format:arguments:file:function:line:)","type":"method"},{"title":"func isEnabledFor(level: LBLogger.Level) -> Bool","path":"\/documentation\/logboard\/lblogger\/isenabledfor(level:)","type":"method"},{"title":"func trace(Any..., file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/lblogger\/trace(_:file:function:line:)","type":"method"},{"title":"func trace(format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/lblogger\/trace(format:arguments:file:function:line:)","type":"method"},{"title":"func warn(Any..., file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/lblogger\/warn(_:file:function:line:)","type":"method"},{"title":"func warn(format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/lblogger\/warn(format:arguments:file:function:line:)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"title":"static var dateFormatter: DateFormatter","path":"\/documentation\/logboard\/lblogger\/dateformatter","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"title":"static func with(String) -> LBLogger","path":"\/documentation\/logboard\/lblogger\/with(_:)","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"title":"LBLogger.Level","path":"\/documentation\/logboard\/lblogger\/level-swift.enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case debug","path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/debug","type":"case"},{"title":"case error","path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/error","type":"case"},{"title":"case info","path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/info","type":"case"},{"title":"case trace","path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/trace","type":"case"},{"title":"case warn","path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/warn","type":"case"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: Int)","path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/init(rawvalue:)","type":"init"},{"title":"init?(string: String)","path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/init(string:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var description: String","path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/description","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"title":"Equatable Implementations","path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/equatable-implementations","type":"symbol"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/hashvalue","title":"var hashValue: Int"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)"}],"title":"RawRepresentable Implementations","path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/rawrepresentable-implementations","type":"symbol"}],"type":"enum"}],"path":"\/documentation\/logboard\/lblogger","title":"LBLogger"},{"type":"class","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init()","path":"\/documentation\/logboard\/multiappender\/init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var appenders: [any LBLoggerAppender]","path":"\/documentation\/logboard\/multiappender\/appenders","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func append(LBLogger, level: LBLogger.Level, format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/multiappender\/append(_:level:format:arguments:file:function:line:)","type":"method"},{"title":"func append(LBLogger, level: LBLogger.Level, message: [Any], file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/multiappender\/append(_:level:message:file:function:line:)","type":"method"}],"path":"\/documentation\/logboard\/multiappender","title":"MultiAppender"},{"type":"class","children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/logboard\/nullappender\/append(_:level:format:arguments:file:function:line:)","type":"method","title":"func append(LBLogger, level: LBLogger.Level, format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)"},{"path":"\/documentation\/logboard\/nullappender\/append(_:level:message:file:function:line:)","type":"method","title":"func append(LBLogger, level: LBLogger.Level, message: [Any], file: StaticString, function: StaticString, line: Int)"},{"type":"groupMarker","title":"Type Properties"},{"path":"\/documentation\/logboard\/nullappender\/shared","type":"property","title":"static let shared: NullAppender"}],"path":"\/documentation\/logboard\/nullappender","title":"NullAppender"},{"type":"class","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init(sybsystem: String, category: String)","path":"\/documentation\/logboard\/osloggerappender\/init(sybsystem:category:)"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func append(LBLogger, level: LBLogger.Level, format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/osloggerappender\/append(_:level:format:arguments:file:function:line:)"},{"type":"method","title":"func append(LBLogger, level: LBLogger.Level, message: [Any], file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/osloggerappender\/append(_:level:message:file:function:line:)"}],"path":"\/documentation\/logboard\/osloggerappender","title":"OSLoggerAppender"},{"type":"class","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init()","path":"\/documentation\/logboard\/socketappender\/init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func append(LBLogger, level: LBLogger.Level, format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/socketappender\/append(_:level:format:arguments:file:function:line:)","type":"method"},{"title":"func append(LBLogger, level: LBLogger.Level, message: [Any], file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/socketappender\/append(_:level:message:file:function:line:)","type":"method"},{"title":"func close()","path":"\/documentation\/logboard\/socketappender\/close()","type":"method"},{"title":"func connect(String, port: Int)","path":"\/documentation\/logboard\/socketappender\/connect(_:port:)","type":"method"}],"path":"\/documentation\/logboard\/socketappender","title":"SocketAppender"},{"type":"groupMarker","title":"Protocols"},{"type":"protocol","children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/logboard\/lbloggerappender\/append(_:level:format:arguments:file:function:line:)","title":"func append(LBLogger, level: LBLogger.Level, format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)","type":"method"},{"path":"\/documentation\/logboard\/lbloggerappender\/append(_:level:message:file:function:line:)","title":"func append(LBLogger, level: LBLogger.Level, message: [Any], file: StaticString, function: StaticString, line: Int)","type":"method"}],"path":"\/documentation\/logboard\/lbloggerappender","title":"LBLoggerAppender"}],"title":"Logboard","path":"\/documentation\/logboard","type":"module"},{"children":[{"type":"groupMarker","title":"Articles"},{"type":"article","path":"\/documentation\/haishinkit\/faq","title":"FAQ"},{"type":"article","path":"\/documentation\/haishinkit\/offscreen","title":"Offscreen rendering api."},{"type":"groupMarker","title":"Classes"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var chromaKeyColor: CGColor?","path":"\/documentation\/haishinkit\/assetscreenobject\/chromakeycolor"},{"type":"property","title":"var isReading: Bool","path":"\/documentation\/haishinkit\/assetscreenobject\/isreading"},{"type":"property","title":"var videoGravity: AVLayerVideoGravity","path":"\/documentation\/haishinkit\/assetscreenobject\/videogravity"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func cancelReading()","path":"\/documentation\/haishinkit\/assetscreenobject\/cancelreading()"},{"type":"method","title":"func makeBounds(CGSize) -> CGRect","path":"\/documentation\/haishinkit\/assetscreenobject\/makebounds(_:)"},{"type":"method","title":"func makeImage(some ScreenRenderer) -> CGImage?","path":"\/documentation\/haishinkit\/assetscreenobject\/makeimage(_:)"},{"type":"method","title":"func startReading(AVAsset) throws","path":"\/documentation\/haishinkit\/assetscreenobject\/startreading(_:)"}],"type":"class","path":"\/documentation\/haishinkit\/assetscreenobject","title":"AssetScreenObject"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var connection: AVCaptureConnection?","type":"property","path":"\/documentation\/haishinkit\/audiodeviceunit\/connection"},{"title":"var device: AVCaptureDevice?","type":"property","path":"\/documentation\/haishinkit\/audiodeviceunit\/device"},{"title":"var input: AVCaptureInput?","type":"property","path":"\/documentation\/haishinkit\/audiodeviceunit\/input"},{"title":"var output: AudioDeviceUnit.Output?","type":"property","path":"\/documentation\/haishinkit\/audiodeviceunit\/output-swift.property"},{"title":"let track: UInt8","type":"property","path":"\/documentation\/haishinkit\/audiodeviceunit\/track"},{"title":"Type Aliases","type":"groupMarker"},{"title":"AudioDeviceUnit.Output","type":"typealias","path":"\/documentation\/haishinkit\/audiodeviceunit\/output-swift.typealias"}],"type":"class","path":"\/documentation\/haishinkit\/audiodeviceunit","title":"AudioDeviceUnit"},{"children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(audioEngine: AVAudioEngine)","path":"\/documentation\/haishinkit\/audioplayer\/init(audioengine:)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Actor Implementations","path":"\/documentation\/haishinkit\/audioplayer\/actor-implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method","path":"\/documentation\/haishinkit\/audioplayer\/assertisolated(_:file:line:)"},{"title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","type":"method","path":"\/documentation\/haishinkit\/audioplayer\/assumeisolated(_:file:line:)"},{"title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method","path":"\/documentation\/haishinkit\/audioplayer\/preconditionisolated(_:file:line:)"}],"type":"symbol"}],"type":"class","path":"\/documentation\/haishinkit\/audioplayer","title":"AudioPlayer"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var cgImage: CGImage?","path":"\/documentation\/haishinkit\/imagescreenobject\/cgimage"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func makeBounds(CGSize) -> CGRect","path":"\/documentation\/haishinkit\/imagescreenobject\/makebounds(_:)"},{"type":"method","title":"func makeImage(some ScreenRenderer) -> CGImage?","path":"\/documentation\/haishinkit\/imagescreenobject\/makeimage(_:)"}],"type":"class","path":"\/documentation\/haishinkit\/imagescreenobject","title":"ImageScreenObject"},{"children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/haishinkit\/mthkview\/init(coder:)","title":"init(coder: NSCoder)","type":"init"},{"path":"\/documentation\/haishinkit\/mthkview\/init(frame:)","title":"init(frame: CGRect)","type":"init"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/mthkview\/audiotrackid","title":"var audioTrackId: UInt8?","type":"property"},{"path":"\/documentation\/haishinkit\/mthkview\/videogravity","title":"var videoGravity: AVLayerVideoGravity","type":"property"},{"path":"\/documentation\/haishinkit\/mthkview\/videotrackid","title":"var videoTrackId: UInt8?","type":"property"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/mthkview\/awakefromnib()","title":"func awakeFromNib()","type":"method"},{"path":"\/documentation\/haishinkit\/mthkview\/draw(_:)","title":"func draw(CGRect)","type":"method"},{"path":"\/documentation\/haishinkit\/mthkview\/registervideoeffect(_:)","title":"func registerVideoEffect(some VideoEffect) -> Bool","type":"method"},{"path":"\/documentation\/haishinkit\/mthkview\/unregistervideoeffect(_:)","title":"func unregisterVideoEffect(some VideoEffect) -> Bool","type":"method"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/mthkview\/mixer(_:didoutput:)","title":"func mixer(MediaMixer, didOutput: CMSampleBuffer)","type":"method"},{"path":"\/documentation\/haishinkit\/mthkview\/mixer(_:didoutput:when:)","title":"func mixer(MediaMixer, didOutput: AVAudioPCMBuffer, when: AVAudioTime)","type":"method"},{"path":"\/documentation\/haishinkit\/mthkview\/selecttrack(_:mediatype:)","title":"func selectTrack(UInt8?, mediaType: CMFormatDescription.MediaType) async","type":"method"}],"path":"\/documentation\/haishinkit\/mthkview\/mediamixeroutput-implementations","title":"MediaMixerOutput Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func stream(some StreamConvertible, didOutput: CMSampleBuffer)","type":"method","path":"\/documentation\/haishinkit\/mthkview\/stream(_:didoutput:)"},{"title":"func stream(some StreamConvertible, didOutput: AVAudioBuffer, when: AVAudioTime)","type":"method","path":"\/documentation\/haishinkit\/mthkview\/stream(_:didoutput:when:)"}],"path":"\/documentation\/haishinkit\/mthkview\/streamoutput-implementations","title":"StreamOutput Implementations","type":"symbol"}],"type":"class","path":"\/documentation\/haishinkit\/mthkview","title":"MTHKView"},{"children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(captureSessionMode: MediaMixer.CaptureSessionMode, multiTrackAudioMixingEnabled: Bool)","path":"\/documentation\/haishinkit\/mediamixer\/init(capturesessionmode:multitrackaudiomixingenabled:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var audioInputFormats: [UInt8 : AVAudioFormat]","path":"\/documentation\/haishinkit\/mediamixer\/audioinputformats","type":"property"},{"title":"var audioMixerSettings: AudioMixerSettings","path":"\/documentation\/haishinkit\/mediamixer\/audiomixersettings","type":"property"},{"title":"let captureSessionMode: MediaMixer.CaptureSessionMode","path":"\/documentation\/haishinkit\/mediamixer\/capturesessionmode-swift.property","type":"property"},{"title":"var frameRate: Float64","path":"\/documentation\/haishinkit\/mediamixer\/framerate","type":"property"},{"title":"var isCapturing: Bool","path":"\/documentation\/haishinkit\/mediamixer\/iscapturing","type":"property"},{"title":"var isInterputted: AsyncStream<Bool>","path":"\/documentation\/haishinkit\/mediamixer\/isinterputted","type":"property"},{"title":"var isMonitoringEnabled: Bool","path":"\/documentation\/haishinkit\/mediamixer\/ismonitoringenabled","type":"property"},{"title":"var isMultiTrackAudioMixingEnabled: Bool","path":"\/documentation\/haishinkit\/mediamixer\/ismultitrackaudiomixingenabled","type":"property"},{"title":"var isRunning: Bool","path":"\/documentation\/haishinkit\/mediamixer\/isrunning","type":"property"},{"title":"var isTorchEnabled: Bool","path":"\/documentation\/haishinkit\/mediamixer\/istorchenabled","type":"property"},{"title":"var screen: Screen","path":"\/documentation\/haishinkit\/mediamixer\/screen","type":"property"},{"title":"var sessionPreset: AVCaptureSession.Preset","path":"\/documentation\/haishinkit\/mediamixer\/sessionpreset","type":"property"},{"title":"var videoInputFormats: [UInt8 : CMFormatDescription]","path":"\/documentation\/haishinkit\/mediamixer\/videoinputformats","type":"property"},{"title":"var videoMixerSettings: VideoMixerSettings","path":"\/documentation\/haishinkit\/mediamixer\/videomixersettings","type":"property"},{"title":"var videoOrientation: AVCaptureVideoOrientation","path":"\/documentation\/haishinkit\/mediamixer\/videoorientation","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func addOutput(some MediaMixerOutput)","path":"\/documentation\/haishinkit\/mediamixer\/addoutput(_:)","type":"method"},{"title":"func append(CMSampleBuffer, track: UInt8)","path":"\/documentation\/haishinkit\/mediamixer\/append(_:track:)","type":"method"},{"title":"func append(AVAudioBuffer, when: AVAudioTime, track: UInt8)","path":"\/documentation\/haishinkit\/mediamixer\/append(_:when:track:)","type":"method"},{"title":"func attachAudio(AVCaptureDevice?, track: UInt8, configuration: AudioDeviceConfigurationBlock?) async throws","path":"\/documentation\/haishinkit\/mediamixer\/attachaudio(_:track:configuration:)","type":"method"},{"title":"func attachVideo(AVCaptureDevice?, track: UInt8, configuration: VideoDeviceConfigurationBlock?) async throws","path":"\/documentation\/haishinkit\/mediamixer\/attachvideo(_:track:configuration:)","type":"method"},{"title":"func configuration((AVCaptureSession) throws -> Void) rethrows","path":"\/documentation\/haishinkit\/mediamixer\/configuration(_:)","type":"method"},{"title":"func configuration(audio: UInt8, configuration: (AudioDeviceUnit) throws -> Void) throws","path":"\/documentation\/haishinkit\/mediamixer\/configuration(audio:configuration:)","type":"method"},{"title":"func configuration(video: UInt8, configuration: (VideoDeviceUnit) throws -> Void) throws","path":"\/documentation\/haishinkit\/mediamixer\/configuration(video:configuration:)","type":"method"},{"title":"func removeOutput(some MediaMixerOutput)","path":"\/documentation\/haishinkit\/mediamixer\/removeoutput(_:)","type":"method"},{"title":"func setAudioMixerSettings(AudioMixerSettings)","path":"\/documentation\/haishinkit\/mediamixer\/setaudiomixersettings(_:)","type":"method"},{"title":"func setFrameRate(Float64) throws","path":"\/documentation\/haishinkit\/mediamixer\/setframerate(_:)","type":"method"},{"title":"func setMonitoringEnabled(Bool)","path":"\/documentation\/haishinkit\/mediamixer\/setmonitoringenabled(_:)","type":"method"},{"title":"func setSessionPreset(AVCaptureSession.Preset)","path":"\/documentation\/haishinkit\/mediamixer\/setsessionpreset(_:)","type":"method"},{"title":"func setTorchEnabled(Bool)","path":"\/documentation\/haishinkit\/mediamixer\/settorchenabled(_:)","type":"method"},{"title":"func setVideoMixerSettings(VideoMixerSettings)","path":"\/documentation\/haishinkit\/mediamixer\/setvideomixersettings(_:)","type":"method"},{"title":"func setVideoOrientation(AVCaptureVideoOrientation)","path":"\/documentation\/haishinkit\/mediamixer\/setvideoorientation(_:)","type":"method"},{"title":"func startCapturing()","path":"\/documentation\/haishinkit\/mediamixer\/startcapturing()","type":"method"},{"title":"func stopCapturing()","path":"\/documentation\/haishinkit\/mediamixer\/stopcapturing()","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"title":"MediaMixer.CaptureSessionMode","path":"\/documentation\/haishinkit\/mediamixer\/capturesessionmode-swift.enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/mediamixer\/capturesessionmode-swift.enum\/manual","title":"case manual","type":"case"},{"path":"\/documentation\/haishinkit\/mediamixer\/capturesessionmode-swift.enum\/multi","title":"case multi","type":"case"},{"path":"\/documentation\/haishinkit\/mediamixer\/capturesessionmode-swift.enum\/single","title":"case single","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/mediamixer\/capturesessionmode-swift.enum\/equatable-implementations","title":"Equatable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/mediamixer\/capturesessionmode-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"type":"symbol"}],"type":"enum"},{"title":"MediaMixer.Error","path":"\/documentation\/haishinkit\/mediamixer\/error","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case deviceNotFound","path":"\/documentation\/haishinkit\/mediamixer\/error\/devicenotfound","type":"case"},{"title":"case failedToAttach(any Error)","path":"\/documentation\/haishinkit\/mediamixer\/error\/failedtoattach(_:)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var localizedDescription: String","path":"\/documentation\/haishinkit\/mediamixer\/error\/localizeddescription","type":"property"}],"title":"Error Implementations","path":"\/documentation\/haishinkit\/mediamixer\/error\/error-implementations","type":"symbol"}],"type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Actor Implementations","path":"\/documentation\/haishinkit\/mediamixer\/actor-implementations","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/haishinkit\/mediamixer\/assertisolated(_:file:line:)"},{"type":"method","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","path":"\/documentation\/haishinkit\/mediamixer\/assumeisolated(_:file:line:)"},{"type":"method","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/haishinkit\/mediamixer\/preconditionisolated(_:file:line:)"}],"type":"symbol"},{"title":"AsyncRunner Implementations","path":"\/documentation\/haishinkit\/mediamixer\/asyncrunner-implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/mediamixer\/startrunning()","title":"func startRunning()","type":"method"},{"path":"\/documentation\/haishinkit\/mediamixer\/stoprunning()","title":"func stopRunning()","type":"method"}],"type":"symbol"}],"type":"class","path":"\/documentation\/haishinkit\/mediamixer","title":"MediaMixer"},{"children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/haishinkit\/piphkview\/init(coder:)","type":"init","title":"init?(coder: NSCoder)"},{"path":"\/documentation\/haishinkit\/piphkview\/init(frame:)","type":"init","title":"init(frame: CGRect)"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/piphkview\/audiotrackid","type":"property","title":"var audioTrackId: UInt8?"},{"path":"\/documentation\/haishinkit\/piphkview\/videogravity","type":"property","title":"var videoGravity: AVLayerVideoGravity"},{"path":"\/documentation\/haishinkit\/piphkview\/videotrackid","type":"property","title":"var videoTrackId: UInt8?"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/piphkview\/awakefromnib()","type":"method","title":"func awakeFromNib()"},{"type":"groupMarker","title":"Type Properties"},{"path":"\/documentation\/haishinkit\/piphkview\/defaultbackgroundcolor","type":"property","title":"static var defaultBackgroundColor: NSColor"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/haishinkit\/piphkview\/mediamixeroutput-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func mixer(MediaMixer, didOutput: CMSampleBuffer)","path":"\/documentation\/haishinkit\/piphkview\/mixer(_:didoutput:)"},{"type":"method","title":"func mixer(MediaMixer, didOutput: AVAudioPCMBuffer, when: AVAudioTime)","path":"\/documentation\/haishinkit\/piphkview\/mixer(_:didoutput:when:)"},{"type":"method","title":"func selectTrack(UInt8?, mediaType: CMFormatDescription.MediaType) async","path":"\/documentation\/haishinkit\/piphkview\/selecttrack(_:mediatype:)"}],"title":"MediaMixerOutput Implementations"},{"path":"\/documentation\/haishinkit\/piphkview\/streamoutput-implementations","type":"symbol","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func stream(some StreamConvertible, didOutput: CMSampleBuffer)","type":"method","path":"\/documentation\/haishinkit\/piphkview\/stream(_:didoutput:)"},{"title":"func stream(some StreamConvertible, didOutput: AVAudioBuffer, when: AVAudioTime)","type":"method","path":"\/documentation\/haishinkit\/piphkview\/stream(_:didoutput:when:)"}],"title":"StreamOutput Implementations"}],"type":"class","path":"\/documentation\/haishinkit\/piphkview","title":"PiPHKView"},{"children":[{"title":"Initializers","type":"groupMarker"},{"title":"init()","path":"\/documentation\/haishinkit\/screen\/init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var backgroundColor: CGColor","path":"\/documentation\/haishinkit\/screen\/backgroundcolor","type":"property"},{"title":"var childCounts: Int","path":"\/documentation\/haishinkit\/screen\/childcounts","type":"property"},{"title":"var delegate: (any ScreenDelegate)?","path":"\/documentation\/haishinkit\/screen\/delegate","type":"property"},{"title":"var size: CGSize","path":"\/documentation\/haishinkit\/screen\/size-swift.property","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func addChild(ScreenObject?) throws","path":"\/documentation\/haishinkit\/screen\/addchild(_:)","type":"method"},{"title":"func registerVideoEffect(some VideoEffect) -> Bool","path":"\/documentation\/haishinkit\/screen\/registervideoeffect(_:)","type":"method"},{"title":"func removeChild(ScreenObject?)","path":"\/documentation\/haishinkit\/screen\/removechild(_:)","type":"method"},{"title":"func unregisterVideoEffect(some VideoEffect) -> Bool","path":"\/documentation\/haishinkit\/screen\/unregistervideoeffect(_:)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"title":"static let size: CGSize","path":"\/documentation\/haishinkit\/screen\/size-swift.type.property","type":"property"}],"type":"class","path":"\/documentation\/haishinkit\/screen","title":"Screen"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"title":"static let shared: ScreenActor","type":"property","path":"\/documentation\/haishinkit\/screenactor\/shared"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Actor Implementations","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/haishinkit\/screenactor\/assertisolated(_:file:line:)","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)"},{"type":"method","path":"\/documentation\/haishinkit\/screenactor\/assumeisolated(_:file:line:)","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T"},{"type":"method","path":"\/documentation\/haishinkit\/screenactor\/preconditionisolated(_:file:line:)","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)"}],"type":"symbol","path":"\/documentation\/haishinkit\/screenactor\/actor-implementations"},{"title":"GlobalActor Implementations","children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/screenactor\/sharedunownedexecutor","title":"static var sharedUnownedExecutor: UnownedSerialExecutor","type":"property"}],"type":"symbol","path":"\/documentation\/haishinkit\/screenactor\/globalactor-implementations"}],"type":"class","path":"\/documentation\/haishinkit\/screenactor","title":"ScreenActor"},{"children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/haishinkit\/screenobject\/init()","title":"init()"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/haishinkit\/screenobject\/bounds","title":"var bounds: CGRect"},{"type":"property","path":"\/documentation\/haishinkit\/screenobject\/cornerradius","title":"var cornerRadius: CGFloat"},{"type":"property","path":"\/documentation\/haishinkit\/screenobject\/horizontalalignment-swift.property","title":"var horizontalAlignment: ScreenObject.HorizontalAlignment"},{"type":"property","path":"\/documentation\/haishinkit\/screenobject\/isvisible","title":"var isVisible: Bool"},{"type":"property","path":"\/documentation\/haishinkit\/screenobject\/layoutmargin","title":"var layoutMargin: NSEdgeInsets"},{"type":"property","path":"\/documentation\/haishinkit\/screenobject\/parent","title":"var parent: ScreenObjectContainer?"},{"type":"property","path":"\/documentation\/haishinkit\/screenobject\/size","title":"var size: CGSize"},{"type":"property","path":"\/documentation\/haishinkit\/screenobject\/verticalalignment-swift.property","title":"var verticalAlignment: ScreenObject.VerticalAlignment"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/haishinkit\/screenobject\/invalidatelayout()","title":"func invalidateLayout()"},{"type":"method","path":"\/documentation\/haishinkit\/screenobject\/makebounds(_:)","title":"func makeBounds(CGSize) -> CGRect"},{"type":"method","path":"\/documentation\/haishinkit\/screenobject\/makeimage(_:)","title":"func makeImage(some ScreenRenderer) -> CGImage?"},{"type":"groupMarker","title":"Enumerations"},{"type":"enum","path":"\/documentation\/haishinkit\/screenobject\/horizontalalignment-swift.enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case center","path":"\/documentation\/haishinkit\/screenobject\/horizontalalignment-swift.enum\/center","type":"case"},{"title":"case left","path":"\/documentation\/haishinkit\/screenobject\/horizontalalignment-swift.enum\/left","type":"case"},{"title":"case right","path":"\/documentation\/haishinkit\/screenobject\/horizontalalignment-swift.enum\/right","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/haishinkit\/screenobject\/horizontalalignment-swift.enum\/!=(_:_:)","type":"op"}],"title":"Equatable Implementations","path":"\/documentation\/haishinkit\/screenobject\/horizontalalignment-swift.enum\/equatable-implementations","type":"symbol"}],"title":"ScreenObject.HorizontalAlignment"},{"type":"enum","path":"\/documentation\/haishinkit\/screenobject\/verticalalignment-swift.enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case bottom","path":"\/documentation\/haishinkit\/screenobject\/verticalalignment-swift.enum\/bottom","type":"case"},{"title":"case middle","path":"\/documentation\/haishinkit\/screenobject\/verticalalignment-swift.enum\/middle","type":"case"},{"title":"case top","path":"\/documentation\/haishinkit\/screenobject\/verticalalignment-swift.enum\/top","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/haishinkit\/screenobject\/verticalalignment-swift.enum\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}],"title":"Equatable Implementations","path":"\/documentation\/haishinkit\/screenobject\/verticalalignment-swift.enum\/equatable-implementations","type":"symbol"}],"title":"ScreenObject.VerticalAlignment"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","path":"\/documentation\/haishinkit\/screenobject\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/haishinkit\/screenobject\/!=(_:_:)"},{"title":"static func == (ScreenObject, ScreenObject) -> Bool","type":"op","path":"\/documentation\/haishinkit\/screenobject\/==(_:_:)"}],"title":"Equatable Implementations"},{"type":"symbol","path":"\/documentation\/haishinkit\/screenobject\/hashable-implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func hash(into: inout Hasher)","path":"\/documentation\/haishinkit\/screenobject\/hash(into:)","type":"method"}],"title":"Hashable Implementations"}],"type":"class","path":"\/documentation\/haishinkit\/screenobject","title":"ScreenObject"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var childCounts: Int","type":"property","path":"\/documentation\/haishinkit\/screenobjectcontainer\/childcounts"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func addChild(ScreenObject?) throws","type":"method","path":"\/documentation\/haishinkit\/screenobjectcontainer\/addchild(_:)"},{"title":"func removeChild(ScreenObject?)","type":"method","path":"\/documentation\/haishinkit\/screenobjectcontainer\/removechild(_:)"},{"title":"Enumerations","type":"groupMarker"},{"title":"ScreenObjectContainer.Error","type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case alreadyExists","type":"case","path":"\/documentation\/haishinkit\/screenobjectcontainer\/error\/alreadyexists"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/screenobjectcontainer\/error\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/haishinkit\/screenobjectcontainer\/error\/equatable-implementations"},{"title":"Error Implementations","type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/screenobjectcontainer\/error\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/haishinkit\/screenobjectcontainer\/error\/error-implementations"}],"path":"\/documentation\/haishinkit\/screenobjectcontainer\/error"}],"type":"class","path":"\/documentation\/haishinkit\/screenobjectcontainer","title":"ScreenObjectContainer"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func build() async throws -> (any Session)?","type":"method","path":"\/documentation\/haishinkit\/sessionbuilder\/build()"},{"title":"func setMethod(SessionMethod) -> Self","type":"method","path":"\/documentation\/haishinkit\/sessionbuilder\/setmethod(_:)"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/haishinkit\/sessionbuilder\/assertisolated(_:file:line:)","type":"method"},{"title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","path":"\/documentation\/haishinkit\/sessionbuilder\/assumeisolated(_:file:line:)","type":"method"},{"title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/haishinkit\/sessionbuilder\/preconditionisolated(_:file:line:)","type":"method"}],"title":"Actor Implementations","type":"symbol","path":"\/documentation\/haishinkit\/sessionbuilder\/actor-implementations"}],"type":"class","path":"\/documentation\/haishinkit\/sessionbuilder","title":"SessionBuilder"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/sessionbuilderfactory\/make(_:)","title":"func make(URL?) throws -> SessionBuilder","type":"method"},{"path":"\/documentation\/haishinkit\/sessionbuilderfactory\/register(_:)","title":"func register(some SessionFactory)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/sessionbuilderfactory\/shared","title":"static let shared: SessionBuilderFactory","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/sessionbuilderfactory\/error","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/haishinkit\/sessionbuilderfactory\/error\/illegalargument","type":"case","title":"case illegalArgument"},{"path":"\/documentation\/haishinkit\/sessionbuilderfactory\/error\/notfound","type":"case","title":"case notFound"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/haishinkit\/sessionbuilderfactory\/error\/equatable-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/haishinkit\/sessionbuilderfactory\/error\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}],"title":"Equatable Implementations"},{"path":"\/documentation\/haishinkit\/sessionbuilderfactory\/error\/error-implementations","type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/sessionbuilderfactory\/error\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"title":"Error Implementations"}],"title":"SessionBuilderFactory.Error","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/sessionbuilderfactory\/actor-implementations","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/haishinkit\/sessionbuilderfactory\/assertisolated(_:file:line:)"},{"type":"method","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","path":"\/documentation\/haishinkit\/sessionbuilderfactory\/assumeisolated(_:file:line:)"},{"type":"method","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/haishinkit\/sessionbuilderfactory\/preconditionisolated(_:file:line:)"}],"title":"Actor Implementations","type":"symbol"}],"type":"class","path":"\/documentation\/haishinkit\/sessionbuilderfactory","title":"SessionBuilderFactory"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/streamrecorder\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/streamrecorder\/audiotrackid","title":"var audioTrackId: UInt8?","type":"property"},{"path":"\/documentation\/haishinkit\/streamrecorder\/isrecording","title":"var isRecording: Bool","type":"property"},{"path":"\/documentation\/haishinkit\/streamrecorder\/moviefragmentinterval","title":"var movieFragmentInterval: Double?","type":"property"},{"path":"\/documentation\/haishinkit\/streamrecorder\/moviesdirectory","title":"var moviesDirectory: URL","type":"property"},{"path":"\/documentation\/haishinkit\/streamrecorder\/outputurl","title":"var outputURL: URL?","type":"property"},{"path":"\/documentation\/haishinkit\/streamrecorder\/settings","title":"var settings: [AVMediaType : [String : any Sendable]]","type":"property"},{"path":"\/documentation\/haishinkit\/streamrecorder\/videotrackid","title":"var videoTrackId: UInt8?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/streamrecorder\/selecttrack(_:mediatype:)","title":"func selectTrack(UInt8?, mediaType: CMFormatDescription.MediaType)","type":"method"},{"path":"\/documentation\/haishinkit\/streamrecorder\/setmoviefragmentinterval(_:)","title":"func setMovieFragmentInterval(Double?)","type":"method"},{"path":"\/documentation\/haishinkit\/streamrecorder\/startrecording(_:settings:)","title":"func startRecording(URL?, settings: [AVMediaType : [String : any Sendable]]) async throws","type":"method"},{"path":"\/documentation\/haishinkit\/streamrecorder\/stoprecording()","title":"func stopRecording() async throws -> URL","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/streamrecorder\/defaultsettings","title":"static let defaultSettings: [AVMediaType : [String : any Sendable]]","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case failedToAppend(error: (any Error)?)","type":"case","path":"\/documentation\/haishinkit\/streamrecorder\/error\/failedtoappend(error:)"},{"title":"case failedToCreateAssetWriter(error: any Error)","type":"case","path":"\/documentation\/haishinkit\/streamrecorder\/error\/failedtocreateassetwriter(error:)"},{"title":"case failedToCreateAssetWriterInput(error: any Error)","type":"case","path":"\/documentation\/haishinkit\/streamrecorder\/error\/failedtocreateassetwriterinput(error:)"},{"title":"case failedToFinishWriting(error: (any Error)?)","type":"case","path":"\/documentation\/haishinkit\/streamrecorder\/error\/failedtofinishwriting(error:)"},{"title":"case fileAlreadyExists(outputURL: URL)","type":"case","path":"\/documentation\/haishinkit\/streamrecorder\/error\/filealreadyexists(outputurl:)"},{"title":"case invalidState","type":"case","path":"\/documentation\/haishinkit\/streamrecorder\/error\/invalidstate"},{"title":"case notSupportedFileType(pathExtension: String)","type":"case","path":"\/documentation\/haishinkit\/streamrecorder\/error\/notsupportedfiletype(pathextension:)"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Error Implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/streamrecorder\/error\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"type":"symbol","path":"\/documentation\/haishinkit\/streamrecorder\/error\/error-implementations"}],"path":"\/documentation\/haishinkit\/streamrecorder\/error","title":"StreamRecorder.Error","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/streamrecorder\/assertisolated(_:file:line:)","type":"method","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)"},{"path":"\/documentation\/haishinkit\/streamrecorder\/assumeisolated(_:file:line:)","type":"method","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T"},{"path":"\/documentation\/haishinkit\/streamrecorder\/preconditionisolated(_:file:line:)","type":"method","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)"}],"path":"\/documentation\/haishinkit\/streamrecorder\/actor-implementations","title":"Actor Implementations","type":"symbol"},{"children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/haishinkit\/streamrecorder\/mixer(_:didoutput:)","title":"func mixer(MediaMixer, didOutput: CMSampleBuffer)"},{"type":"method","path":"\/documentation\/haishinkit\/streamrecorder\/mixer(_:didoutput:when:)","title":"func mixer(MediaMixer, didOutput: AVAudioPCMBuffer, when: AVAudioTime)"}],"path":"\/documentation\/haishinkit\/streamrecorder\/mediamixeroutput-implementations","title":"MediaMixerOutput Implementations","type":"symbol"},{"children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/streamrecorder\/stream(_:didoutput:)","type":"method","title":"func stream(some StreamConvertible, didOutput: CMSampleBuffer)"},{"path":"\/documentation\/haishinkit\/streamrecorder\/stream(_:didoutput:when:)","type":"method","title":"func stream(some StreamConvertible, didOutput: AVAudioBuffer, when: AVAudioTime)"}],"path":"\/documentation\/haishinkit\/streamrecorder\/streamoutput-implementations","title":"StreamOutput Implementations","type":"symbol"}],"type":"class","path":"\/documentation\/haishinkit\/streamrecorder","title":"StreamRecorder"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/streamscreenobject\/chromakeycolor","type":"property","title":"var chromaKeyColor: CGColor?"},{"path":"\/documentation\/haishinkit\/streamscreenobject\/videogravity","type":"property","title":"var videoGravity: AVLayerVideoGravity"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/streamscreenobject\/makebounds(_:)","type":"method","title":"func makeBounds(CGSize) -> CGRect"},{"path":"\/documentation\/haishinkit\/streamscreenobject\/makeimage(_:)","type":"method","title":"func makeImage(some ScreenRenderer) -> CGImage?"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/haishinkit\/streamscreenobject\/streamoutput-implementations","type":"symbol","title":"StreamOutput Implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func stream(some StreamConvertible, didOutput: CMSampleBuffer)","type":"method","path":"\/documentation\/haishinkit\/streamscreenobject\/stream(_:didoutput:)"},{"title":"func stream(some StreamConvertible, didOutput: AVAudioBuffer, when: AVAudioTime)","type":"method","path":"\/documentation\/haishinkit\/streamscreenobject\/stream(_:didoutput:when:)"}]}],"type":"class","path":"\/documentation\/haishinkit\/streamscreenobject","title":"StreamScreenObject"},{"children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(mamimumVideoBitrate: Int)","path":"\/documentation\/haishinkit\/streamvideoadaptivebitratestrategy\/init(mamimumvideobitrate:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let mamimumAudioBitRate: Int","path":"\/documentation\/haishinkit\/streamvideoadaptivebitratestrategy\/mamimumaudiobitrate","type":"property"},{"title":"let mamimumVideoBitRate: Int","path":"\/documentation\/haishinkit\/streamvideoadaptivebitratestrategy\/mamimumvideobitrate","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func adjustBitrate(NetworkMonitorEvent, stream: some StreamConvertible) async","path":"\/documentation\/haishinkit\/streamvideoadaptivebitratestrategy\/adjustbitrate(_:stream:)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"title":"static let statusCountsThreshold: Int","path":"\/documentation\/haishinkit\/streamvideoadaptivebitratestrategy\/statuscountsthreshold","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Actor Implementations","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/haishinkit\/streamvideoadaptivebitratestrategy\/assertisolated(_:file:line:)"},{"type":"method","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","path":"\/documentation\/haishinkit\/streamvideoadaptivebitratestrategy\/assumeisolated(_:file:line:)"},{"type":"method","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/haishinkit\/streamvideoadaptivebitratestrategy\/preconditionisolated(_:file:line:)"}],"path":"\/documentation\/haishinkit\/streamvideoadaptivebitratestrategy\/actor-implementations","type":"symbol"}],"type":"class","path":"\/documentation\/haishinkit\/streamvideoadaptivebitratestrategy","title":"StreamVideoAdaptiveBitRateStrategy"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var attributes: [NSAttributedString.Key : Any]?","path":"\/documentation\/haishinkit\/textscreenobject\/attributes"},{"type":"property","title":"var bounds: CGRect","path":"\/documentation\/haishinkit\/textscreenobject\/bounds"},{"type":"property","title":"var string: String","path":"\/documentation\/haishinkit\/textscreenobject\/string"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func makeBounds(CGSize) -> CGRect","path":"\/documentation\/haishinkit\/textscreenobject\/makebounds(_:)"},{"type":"method","title":"func makeImage(some ScreenRenderer) -> CGImage?","path":"\/documentation\/haishinkit\/textscreenobject\/makeimage(_:)"}],"type":"class","path":"\/documentation\/haishinkit\/textscreenobject","title":"TextScreenObject"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var colorFormat: OSType","path":"\/documentation\/haishinkit\/videodeviceunit\/colorformat-swift.property"},{"type":"property","title":"var connection: AVCaptureConnection?","path":"\/documentation\/haishinkit\/videodeviceunit\/connection"},{"type":"property","title":"var device: AVCaptureDevice?","path":"\/documentation\/haishinkit\/videodeviceunit\/device"},{"type":"property","title":"var frameRate: Float64","path":"\/documentation\/haishinkit\/videodeviceunit\/framerate"},{"type":"property","title":"var input: AVCaptureInput?","path":"\/documentation\/haishinkit\/videodeviceunit\/input"},{"type":"property","title":"var isVideoMirrored: Bool","path":"\/documentation\/haishinkit\/videodeviceunit\/isvideomirrored"},{"type":"property","title":"var output: VideoDeviceUnit.Output?","path":"\/documentation\/haishinkit\/videodeviceunit\/output-swift.property"},{"type":"property","title":"let track: UInt8","path":"\/documentation\/haishinkit\/videodeviceunit\/track"},{"type":"property","title":"var videoOrientation: AVCaptureVideoOrientation","path":"\/documentation\/haishinkit\/videodeviceunit\/videoorientation"},{"type":"groupMarker","title":"Instance Methods"},{"title":"func setFrameRate(Float64) throws","path":"\/documentation\/haishinkit\/videodeviceunit\/setframerate(_:)","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"title":"VideoDeviceUnit.Output","path":"\/documentation\/haishinkit\/videodeviceunit\/output-swift.typealias","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"title":"static let colorFormat: OSType","path":"\/documentation\/haishinkit\/videodeviceunit\/colorformat-swift.type.property","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"title":"VideoDeviceUnit.Error","path":"\/documentation\/haishinkit\/videodeviceunit\/error","type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case unsupportedFrameRate","path":"\/documentation\/haishinkit\/videodeviceunit\/error\/unsupportedframerate","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","path":"\/documentation\/haishinkit\/videodeviceunit\/error\/equatable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","path":"\/documentation\/haishinkit\/videodeviceunit\/error\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"}],"type":"symbol"},{"title":"Error Implementations","path":"\/documentation\/haishinkit\/videodeviceunit\/error\/error-implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videodeviceunit\/error\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"type":"symbol"}]}],"type":"class","path":"\/documentation\/haishinkit\/videodeviceunit","title":"VideoDeviceUnit"},{"children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init?()","path":"\/documentation\/haishinkit\/videorotator\/init()"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func rotate(buffer: CMSampleBuffer) -> Result<CMSampleBuffer, VideoRotator.Error>","path":"\/documentation\/haishinkit\/videorotator\/rotate(buffer:)"},{"type":"groupMarker","title":"Enumerations"},{"type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case cannotAllocatePixelBuffer(CVReturn)","type":"case","path":"\/documentation\/haishinkit\/videorotator\/error\/cannotallocatepixelbuffer(_:)"},{"title":"case noImageBuffer","type":"case","path":"\/documentation\/haishinkit\/videorotator\/error\/noimagebuffer"},{"title":"case noOrientationInfo","type":"case","path":"\/documentation\/haishinkit\/videorotator\/error\/noorientationinfo"},{"title":"case rotationFailure(OSStatus)","type":"case","path":"\/documentation\/haishinkit\/videorotator\/error\/rotationfailure(_:)"},{"title":"case unsupportedOrientation","type":"case","path":"\/documentation\/haishinkit\/videorotator\/error\/unsupportedorientation"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Error Implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videorotator\/error\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"type":"symbol","path":"\/documentation\/haishinkit\/videorotator\/error\/error-implementations"}],"title":"VideoRotator.Error","path":"\/documentation\/haishinkit\/videorotator\/error"}],"type":"class","path":"\/documentation\/haishinkit\/videorotator","title":"VideoRotator"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videotrackscreenobject\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videotrackscreenobject\/chromakeycolor","title":"var chromaKeyColor: CGColor?","type":"property"},{"path":"\/documentation\/haishinkit\/videotrackscreenobject\/framerate","title":"var frameRate: Int","type":"property"},{"path":"\/documentation\/haishinkit\/videotrackscreenobject\/track","title":"var track: UInt8","type":"property"},{"path":"\/documentation\/haishinkit\/videotrackscreenobject\/videogravity","title":"var videoGravity: AVLayerVideoGravity","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videotrackscreenobject\/draw(_:)","title":"func draw(some ScreenRenderer)","type":"method"},{"path":"\/documentation\/haishinkit\/videotrackscreenobject\/makebounds(_:)","title":"func makeBounds(CGSize) -> CGRect","type":"method"},{"path":"\/documentation\/haishinkit\/videotrackscreenobject\/makeimage(_:)","title":"func makeImage(some ScreenRenderer) -> CGImage?","type":"method"},{"path":"\/documentation\/haishinkit\/videotrackscreenobject\/registervideoeffect(_:)","title":"func registerVideoEffect(some VideoEffect) -> Bool","type":"method"},{"path":"\/documentation\/haishinkit\/videotrackscreenobject\/unregistervideoeffect(_:)","title":"func unregisterVideoEffect(some VideoEffect) -> Bool","type":"method"}],"type":"class","path":"\/documentation\/haishinkit\/videotrackscreenobject","title":"VideoTrackScreenObject"},{"type":"groupMarker","title":"Protocols"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/asyncrunner\/isrunning","type":"property","title":"var isRunning: Bool"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/asyncrunner\/startrunning()","type":"method","title":"func startRunning() async"},{"path":"\/documentation\/haishinkit\/asyncrunner\/stoprunning()","type":"method","title":"func stopRunning() async"}],"type":"protocol","path":"\/documentation\/haishinkit\/asyncrunner","title":"AsyncRunner"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var chromaKeyColor: CGColor?","type":"property","path":"\/documentation\/haishinkit\/chromakeyprocessable\/chromakeycolor"}],"type":"protocol","path":"\/documentation\/haishinkit\/chromakeyprocessable","title":"ChromaKeyProcessable"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/mediamixeroutput\/audiotrackid","type":"property","title":"var audioTrackId: UInt8?"},{"path":"\/documentation\/haishinkit\/mediamixeroutput\/videotrackid","type":"property","title":"var videoTrackId: UInt8?"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/mediamixeroutput\/mixer(_:didoutput:)","type":"method","title":"func mixer(MediaMixer, didOutput: CMSampleBuffer)"},{"path":"\/documentation\/haishinkit\/mediamixeroutput\/mixer(_:didoutput:when:)","type":"method","title":"func mixer(MediaMixer, didOutput: AVAudioPCMBuffer, when: AVAudioTime)"},{"path":"\/documentation\/haishinkit\/mediamixeroutput\/selecttrack(_:mediatype:)","type":"method","title":"func selectTrack(UInt8?, mediaType: CMFormatDescription.MediaType) async"}],"type":"protocol","path":"\/documentation\/haishinkit\/mediamixeroutput","title":"MediaMixerOutput"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var connected: Bool","path":"\/documentation\/haishinkit\/networkconnection\/connected","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func close() async throws","path":"\/documentation\/haishinkit\/networkconnection\/close()","type":"method"}],"type":"protocol","path":"\/documentation\/haishinkit\/networkconnection","title":"NetworkConnection"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var isRunning: Bool","path":"\/documentation\/haishinkit\/runner\/isrunning","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func startRunning()","path":"\/documentation\/haishinkit\/runner\/startrunning()","type":"method"},{"title":"func stopRunning()","path":"\/documentation\/haishinkit\/runner\/stoprunning()","type":"method"}],"type":"protocol","path":"\/documentation\/haishinkit\/runner","title":"Runner"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func screen(Screen, willLayout: CMTime)","path":"\/documentation\/haishinkit\/screendelegate\/screen(_:willlayout:)","type":"method"}],"type":"protocol","path":"\/documentation\/haishinkit\/screendelegate","title":"ScreenDelegate"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/screenrenderer\/backgroundcolor","title":"var backgroundColor: CGColor","type":"property"},{"path":"\/documentation\/haishinkit\/screenrenderer\/bounds","title":"var bounds: CGRect","type":"property"},{"path":"\/documentation\/haishinkit\/screenrenderer\/context","title":"var context: CIContext","type":"property"},{"path":"\/documentation\/haishinkit\/screenrenderer\/presentationtimestamp","title":"var presentationTimeStamp: CMTime","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/screenrenderer\/draw(_:)","title":"func draw(ScreenObject)","type":"method"},{"path":"\/documentation\/haishinkit\/screenrenderer\/layout(_:)","title":"func layout(ScreenObject)","type":"method"},{"path":"\/documentation\/haishinkit\/screenrenderer\/settarget(_:)","title":"func setTarget(CVPixelBuffer?)","type":"method"}],"type":"protocol","path":"\/documentation\/haishinkit\/screenrenderer","title":"ScreenRenderer"},{"children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(uri: URL, method: SessionMethod)","type":"init","path":"\/documentation\/haishinkit\/session\/init(uri:method:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var readyState: AsyncStream<SessionReadyState>","type":"property","path":"\/documentation\/haishinkit\/session\/readystate"},{"title":"var stream: any StreamConvertible","type":"property","path":"\/documentation\/haishinkit\/session\/stream"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func connect(() -> Void) async throws","type":"method","path":"\/documentation\/haishinkit\/session\/connect(_:)"},{"title":"func setMaxRetryCount(Int)","type":"method","path":"\/documentation\/haishinkit\/session\/setmaxretrycount(_:)"}],"type":"protocol","path":"\/documentation\/haishinkit\/session","title":"Session"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/haishinkit\/sessionfactory\/supportedprotocols","title":"var supportedProtocols: Set<String>"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/haishinkit\/sessionfactory\/make(_:method:)","title":"func make(URL, method: SessionMethod) -> any Session"}],"type":"protocol","path":"\/documentation\/haishinkit\/sessionfactory","title":"SessionFactory"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var mamimumAudioBitRate: Int","type":"property","path":"\/documentation\/haishinkit\/streambitratestrategy\/mamimumaudiobitrate"},{"title":"var mamimumVideoBitRate: Int","type":"property","path":"\/documentation\/haishinkit\/streambitratestrategy\/mamimumvideobitrate"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func adjustBitrate(NetworkMonitorEvent, stream: some StreamConvertible) async","type":"method","path":"\/documentation\/haishinkit\/streambitratestrategy\/adjustbitrate(_:stream:)"}],"type":"protocol","path":"\/documentation\/haishinkit\/streambitratestrategy","title":"StreamBitRateStrategy"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/streamconvertible\/audiosettings","title":"var audioSettings: AudioCodecSettings","type":"property"},{"path":"\/documentation\/haishinkit\/streamconvertible\/readystate","title":"var readyState: StreamReadyState","type":"property"},{"path":"\/documentation\/haishinkit\/streamconvertible\/soundtransform","title":"var soundTransform: SoundTransform?","type":"property"},{"path":"\/documentation\/haishinkit\/streamconvertible\/videosettings","title":"var videoSettings: VideoCodecSettings","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/streamconvertible\/addoutput(_:)","title":"func addOutput(some StreamOutput)","type":"method"},{"path":"\/documentation\/haishinkit\/streamconvertible\/append(_:)","title":"func append(CMSampleBuffer)","type":"method"},{"path":"\/documentation\/haishinkit\/streamconvertible\/append(_:when:)","title":"func append(AVAudioBuffer, when: AVAudioTime)","type":"method"},{"path":"\/documentation\/haishinkit\/streamconvertible\/attachaudioplayer(_:)","title":"func attachAudioPlayer(AudioPlayer?) async","type":"method"},{"path":"\/documentation\/haishinkit\/streamconvertible\/dispatch(_:)","title":"func dispatch(NetworkMonitorEvent) async","type":"method"},{"path":"\/documentation\/haishinkit\/streamconvertible\/removeoutput(_:)","title":"func removeOutput(some StreamOutput)","type":"method"},{"path":"\/documentation\/haishinkit\/streamconvertible\/setaudiosettings(_:)","title":"func setAudioSettings(AudioCodecSettings) throws","type":"method"},{"path":"\/documentation\/haishinkit\/streamconvertible\/setbitratestrategy(_:)","title":"func setBitRateStrategy((some StreamBitRateStrategy)?)","type":"method"},{"path":"\/documentation\/haishinkit\/streamconvertible\/setsoundtransform(_:)","title":"func setSoundTransform(SoundTransform) async","type":"method"},{"path":"\/documentation\/haishinkit\/streamconvertible\/setvideoinputbuffercounts(_:)","title":"func setVideoInputBufferCounts(Int)","type":"method"},{"path":"\/documentation\/haishinkit\/streamconvertible\/setvideosettings(_:)","title":"func setVideoSettings(VideoCodecSettings) throws","type":"method"}],"type":"protocol","path":"\/documentation\/haishinkit\/streamconvertible","title":"StreamConvertible"},{"children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/streamoutput\/stream(_:didoutput:)","type":"method","title":"func stream(some StreamConvertible, didOutput: CMSampleBuffer)"},{"path":"\/documentation\/haishinkit\/streamoutput\/stream(_:didoutput:when:)","type":"method","title":"func stream(some StreamConvertible, didOutput: AVAudioBuffer, when: AVAudioTime)"}],"type":"protocol","path":"\/documentation\/haishinkit\/streamoutput","title":"StreamOutput"},{"children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/videoeffect\/execute(_:)","type":"method","title":"func execute(CIImage) -> CIImage"}],"type":"protocol","path":"\/documentation\/haishinkit\/videoeffect","title":"VideoEffect"},{"type":"groupMarker","title":"Structures"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/audiocodecsettings\/init(bitrate:downmix:channelmap:samplerate:format:)","title":"init(bitRate: Int, downmix: Bool, channelMap: [Int]?, sampleRate: Float64, format: AudioCodecSettings.Format)","type":"init"},{"path":"\/documentation\/haishinkit\/audiocodecsettings\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/audiocodecsettings\/bitrate","title":"var bitRate: Int","type":"property"},{"path":"\/documentation\/haishinkit\/audiocodecsettings\/channelmap","title":"var channelMap: [Int]?","type":"property"},{"path":"\/documentation\/haishinkit\/audiocodecsettings\/downmix","title":"var downmix: Bool","type":"property"},{"path":"\/documentation\/haishinkit\/audiocodecsettings\/format-swift.property","title":"var format: AudioCodecSettings.Format","type":"property"},{"path":"\/documentation\/haishinkit\/audiocodecsettings\/samplerate","title":"let sampleRate: Float64","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/audiocodecsettings\/default","title":"static let `default`: AudioCodecSettings","type":"property"},{"path":"\/documentation\/haishinkit\/audiocodecsettings\/defaultbitrate","title":"static let defaultBitRate: Int","type":"property"},{"path":"\/documentation\/haishinkit\/audiocodecsettings\/maximumnumberofchannels","title":"static let maximumNumberOfChannels: UInt32","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","title":"case aac","path":"\/documentation\/haishinkit\/audiocodecsettings\/format-swift.enum\/aac"},{"type":"case","title":"case opus","path":"\/documentation\/haishinkit\/audiocodecsettings\/format-swift.enum\/opus"},{"type":"case","title":"case pcm","path":"\/documentation\/haishinkit\/audiocodecsettings\/format-swift.enum\/pcm"},{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init(from: any Decoder) throws","path":"\/documentation\/haishinkit\/audiocodecsettings\/format-swift.enum\/init(from:)"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","title":"Equatable Implementations","path":"\/documentation\/haishinkit\/audiocodecsettings\/format-swift.enum\/equatable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/haishinkit\/audiocodecsettings\/format-swift.enum\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}]}],"path":"\/documentation\/haishinkit\/audiocodecsettings\/format-swift.enum","title":"AudioCodecSettings.Format","type":"enum"}],"type":"struct","path":"\/documentation\/haishinkit\/audiocodecsettings","title":"AudioCodecSettings"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/audiomixersettings\/init(samplerate:channels:ismuted:maintrack:tracks:)","title":"init(sampleRate: Float64, channels: UInt32, isMuted: Bool, mainTrack: UInt8, tracks: [UInt8 : AudioMixerTrackSettings])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/audiomixersettings\/channels","title":"let channels: UInt32","type":"property"},{"path":"\/documentation\/haishinkit\/audiomixersettings\/ismuted","title":"var isMuted: Bool","type":"property"},{"path":"\/documentation\/haishinkit\/audiomixersettings\/maintrack","title":"var mainTrack: UInt8","type":"property"},{"path":"\/documentation\/haishinkit\/audiomixersettings\/maximumnumberofchannels","title":"var maximumNumberOfChannels: UInt32","type":"property"},{"path":"\/documentation\/haishinkit\/audiomixersettings\/samplerate","title":"let sampleRate: Float64","type":"property"},{"path":"\/documentation\/haishinkit\/audiomixersettings\/tracks","title":"var tracks: [UInt8 : AudioMixerTrackSettings]","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/audiomixersettings\/default","title":"static let `default`: AudioMixerSettings","type":"property"},{"path":"\/documentation\/haishinkit\/audiomixersettings\/maximumsamplerate","title":"static let maximumSampleRate: Float64","type":"property"}],"type":"struct","path":"\/documentation\/haishinkit\/audiomixersettings","title":"AudioMixerSettings"},{"children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/haishinkit\/audiomixertracksettings\/init(from:)","type":"init"},{"title":"init(volume: Float, isMuted: Bool, downmix: Bool, channelMap: [Int]?)","path":"\/documentation\/haishinkit\/audiomixertracksettings\/init(volume:ismuted:downmix:channelmap:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var channelMap: [Int]?","path":"\/documentation\/haishinkit\/audiomixertracksettings\/channelmap","type":"property"},{"title":"var downmix: Bool","path":"\/documentation\/haishinkit\/audiomixertracksettings\/downmix","type":"property"},{"title":"var isMuted: Bool","path":"\/documentation\/haishinkit\/audiomixertracksettings\/ismuted","type":"property"},{"title":"var volume: Float","path":"\/documentation\/haishinkit\/audiomixertracksettings\/volume","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"title":"static let `default`: AudioMixerTrackSettings","path":"\/documentation\/haishinkit\/audiomixertracksettings\/default","type":"property"}],"type":"struct","path":"\/documentation\/haishinkit\/audiomixertracksettings","title":"AudioMixerTrackSettings"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"let currentBytesInPerSecond: Int","path":"\/documentation\/haishinkit\/networkmonitorreport\/currentbytesinpersecond"},{"type":"property","title":"let currentBytesOutPerSecond: Int","path":"\/documentation\/haishinkit\/networkmonitorreport\/currentbytesoutpersecond"},{"type":"property","title":"let currentQueueBytesOut: Int","path":"\/documentation\/haishinkit\/networkmonitorreport\/currentqueuebytesout"},{"type":"property","title":"let totalBytesIn: Int","path":"\/documentation\/haishinkit\/networkmonitorreport\/totalbytesin"},{"type":"property","title":"let totalBytesOut: Int","path":"\/documentation\/haishinkit\/networkmonitorreport\/totalbytesout"}],"type":"struct","path":"\/documentation\/haishinkit\/networkmonitorreport","title":"NetworkMonitorReport"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/soundtransform\/init(volume:pan:)","title":"init(volume: Float, pan: Float)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/soundtransform\/pan","title":"var pan: Float","type":"property"},{"path":"\/documentation\/haishinkit\/soundtransform\/volume","title":"var volume: Float","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/soundtransform\/defaultpan","title":"static let defaultPan: Float","type":"property"},{"title":"static let defaultVolume: Float","path":"\/documentation\/haishinkit\/soundtransform\/defaultvolume","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"title":"CustomDebugStringConvertible Implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/soundtransform\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/haishinkit\/soundtransform\/customdebugstringconvertible-implementations","type":"symbol"},{"title":"Equatable Implementations","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/haishinkit\/soundtransform\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}],"path":"\/documentation\/haishinkit\/soundtransform\/equatable-implementations","type":"symbol"}],"type":"struct","path":"\/documentation\/haishinkit\/soundtransform","title":"SoundTransform"},{"children":[{"title":"Structures","type":"groupMarker"},{"title":"VideoCodecSettings.BitRateMode","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func == (VideoCodecSettings.BitRateMode, VideoCodecSettings.BitRateMode) -> Bool","path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.struct\/==(_:_:)","type":"op"},{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.struct\/init(from:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var description: String","path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.struct\/description","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func hash(into: inout Hasher)","path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.struct\/hash(into:)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"title":"static let average: VideoCodecSettings.BitRateMode","path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.struct\/average","type":"property"},{"title":"static let constant: VideoCodecSettings.BitRateMode","path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.struct\/constant","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.struct\/!=(_:_:)"}],"path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.struct\/equatable-implementations"}],"path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.struct","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/haishinkit\/videocodecsettings\/init(from:)","type":"init"},{"title":"init(videoSize: CGSize, bitRate: Int, profileLevel: String, scalingMode: VideoCodecSettings.ScalingMode, bitRateMode: VideoCodecSettings.BitRateMode, maxKeyFrameIntervalDuration: Int32, allowFrameReordering: Bool?, dataRateLimits: [Double]?, isLowLatencyRateControlEnabled: Bool, isHardwareAcceleratedEnabled: Bool)","path":"\/documentation\/haishinkit\/videocodecsettings\/init(videosize:bitrate:profilelevel:scalingmode:bitratemode:maxkeyframeintervalduration:allowframereordering:dataratelimits:islowlatencyratecontrolenabled:ishardwareacceleratedenabled:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var allowFrameReordering: Bool?","path":"\/documentation\/haishinkit\/videocodecsettings\/allowframereordering","type":"property"},{"title":"var bitRate: Int","path":"\/documentation\/haishinkit\/videocodecsettings\/bitrate","type":"property"},{"title":"var bitRateMode: VideoCodecSettings.BitRateMode","path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.property","type":"property"},{"title":"var dataRateLimits: [Double]?","path":"\/documentation\/haishinkit\/videocodecsettings\/dataratelimits","type":"property"},{"title":"var frameInterval: Double","path":"\/documentation\/haishinkit\/videocodecsettings\/frameinterval","type":"property"},{"title":"var isHardwareAcceleratedEnabled: Bool","path":"\/documentation\/haishinkit\/videocodecsettings\/ishardwareacceleratedenabled","type":"property"},{"title":"var isLowLatencyRateControlEnabled: Bool","path":"\/documentation\/haishinkit\/videocodecsettings\/islowlatencyratecontrolenabled","type":"property"},{"title":"var maxKeyFrameIntervalDuration: Int32","path":"\/documentation\/haishinkit\/videocodecsettings\/maxkeyframeintervalduration","type":"property"},{"title":"var profileLevel: String","path":"\/documentation\/haishinkit\/videocodecsettings\/profilelevel","type":"property"},{"title":"var scalingMode: VideoCodecSettings.ScalingMode","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.property","type":"property"},{"title":"var videoSize: CGSize","path":"\/documentation\/haishinkit\/videocodecsettings\/videosize","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"title":"static let `default`: VideoCodecSettings","path":"\/documentation\/haishinkit\/videocodecsettings\/default","type":"property"},{"title":"static let frameInterval01: Double","path":"\/documentation\/haishinkit\/videocodecsettings\/frameinterval01","type":"property"},{"title":"static let frameInterval05: Double","path":"\/documentation\/haishinkit\/videocodecsettings\/frameinterval05","type":"property"},{"title":"static let frameInterval10: Double","path":"\/documentation\/haishinkit\/videocodecsettings\/frameinterval10","type":"property"},{"title":"static let frameInterval30: Double","path":"\/documentation\/haishinkit\/videocodecsettings\/frameinterval30","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"title":"VideoCodecSettings.ScalingMode","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/cropsourcetocleanaperture","title":"case cropSourceToCleanAperture","type":"case"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/letterbox","title":"case letterbox","type":"case"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/normal","title":"case normal","type":"case"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/trim","title":"case trim","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/!=(_:_:)"}]},{"path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/init(from:)","type":"init","title":"init(from: any Decoder) throws"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/hashvalue","type":"property","title":"var hashValue: Int"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/encode(to:)","type":"method","title":"func encode(to: any Encoder) throws"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/hash(into:)","type":"method","title":"func hash(into: inout Hasher)"}]}],"path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum","type":"enum"}],"path":"\/documentation\/haishinkit\/videocodecsettings","type":"struct","title":"VideoCodecSettings"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videomixersettings\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/haishinkit\/videomixersettings\/init(mode:ismuted:maintrack:)","title":"init(mode: VideoMixerSettings.Mode, isMuted: Bool, mainTrack: UInt8)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videomixersettings\/ismuted","title":"var isMuted: Bool","type":"property"},{"path":"\/documentation\/haishinkit\/videomixersettings\/maintrack","title":"var mainTrack: UInt8","type":"property"},{"path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.property","title":"var mode: VideoMixerSettings.Mode","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videomixersettings\/default","title":"static let `default`: VideoMixerSettings","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"title":"VideoMixerSettings.Mode","type":"enum","path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/offscreen","title":"case offscreen","type":"case"},{"path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/passthrough","title":"case passthrough","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/!=(_:_:)","type":"op"}]},{"path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}]}]}],"path":"\/documentation\/haishinkit\/videomixersettings","type":"struct","title":"VideoMixerSettings"},{"title":"Variables","type":"groupMarker"},{"title":"let kHaishinKitIdentifier: String","type":"var","path":"\/documentation\/haishinkit\/khaishinkitidentifier"},{"title":"Type Aliases","type":"groupMarker"},{"title":"AudioDeviceConfigurationBlock","type":"typealias","path":"\/documentation\/haishinkit\/audiodeviceconfigurationblock"},{"title":"VideoDeviceConfigurationBlock","type":"typealias","path":"\/documentation\/haishinkit\/videodeviceconfigurationblock"},{"title":"Enumerations","type":"groupMarker"},{"title":"DeviceUtil","type":"enum","path":"\/documentation\/haishinkit\/deviceutil","children":[{"title":"Type Methods","type":"groupMarker"},{"title":"static func device(withLocalizedName: String, mediaType: AVMediaType) -> AVCaptureDevice?","type":"method","path":"\/documentation\/haishinkit\/deviceutil\/device(withlocalizedname:mediatype:)"}]},{"title":"NetworkMonitorEvent","type":"enum","path":"\/documentation\/haishinkit\/networkmonitorevent","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/haishinkit\/networkmonitorevent\/publishinsufficientbwoccured(report:)","type":"case","title":"case publishInsufficientBWOccured(report: NetworkMonitorReport)"},{"path":"\/documentation\/haishinkit\/networkmonitorevent\/reset","type":"case","title":"case reset"},{"path":"\/documentation\/haishinkit\/networkmonitorevent\/status(report:)","type":"case","title":"case status(report: NetworkMonitorReport)"}]},{"title":"SessionMethod","type":"enum","path":"\/documentation\/haishinkit\/sessionmethod","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/sessionmethod\/ingest","title":"case ingest","type":"case"},{"path":"\/documentation\/haishinkit\/sessionmethod\/playback","title":"case playback","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/sessionmethod\/equatable-implementations","title":"Equatable Implementations","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/haishinkit\/sessionmethod\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}],"type":"symbol"}]},{"title":"SessionReadyState","type":"enum","path":"\/documentation\/haishinkit\/sessionreadystate","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","title":"case closed","path":"\/documentation\/haishinkit\/sessionreadystate\/closed"},{"type":"case","title":"case closing","path":"\/documentation\/haishinkit\/sessionreadystate\/closing"},{"type":"case","title":"case connecting","path":"\/documentation\/haishinkit\/sessionreadystate\/connecting"},{"type":"case","title":"case open","path":"\/documentation\/haishinkit\/sessionreadystate\/open"},{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init?(rawValue: Int)","path":"\/documentation\/haishinkit\/sessionreadystate\/init(rawvalue:)"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","path":"\/documentation\/haishinkit\/sessionreadystate\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"}],"title":"Equatable Implementations","path":"\/documentation\/haishinkit\/sessionreadystate\/equatable-implementations"},{"type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/sessionreadystate\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/sessionreadystate\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"title":"RawRepresentable Implementations","path":"\/documentation\/haishinkit\/sessionreadystate\/rawrepresentable-implementations"}]},{"title":"StreamReadyState","type":"enum","path":"\/documentation\/haishinkit\/streamreadystate","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","title":"case idle","path":"\/documentation\/haishinkit\/streamreadystate\/idle"},{"type":"case","title":"case play","path":"\/documentation\/haishinkit\/streamreadystate\/play"},{"type":"case","title":"case playing","path":"\/documentation\/haishinkit\/streamreadystate\/playing"},{"type":"case","title":"case publish","path":"\/documentation\/haishinkit\/streamreadystate\/publish"},{"type":"case","title":"case publishing","path":"\/documentation\/haishinkit\/streamreadystate\/publishing"},{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init?(rawValue: Int)","path":"\/documentation\/haishinkit\/streamreadystate\/init(rawvalue:)"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/haishinkit\/streamreadystate\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}],"title":"Equatable Implementations","path":"\/documentation\/haishinkit\/streamreadystate\/equatable-implementations"},{"type":"symbol","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var hashValue: Int","path":"\/documentation\/haishinkit\/streamreadystate\/hashvalue"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func hash(into: inout Hasher)","path":"\/documentation\/haishinkit\/streamreadystate\/hash(into:)"}],"title":"RawRepresentable Implementations","path":"\/documentation\/haishinkit\/streamreadystate\/rawrepresentable-implementations"}]}],"title":"HaishinKit","path":"\/documentation\/haishinkit","type":"module"},{"type":"module","path":"\/documentation\/rtmphaishinkit","title":"RTMPHaishinKit","children":[{"type":"groupMarker","title":"Articles"},{"path":"\/documentation\/rtmphaishinkit\/e-rtmp","type":"article","title":"Enhanced RTMP"},{"type":"groupMarker","title":"Classes"},{"path":"\/documentation\/rtmphaishinkit\/rtmpconnection","type":"class","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(swfUrl: String?, pageUrl: String?, flashVer: String, fourCcList: [String]?, videoFourCcInfoMap: AMFObject?, audioFourCcInfoMap: AMFObject?, capsEx: Int, timeout: Int, requestTimeout: UInt64, chunkSize: Int, qualityOfService: DispatchQoS)","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/init(swfurl:pageurl:flashver:fourcclist:videofourccinfomap:audiofourccinfomap:capsex:timeout:requesttimeout:chunksize:qualityofservice:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let audioFourCcInfoMap: AMFObject?","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/audiofourccinfomap","type":"property"},{"title":"let capsEx: Int","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/capsex","type":"property"},{"title":"let chunkSize: Int","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/chunksize","type":"property"},{"title":"var connected: Bool","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/connected","type":"property"},{"title":"let flashVer: String","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/flashver","type":"property"},{"title":"let fourCcList: [String]?","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/fourcclist","type":"property"},{"title":"let objectEncoding: RTMPObjectEncoding","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/objectencoding","type":"property"},{"title":"let pageUrl: String?","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/pageurl","type":"property"},{"title":"let qualityOfService: DispatchQoS","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/qualityofservice","type":"property"},{"title":"let requestTimeout: UInt64","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/requesttimeout","type":"property"},{"title":"var status: AsyncStream<RTMPStatus>","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/status","type":"property"},{"title":"let swfUrl: String?","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/swfurl","type":"property"},{"title":"let timeout: Int","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/timeout","type":"property"},{"title":"var uri: URL?","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/uri","type":"property"},{"title":"let videoFourCcInfoMap: AMFObject?","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/videofourccinfomap","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func call(String, arguments: (any Sendable)?...) async throws -> RTMPResponse","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/call(_:arguments:)","type":"method"},{"title":"func close() async throws","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/close()","type":"method"},{"title":"func connect(String, arguments: (any Sendable)?...) async throws -> RTMPResponse","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/connect(_:arguments:)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"title":"static let defaultCapabilities: Int","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/defaultcapabilities","type":"property"},{"title":"static let defaultChunkSizeS: Int","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/defaultchunksizes","type":"property"},{"title":"static let defaultFlashVer: String","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/defaultflashver","type":"property"},{"title":"static let defaultObjectEncoding: RTMPObjectEncoding","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/defaultobjectencoding","type":"property"},{"title":"static let defaultPort: Int","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/defaultport","type":"property"},{"title":"static let defaultRequestTimeout: UInt64","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/defaultrequesttimeout","type":"property"},{"title":"static let defaultSecurePort: Int","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/defaultsecureport","type":"property"},{"title":"static let defaultTimeout: Int","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/defaulttimeout","type":"property"},{"title":"static let defaultWindowSizeS: Int64","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/defaultwindowsizes","type":"property"},{"title":"static let supportedAudioFourCcInfoMap: AMFObject","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/supportedaudiofourccinfomap","type":"property"},{"title":"static let supportedFourCcList: [String]","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/supportedfourcclist","type":"property"},{"title":"static let supportedProtocols: Set<String>","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/supportedprotocols","type":"property"},{"title":"static let supportedVideoFourCcInfoMap: AMFObject","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/supportedvideofourccinfomap","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"title":"RTMPConnection.Code","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/code","type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/code\/callbadversion","type":"case","title":"case callBadVersion"},{"path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/code\/callfailed","type":"case","title":"case callFailed"},{"path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/code\/callprohibited","type":"case","title":"case callProhibited"},{"path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/code\/connectappshutdown","type":"case","title":"case connectAppshutdown"},{"path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/code\/connectclosed","type":"case","title":"case connectClosed"},{"path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/code\/connectfailed","type":"case","title":"case connectFailed"},{"path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/code\/connectidletimeout","type":"case","title":"case connectIdleTimeOut"},{"path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/code\/connectinvalidapp","type":"case","title":"case connectInvalidApp"},{"path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/code\/connectnetworkchange","type":"case","title":"case connectNetworkChange"},{"path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/code\/connectrejected","type":"case","title":"case connectRejected"},{"path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/code\/connectsuccess","type":"case","title":"case connectSuccess"},{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/code\/init(rawvalue:)","type":"init","title":"init?(rawValue: String)"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/code\/level","type":"property","title":"var level: String"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/code\/equatable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/code\/!=(_:_:)"}],"type":"symbol","title":"Equatable Implementations"},{"path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/code\/rawrepresentable-implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/code\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/code\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"type":"symbol","title":"RawRepresentable Implementations"}]},{"title":"RTMPConnection.Error","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/error","type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/error\/connectiontimedout","title":"case connectionTimedOut","type":"case"},{"path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/error\/invalidstate","title":"case invalidState","type":"case"},{"path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/error\/requestfailed(response:)","title":"case requestFailed(response: RTMPResponse)","type":"case"},{"path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/error\/requesttimedout","title":"case requestTimedOut","type":"case"},{"path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/error\/socketerroroccurred(_:)","title":"case socketErrorOccurred((any Error)?)","type":"case"},{"path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/error\/unsupportedcommand(_:)","title":"case unsupportedCommand(String)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/error\/error-implementations","title":"Error Implementations","type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var localizedDescription: String","type":"property","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/error\/localizeddescription"}]}]},{"title":"Default Implementations","type":"groupMarker"},{"title":"Actor Implementations","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/actor-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/assertisolated(_:file:line:)"},{"type":"method","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/assumeisolated(_:file:line:)"},{"type":"method","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/preconditionisolated(_:file:line:)"}]}],"title":"RTMPConnection"},{"path":"\/documentation\/rtmphaishinkit\/rtmpsharedobject","type":"class","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/rtmphaishinkit\/rtmpsharedobject\/data","title":"var data: AMFObject"},{"type":"property","path":"\/documentation\/rtmphaishinkit\/rtmpsharedobject\/objectencoding","title":"let objectEncoding: RTMPObjectEncoding"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/rtmphaishinkit\/rtmpsharedobject\/clear()","title":"func clear() async"},{"type":"method","path":"\/documentation\/rtmphaishinkit\/rtmpsharedobject\/close()","title":"func close() async"},{"type":"method","path":"\/documentation\/rtmphaishinkit\/rtmpsharedobject\/connect(_:)","title":"func connect(RTMPConnection) async"},{"type":"method","path":"\/documentation\/rtmphaishinkit\/rtmpsharedobject\/setproperty(_:_:)","title":"func setProperty(String, (any Sendable)?) async"},{"type":"groupMarker","title":"Type Methods"},{"type":"method","path":"\/documentation\/rtmphaishinkit\/rtmpsharedobject\/getremote(withname:remotepath:persistence:)","title":"static func getRemote(withName: String, remotePath: String, persistence: Bool) -> RTMPSharedObject"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/rtmphaishinkit\/rtmpsharedobject\/assertisolated(_:file:line:)"},{"type":"method","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","path":"\/documentation\/rtmphaishinkit\/rtmpsharedobject\/assumeisolated(_:file:line:)"},{"type":"method","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/rtmphaishinkit\/rtmpsharedobject\/preconditionisolated(_:file:line:)"}],"path":"\/documentation\/rtmphaishinkit\/rtmpsharedobject\/actor-implementations","title":"Actor Implementations"}],"title":"RTMPSharedObject"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream","type":"class","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init(connection: RTMPConnection, fcPublishName: String?)","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/init(connection:fcpublishname:)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var audioSampleAccess: Bool","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/audiosampleaccess"},{"type":"property","title":"var audioTrackId: UInt8?","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/audiotrackid"},{"type":"property","title":"var currentFPS: UInt16","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/currentfps"},{"type":"property","title":"var fcPublishName: String?","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/fcpublishname"},{"type":"property","title":"var info: RTMPStreamInfo","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/info"},{"type":"property","title":"var metadata: AMFArray","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/metadata"},{"type":"property","title":"var objectEncoding: RTMPObjectEncoding","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/objectencoding"},{"type":"property","title":"var readyState: StreamReadyState","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/readystate"},{"type":"property","title":"var status: AsyncStream<RTMPStatus>","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/status"},{"type":"property","title":"var videoSampleAccess: Bool","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/videosampleaccess"},{"type":"property","title":"var videoTrackId: UInt8?","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/videotrackid"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func close() async throws -> RTMPResponse","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/close()"},{"type":"method","title":"func pause(Bool) async throws -> RTMPResponse","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/pause(_:)"},{"type":"method","title":"func play((any Sendable)?...) async throws -> RTMPResponse","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/play(_:)"},{"type":"method","title":"func publish(String?, type: RTMPStream.HowToPublish) async throws -> RTMPResponse","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/publish(_:type:)"},{"type":"method","title":"func receiveAudio(Bool) async throws","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/receiveaudio(_:)"},{"type":"method","title":"func receiveVideo(Bool) async throws","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/receivevideo(_:)"},{"type":"method","title":"func seek(Double) async throws","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/seek(_:)"},{"type":"method","title":"func send(String, arguments: (any Sendable)?..., isResetTimestamp: Bool) throws","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/send(_:arguments:isresettimestamp:)"},{"type":"method","title":"func togglePause() async throws -> RTMPResponse","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/togglepause()"},{"type":"groupMarker","title":"Enumerations"},{"type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/bufferempty","title":"case bufferEmpty","type":"case"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/bufferflush","title":"case bufferFlush","type":"case"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/bufferfull","title":"case bufferFull","type":"case"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/connectclosed","title":"case connectClosed","type":"case"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/connectfailed","title":"case connectFailed","type":"case"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/connectrejected","title":"case connectRejected","type":"case"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/connectsuccess","title":"case connectSuccess","type":"case"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/drmupdateneeded","title":"case drmUpdateNeeded","type":"case"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/failed","title":"case failed","type":"case"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/multicaststreamreset","title":"case multicastStreamReset","type":"case"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/pausenotify","title":"case pauseNotify","type":"case"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/playfailed","title":"case playFailed","type":"case"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/playfilestructureinvalid","title":"case playFileStructureInvalid","type":"case"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/playinsufficientbw","title":"case playInsufficientBW","type":"case"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/playnosupportedtrackfound","title":"case playNoSupportedTrackFound","type":"case"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/playreset","title":"case playReset","type":"case"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/playstart","title":"case playStart","type":"case"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/playstop","title":"case playStop","type":"case"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/playstreamnotfound","title":"case playStreamNotFound","type":"case"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/playtransition","title":"case playTransition","type":"case"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/playunpublishnotify","title":"case playUnpublishNotify","type":"case"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/publishbadname","title":"case publishBadName","type":"case"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/publishidle","title":"case publishIdle","type":"case"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/publishstart","title":"case publishStart","type":"case"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/recordalreadyexists","title":"case recordAlreadyExists","type":"case"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/recorddiskquotaexceeded","title":"case recordDiskQuotaExceeded","type":"case"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/recordfailed","title":"case recordFailed","type":"case"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/recordnoaccess","title":"case recordNoAccess","type":"case"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/recordstart","title":"case recordStart","type":"case"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/recordstop","title":"case recordStop","type":"case"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/secondscreenstart","title":"case secondScreenStart","type":"case"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/secondscreenstop","title":"case secondScreenStop","type":"case"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/seekfailed","title":"case seekFailed","type":"case"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/seekinvalidtime","title":"case seekInvalidTime","type":"case"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/seeknotify","title":"case seekNotify","type":"case"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/stepnotify","title":"case stepNotify","type":"case"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/unpausenotify","title":"case unpauseNotify","type":"case"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/unpublishsuccess","title":"case unpublishSuccess","type":"case"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/videodimensionchange","title":"case videoDimensionChange","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/level","title":"var level: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"title":"Equatable Implementations","type":"symbol"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/rawrepresentable-implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/hashvalue","type":"property","title":"var hashValue: Int"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/hash(into:)","type":"method","title":"func hash(into: inout Hasher)"}],"title":"RawRepresentable Implementations","type":"symbol"}],"title":"RTMPStream.Code","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code"},{"type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case invalidState","type":"case","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/error\/invalidstate"},{"title":"case requestFailed(response: RTMPResponse)","type":"case","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/error\/requestfailed(response:)"},{"title":"case requestTimedOut","type":"case","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/error\/requesttimedout"},{"title":"case unsupportedCodec","type":"case","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/error\/unsupportedcodec"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/error\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"title":"Error Implementations","type":"symbol","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/error\/error-implementations"}],"title":"RTMPStream.Error","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/error"},{"type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/howtopublish\/append","title":"case append","type":"case"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/howtopublish\/appendwithgap","title":"case appendWithGap","type":"case"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/howtopublish\/live","title":"case live","type":"case"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/howtopublish\/record","title":"case record","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/howtopublish\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/howtopublish\/equatable-implementations","title":"Equatable Implementations","type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/howtopublish\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"}]},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/howtopublish\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var hashValue: Int","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/howtopublish\/hashvalue"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func hash(into: inout Hasher)","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/howtopublish\/hash(into:)"}]}],"title":"RTMPStream.HowToPublish","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/howtopublish"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/assertisolated(_:file:line:)"},{"type":"method","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/assumeisolated(_:file:line:)"},{"type":"method","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/preconditionisolated(_:file:line:)"}],"title":"Actor Implementations","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/actor-implementations"},{"type":"symbol","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func mixer(MediaMixer, didOutput: CMSampleBuffer)","type":"method","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/mixer(_:didoutput:)"},{"title":"func mixer(MediaMixer, didOutput: AVAudioPCMBuffer, when: AVAudioTime)","type":"method","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/mixer(_:didoutput:when:)"},{"title":"func selectTrack(UInt8?, mediaType: CMFormatDescription.MediaType)","type":"method","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/selecttrack(_:mediatype:)"}],"title":"MediaMixerOutput Implementations","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/mediamixeroutput-implementations"},{"type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var audioSettings: AudioCodecSettings","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/audiosettings","type":"property"},{"title":"var soundTransform: SoundTransform?","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/soundtransform","type":"property"},{"title":"var videoSettings: VideoCodecSettings","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/videosettings","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func addOutput(some StreamOutput)","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/addoutput(_:)","type":"method"},{"title":"func append(CMSampleBuffer)","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/append(_:)","type":"method"},{"title":"func append(AVAudioBuffer, when: AVAudioTime)","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/append(_:when:)","type":"method"},{"title":"func attachAudioPlayer(AudioPlayer?) async","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/attachaudioplayer(_:)","type":"method"},{"title":"func dispatch(NetworkMonitorEvent) async","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/dispatch(_:)","type":"method"},{"title":"func removeOutput(some StreamOutput)","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/removeoutput(_:)","type":"method"},{"title":"func setAudioSettings(AudioCodecSettings) throws","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/setaudiosettings(_:)","type":"method"},{"title":"func setBitRateStrategy((some StreamBitRateStrategy)?)","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/setbitratestrategy(_:)","type":"method"},{"title":"func setSoundTransform(SoundTransform) async","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/setsoundtransform(_:)","type":"method"},{"title":"func setVideoInputBufferCounts(Int)","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/setvideoinputbuffercounts(_:)","type":"method"},{"title":"func setVideoSettings(VideoCodecSettings) throws","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/setvideosettings(_:)","type":"method"}],"title":"StreamConvertible Implementations","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/streamconvertible-implementations"}],"title":"RTMPStream"},{"type":"groupMarker","title":"Structures"},{"path":"\/documentation\/rtmphaishinkit\/amfarray","type":"struct","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/rtmphaishinkit\/amfarray\/init(count:)","type":"init","title":"init(count: Int)"},{"path":"\/documentation\/rtmphaishinkit\/amfarray\/init(data:)","type":"init","title":"init(data: [(any Sendable)?])"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/rtmphaishinkit\/amfarray\/length","type":"property","title":"var length: Int"},{"type":"groupMarker","title":"Subscripts"},{"path":"\/documentation\/rtmphaishinkit\/amfarray\/subscript(_:)","type":"subscript","title":"subscript(Any) -> (any Sendable)?"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/rtmphaishinkit\/amfarray\/customdebugstringconvertible-implementations","type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/rtmphaishinkit\/amfarray\/debugdescription","title":"var debugDescription: String","type":"property"}],"title":"CustomDebugStringConvertible Implementations"},{"path":"\/documentation\/rtmphaishinkit\/amfarray\/equatable-implementations","type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/rtmphaishinkit\/amfarray\/!=(_:_:)","type":"op"},{"title":"static func == (AMFArray, AMFArray) -> Bool","path":"\/documentation\/rtmphaishinkit\/amfarray\/==(_:_:)","type":"op"}],"title":"Equatable Implementations"},{"path":"\/documentation\/rtmphaishinkit\/amfarray\/expressiblebyarrayliteral-implementations","type":"symbol","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/rtmphaishinkit\/amfarray\/init(arrayliteral:)","title":"init(arrayLiteral: (any Sendable)?...)","type":"init"}],"title":"ExpressibleByArrayLiteral Implementations"}],"title":"AMFArray"},{"path":"\/documentation\/rtmphaishinkit\/amftypedobject","type":"struct","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/rtmphaishinkit\/amftypedobject\/data","type":"property","title":"let data: AMFObject"},{"path":"\/documentation\/rtmphaishinkit\/amftypedobject\/typename","type":"property","title":"let typeName: String"}],"title":"AMFTypedObject"},{"path":"\/documentation\/rtmphaishinkit\/amfundefined","type":"struct","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var description: String","path":"\/documentation\/rtmphaishinkit\/amfundefined\/description","type":"property"}],"title":"AMFUndefined"},{"path":"\/documentation\/rtmphaishinkit\/amfxml","type":"struct","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(data: String)","path":"\/documentation\/rtmphaishinkit\/amfxml\/init(data:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var description: String","path":"\/documentation\/rtmphaishinkit\/amfxml\/description","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/rtmphaishinkit\/amfxml\/!=(_:_:)"},{"title":"static func == (AMFXML, AMFXML) -> Bool","type":"op","path":"\/documentation\/rtmphaishinkit\/amfxml\/==(_:_:)"}],"title":"Equatable Implementations","path":"\/documentation\/rtmphaishinkit\/amfxml\/equatable-implementations","type":"symbol"}],"title":"AMFXML"},{"path":"\/documentation\/rtmphaishinkit\/amfxmldocument","type":"struct","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(data: String)","path":"\/documentation\/rtmphaishinkit\/amfxmldocument\/init(data:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var description: String","path":"\/documentation\/rtmphaishinkit\/amfxmldocument\/description","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","path":"\/documentation\/rtmphaishinkit\/amfxmldocument\/equatable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/rtmphaishinkit\/amfxmldocument\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"},{"path":"\/documentation\/rtmphaishinkit\/amfxmldocument\/==(_:_:)","type":"op","title":"static func == (AMFXMLDocument, AMFXMLDocument) -> Bool"}],"type":"symbol"}],"title":"AMFXMLDocument"},{"path":"\/documentation\/rtmphaishinkit\/hkatomic","type":"struct","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/rtmphaishinkit\/hkatomic\/init(_:)","title":"init(A)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/rtmphaishinkit\/hkatomic\/value","title":"var value: A","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/rtmphaishinkit\/hkatomic\/mutate(_:)","title":"func mutate((inout A) -> Void)","type":"method"}],"title":"HKAtomic"},{"path":"\/documentation\/rtmphaishinkit\/rtmpresponse","type":"struct","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"let arguments: [(any Sendable)?]","path":"\/documentation\/rtmphaishinkit\/rtmpresponse\/arguments","type":"property"},{"title":"let status: RTMPStatus?","path":"\/documentation\/rtmphaishinkit\/rtmpresponse\/status","type":"property"}],"title":"RTMPResponse"},{"path":"\/documentation\/rtmphaishinkit\/rtmpsessionfactory","type":"struct","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init()","path":"\/documentation\/rtmphaishinkit\/rtmpsessionfactory\/init()"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"let supportedProtocols: Set<String>","path":"\/documentation\/rtmphaishinkit\/rtmpsessionfactory\/supportedprotocols"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/rtmphaishinkit\/rtmpsessionfactory\/make(_:method:)","type":"method","title":"func make(URL, method: SessionMethod) -> any Session"}],"title":"RTMPSessionFactory"},{"title":"RTMPStatus","type":"struct","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"let code: String","path":"\/documentation\/rtmphaishinkit\/rtmpstatus\/code"},{"type":"property","title":"let description: String","path":"\/documentation\/rtmphaishinkit\/rtmpstatus\/description"},{"type":"property","title":"let level: String","path":"\/documentation\/rtmphaishinkit\/rtmpstatus\/level"},{"type":"groupMarker","title":"Subscripts"},{"type":"subscript","title":"subscript(dynamicMember _: String) -> Double?","path":"\/documentation\/rtmphaishinkit\/rtmpstatus\/subscript(dynamicmember:)-2uh36"},{"type":"subscript","title":"subscript(dynamicMember _: String) -> String?","path":"\/documentation\/rtmphaishinkit\/rtmpstatus\/subscript(dynamicmember:)-710qw"}],"path":"\/documentation\/rtmphaishinkit\/rtmpstatus"},{"title":"RTMPStreamInfo","type":"struct","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstreaminfo\/bytecount","title":"var byteCount: Int","type":"property"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstreaminfo\/currentbytespersecond","title":"var currentBytesPerSecond: Int","type":"property"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstreaminfo\/resourcename","title":"var resourceName: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstreaminfo\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var debugDescription: String","type":"property","path":"\/documentation\/rtmphaishinkit\/rtmpstreaminfo\/debugdescription"}],"type":"symbol"}],"path":"\/documentation\/rtmphaishinkit\/rtmpstreaminfo"},{"title":"Variables","type":"groupMarker"},{"title":"let kAMFUndefined: AMFUndefined","type":"var","path":"\/documentation\/rtmphaishinkit\/kamfundefined"},{"title":"let kRTMPHaishinKitIdentifier: String","type":"var","path":"\/documentation\/rtmphaishinkit\/krtmphaishinkitidentifier"},{"title":"Type Aliases","type":"groupMarker"},{"title":"AMFObject","type":"typealias","path":"\/documentation\/rtmphaishinkit\/amfobject"},{"title":"Enumerations","type":"groupMarker"},{"title":"RTMPObjectEncoding","type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/rtmphaishinkit\/rtmpobjectencoding\/amf0","type":"case","title":"case amf0"},{"path":"\/documentation\/rtmphaishinkit\/rtmpobjectencoding\/amf3","type":"case","title":"case amf3"},{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/rtmphaishinkit\/rtmpobjectencoding\/init(rawvalue:)","type":"init","title":"init?(rawValue: UInt8)"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/rtmphaishinkit\/rtmpobjectencoding\/equatable-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","path":"\/documentation\/rtmphaishinkit\/rtmpobjectencoding\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"}],"title":"Equatable Implementations"},{"path":"\/documentation\/rtmphaishinkit\/rtmpobjectencoding\/rawrepresentable-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/rtmphaishinkit\/rtmpobjectencoding\/hashvalue","type":"property","title":"var hashValue: Int"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/rtmphaishinkit\/rtmpobjectencoding\/hash(into:)","type":"method","title":"func hash(into: inout Hasher)"}],"title":"RawRepresentable Implementations"}],"path":"\/documentation\/rtmphaishinkit\/rtmpobjectencoding"}]},{"title":"SRTHaishinKit","type":"module","children":[{"title":"Classes","type":"groupMarker"},{"title":"SRTConnection","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init()","path":"\/documentation\/srthaishinkit\/srtconnection\/init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var connected: Bool","path":"\/documentation\/srthaishinkit\/srtconnection\/connected","type":"property"},{"title":"var performanceData: SRTPerformanceData?","path":"\/documentation\/srthaishinkit\/srtconnection\/performancedata","type":"property"},{"title":"var uri: URL?","path":"\/documentation\/srthaishinkit\/srtconnection\/uri","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func close() async","path":"\/documentation\/srthaishinkit\/srtconnection\/close()","type":"method"},{"title":"func connect(URL?) async throws","path":"\/documentation\/srthaishinkit\/srtconnection\/connect(_:)","type":"method"},{"title":"func getSocketOption(SRTSocketOption.Name) async throws -> SRTSocketOption?","path":"\/documentation\/srthaishinkit\/srtconnection\/getsocketoption(_:)","type":"method"},{"title":"func setSocketOption(SRTSocketOption) async throws","path":"\/documentation\/srthaishinkit\/srtconnection\/setsocketoption(_:)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"title":"static let version: String","path":"\/documentation\/srthaishinkit\/srtconnection\/version","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"title":"SRTConnection.Error","path":"\/documentation\/srthaishinkit\/srtconnection\/error","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/srthaishinkit\/srtconnection\/error\/failedtoconnect(_:)","type":"case","title":"case failedToConnect(SRTRejectReason)"},{"path":"\/documentation\/srthaishinkit\/srtconnection\/error\/invalidstate","type":"case","title":"case invalidState"},{"path":"\/documentation\/srthaishinkit\/srtconnection\/error\/unsupporteduri(_:)","type":"case","title":"case unsupportedUri(URL?)"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/srthaishinkit\/srtconnection\/error\/localizeddescription","type":"property","title":"var localizedDescription: String"}],"path":"\/documentation\/srthaishinkit\/srtconnection\/error\/error-implementations","type":"symbol","title":"Error Implementations"}],"type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Actor Implementations","path":"\/documentation\/srthaishinkit\/srtconnection\/actor-implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/srthaishinkit\/srtconnection\/assertisolated(_:file:line:)","type":"method"},{"title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","path":"\/documentation\/srthaishinkit\/srtconnection\/assumeisolated(_:file:line:)","type":"method"},{"title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/srthaishinkit\/srtconnection\/preconditionisolated(_:file:line:)","type":"method"}],"type":"symbol"}],"type":"class","path":"\/documentation\/srthaishinkit\/srtconnection"},{"title":"SRTLogger","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/srthaishinkit\/srtlogger\/functionalareas","title":"var functionalAreas: Set<SRTLogFunctionalArea>","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtlogger\/level","title":"var level: SRTLogLevel","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/srthaishinkit\/srtlogger\/setfunctionalareas(_:)","title":"func setFunctionalAreas(Set<SRTLogFunctionalArea>)","type":"method"},{"path":"\/documentation\/srthaishinkit\/srtlogger\/setlevel(_:)","title":"func setLevel(SRTLogLevel)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/srthaishinkit\/srtlogger\/shared","title":"static let shared: SRTLogger","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/srthaishinkit\/srtlogger\/actor-implementations","title":"Actor Implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/srthaishinkit\/srtlogger\/assertisolated(_:file:line:)","type":"method"},{"title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","path":"\/documentation\/srthaishinkit\/srtlogger\/assumeisolated(_:file:line:)","type":"method"},{"title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/srthaishinkit\/srtlogger\/preconditionisolated(_:file:line:)","type":"method"}],"type":"symbol"}],"type":"class","path":"\/documentation\/srthaishinkit\/srtlogger"},{"title":"SRTStream","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(connection: SRTConnection)","path":"\/documentation\/srthaishinkit\/srtstream\/init(connection:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var audioTrackId: UInt8?","path":"\/documentation\/srthaishinkit\/srtstream\/audiotrackid","type":"property"},{"title":"var readyState: StreamReadyState","path":"\/documentation\/srthaishinkit\/srtstream\/readystate","type":"property"},{"title":"var videoTrackId: UInt8?","path":"\/documentation\/srthaishinkit\/srtstream\/videotrackid","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func close() async","path":"\/documentation\/srthaishinkit\/srtstream\/close()","type":"method"},{"title":"func play(String?) async","path":"\/documentation\/srthaishinkit\/srtstream\/play(_:)","type":"method"},{"title":"func publish(String?) async","path":"\/documentation\/srthaishinkit\/srtstream\/publish(_:)","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"title":"SRTStream.Error","path":"\/documentation\/srthaishinkit\/srtstream\/error","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case unsupportedCodec","path":"\/documentation\/srthaishinkit\/srtstream\/error\/unsupportedcodec","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/srthaishinkit\/srtstream\/error\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}],"path":"\/documentation\/srthaishinkit\/srtstream\/error\/equatable-implementations","type":"symbol"},{"title":"Error Implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/srthaishinkit\/srtstream\/error\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/srthaishinkit\/srtstream\/error\/error-implementations","type":"symbol"}],"type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Actor Implementations","path":"\/documentation\/srthaishinkit\/srtstream\/actor-implementations","children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/srthaishinkit\/srtstream\/assertisolated(_:file:line:)","type":"method","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)"},{"path":"\/documentation\/srthaishinkit\/srtstream\/assumeisolated(_:file:line:)","type":"method","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T"},{"path":"\/documentation\/srthaishinkit\/srtstream\/preconditionisolated(_:file:line:)","type":"method","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)"}],"type":"symbol"},{"title":"MediaMixerOutput Implementations","path":"\/documentation\/srthaishinkit\/srtstream\/mediamixeroutput-implementations","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func mixer(MediaMixer, didOutput: CMSampleBuffer)","path":"\/documentation\/srthaishinkit\/srtstream\/mixer(_:didoutput:)"},{"type":"method","title":"func mixer(MediaMixer, didOutput: AVAudioPCMBuffer, when: AVAudioTime)","path":"\/documentation\/srthaishinkit\/srtstream\/mixer(_:didoutput:when:)"},{"type":"method","title":"func selectTrack(UInt8?, mediaType: CMFormatDescription.MediaType)","path":"\/documentation\/srthaishinkit\/srtstream\/selecttrack(_:mediatype:)"}],"type":"symbol"},{"title":"StreamConvertible Implementations","path":"\/documentation\/srthaishinkit\/srtstream\/streamconvertible-implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/srthaishinkit\/srtstream\/audiosettings","title":"var audioSettings: AudioCodecSettings","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtstream\/soundtransform","title":"var soundTransform: SoundTransform?","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtstream\/videosettings","title":"var videoSettings: VideoCodecSettings","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func addOutput(some StreamOutput)","path":"\/documentation\/srthaishinkit\/srtstream\/addoutput(_:)","type":"method"},{"title":"func append(CMSampleBuffer)","path":"\/documentation\/srthaishinkit\/srtstream\/append(_:)","type":"method"},{"title":"func append(AVAudioBuffer, when: AVAudioTime)","path":"\/documentation\/srthaishinkit\/srtstream\/append(_:when:)","type":"method"},{"title":"func attachAudioPlayer(AudioPlayer?) async","path":"\/documentation\/srthaishinkit\/srtstream\/attachaudioplayer(_:)","type":"method"},{"title":"func dispatch(NetworkMonitorEvent) async","path":"\/documentation\/srthaishinkit\/srtstream\/dispatch(_:)","type":"method"},{"title":"func removeOutput(some StreamOutput)","path":"\/documentation\/srthaishinkit\/srtstream\/removeoutput(_:)","type":"method"},{"title":"func setAudioSettings(AudioCodecSettings) throws","path":"\/documentation\/srthaishinkit\/srtstream\/setaudiosettings(_:)","type":"method"},{"title":"func setBitRateStrategy((some StreamBitRateStrategy)?)","path":"\/documentation\/srthaishinkit\/srtstream\/setbitratestrategy(_:)","type":"method"},{"title":"func setSoundTransform(SoundTransform) async","path":"\/documentation\/srthaishinkit\/srtstream\/setsoundtransform(_:)","type":"method"},{"title":"func setVideoInputBufferCounts(Int)","path":"\/documentation\/srthaishinkit\/srtstream\/setvideoinputbuffercounts(_:)","type":"method"},{"title":"func setVideoSettings(VideoCodecSettings) throws","path":"\/documentation\/srthaishinkit\/srtstream\/setvideosettings(_:)","type":"method"}],"type":"symbol"}],"type":"class","path":"\/documentation\/srthaishinkit\/srtstream"},{"type":"groupMarker","title":"Structures"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"let byteAvailRcvBuf: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/byteavailrcvbuf","type":"property"},{"title":"let byteAvailSndBuf: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/byteavailsndbuf","type":"property"},{"title":"let byteMSS: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytemss","type":"property"},{"title":"let byteRcvBuf: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytercvbuf","type":"property"},{"title":"let byteRcvDrop: UInt64","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytercvdrop","type":"property"},{"title":"let byteRcvDropTotal: UInt64","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytercvdroptotal","type":"property"},{"title":"let byteRcvLoss: UInt64","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytercvloss","type":"property"},{"title":"let byteRcvLossTotal: UInt64","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytercvlosstotal","type":"property"},{"title":"let byteRcvUndecrypt: UInt64","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytercvundecrypt","type":"property"},{"title":"let byteRcvUndecryptTotal: UInt64","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytercvundecrypttotal","type":"property"},{"title":"let byteRecv: UInt64","path":"\/documentation\/srthaishinkit\/srtperformancedata\/byterecv","type":"property"},{"title":"let byteRecvTotal: UInt64","path":"\/documentation\/srthaishinkit\/srtperformancedata\/byterecvtotal","type":"property"},{"title":"let byteRetrans: UInt64","path":"\/documentation\/srthaishinkit\/srtperformancedata\/byteretrans","type":"property"},{"title":"let byteRetransTotal: UInt64","path":"\/documentation\/srthaishinkit\/srtperformancedata\/byteretranstotal","type":"property"},{"title":"let byteSent: UInt64","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytesent","type":"property"},{"title":"let byteSentTotal: UInt64","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytesenttotal","type":"property"},{"title":"let byteSndBuf: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytesndbuf","type":"property"},{"title":"let byteSndDrop: UInt64","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytesnddrop","type":"property"},{"title":"let byteSndDropTotal: UInt64","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytesnddroptotal","type":"property"},{"title":"let mbpsBandwidth: Double","path":"\/documentation\/srthaishinkit\/srtperformancedata\/mbpsbandwidth","type":"property"},{"title":"let mbpsMaxBW: Double","path":"\/documentation\/srthaishinkit\/srtperformancedata\/mbpsmaxbw","type":"property"},{"title":"let mbpsRecvRate: Double","path":"\/documentation\/srthaishinkit\/srtperformancedata\/mbpsrecvrate","type":"property"},{"title":"let mbpsSendRate: Double","path":"\/documentation\/srthaishinkit\/srtperformancedata\/mbpssendrate","type":"property"},{"title":"let msRTT: Double","path":"\/documentation\/srthaishinkit\/srtperformancedata\/msrtt","type":"property"},{"title":"let msRcvBuf: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/msrcvbuf","type":"property"},{"title":"let msRcvTsbPdDelay: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/msrcvtsbpddelay","type":"property"},{"title":"let msSndBuf: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/mssndbuf","type":"property"},{"title":"let msSndTsbPdDelay: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/mssndtsbpddelay","type":"property"},{"title":"let msTimeStamp: Int64","path":"\/documentation\/srthaishinkit\/srtperformancedata\/mstimestamp","type":"property"},{"title":"let pktCongestionWindow: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktcongestionwindow","type":"property"},{"title":"let pktFlightSize: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktflightsize","type":"property"},{"title":"let pktFlowWindow: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktflowwindow","type":"property"},{"title":"let pktRcvAvgBelatedTime: Double","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvavgbelatedtime","type":"property"},{"title":"let pktRcvBelated: Int64","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvbelated","type":"property"},{"title":"let pktRcvBuf: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvbuf","type":"property"},{"title":"let pktRcvDrop: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvdrop","type":"property"},{"title":"let pktRcvDropTotal: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvdroptotal","type":"property"},{"title":"let pktRcvFilterExtra: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvfilterextra","type":"property"},{"title":"let pktRcvFilterExtraTotal: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvfilterextratotal","type":"property"},{"title":"let pktRcvFilterLoss: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvfilterloss","type":"property"},{"title":"let pktRcvFilterLossTotal: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvfilterlosstotal","type":"property"},{"title":"let pktRcvFilterSupply: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvfiltersupply","type":"property"},{"title":"let pktRcvFilterSupplyTotal: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvfiltersupplytotal","type":"property"},{"title":"let pktRcvLoss: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvloss","type":"property"},{"title":"let pktRcvLossTotal: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvlosstotal","type":"property"},{"title":"let pktRcvRetrans: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvretrans","type":"property"},{"title":"let pktRcvUndecrypt: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvundecrypt","type":"property"},{"title":"let pktRcvUndecryptTotal: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvundecrypttotal","type":"property"},{"title":"let pktRecv: Int64","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrecv","type":"property"},{"title":"let pktRecvACK: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrecvack","type":"property"},{"title":"let pktRecvACKTotal: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrecvacktotal","type":"property"},{"title":"let pktRecvNAK: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrecvnak","type":"property"},{"title":"let pktRecvNAKTotal: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrecvnaktotal","type":"property"},{"title":"let pktRecvTotal: Int64","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrecvtotal","type":"property"},{"title":"let pktReorderDistance: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktreorderdistance","type":"property"},{"title":"let pktReorderTolerance: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktreordertolerance","type":"property"},{"title":"let pktRetrans: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktretrans","type":"property"},{"title":"let pktRetransTotal: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktretranstotal","type":"property"},{"title":"let pktSent: Int64","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsent","type":"property"},{"title":"let pktSentACK: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsentack","type":"property"},{"title":"let pktSentACKTotal: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsentacktotal","type":"property"},{"title":"let pktSentNAK: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsentnak","type":"property"},{"title":"let pktSentNAKTotal: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsentnaktotal","type":"property"},{"title":"let pktSentTotal: Int64","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsenttotal","type":"property"},{"title":"let pktSndBuf: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsndbuf","type":"property"},{"title":"let pktSndDrop: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsnddrop","type":"property"},{"title":"let pktSndDropTotal: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsnddroptotal","type":"property"},{"title":"let pktSndFilterExtra: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsndfilterextra","type":"property"},{"title":"let pktSndFilterExtraTotal: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsndfilterextratotal","type":"property"},{"title":"let pktSndLoss: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsndloss","type":"property"},{"title":"let pktSndLossTotal: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsndlosstotal","type":"property"},{"title":"let usPktSndPeriod: Double","path":"\/documentation\/srthaishinkit\/srtperformancedata\/uspktsndperiod","type":"property"},{"title":"let usSndDuration: Int64","path":"\/documentation\/srthaishinkit\/srtperformancedata\/ussndduration","type":"property"},{"title":"let usSndDurationTotal: Int64","path":"\/documentation\/srthaishinkit\/srtperformancedata\/ussnddurationtotal","type":"property"}],"type":"struct","path":"\/documentation\/srthaishinkit\/srtperformancedata","title":"SRTPerformanceData"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/srthaishinkit\/srtsessionfactory\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/srthaishinkit\/srtsessionfactory\/supportedprotocols","title":"let supportedProtocols: Set<String>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/srthaishinkit\/srtsessionfactory\/make(_:method:)","title":"func make(URL, method: SessionMethod) -> any Session","type":"method"}],"type":"struct","path":"\/documentation\/srthaishinkit\/srtsessionfactory","title":"SRTSessionFactory"},{"children":[{"title":"Structures","type":"groupMarker"},{"title":"SRTSocketOption.Name","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(rawValue: String, symbol: SRT_SOCKOPT, restriction: SRTSocketOption.Restriction?, type: SRTSocketOption.CType)","type":"init","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/init(rawvalue:symbol:restriction:type:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let rawValue: String","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/rawvalue-swift.property"},{"title":"Type Aliases","type":"groupMarker"},{"title":"SRTSocketOption.Name.RawValue","type":"typealias","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/rawvalue-swift.typealias"},{"title":"Type Properties","type":"groupMarker"},{"title":"static let bindtodevice: SRTSocketOption.Name","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/bindtodevice"},{"title":"static let congestion: SRTSocketOption.Name","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/congestion"},{"title":"static let conntimeo: SRTSocketOption.Name","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/conntimeo"},{"title":"static let drifttracer: SRTSocketOption.Name","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/drifttracer"},{"title":"static let enforcedencryption: SRTSocketOption.Name","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/enforcedencryption"},{"title":"static let event: SRTSocketOption.Name","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/event"},{"title":"static let fc: SRTSocketOption.Name","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/fc"},{"title":"static let groupconnect: SRTSocketOption.Name","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/groupconnect"},{"title":"static let groupminstabletimeo: SRTSocketOption.Name","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/groupminstabletimeo"},{"title":"static let grouptype: SRTSocketOption.Name","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/grouptype"},{"title":"static let inputbw: SRTSocketOption.Name","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/inputbw"},{"title":"static let iptos: SRTSocketOption.Name","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/iptos"},{"title":"static let ipttl: SRTSocketOption.Name","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/ipttl"},{"title":"static let ipv6only: SRTSocketOption.Name","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/ipv6only"},{"title":"static let isn: SRTSocketOption.Name","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/isn"},{"title":"static let kmpreannounce: SRTSocketOption.Name","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/kmpreannounce"},{"title":"static let kmrefreshrate: SRTSocketOption.Name","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/kmrefreshrate"},{"title":"static let kmstate: SRTSocketOption.Name","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/kmstate"},{"title":"static let latency: SRTSocketOption.Name","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/latency"},{"title":"static let lossmaxttl: SRTSocketOption.Name","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/lossmaxttl"},{"title":"static let maxbw: SRTSocketOption.Name","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/maxbw"},{"title":"static let messageapi: SRTSocketOption.Name","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/messageapi"},{"title":"static let mininputbw: SRTSocketOption.Name","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/mininputbw"},{"title":"static let minversion: SRTSocketOption.Name","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/minversion"},{"title":"static let mss: SRTSocketOption.Name","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/mss"},{"title":"static let nakreport: SRTSocketOption.Name","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/nakreport"},{"title":"static let oheadbw: SRTSocketOption.Name","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/oheadbw"},{"title":"static let packetfilter: SRTSocketOption.Name","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/packetfilter"},{"title":"static let passphrase: SRTSocketOption.Name","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/passphrase"},{"title":"static let pbkeylen: SRTSocketOption.Name","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/pbkeylen"},{"title":"static let peeridletimeo: SRTSocketOption.Name","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/peeridletimeo"},{"title":"static let peerlatency: SRTSocketOption.Name","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/peerlatency"},{"title":"static let peerversion: SRTSocketOption.Name","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/peerversion"},{"title":"static let rcvbuf: SRTSocketOption.Name","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/rcvbuf"},{"title":"static let rcvdata: SRTSocketOption.Name","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/rcvdata"},{"title":"static let rcvlatency: SRTSocketOption.Name","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/rcvlatency"},{"title":"static let rcvsyn: SRTSocketOption.Name","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/rcvsyn"},{"title":"static let rcvtimeo: SRTSocketOption.Name","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/rcvtimeo"},{"title":"static let rendezvous: SRTSocketOption.Name","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/rendezvous"},{"title":"static let retransmitalgo: SRTSocketOption.Name","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/retransmitalgo"},{"title":"static let reuseaddr: SRTSocketOption.Name","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/reuseaddr"},{"title":"static let sender: SRTSocketOption.Name","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/sender"},{"title":"static let sndbuf: SRTSocketOption.Name","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/sndbuf"},{"title":"static let snddata: SRTSocketOption.Name","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/snddata"},{"title":"static let snddropdelay: SRTSocketOption.Name","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/snddropdelay"},{"title":"static let sndkmstate: SRTSocketOption.Name","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/sndkmstate"},{"title":"static let sndsyn: SRTSocketOption.Name","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/sndsyn"},{"title":"static let sndtimeo: SRTSocketOption.Name","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/sndtimeo"},{"title":"static let state: SRTSocketOption.Name","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/state"},{"title":"static let streamid: SRTSocketOption.Name","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/streamid"},{"title":"static let tlpktdrop: SRTSocketOption.Name","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/tlpktdrop"},{"title":"static let transtype: SRTSocketOption.Name","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/transtype"},{"title":"static let tsbpdmode: SRTSocketOption.Name","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/tsbpdmode"},{"title":"static let udpRcvbuf: SRTSocketOption.Name","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/udprcvbuf"},{"title":"static let udpSndbuf: SRTSocketOption.Name","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/udpsndbuf"},{"title":"static let version: SRTSocketOption.Name","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/version"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init?(rawValue: String)","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/init(rawvalue:)"}],"title":"RawRepresentable Implementations","type":"symbol","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/rawrepresentable-implementations"}],"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"title":"init(name: SRTSocketOption.Name, value: String) throws","path":"\/documentation\/srthaishinkit\/srtsocketoption\/init(name:value:)-3uyvp","type":"init"},{"title":"init(name: SRTSocketOption.Name, value: Int) throws","path":"\/documentation\/srthaishinkit\/srtsocketoption\/init(name:value:)-66kiu","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var boolValue: Bool","path":"\/documentation\/srthaishinkit\/srtsocketoption\/boolvalue","type":"property"},{"title":"var intValue: Int","path":"\/documentation\/srthaishinkit\/srtsocketoption\/intvalue","type":"property"},{"title":"let name: SRTSocketOption.Name","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.property","type":"property"},{"title":"var stringValue: String","path":"\/documentation\/srthaishinkit\/srtsocketoption\/stringvalue","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"title":"SRTSocketOption.CType","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","title":"case bool","path":"\/documentation\/srthaishinkit\/srtsocketoption\/ctype\/bool"},{"type":"case","title":"case int32","path":"\/documentation\/srthaishinkit\/srtsocketoption\/ctype\/int32"},{"type":"case","title":"case int64","path":"\/documentation\/srthaishinkit\/srtsocketoption\/ctype\/int64"},{"type":"case","title":"case string","path":"\/documentation\/srthaishinkit\/srtsocketoption\/ctype\/string"},{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init?(rawValue: Int)","path":"\/documentation\/srthaishinkit\/srtsocketoption\/ctype\/init(rawvalue:)"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","title":"Equatable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/srthaishinkit\/srtsocketoption\/ctype\/!=(_:_:)","type":"op"}],"path":"\/documentation\/srthaishinkit\/srtsocketoption\/ctype\/equatable-implementations"},{"type":"symbol","title":"RawRepresentable Implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/ctype\/hashvalue"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func hash(into: inout Hasher)","type":"method","path":"\/documentation\/srthaishinkit\/srtsocketoption\/ctype\/hash(into:)"}],"path":"\/documentation\/srthaishinkit\/srtsocketoption\/ctype\/rawrepresentable-implementations"}],"path":"\/documentation\/srthaishinkit\/srtsocketoption\/ctype","type":"enum"},{"title":"SRTSocketOption.Error","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","title":"case invalidArgument(String)","path":"\/documentation\/srthaishinkit\/srtsocketoption\/error\/invalidargument(_:)"},{"type":"case","title":"case invalidOption(String)","path":"\/documentation\/srthaishinkit\/srtsocketoption\/error\/invalidoption(_:)"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","title":"Error Implementations","path":"\/documentation\/srthaishinkit\/srtsocketoption\/error\/error-implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/error\/localizeddescription","title":"var localizedDescription: String","type":"property"}]}],"path":"\/documentation\/srthaishinkit\/srtsocketoption\/error","type":"enum"},{"title":"SRTSocketOption.Restriction","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","path":"\/documentation\/srthaishinkit\/srtsocketoption\/restriction\/post","title":"case post"},{"type":"case","path":"\/documentation\/srthaishinkit\/srtsocketoption\/restriction\/pre","title":"case pre"},{"type":"case","path":"\/documentation\/srthaishinkit\/srtsocketoption\/restriction\/prebind","title":"case preBind"},{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/srthaishinkit\/srtsocketoption\/restriction\/init(rawvalue:)","title":"init?(rawValue: Int)"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","path":"\/documentation\/srthaishinkit\/srtsocketoption\/restriction\/equatable-implementations","title":"Equatable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/srthaishinkit\/srtsocketoption\/restriction\/!=(_:_:)","type":"op"}]},{"type":"symbol","path":"\/documentation\/srthaishinkit\/srtsocketoption\/restriction\/rawrepresentable-implementations","title":"RawRepresentable Implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/restriction\/hashvalue","title":"var hashValue: Int"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/srthaishinkit\/srtsocketoption\/restriction\/hash(into:)","title":"func hash(into: inout Hasher)"}]}],"path":"\/documentation\/srthaishinkit\/srtsocketoption\/restriction","type":"enum"}],"type":"struct","path":"\/documentation\/srthaishinkit\/srtsocketoption","title":"SRTSocketOption"},{"type":"groupMarker","title":"Variables"},{"type":"var","path":"\/documentation\/srthaishinkit\/ksrthaishinkitidentifier","title":"let kSRTHaishinKitIdentifier: String"},{"type":"groupMarker","title":"Enumerations"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case apiCtrl","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/apictrl","type":"case"},{"title":"case apiRecv","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/apirecv","type":"case"},{"title":"case apiSend","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/apisend","type":"case"},{"title":"case applog","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/applog","type":"case"},{"title":"case bstats","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/bstats","type":"case"},{"title":"case bufRecv","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/bufrecv","type":"case"},{"title":"case bufSend","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/bufsend","type":"case"},{"title":"case chanRecv","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/chanrecv","type":"case"},{"title":"case chnMgmt","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/chnmgmt","type":"case"},{"title":"case chnSend","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/chnsend","type":"case"},{"title":"case congest","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/congest","type":"case"},{"title":"case control","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/control","type":"case"},{"title":"case data","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/data","type":"case"},{"title":"case epollApi","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/epollapi","type":"case"},{"title":"case epollUpd","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/epollupd","type":"case"},{"title":"case general","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/general","type":"case"},{"title":"case grpMgmt","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/grpmgmt","type":"case"},{"title":"case grpRecv","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/grprecv","type":"case"},{"title":"case grpSend","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/grpsend","type":"case"},{"title":"case haicrypt","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/haicrypt","type":"case"},{"title":"case `internal`","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/internal","type":"case"},{"title":"case pfilter","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/pfilter","type":"case"},{"title":"case queCtrl","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/quectrl","type":"case"},{"title":"case queMgmt","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/quemgmt","type":"case"},{"title":"case queRecv","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/querecv","type":"case"},{"title":"case queSend","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/quesend","type":"case"},{"title":"case rsrc","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/rsrc","type":"case"},{"title":"case tsbpd","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/tsbpd","type":"case"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: Int32)","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/init(rawvalue:)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}],"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/equatable-implementations","type":"symbol"},{"title":"RawRepresentable Implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var hashValue: Int","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/hashvalue"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func hash(into: inout Hasher)","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/hash(into:)"}],"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/rawrepresentable-implementations","type":"symbol"}],"type":"enum","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea","title":"SRTLogFunctionalArea"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/srthaishinkit\/srtloglevel\/crit","title":"case crit","type":"case"},{"path":"\/documentation\/srthaishinkit\/srtloglevel\/debug","title":"case debug","type":"case"},{"path":"\/documentation\/srthaishinkit\/srtloglevel\/error","title":"case error","type":"case"},{"path":"\/documentation\/srthaishinkit\/srtloglevel\/notice","title":"case notice","type":"case"},{"path":"\/documentation\/srthaishinkit\/srtloglevel\/warning","title":"case warning","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/srthaishinkit\/srtloglevel\/equatable-implementations","title":"Equatable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/srthaishinkit\/srtloglevel\/!=(_:_:)","type":"op"}],"type":"symbol"}],"type":"enum","path":"\/documentation\/srthaishinkit\/srtloglevel","title":"SRTLogLevel"},{"children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","path":"\/documentation\/srthaishinkit\/srtrejectreason\/backlog","title":"case backlog"},{"type":"case","path":"\/documentation\/srthaishinkit\/srtrejectreason\/badsecret","title":"case badsecret"},{"type":"case","path":"\/documentation\/srthaishinkit\/srtrejectreason\/close","title":"case close"},{"type":"case","path":"\/documentation\/srthaishinkit\/srtrejectreason\/congestion","title":"case congestion"},{"type":"case","path":"\/documentation\/srthaishinkit\/srtrejectreason\/crypto","title":"case crypto"},{"type":"case","path":"\/documentation\/srthaishinkit\/srtrejectreason\/filter","title":"case filter"},{"type":"case","path":"\/documentation\/srthaishinkit\/srtrejectreason\/group","title":"case group"},{"type":"case","path":"\/documentation\/srthaishinkit\/srtrejectreason\/ipe","title":"case ipe"},{"type":"case","path":"\/documentation\/srthaishinkit\/srtrejectreason\/messageapi","title":"case messageapi"},{"type":"case","path":"\/documentation\/srthaishinkit\/srtrejectreason\/peer","title":"case peer"},{"type":"case","path":"\/documentation\/srthaishinkit\/srtrejectreason\/rdvcookie","title":"case rdvcookie"},{"type":"case","path":"\/documentation\/srthaishinkit\/srtrejectreason\/resource","title":"case resource"},{"type":"case","path":"\/documentation\/srthaishinkit\/srtrejectreason\/rogue","title":"case rogue"},{"type":"case","path":"\/documentation\/srthaishinkit\/srtrejectreason\/system","title":"case system"},{"type":"case","path":"\/documentation\/srthaishinkit\/srtrejectreason\/timeout","title":"case timeout"},{"type":"case","path":"\/documentation\/srthaishinkit\/srtrejectreason\/unknown","title":"case unknown"},{"type":"case","path":"\/documentation\/srthaishinkit\/srtrejectreason\/unsecure","title":"case unsecure"},{"type":"case","path":"\/documentation\/srthaishinkit\/srtrejectreason\/version","title":"case version"},{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/srthaishinkit\/srtrejectreason\/init(rawvalue:)","title":"init?(rawValue: Int)"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/srthaishinkit\/srtrejectreason\/!=(_:_:)"}],"path":"\/documentation\/srthaishinkit\/srtrejectreason\/equatable-implementations","title":"Equatable Implementations"},{"type":"symbol","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var hashValue: Int","path":"\/documentation\/srthaishinkit\/srtrejectreason\/hashvalue"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func hash(into: inout Hasher)","path":"\/documentation\/srthaishinkit\/srtrejectreason\/hash(into:)"}],"path":"\/documentation\/srthaishinkit\/srtrejectreason\/rawrepresentable-implementations","title":"RawRepresentable Implementations"}],"type":"enum","path":"\/documentation\/srthaishinkit\/srtrejectreason","title":"SRTRejectReason"}],"path":"\/documentation\/srthaishinkit"},{"title":"MoQTHaishinKit","type":"module","path":"\/documentation\/moqthaishinkit","children":[{"title":"Classes","type":"groupMarker"},{"type":"class","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/init(_:requesttimeout:)","type":"init","title":"init(MoQTSetupRole, requestTimeOut: UInt64)"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/objectstream","type":"property","title":"var objectStream: AsyncStream<MoQTObject>"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/requesttimeout","type":"property","title":"let requestTimeout: UInt64"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/role","type":"property","title":"let role: MoQTSetupRole"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/annouce(_:authinfo:)","type":"method","title":"func annouce([String], authInfo: String?) async throws -> Result<MoQTAnnounceOk, MoQTAnnounceError>"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/close()","type":"method","title":"func close() async"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/connect(_:)","type":"method","title":"func connect(String) async throws -> MoQTServerSetup"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/send(_:header:)","type":"method","title":"func send([MoQTObject], header: MoQTStreamHeaderSubgroup) async throws"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/subscribe(_:name:authinfo:)","type":"method","title":"func subscribe([String], name: String, authInfo: String?) async throws -> Result<MoQTSubscribeOk, MoQTSubscribeError>"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/subscribeannouces(_:authinfo:)","type":"method","title":"func subscribeAnnouces([String], authInfo: String?) async throws -> Result<MoQTSubscribeAnnouncesOk, MoQTSubscribeAnnouncesError>"},{"type":"groupMarker","title":"Type Properties"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/defaultport","type":"property","title":"static let defaultPort: Int"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/defaultrequesttimeout","type":"property","title":"static let defaultRequestTimeout: UInt64"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/supportedprotocols","type":"property","title":"static let supportedProtocols: [String]"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/supportedversions","type":"property","title":"static let supportedVersions: [MoQTVersion]"},{"type":"groupMarker","title":"Enumerations"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/error","type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/error\/connectiontimedout","title":"case connectionTimedOut","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/error\/invalidstate","title":"case invalidState","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/error\/requesttimedout","title":"case requestTimedOut","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/error\/socketerroroccurred(_:)","title":"case socketErrorOccurred(any Error)","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/error\/unknownresponse","title":"case unknownResponse","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/error\/unsupportedcommand(_:)","title":"case unsupportedCommand(String)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/error\/error-implementations","title":"Error Implementations","type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var localizedDescription: String","path":"\/documentation\/moqthaishinkit\/moqtconnection\/error\/localizeddescription","type":"property"}]}],"title":"MoQTConnection.Error"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/actor-implementations","type":"symbol","children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/assertisolated(_:file:line:)","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/assumeisolated(_:file:line:)","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","type":"method"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/preconditionisolated(_:file:line:)","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method"}],"title":"Actor Implementations"}],"title":"MoQTConnection","path":"\/documentation\/moqthaishinkit\/moqtconnection"},{"title":"Protocols","type":"groupMarker"},{"type":"protocol","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtcontrolmessage\/payload","title":"var payload: Data"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtcontrolmessage\/type","title":"var type: MoQTMessageType"}],"title":"MoQTControlMessage","path":"\/documentation\/moqthaishinkit\/moqtcontrolmessage"},{"title":"Structures","type":"groupMarker"},{"type":"struct","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtannounce\/payload","title":"var payload: Data","type":"property"},{"path":"\/documentation\/moqthaishinkit\/moqtannounce\/subscribeparameters","title":"let subscribeParameters: [MoQTVersionSpecificParameter]","type":"property"},{"path":"\/documentation\/moqthaishinkit\/moqtannounce\/tracknamespace","title":"let trackNamespace: [String]","type":"property"},{"path":"\/documentation\/moqthaishinkit\/moqtannounce\/type","title":"let type: MoQTMessageType","type":"property"}],"title":"MoQTAnnounce","path":"\/documentation\/moqthaishinkit\/moqtannounce"},{"type":"struct","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"let code: Int","path":"\/documentation\/moqthaishinkit\/moqtannounceerror\/code","type":"property"},{"title":"var payload: Data","path":"\/documentation\/moqthaishinkit\/moqtannounceerror\/payload","type":"property"},{"title":"let reasonPhrase: String","path":"\/documentation\/moqthaishinkit\/moqtannounceerror\/reasonphrase","type":"property"},{"title":"let trackNamespace: [String]","path":"\/documentation\/moqthaishinkit\/moqtannounceerror\/tracknamespace","type":"property"},{"title":"let type: MoQTMessageType","path":"\/documentation\/moqthaishinkit\/moqtannounceerror\/type","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Error Implementations","path":"\/documentation\/moqthaishinkit\/moqtannounceerror\/error-implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var localizedDescription: String","path":"\/documentation\/moqthaishinkit\/moqtannounceerror\/localizeddescription","type":"property"}],"type":"symbol"}],"title":"MoQTAnnounceError","path":"\/documentation\/moqthaishinkit\/moqtannounceerror"},{"type":"struct","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtannounceok\/payload","title":"var payload: Data","type":"property"},{"path":"\/documentation\/moqthaishinkit\/moqtannounceok\/tracknamespace","title":"let trackNamespace: [String]","type":"property"},{"path":"\/documentation\/moqthaishinkit\/moqtannounceok\/type","title":"let type: MoQTMessageType","type":"property"}],"title":"MoQTAnnounceOk","path":"\/documentation\/moqthaishinkit\/moqtannounceok"},{"type":"struct","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"let newSessionURI: String","path":"\/documentation\/moqthaishinkit\/moqtgoaway\/newsessionuri","type":"property"},{"title":"var payload: Data","path":"\/documentation\/moqthaishinkit\/moqtgoaway\/payload","type":"property"},{"title":"let type: MoQTMessageType","path":"\/documentation\/moqthaishinkit\/moqtgoaway\/type","type":"property"}],"title":"MoQTGoaway","path":"\/documentation\/moqthaishinkit\/moqtgoaway"},{"type":"struct","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/moqthaishinkit\/moqtobject\/init(id:status:data:)","title":"init(id: Int, status: Int?, data: Data)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtobject\/data","title":"let data: Data"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtobject\/id","title":"let id: Int"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtobject\/status","title":"let status: Int?"}],"title":"MoQTObject","path":"\/documentation\/moqthaishinkit\/moqtobject"},{"type":"struct","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtserversetup\/payload","title":"var payload: Data","type":"property"},{"path":"\/documentation\/moqthaishinkit\/moqtserversetup\/selectedversion","title":"let selectedVersion: Int","type":"property"},{"path":"\/documentation\/moqthaishinkit\/moqtserversetup\/setupparameters","title":"let setupParameters: [MoQTSetupParameter]","type":"property"},{"path":"\/documentation\/moqthaishinkit\/moqtserversetup\/type","title":"let type: MoQTMessageType","type":"property"}],"title":"MoQTServerSetup","path":"\/documentation\/moqthaishinkit\/moqtserversetup"},{"title":"MoQTSetupParameter","path":"\/documentation\/moqthaishinkit\/moqtsetupparameter","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/moqthaishinkit\/moqtsetupparameter\/key","type":"property","title":"let key: MoQTSetupParameterType"},{"path":"\/documentation\/moqthaishinkit\/moqtsetupparameter\/value","type":"property","title":"let value: any Sendable"}],"type":"struct"},{"title":"MoQTStreamHeaderSubgroup","path":"\/documentation\/moqthaishinkit\/moqtstreamheadersubgroup","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/moqthaishinkit\/moqtstreamheadersubgroup\/init(trackalias:groupid:subgroupid:publisherpriority:)","title":"init(trackAlias: Int, groupId: Int, subgroupId: Int, publisherPriority: Int)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtstreamheadersubgroup\/groupid","title":"let groupId: Int"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtstreamheadersubgroup\/payload","title":"var payload: Data"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtstreamheadersubgroup\/publisherpriority","title":"let publisherPriority: Int"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtstreamheadersubgroup\/subgroupid","title":"let subgroupId: Int"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtstreamheadersubgroup\/trackalias","title":"let trackAlias: Int"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtstreamheadersubgroup\/type","title":"let type: MoQTDataStreamType"}],"type":"struct"},{"title":"MoQTSubscribe","path":"\/documentation\/moqthaishinkit\/moqtsubscribe","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"let endGroup: Int?","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/endgroup","type":"property"},{"title":"let endObject: Int?","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/endobject","type":"property"},{"title":"let filterType: MoQTSubscribe.FilterType","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.property","type":"property"},{"title":"let groupOrder: MoQTSubscribe.GroupOrder","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.property","type":"property"},{"title":"var payload: Data","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/payload","type":"property"},{"title":"let startGroup: Int?","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/startgroup","type":"property"},{"title":"let startObject: Int?","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/startobject","type":"property"},{"title":"let subscribeId: Int","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/subscribeid","type":"property"},{"title":"let subscribeParameters: [MoQTVersionSpecificParameter]","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/subscribeparameters","type":"property"},{"title":"let subscribePriority: Int","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/subscribepriority","type":"property"},{"title":"let trackAlias: Int","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/trackalias","type":"property"},{"title":"let trackName: String","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/trackname","type":"property"},{"title":"let trackNamespace: [String]","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/tracknamespace","type":"property"},{"title":"let type: MoQTMessageType","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/type","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"title":"MoQTSubscribe.FilterType","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum","type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/absoluterange","title":"case absoluteRange"},{"type":"case","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/absolutestart","title":"case absoluteStart"},{"type":"case","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/latestgroup","title":"case latestGroup"},{"type":"case","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/latestobject","title":"case latestObject"},{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/init(rawvalue:)","title":"init?(rawValue: Int)"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"type":"symbol","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/equatable-implementations","title":"Equatable Implementations"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"type":"symbol","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations"}]},{"title":"MoQTSubscribe.GroupOrder","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum","type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/ascending","title":"case ascending","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/descending","title":"case descending","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/original","title":"case original","type":"case"},{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/!=(_:_:)"}],"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/hashvalue","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func hash(into: inout Hasher)","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/hash(into:)","type":"method"}],"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}]}],"type":"struct"},{"title":"MoQTSubscribeAnnounces","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounces","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounces\/parameters","title":"let parameters: [MoQTVersionSpecificParameter]"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounces\/payload","title":"var payload: Data"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounces\/tracknamespaceprefix","title":"let trackNamespacePrefix: [String]"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounces\/type","title":"let type: MoQTMessageType"}],"type":"struct"},{"title":"MoQTSubscribeAnnouncesError","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounceserror","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounceserror\/errorcode","type":"property","title":"let errorCode: Int"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounceserror\/payload","type":"property","title":"var payload: Data"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounceserror\/reasonphrase","type":"property","title":"let reasonPhrase: String"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounceserror\/tracknamespaceprefix","type":"property","title":"let trackNamespacePrefix: [String]"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounceserror\/type","type":"property","title":"let type: MoQTMessageType"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounceserror\/error-implementations","type":"symbol","title":"Error Implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounceserror\/localizeddescription","type":"property","title":"var localizedDescription: String"}]}],"type":"struct"},{"title":"MoQTSubscribeAnnouncesOk","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannouncesok","children":[{"title":"Instance Properties","type":"groupMarker"},{"type":"property","title":"var payload: Data","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannouncesok\/payload"},{"type":"property","title":"let trackNamespacePrefix: [String]","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannouncesok\/tracknamespaceprefix"},{"type":"property","title":"let type: MoQTMessageType","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannouncesok\/type"}],"type":"struct"},{"title":"MoQTSubscribeError","path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"let code: Int","path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror\/code"},{"type":"property","title":"var payload: Data","path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror\/payload"},{"type":"property","title":"let reasonPhrase: String","path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror\/reasonphrase"},{"type":"property","title":"let subscribeId: Int","path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror\/subscribeid"},{"type":"property","title":"let trackAlias: Int","path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror\/trackalias"},{"type":"property","title":"let type: MoQTMessageType","path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror\/type"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","title":"Error Implementations","path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror\/error-implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var localizedDescription: String","path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror\/localizeddescription","type":"property"}]}],"type":"struct"},{"title":"MoQTSubscribeOk","path":"\/documentation\/moqthaishinkit\/moqtsubscribeok","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"let contentExists: Bool","path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/contentexists"},{"type":"property","title":"let expires: Int","path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/expires"},{"type":"property","title":"let groupOrder: MoQTSubscribe.GroupOrder","path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/grouporder"},{"type":"property","title":"let largestGroupId: Int?","path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/largestgroupid"},{"type":"property","title":"let largestObjectId: Int?","path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/largestobjectid"},{"type":"property","title":"var payload: Data","path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/payload"},{"type":"property","title":"let subscribeId: Int","path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/subscribeid"},{"type":"property","title":"let subscribeParameters: [MoQTVersionSpecificParameter]","path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/subscribeparameters"},{"type":"property","title":"let type: MoQTMessageType","path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/type"}],"type":"struct"},{"title":"MoQTVersionSpecificParameter","path":"\/documentation\/moqthaishinkit\/moqtversionspecificparameter","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"let key: MoQTVersionSpecificType","path":"\/documentation\/moqthaishinkit\/moqtversionspecificparameter\/key"},{"type":"property","title":"let value: any Sendable","path":"\/documentation\/moqthaishinkit\/moqtversionspecificparameter\/value"}],"type":"struct"},{"title":"Enumerations","type":"groupMarker"},{"title":"MoQTDataStreamType","path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"type":"case","title":"case fetchHeader","path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/fetchheader"},{"type":"case","title":"case objectDatagram","path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/objectdatagram"},{"type":"case","title":"case streamHeaderSubgroup","path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/streamheadersubgroup"},{"title":"Initializers","type":"groupMarker"},{"type":"init","title":"init?(rawValue: Int)","path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/init(rawvalue:)"},{"title":"Default Implementations","type":"groupMarker"},{"type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"title":"Equatable Implementations","path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/equatable-implementations"},{"type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/hashvalue","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func hash(into: inout Hasher)","path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/hash(into:)","type":"method"}],"title":"RawRepresentable Implementations","path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/rawrepresentable-implementations"}],"type":"enum"},{"title":"MoQTMessageType","path":"\/documentation\/moqthaishinkit\/moqtmessagetype","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case announce","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/announce","type":"case"},{"title":"case announceCancel","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/announcecancel","type":"case"},{"title":"case announceError","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/announceerror","type":"case"},{"title":"case announceOk","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/announceok","type":"case"},{"title":"case clientSetup","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/clientsetup","type":"case"},{"title":"case goaway","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/goaway","type":"case"},{"title":"case serverSetup","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/serversetup","type":"case"},{"title":"case subscribe","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/subscribe","type":"case"},{"title":"case subscribeAnnounuces","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/subscribeannounuces","type":"case"},{"title":"case subscribeAnnounucesError","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/subscribeannounuceserror","type":"case"},{"title":"case subscribeAnnounucesOk","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/subscribeannounucesok","type":"case"},{"title":"case subscribeDone","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/subscribedone","type":"case"},{"title":"case subscribeError","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/subscribeerror","type":"case"},{"title":"case subscribeOk","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/subscribeok","type":"case"},{"title":"case subscribeUpdate","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/subscribeupdate","type":"case"},{"title":"case trackStatus","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/trackstatus","type":"case"},{"title":"case trackStatusRequest","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/trackstatusrequest","type":"case"},{"title":"case unannounce","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/unannounce","type":"case"},{"title":"case unsubscribe","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/unsubscribe","type":"case"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: Int)","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/init(rawvalue:)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/equatable-implementations","type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/!=(_:_:)","type":"op"}]},{"title":"RawRepresentable Implementations","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/rawrepresentable-implementations","type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/hashvalue","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func hash(into: inout Hasher)","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/hash(into:)","type":"method"}]}],"type":"enum"},{"title":"MoQTSetupParameterType","path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case maxSubscribeId","path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/maxsubscribeid","type":"case"},{"title":"case path","path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/path","type":"case"},{"title":"case role","path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/role","type":"case"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: Int)","path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/init(rawvalue:)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/!=(_:_:)"}],"path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/equatable-implementations","type":"symbol"},{"title":"RawRepresentable Implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/hashvalue","title":"var hashValue: Int"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/hash(into:)","title":"func hash(into: inout Hasher)"}],"path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/rawrepresentable-implementations","type":"symbol"}],"type":"enum"},{"title":"MoQTSetupRole","path":"\/documentation\/moqthaishinkit\/moqtsetuprole","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case pubSub","path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/pubsub","type":"case"},{"title":"case publisher","path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/publisher","type":"case"},{"title":"case subscriber","path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/subscriber","type":"case"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: Int)","path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/init(rawvalue:)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/equatable-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"}]},{"title":"RawRepresentable Implementations","path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/rawrepresentable-implementations","type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"type":"property","title":"var hashValue: Int","path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/hashvalue"},{"title":"Instance Methods","type":"groupMarker"},{"type":"method","title":"func hash(into: inout Hasher)","path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/hash(into:)"}]}],"type":"enum"},{"title":"MoQTVersion","path":"\/documentation\/moqthaishinkit\/moqtversion","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/moqthaishinkit\/moqtversion\/draft01","type":"case","title":"case draft01"},{"path":"\/documentation\/moqthaishinkit\/moqtversion\/draft02","type":"case","title":"case draft02"},{"path":"\/documentation\/moqthaishinkit\/moqtversion\/draft03","type":"case","title":"case draft03"},{"path":"\/documentation\/moqthaishinkit\/moqtversion\/draft04","type":"case","title":"case draft04"},{"path":"\/documentation\/moqthaishinkit\/moqtversion\/draft05","type":"case","title":"case draft05"},{"path":"\/documentation\/moqthaishinkit\/moqtversion\/draft06","type":"case","title":"case draft06"},{"path":"\/documentation\/moqthaishinkit\/moqtversion\/draft07","type":"case","title":"case draft07"},{"path":"\/documentation\/moqthaishinkit\/moqtversion\/draft07exp","type":"case","title":"case draft07Exp"},{"path":"\/documentation\/moqthaishinkit\/moqtversion\/draft07exp2","type":"case","title":"case draft07Exp2"},{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/moqthaishinkit\/moqtversion\/init(rawvalue:)","type":"init","title":"init?(rawValue: Int)"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/moqthaishinkit\/moqtversion\/equatable-implementations","type":"symbol","title":"Equatable Implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/moqthaishinkit\/moqtversion\/!=(_:_:)"}]},{"path":"\/documentation\/moqthaishinkit\/moqtversion\/rawrepresentable-implementations","type":"symbol","title":"RawRepresentable Implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/moqthaishinkit\/moqtversion\/hashvalue","type":"property","title":"var hashValue: Int"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/moqthaishinkit\/moqtversion\/hash(into:)","type":"method","title":"func hash(into: inout Hasher)"}]}],"type":"enum"},{"title":"MoQTVersionSpecificType","path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case authorizationInfo","type":"case","path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/authorizationinfo"},{"title":"case deliveryTimeout","type":"case","path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/deliverytimeout"},{"title":"case maxCacheDuration","type":"case","path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/maxcacheduration"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: Int)","type":"init","path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/init(rawvalue:)"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","type":"symbol","path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}]},{"title":"RawRepresentable Implementations","type":"symbol","path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/rawrepresentable-implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var hashValue: Int","path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/hashvalue"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func hash(into: inout Hasher)","path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/hash(into:)"}]}],"type":"enum"}]}],"title":"HaishinKit","path":"\/documentation"}]},"includedArchiveIdentifiers":["Logboard","HaishinKit","RTMPHaishinKit","SRTHaishinKit","MoQTHaishinKit"],"schemaVersion":{"patch":2,"minor":1,"major":0}}