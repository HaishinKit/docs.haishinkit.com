{"schemaVersion":{"major":0,"minor":1,"patch":2},"interfaceLanguages":{"swift":[{"children":[{"title":"Classes","type":"groupMarker"},{"title":"ConsoleAppender","type":"class","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init()","path":"\/documentation\/logboard\/consoleappender\/init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"type":"method","title":"func append(LBLogger, level: LBLogger.Level, format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/consoleappender\/append(_:level:format:arguments:file:function:line:)"},{"path":"\/documentation\/logboard\/consoleappender\/append(_:level:message:file:function:line:)","type":"method","title":"func append(LBLogger, level: LBLogger.Level, message: [Any], file: StaticString, function: StaticString, line: Int)"}],"path":"\/documentation\/logboard\/consoleappender"},{"title":"LBLogger","path":"\/documentation\/logboard\/lblogger","children":[{"type":"groupMarker","title":"Structures"},{"path":"\/documentation\/logboard\/lblogger\/data","children":[{"type":"groupMarker","title":"Initializers"},{"title":"init?(Data)","type":"init","path":"\/documentation\/logboard\/lblogger\/data\/init(_:)"},{"title":"Instance Properties","type":"groupMarker"},{"type":"property","path":"\/documentation\/logboard\/lblogger\/data\/date","title":"let date: Date"},{"path":"\/documentation\/logboard\/lblogger\/data\/file","title":"let file: String","type":"property"},{"title":"let function: String","path":"\/documentation\/logboard\/lblogger\/data\/function","type":"property"},{"type":"property","title":"let identifier: String","path":"\/documentation\/logboard\/lblogger\/data\/identifier"},{"path":"\/documentation\/logboard\/lblogger\/data\/level","title":"let level: LBLogger.Level","type":"property"},{"title":"let line: Int","path":"\/documentation\/logboard\/lblogger\/data\/line","type":"property"},{"title":"let message: String","type":"property","path":"\/documentation\/logboard\/lblogger\/data\/message"},{"title":"Default Implementations","type":"groupMarker"},{"title":"CustomStringConvertible Implementations","path":"\/documentation\/logboard\/lblogger\/data\/customstringconvertible-implementations","type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/logboard\/lblogger\/data\/description","title":"var description: String","type":"property"}]}],"title":"LBLogger.Data","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"title":"init(String)","path":"\/documentation\/logboard\/lblogger\/init(_:)","type":"init"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var appender: any LBLoggerAppender","path":"\/documentation\/logboard\/lblogger\/appender"},{"title":"let identifier: String","type":"property","path":"\/documentation\/logboard\/lblogger\/identifier"},{"path":"\/documentation\/logboard\/lblogger\/level-swift.property","type":"property","title":"var level: LBLogger.Level"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func debug(Any..., file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/lblogger\/debug(_:file:function:line:)","type":"method"},{"title":"func debug(format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)","type":"method","path":"\/documentation\/logboard\/lblogger\/debug(format:arguments:file:function:line:)"},{"title":"func error(Any..., file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/lblogger\/error(_:file:function:line:)","type":"method"},{"type":"method","path":"\/documentation\/logboard\/lblogger\/error(format:arguments:file:function:line:)","title":"func error(format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)"},{"path":"\/documentation\/logboard\/lblogger\/info(_:file:function:line:)","type":"method","title":"func info(Any..., file: StaticString, function: StaticString, line: Int)"},{"path":"\/documentation\/logboard\/lblogger\/info(format:arguments:file:function:line:)","type":"method","title":"func info(format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)"},{"title":"func isEnabledFor(level: LBLogger.Level) -> Bool","type":"method","path":"\/documentation\/logboard\/lblogger\/isenabledfor(level:)"},{"path":"\/documentation\/logboard\/lblogger\/trace(_:file:function:line:)","type":"method","title":"func trace(Any..., file: StaticString, function: StaticString, line: Int)"},{"title":"func trace(format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)","type":"method","path":"\/documentation\/logboard\/lblogger\/trace(format:arguments:file:function:line:)"},{"path":"\/documentation\/logboard\/lblogger\/warn(_:file:function:line:)","type":"method","title":"func warn(Any..., file: StaticString, function: StaticString, line: Int)"},{"type":"method","title":"func warn(format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/lblogger\/warn(format:arguments:file:function:line:)"},{"type":"groupMarker","title":"Type Properties"},{"path":"\/documentation\/logboard\/lblogger\/dateformatter","type":"property","title":"static var dateFormatter: DateFormatter"},{"title":"Type Methods","type":"groupMarker"},{"title":"static func with(String) -> LBLogger","type":"method","path":"\/documentation\/logboard\/lblogger\/with(_:)"},{"title":"Enumerations","type":"groupMarker"},{"title":"LBLogger.Level","path":"\/documentation\/logboard\/lblogger\/level-swift.enum","type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/debug","title":"case debug","type":"case"},{"path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/error","title":"case error","type":"case"},{"type":"case","path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/info","title":"case info"},{"path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/trace","type":"case","title":"case trace"},{"type":"case","title":"case warn","path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/warn"},{"type":"groupMarker","title":"Initializers"},{"title":"init?(rawValue: Int)","path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/init(rawvalue:)","type":"init"},{"title":"init?(string: String)","path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/init(string:)","type":"init"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/description","title":"var description: String"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/!=(_:_:)","type":"op"}],"path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/equatable-implementations","type":"symbol","title":"Equatable Implementations"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"title":"var hashValue: Int","path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/hashvalue","type":"property"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func hash(into: inout Hasher)","path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/hash(into:)"}],"type":"symbol","path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations"}]}],"type":"class"},{"path":"\/documentation\/logboard\/multiappender","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/logboard\/multiappender\/init()","type":"init","title":"init()"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/logboard\/multiappender\/appenders","title":"var appenders: [any LBLoggerAppender]"},{"title":"Instance Methods","type":"groupMarker"},{"type":"method","title":"func append(LBLogger, level: LBLogger.Level, format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/multiappender\/append(_:level:format:arguments:file:function:line:)"},{"type":"method","title":"func append(LBLogger, level: LBLogger.Level, message: [Any], file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/multiappender\/append(_:level:message:file:function:line:)"}],"title":"MultiAppender","type":"class"},{"path":"\/documentation\/logboard\/nullappender","type":"class","title":"NullAppender","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func append(LBLogger, level: LBLogger.Level, format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/nullappender\/append(_:level:format:arguments:file:function:line:)","type":"method"},{"title":"func append(LBLogger, level: LBLogger.Level, message: [Any], file: StaticString, function: StaticString, line: Int)","type":"method","path":"\/documentation\/logboard\/nullappender\/append(_:level:message:file:function:line:)"},{"title":"Type Properties","type":"groupMarker"},{"title":"static let shared: NullAppender","type":"property","path":"\/documentation\/logboard\/nullappender\/shared"}]},{"title":"OSLoggerAppender","path":"\/documentation\/logboard\/osloggerappender","children":[{"type":"groupMarker","title":"Initializers"},{"title":"init(sybsystem: String, category: String)","type":"init","path":"\/documentation\/logboard\/osloggerappender\/init(sybsystem:category:)"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func append(LBLogger, level: LBLogger.Level, format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/osloggerappender\/append(_:level:format:arguments:file:function:line:)","type":"method"},{"path":"\/documentation\/logboard\/osloggerappender\/append(_:level:message:file:function:line:)","title":"func append(LBLogger, level: LBLogger.Level, message: [Any], file: StaticString, function: StaticString, line: Int)","type":"method"}],"type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"type":"init","title":"init()","path":"\/documentation\/logboard\/socketappender\/init()"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/logboard\/socketappender\/append(_:level:format:arguments:file:function:line:)","title":"func append(LBLogger, level: LBLogger.Level, format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)"},{"type":"method","path":"\/documentation\/logboard\/socketappender\/append(_:level:message:file:function:line:)","title":"func append(LBLogger, level: LBLogger.Level, message: [Any], file: StaticString, function: StaticString, line: Int)"},{"path":"\/documentation\/logboard\/socketappender\/close()","title":"func close()","type":"method"},{"path":"\/documentation\/logboard\/socketappender\/connect(_:port:)","title":"func connect(String, port: Int)","type":"method"}],"title":"SocketAppender","path":"\/documentation\/logboard\/socketappender","type":"class"},{"type":"groupMarker","title":"Protocols"},{"children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func append(LBLogger, level: LBLogger.Level, format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/lbloggerappender\/append(_:level:format:arguments:file:function:line:)"},{"path":"\/documentation\/logboard\/lbloggerappender\/append(_:level:message:file:function:line:)","type":"method","title":"func append(LBLogger, level: LBLogger.Level, message: [Any], file: StaticString, function: StaticString, line: Int)"}],"path":"\/documentation\/logboard\/lbloggerappender","title":"LBLoggerAppender","type":"protocol"}],"path":"\/documentation\/logboard","type":"module","title":"Logboard"},{"children":[{"title":"Articles","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/e-rtmp","type":"article","title":"Enhanced RTMP"},{"title":"Classes","type":"groupMarker"},{"type":"class","path":"\/documentation\/haishinkit\/assetscreenobject","title":"AssetScreenObject","children":[{"title":"Instance Properties","type":"groupMarker"},{"type":"property","path":"\/documentation\/haishinkit\/assetscreenobject\/chromakeycolor","title":"var chromaKeyColor: CGColor?"},{"path":"\/documentation\/haishinkit\/assetscreenobject\/isreading","type":"property","title":"var isReading: Bool"},{"title":"var videoGravity: AVLayerVideoGravity","type":"property","path":"\/documentation\/haishinkit\/assetscreenobject\/videogravity"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/assetscreenobject\/cancelreading()","title":"func cancelReading()","type":"method"},{"type":"method","path":"\/documentation\/haishinkit\/assetscreenobject\/makebounds(_:)","title":"func makeBounds(CGSize) -> CGRect"},{"path":"\/documentation\/haishinkit\/assetscreenobject\/makeimage(_:)","title":"func makeImage(some ScreenRenderer) -> CGImage?","type":"method"},{"title":"func startReading(AVAsset) throws","path":"\/documentation\/haishinkit\/assetscreenobject\/startreading(_:)","type":"method"}]},{"path":"\/documentation\/haishinkit\/audiodeviceunit","type":"class","children":[{"title":"Instance Properties","type":"groupMarker"},{"type":"property","title":"var connection: AVCaptureConnection?","path":"\/documentation\/haishinkit\/audiodeviceunit\/connection"},{"path":"\/documentation\/haishinkit\/audiodeviceunit\/device","type":"property","title":"var device: AVCaptureDevice?"},{"type":"property","path":"\/documentation\/haishinkit\/audiodeviceunit\/input","title":"var input: AVCaptureInput?"},{"type":"property","title":"var output: AudioDeviceUnit.Output?","path":"\/documentation\/haishinkit\/audiodeviceunit\/output-swift.property"},{"type":"property","title":"let track: UInt8","path":"\/documentation\/haishinkit\/audiodeviceunit\/track"},{"type":"groupMarker","title":"Type Aliases"},{"path":"\/documentation\/haishinkit\/audiodeviceunit\/output-swift.typealias","type":"typealias","title":"AudioDeviceUnit.Output"}],"title":"AudioDeviceUnit"},{"type":"class","children":[{"type":"groupMarker","title":"Initializers"},{"title":"init(audioEngine: AVAudioEngine)","path":"\/documentation\/haishinkit\/audioplayer\/init(audioengine:)","type":"init"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","title":"Actor Implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/audioplayer\/assertisolated(_:file:line:)","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method"},{"title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","path":"\/documentation\/haishinkit\/audioplayer\/assumeisolated(_:file:line:)","type":"method"},{"path":"\/documentation\/haishinkit\/audioplayer\/preconditionisolated(_:file:line:)","type":"method","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)"}],"path":"\/documentation\/haishinkit\/audioplayer\/actor-implementations"}],"path":"\/documentation\/haishinkit\/audioplayer","title":"AudioPlayer"},{"type":"class","path":"\/documentation\/haishinkit\/hkincomingstream","title":"HKIncomingStream","children":[{"type":"groupMarker","title":"Initializers"},{"title":"init(some HKStream)","type":"init","path":"\/documentation\/haishinkit\/hkincomingstream\/init(_:)"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/hkincomingstream\/isrunning","type":"property","title":"var isRunning: Bool"},{"title":"var soundTransfrom: SoundTransform?","path":"\/documentation\/haishinkit\/hkincomingstream\/soundtransfrom","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"type":"method","title":"func append(CMSampleBuffer)","path":"\/documentation\/haishinkit\/hkincomingstream\/append(_:)"},{"title":"func append(AVAudioBuffer, when: AVAudioTime)","path":"\/documentation\/haishinkit\/hkincomingstream\/append(_:when:)","type":"method"},{"title":"func attachAudioPlayer(AudioPlayer?) async","path":"\/documentation\/haishinkit\/hkincomingstream\/attachaudioplayer(_:)","type":"method"},{"type":"method","path":"\/documentation\/haishinkit\/hkincomingstream\/setsoundtransform(_:)","title":"func setSoundTransform(SoundTransform) async"},{"type":"groupMarker","title":"Default Implementations"},{"title":"Actor Implementations","path":"\/documentation\/haishinkit\/hkincomingstream\/actor-implementations","type":"symbol","children":[{"title":"Instance Methods","type":"groupMarker"},{"type":"method","path":"\/documentation\/haishinkit\/hkincomingstream\/assertisolated(_:file:line:)","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)"},{"title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","path":"\/documentation\/haishinkit\/hkincomingstream\/assumeisolated(_:file:line:)","type":"method"},{"path":"\/documentation\/haishinkit\/hkincomingstream\/preconditionisolated(_:file:line:)","type":"method","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)"}]},{"type":"symbol","path":"\/documentation\/haishinkit\/hkincomingstream\/asyncrunner-implementations","title":"AsyncRunner Implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func startRunning()","path":"\/documentation\/haishinkit\/hkincomingstream\/startrunning()","type":"method"},{"path":"\/documentation\/haishinkit\/hkincomingstream\/stoprunning()","type":"method","title":"func stopRunning()"}]}]},{"path":"\/documentation\/haishinkit\/hkoutgoingstream","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/haishinkit\/hkoutgoingstream\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var audioInputFormat: CMFormatDescription?","path":"\/documentation\/haishinkit\/hkoutgoingstream\/audioinputformat","type":"property"},{"type":"property","path":"\/documentation\/haishinkit\/hkoutgoingstream\/audiooutputstream","title":"var audioOutputStream: AsyncStream<(AVAudioBuffer, AVAudioTime)>"},{"path":"\/documentation\/haishinkit\/hkoutgoingstream\/audiosettings","type":"property","title":"var audioSettings: AudioCodecSettings"},{"type":"property","title":"var isRunning: Bool","path":"\/documentation\/haishinkit\/hkoutgoingstream\/isrunning"},{"title":"var videoInputBufferCounts: Int","path":"\/documentation\/haishinkit\/hkoutgoingstream\/videoinputbuffercounts","type":"property"},{"title":"var videoInputFormat: CMFormatDescription?","path":"\/documentation\/haishinkit\/hkoutgoingstream\/videoinputformat","type":"property"},{"title":"var videoInputStream: AsyncStream<CMSampleBuffer>","path":"\/documentation\/haishinkit\/hkoutgoingstream\/videoinputstream","type":"property"},{"type":"property","title":"var videoOutputStream: AsyncStream<CMSampleBuffer>","path":"\/documentation\/haishinkit\/hkoutgoingstream\/videooutputstream"},{"path":"\/documentation\/haishinkit\/hkoutgoingstream\/videosettings","type":"property","title":"var videoSettings: VideoCodecSettings"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func append(CMSampleBuffer)","path":"\/documentation\/haishinkit\/hkoutgoingstream\/append(_:)"},{"type":"method","path":"\/documentation\/haishinkit\/hkoutgoingstream\/append(_:when:)","title":"func append(AVAudioBuffer, when: AVAudioTime)"},{"path":"\/documentation\/haishinkit\/hkoutgoingstream\/append(video:)","type":"method","title":"func append(video: CMSampleBuffer)"},{"title":"Default Implementations","type":"groupMarker"},{"type":"symbol","children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/hkoutgoingstream\/startrunning()","type":"method","title":"func startRunning()"},{"title":"func stopRunning()","path":"\/documentation\/haishinkit\/hkoutgoingstream\/stoprunning()","type":"method"}],"path":"\/documentation\/haishinkit\/hkoutgoingstream\/runner-implementations","title":"Runner Implementations"}],"type":"class","title":"HKOutgoingStream"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/init()","type":"init","title":"init()"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/audiotrackid","title":"var audioTrackId: UInt8?","type":"property"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/isrecording","type":"property","title":"var isRecording: Bool"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/moviefragmentinterval","title":"var movieFragmentInterval: Double?","type":"property"},{"title":"var moviesDirectory: URL","type":"property","path":"\/documentation\/haishinkit\/hkstreamrecorder\/moviesdirectory"},{"type":"property","path":"\/documentation\/haishinkit\/hkstreamrecorder\/outputurl","title":"var outputURL: URL?"},{"title":"var settings: [AVMediaType : [String : any Sendable]]","path":"\/documentation\/haishinkit\/hkstreamrecorder\/settings","type":"property"},{"title":"var videoTrackId: UInt8?","path":"\/documentation\/haishinkit\/hkstreamrecorder\/videotrackid","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func selectTrack(UInt8?, mediaType: CMFormatDescription.MediaType)","type":"method","path":"\/documentation\/haishinkit\/hkstreamrecorder\/selecttrack(_:mediatype:)"},{"type":"method","title":"func setMovieFragmentInterval(Double?)","path":"\/documentation\/haishinkit\/hkstreamrecorder\/setmoviefragmentinterval(_:)"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/setmoviefragmentinterval(moviefragmentinterval:)","type":"method","title":"func setMovieFragmentInterval(movieFragmentInterval: Double?)"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/startrecording(_:settings:)","title":"func startRecording(URL?, settings: [AVMediaType : [String : any Sendable]]) async throws","type":"method"},{"title":"func stopRecording() async throws -> URL","type":"method","path":"\/documentation\/haishinkit\/hkstreamrecorder\/stoprecording()"},{"type":"groupMarker","title":"Type Properties"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/defaultsettings","type":"property","title":"static let defaultSettings: [AVMediaType : [String : any Sendable]]"},{"title":"Enumerations","type":"groupMarker"},{"title":"HKStreamRecorder.Error","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"type":"case","path":"\/documentation\/haishinkit\/hkstreamrecorder\/error\/failedtoappend(error:)","title":"case failedToAppend(error: (any Error)?)"},{"title":"case failedToCreateAssetWriter(error: any Error)","path":"\/documentation\/haishinkit\/hkstreamrecorder\/error\/failedtocreateassetwriter(error:)","type":"case"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/error\/failedtocreateassetwriterinput(error:)","type":"case","title":"case failedToCreateAssetWriterInput(error: any Error)"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/error\/failedtofinishwriting(error:)","type":"case","title":"case failedToFinishWriting(error: (any Error)?)"},{"title":"case fileAlreadyExists(outputURL: URL)","path":"\/documentation\/haishinkit\/hkstreamrecorder\/error\/filealreadyexists(outputurl:)","type":"case"},{"type":"case","title":"case invalidState","path":"\/documentation\/haishinkit\/hkstreamrecorder\/error\/invalidstate"},{"type":"case","title":"case notSupportedFileType(pathExtension: String)","path":"\/documentation\/haishinkit\/hkstreamrecorder\/error\/notsupportedfiletype(pathextension:)"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/error\/localizeddescription","type":"property","title":"var localizedDescription: String"}],"title":"Error Implementations","path":"\/documentation\/haishinkit\/hkstreamrecorder\/error\/error-implementations","type":"symbol"}],"type":"enum","path":"\/documentation\/haishinkit\/hkstreamrecorder\/error"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","title":"Actor Implementations","path":"\/documentation\/haishinkit\/hkstreamrecorder\/actor-implementations","children":[{"type":"groupMarker","title":"Instance Methods"},{"title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/haishinkit\/hkstreamrecorder\/assertisolated(_:file:line:)","type":"method"},{"title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","path":"\/documentation\/haishinkit\/hkstreamrecorder\/assumeisolated(_:file:line:)","type":"method"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/preconditionisolated(_:file:line:)","type":"method","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)"}]},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/hkstreamoutput-implementations","type":"symbol","title":"HKStreamOutput Implementations","children":[{"type":"groupMarker","title":"Instance Methods"},{"title":"func stream(some HKStream, didOutput: CMSampleBuffer)","type":"method","path":"\/documentation\/haishinkit\/hkstreamrecorder\/stream(_:didoutput:)"},{"type":"method","path":"\/documentation\/haishinkit\/hkstreamrecorder\/stream(_:didoutput:when:)","title":"func stream(some HKStream, didOutput: AVAudioBuffer, when: AVAudioTime)"}]},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/mediamixeroutput-implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/mixer(_:didoutput:)","type":"method","title":"func mixer(MediaMixer, didOutput: CMSampleBuffer)"},{"title":"func mixer(MediaMixer, didOutput: AVAudioPCMBuffer, when: AVAudioTime)","type":"method","path":"\/documentation\/haishinkit\/hkstreamrecorder\/mixer(_:didoutput:when:)"}],"type":"symbol","title":"MediaMixerOutput Implementations"}],"title":"HKStreamRecorder","type":"class","path":"\/documentation\/haishinkit\/hkstreamrecorder"},{"type":"class","path":"\/documentation\/haishinkit\/hkstreamvideoadaptivebitratestrategy","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init(mamimumVideoBitrate: Int)","path":"\/documentation\/haishinkit\/hkstreamvideoadaptivebitratestrategy\/init(mamimumvideobitrate:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let mamimumAudioBitRate: Int","path":"\/documentation\/haishinkit\/hkstreamvideoadaptivebitratestrategy\/mamimumaudiobitrate","type":"property"},{"type":"property","path":"\/documentation\/haishinkit\/hkstreamvideoadaptivebitratestrategy\/mamimumvideobitrate","title":"let mamimumVideoBitRate: Int"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/hkstreamvideoadaptivebitratestrategy\/adjustbitrate(_:stream:)","title":"func adjustBitrate(NetworkMonitorEvent, stream: some HKStream) async","type":"method"},{"type":"groupMarker","title":"Type Properties"},{"title":"static let statusCountsThreshold: Int","type":"property","path":"\/documentation\/haishinkit\/hkstreamvideoadaptivebitratestrategy\/statuscountsthreshold"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/hkstreamvideoadaptivebitratestrategy\/actor-implementations","type":"symbol","title":"Actor Implementations","children":[{"type":"groupMarker","title":"Instance Methods"},{"title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/haishinkit\/hkstreamvideoadaptivebitratestrategy\/assertisolated(_:file:line:)","type":"method"},{"title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","path":"\/documentation\/haishinkit\/hkstreamvideoadaptivebitratestrategy\/assumeisolated(_:file:line:)","type":"method"},{"path":"\/documentation\/haishinkit\/hkstreamvideoadaptivebitratestrategy\/preconditionisolated(_:file:line:)","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method"}]}],"title":"HKStreamVideoAdaptiveBitRateStrategy"},{"type":"class","path":"\/documentation\/haishinkit\/imagescreenobject","title":"ImageScreenObject","children":[{"title":"Instance Properties","type":"groupMarker"},{"type":"property","title":"var cgImage: CGImage?","path":"\/documentation\/haishinkit\/imagescreenobject\/cgimage"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func makeBounds(CGSize) -> CGRect","path":"\/documentation\/haishinkit\/imagescreenobject\/makebounds(_:)","type":"method"},{"type":"method","title":"func makeImage(some ScreenRenderer) -> CGImage?","path":"\/documentation\/haishinkit\/imagescreenobject\/makeimage(_:)"}]},{"title":"MTHKView","type":"class","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/haishinkit\/mthkview\/init(coder:)","type":"init","title":"init(coder: NSCoder)"},{"type":"init","title":"init(frame: CGRect)","path":"\/documentation\/haishinkit\/mthkview\/init(frame:)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/haishinkit\/mthkview\/audiotrackid","title":"var audioTrackId: UInt8?"},{"path":"\/documentation\/haishinkit\/mthkview\/videogravity","title":"var videoGravity: AVLayerVideoGravity","type":"property"},{"path":"\/documentation\/haishinkit\/mthkview\/videotrackid","type":"property","title":"var videoTrackId: UInt8?"},{"type":"groupMarker","title":"Instance Methods"},{"title":"func awakeFromNib()","type":"method","path":"\/documentation\/haishinkit\/mthkview\/awakefromnib()"},{"path":"\/documentation\/haishinkit\/mthkview\/draw(_:)","title":"func draw(CGRect)","type":"method"},{"path":"\/documentation\/haishinkit\/mthkview\/registervideoeffect(_:)","type":"method","title":"func registerVideoEffect(some VideoEffect) -> Bool"},{"title":"func unregisterVideoEffect(some VideoEffect) -> Bool","type":"method","path":"\/documentation\/haishinkit\/mthkview\/unregistervideoeffect(_:)"},{"type":"groupMarker","title":"Default Implementations"},{"title":"HKStreamOutput Implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func stream(some HKStream, didOutput: CMSampleBuffer)","path":"\/documentation\/haishinkit\/mthkview\/stream(_:didoutput:)","type":"method"},{"title":"func stream(some HKStream, didOutput: AVAudioBuffer, when: AVAudioTime)","type":"method","path":"\/documentation\/haishinkit\/mthkview\/stream(_:didoutput:when:)"}],"type":"symbol","path":"\/documentation\/haishinkit\/mthkview\/hkstreamoutput-implementations"},{"path":"\/documentation\/haishinkit\/mthkview\/mediamixeroutput-implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/mthkview\/mixer(_:didoutput:)","type":"method","title":"func mixer(MediaMixer, didOutput: CMSampleBuffer)"},{"type":"method","title":"func mixer(MediaMixer, didOutput: AVAudioPCMBuffer, when: AVAudioTime)","path":"\/documentation\/haishinkit\/mthkview\/mixer(_:didoutput:when:)"},{"path":"\/documentation\/haishinkit\/mthkview\/selecttrack(_:mediatype:)","type":"method","title":"func selectTrack(UInt8?, mediaType: CMFormatDescription.MediaType) async"}],"type":"symbol","title":"MediaMixerOutput Implementations"}],"path":"\/documentation\/haishinkit\/mthkview"},{"path":"\/documentation\/haishinkit\/mediamixer","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(multiTrackAudioMixingEnabled: Bool, useManualCapture: Bool)","type":"init","path":"\/documentation\/haishinkit\/mediamixer\/init(multitrackaudiomixingenabled:usemanualcapture:)"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/mediamixer\/audioinputformats","title":"var audioInputFormats: [UInt8 : AVAudioFormat]","type":"property"},{"path":"\/documentation\/haishinkit\/mediamixer\/audiomixersettings","title":"var audioMixerSettings: AudioMixerSettings","type":"property"},{"type":"property","path":"\/documentation\/haishinkit\/mediamixer\/framerate","title":"var frameRate: Float64"},{"path":"\/documentation\/haishinkit\/mediamixer\/iscapturing","type":"property","title":"var isCapturing: Bool"},{"title":"var isInterputted: AsyncStream<Bool>","path":"\/documentation\/haishinkit\/mediamixer\/isinterputted","type":"property"},{"title":"var isMonitoringEnabled: Bool","path":"\/documentation\/haishinkit\/mediamixer\/ismonitoringenabled","type":"property"},{"type":"property","title":"var isMultiTrackAudioMixingEnabled: Bool","path":"\/documentation\/haishinkit\/mediamixer\/ismultitrackaudiomixingenabled"},{"title":"var isRunning: Bool","type":"property","path":"\/documentation\/haishinkit\/mediamixer\/isrunning"},{"title":"var isTorchEnabled: Bool","type":"property","path":"\/documentation\/haishinkit\/mediamixer\/istorchenabled"},{"title":"var screen: Screen","path":"\/documentation\/haishinkit\/mediamixer\/screen","type":"property"},{"path":"\/documentation\/haishinkit\/mediamixer\/sessionpreset","type":"property","title":"var sessionPreset: AVCaptureSession.Preset"},{"path":"\/documentation\/haishinkit\/mediamixer\/videoinputformats","type":"property","title":"var videoInputFormats: [UInt8 : CMFormatDescription]"},{"path":"\/documentation\/haishinkit\/mediamixer\/videomixersettings","type":"property","title":"var videoMixerSettings: VideoMixerSettings"},{"type":"property","path":"\/documentation\/haishinkit\/mediamixer\/videoorientation","title":"var videoOrientation: AVCaptureVideoOrientation"},{"title":"Instance Methods","type":"groupMarker"},{"type":"method","title":"func addOutput(some MediaMixerOutput)","path":"\/documentation\/haishinkit\/mediamixer\/addoutput(_:)"},{"type":"method","title":"func append(CMSampleBuffer, track: UInt8)","path":"\/documentation\/haishinkit\/mediamixer\/append(_:track:)"},{"type":"method","title":"func append(AVAudioBuffer, when: AVAudioTime, track: UInt8)","path":"\/documentation\/haishinkit\/mediamixer\/append(_:when:track:)"},{"title":"func attachAudio(AVCaptureDevice?, track: UInt8, configuration: AudioDeviceConfigurationBlock?) async throws","path":"\/documentation\/haishinkit\/mediamixer\/attachaudio(_:track:configuration:)","type":"method"},{"path":"\/documentation\/haishinkit\/mediamixer\/attachvideo(_:track:configuration:)","title":"func attachVideo(AVCaptureDevice?, track: UInt8, configuration: VideoDeviceConfigurationBlock?) async throws","type":"method"},{"title":"func configuration((AVCaptureSession) throws -> Void) rethrows","path":"\/documentation\/haishinkit\/mediamixer\/configuration(_:)","type":"method"},{"title":"func configuration(audio: UInt8, configuration: (AudioDeviceUnit) throws -> Void) throws","path":"\/documentation\/haishinkit\/mediamixer\/configuration(audio:configuration:)","type":"method"},{"title":"func configuration(video: UInt8, configuration: (VideoDeviceUnit) throws -> Void) throws","type":"method","path":"\/documentation\/haishinkit\/mediamixer\/configuration(video:configuration:)"},{"type":"method","path":"\/documentation\/haishinkit\/mediamixer\/removeoutput(_:)","title":"func removeOutput(some MediaMixerOutput)"},{"path":"\/documentation\/haishinkit\/mediamixer\/setaudiomixersettings(_:)","type":"method","title":"func setAudioMixerSettings(AudioMixerSettings)"},{"type":"method","path":"\/documentation\/haishinkit\/mediamixer\/setframerate(_:)","title":"func setFrameRate(Float64)"},{"type":"method","path":"\/documentation\/haishinkit\/mediamixer\/setmonitoringenabled(_:)","title":"func setMonitoringEnabled(Bool)"},{"path":"\/documentation\/haishinkit\/mediamixer\/setsessionpreset(_:)","type":"method","title":"func setSessionPreset(AVCaptureSession.Preset)"},{"path":"\/documentation\/haishinkit\/mediamixer\/settorchenabled(_:)","type":"method","title":"func setTorchEnabled(Bool)"},{"path":"\/documentation\/haishinkit\/mediamixer\/setvideomixersettings(_:)","title":"func setVideoMixerSettings(VideoMixerSettings)","type":"method"},{"path":"\/documentation\/haishinkit\/mediamixer\/setvideoorientation(_:)","title":"func setVideoOrientation(AVCaptureVideoOrientation)","type":"method"},{"title":"func startCapturing()","type":"method","path":"\/documentation\/haishinkit\/mediamixer\/startcapturing()"},{"type":"method","path":"\/documentation\/haishinkit\/mediamixer\/stopcapturing()","title":"func stopCapturing()"},{"title":"Enumerations","type":"groupMarker"},{"type":"enum","title":"MediaMixer.Error","path":"\/documentation\/haishinkit\/mediamixer\/error","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"type":"case","title":"case deviceNotFound","path":"\/documentation\/haishinkit\/mediamixer\/error\/devicenotfound"},{"path":"\/documentation\/haishinkit\/mediamixer\/error\/failedtoattach(_:)","title":"case failedToAttach(any Error)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/mediamixer\/error\/error-implementations","title":"Error Implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/haishinkit\/mediamixer\/error\/localizeddescription","title":"var localizedDescription: String"}],"type":"symbol"}]},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/haishinkit\/mediamixer\/actor-implementations","type":"symbol","title":"Actor Implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/mediamixer\/assertisolated(_:file:line:)","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method"},{"title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","path":"\/documentation\/haishinkit\/mediamixer\/assumeisolated(_:file:line:)","type":"method"},{"type":"method","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/haishinkit\/mediamixer\/preconditionisolated(_:file:line:)"}]},{"title":"AsyncRunner Implementations","type":"symbol","path":"\/documentation\/haishinkit\/mediamixer\/asyncrunner-implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func startRunning()","path":"\/documentation\/haishinkit\/mediamixer\/startrunning()","type":"method"},{"title":"func stopRunning()","path":"\/documentation\/haishinkit\/mediamixer\/stoprunning()","type":"method"}]}],"title":"MediaMixer","type":"class"},{"path":"\/documentation\/haishinkit\/networkmonitor","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/haishinkit\/networkmonitor\/init(_:)","title":"init(some NetworkTransportReporter)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var event: AsyncStream<NetworkMonitorEvent>","path":"\/documentation\/haishinkit\/networkmonitor\/event","type":"property"},{"path":"\/documentation\/haishinkit\/networkmonitor\/isrunning","title":"var isRunning: Bool","type":"property"},{"type":"groupMarker","title":"Enumerations"},{"path":"\/documentation\/haishinkit\/networkmonitor\/error","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/haishinkit\/networkmonitor\/error\/invalidstate","title":"case invalidState","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/networkmonitor\/error\/equatable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/haishinkit\/networkmonitor\/error\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"title":"Equatable Implementations","type":"symbol"},{"path":"\/documentation\/haishinkit\/networkmonitor\/error\/error-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/haishinkit\/networkmonitor\/error\/localizeddescription","title":"var localizedDescription: String"}],"title":"Error Implementations"}],"title":"NetworkMonitor.Error","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/networkmonitor\/actor-implementations","type":"symbol","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method","path":"\/documentation\/haishinkit\/networkmonitor\/assertisolated(_:file:line:)"},{"type":"method","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","path":"\/documentation\/haishinkit\/networkmonitor\/assumeisolated(_:file:line:)"},{"title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method","path":"\/documentation\/haishinkit\/networkmonitor\/preconditionisolated(_:file:line:)"}],"title":"Actor Implementations"},{"title":"AsyncRunner Implementations","type":"symbol","path":"\/documentation\/haishinkit\/networkmonitor\/asyncrunner-implementations","children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/networkmonitor\/startrunning()","type":"method","title":"func startRunning()"},{"type":"method","path":"\/documentation\/haishinkit\/networkmonitor\/stoprunning()","title":"func stopRunning()"}]}],"title":"NetworkMonitor","type":"class"},{"path":"\/documentation\/haishinkit\/piphkview","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init?(coder: NSCoder)","path":"\/documentation\/haishinkit\/piphkview\/init(coder:)","type":"init"},{"type":"init","path":"\/documentation\/haishinkit\/piphkview\/init(frame:)","title":"init(frame: CGRect)"},{"type":"groupMarker","title":"Instance Properties"},{"title":"var audioTrackId: UInt8?","path":"\/documentation\/haishinkit\/piphkview\/audiotrackid","type":"property"},{"path":"\/documentation\/haishinkit\/piphkview\/videogravity","type":"property","title":"var videoGravity: AVLayerVideoGravity"},{"type":"property","title":"var videoTrackId: UInt8?","path":"\/documentation\/haishinkit\/piphkview\/videotrackid"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/haishinkit\/piphkview\/awakefromnib()","title":"func awakeFromNib()"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/piphkview\/defaultbackgroundcolor","type":"property","title":"static var defaultBackgroundColor: NSColor"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func stream(some HKStream, didOutput: CMSampleBuffer)","path":"\/documentation\/haishinkit\/piphkview\/stream(_:didoutput:)","type":"method"},{"path":"\/documentation\/haishinkit\/piphkview\/stream(_:didoutput:when:)","title":"func stream(some HKStream, didOutput: AVAudioBuffer, when: AVAudioTime)","type":"method"}],"path":"\/documentation\/haishinkit\/piphkview\/hkstreamoutput-implementations","type":"symbol","title":"HKStreamOutput Implementations"},{"path":"\/documentation\/haishinkit\/piphkview\/mediamixeroutput-implementations","children":[{"type":"groupMarker","title":"Instance Methods"},{"title":"func mixer(MediaMixer, didOutput: CMSampleBuffer)","path":"\/documentation\/haishinkit\/piphkview\/mixer(_:didoutput:)","type":"method"},{"title":"func mixer(MediaMixer, didOutput: AVAudioPCMBuffer, when: AVAudioTime)","type":"method","path":"\/documentation\/haishinkit\/piphkview\/mixer(_:didoutput:when:)"},{"title":"func selectTrack(UInt8?, mediaType: CMFormatDescription.MediaType) async","type":"method","path":"\/documentation\/haishinkit\/piphkview\/selecttrack(_:mediatype:)"}],"type":"symbol","title":"MediaMixerOutput Implementations"}],"type":"class","title":"PiPHKView"},{"title":"RTMPConnection","type":"class","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/init(swfurl:pageurl:flashver:timeout:requesttimeout:chunksize:qualityofservice:)","type":"init","title":"init(swfUrl: String?, pageUrl: String?, flashVer: String, timeout: Int, requestTimeout: UInt64, chunkSize: Int, qualityOfService: DispatchQoS)"},{"title":"Instance Properties","type":"groupMarker"},{"type":"property","title":"let chunkSize: Int","path":"\/documentation\/haishinkit\/rtmpconnection\/chunksize"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/connected","title":"var connected: Bool","type":"property"},{"title":"let flashVer: String","type":"property","path":"\/documentation\/haishinkit\/rtmpconnection\/flashver"},{"type":"property","title":"let objectEncoding: RTMPObjectEncoding","path":"\/documentation\/haishinkit\/rtmpconnection\/objectencoding"},{"title":"let pageUrl: String?","path":"\/documentation\/haishinkit\/rtmpconnection\/pageurl","type":"property"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/qualityofservice","type":"property","title":"let qualityOfService: DispatchQoS"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/requesttimeout","type":"property","title":"let requestTimeout: UInt64"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/status","type":"property","title":"var status: AsyncStream<RTMPStatus>"},{"title":"let swfUrl: String?","type":"property","path":"\/documentation\/haishinkit\/rtmpconnection\/swfurl"},{"title":"let timeout: Int","path":"\/documentation\/haishinkit\/rtmpconnection\/timeout","type":"property"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/uri","title":"var uri: URL?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"type":"method","path":"\/documentation\/haishinkit\/rtmpconnection\/call(_:arguments:)","title":"func call(String, arguments: (any Sendable)?...) async throws -> RTMPResponse"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/close()","type":"method","title":"func close() async throws"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/connect(_:arguments:)","type":"method","title":"func connect(String, arguments: (any Sendable)?...) async throws -> RTMPResponse"},{"type":"groupMarker","title":"Type Properties"},{"type":"property","title":"static let defaultCapabilities: Int","path":"\/documentation\/haishinkit\/rtmpconnection\/defaultcapabilities"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/defaultchunksizes","type":"property","title":"static let defaultChunkSizeS: Int"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/defaultflashver","type":"property","title":"static let defaultFlashVer: String"},{"title":"static let defaultObjectEncoding: RTMPObjectEncoding","type":"property","path":"\/documentation\/haishinkit\/rtmpconnection\/defaultobjectencoding"},{"title":"static let defaultPort: Int","path":"\/documentation\/haishinkit\/rtmpconnection\/defaultport","type":"property"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/defaultrequesttimeout","type":"property","title":"static let defaultRequestTimeout: UInt64"},{"title":"static let defaultSecurePort: Int","path":"\/documentation\/haishinkit\/rtmpconnection\/defaultsecureport","type":"property"},{"type":"property","title":"static let defaultTimeout: Int","path":"\/documentation\/haishinkit\/rtmpconnection\/defaulttimeout"},{"type":"property","title":"static let defaultWindowSizeS: Int64","path":"\/documentation\/haishinkit\/rtmpconnection\/defaultwindowsizes"},{"type":"property","title":"static let supportedFourCcList: [String]","path":"\/documentation\/haishinkit\/rtmpconnection\/supportedfourcclist"},{"title":"static let supportedProtocols: Set<String>","path":"\/documentation\/haishinkit\/rtmpconnection\/supportedprotocols","type":"property"},{"type":"groupMarker","title":"Enumerations"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/code\/callbadversion","type":"case","title":"case callBadVersion"},{"title":"case callFailed","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/callfailed","type":"case"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/code\/callprohibited","title":"case callProhibited","type":"case"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/code\/connectappshutdown","type":"case","title":"case connectAppshutdown"},{"title":"case connectClosed","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/connectclosed","type":"case"},{"title":"case connectFailed","type":"case","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/connectfailed"},{"type":"case","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/connectidletimeout","title":"case connectIdleTimeOut"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/code\/connectinvalidapp","title":"case connectInvalidApp","type":"case"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/code\/connectnetworkchange","title":"case connectNetworkChange","type":"case"},{"title":"case connectRejected","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/connectrejected","type":"case"},{"type":"case","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/connectsuccess","title":"case connectSuccess"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: String)","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/init(rawvalue:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var level: String","type":"property","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/level"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","title":"Equatable Implementations","children":[{"type":"groupMarker","title":"Operators"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/!=(_:_:)"}],"path":"\/documentation\/haishinkit\/rtmpconnection\/code\/equatable-implementations"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/code\/rawrepresentable-implementations","type":"symbol","title":"RawRepresentable Implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"type":"property","title":"var hashValue: Int","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/hashvalue"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/code\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}]}],"title":"RTMPConnection.Code","path":"\/documentation\/haishinkit\/rtmpconnection\/code","type":"enum"},{"children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/error\/connectiontimedout","title":"case connectionTimedOut","type":"case"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/error\/invalidstate","title":"case invalidState","type":"case"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/error\/requestfailed(response:)","type":"case","title":"case requestFailed(response: RTMPResponse)"},{"type":"case","title":"case requestTimedOut","path":"\/documentation\/haishinkit\/rtmpconnection\/error\/requesttimedout"},{"type":"case","title":"case socketErrorOccurred(any Error)","path":"\/documentation\/haishinkit\/rtmpconnection\/error\/socketerroroccurred(_:)"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/error\/unsupportedcommand(_:)","title":"case unsupportedCommand(String)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"title":"var localizedDescription: String","type":"property","path":"\/documentation\/haishinkit\/rtmpconnection\/error\/localizeddescription"}],"path":"\/documentation\/haishinkit\/rtmpconnection\/error\/error-implementations","type":"symbol","title":"Error Implementations"}],"title":"RTMPConnection.Error","path":"\/documentation\/haishinkit\/rtmpconnection\/error","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/actor-implementations","title":"Actor Implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/assertisolated(_:file:line:)","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method"},{"title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","path":"\/documentation\/haishinkit\/rtmpconnection\/assumeisolated(_:file:line:)","type":"method"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/preconditionisolated(_:file:line:)","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method"}]}],"path":"\/documentation\/haishinkit\/rtmpconnection"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/rtmpsharedobject\/data","type":"property","title":"var data: AMFObject"},{"type":"property","title":"let objectEncoding: RTMPObjectEncoding","path":"\/documentation\/haishinkit\/rtmpsharedobject\/objectencoding"},{"title":"Instance Methods","type":"groupMarker"},{"type":"method","title":"func clear() async","path":"\/documentation\/haishinkit\/rtmpsharedobject\/clear()"},{"title":"func close() async","path":"\/documentation\/haishinkit\/rtmpsharedobject\/close()","type":"method"},{"type":"method","path":"\/documentation\/haishinkit\/rtmpsharedobject\/connect(_:)","title":"func connect(RTMPConnection) async"},{"path":"\/documentation\/haishinkit\/rtmpsharedobject\/setproperty(_:_:)","type":"method","title":"func setProperty(String, (any Sendable)?) async"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/rtmpsharedobject\/getremote(withname:remotepath:persistence:)","title":"static func getRemote(withName: String, remotePath: String, persistence: Bool) -> RTMPSharedObject","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/rtmpsharedobject\/assertisolated(_:file:line:)","type":"method","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)"},{"title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","path":"\/documentation\/haishinkit\/rtmpsharedobject\/assumeisolated(_:file:line:)","type":"method"},{"path":"\/documentation\/haishinkit\/rtmpsharedobject\/preconditionisolated(_:file:line:)","type":"method","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)"}],"type":"symbol","title":"Actor Implementations","path":"\/documentation\/haishinkit\/rtmpsharedobject\/actor-implementations"}],"path":"\/documentation\/haishinkit\/rtmpsharedobject","type":"class","title":"RTMPSharedObject"},{"type":"class","title":"RTMPStream","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/haishinkit\/rtmpstream\/init(connection:fcpublishname:)","title":"init(connection: RTMPConnection, fcPublishName: String?)"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/rtmpstream\/audiosampleaccess","type":"property","title":"var audioSampleAccess: Bool"},{"title":"var audioTrackId: UInt8?","type":"property","path":"\/documentation\/haishinkit\/rtmpstream\/audiotrackid"},{"type":"property","path":"\/documentation\/haishinkit\/rtmpstream\/currentfps","title":"var currentFPS: UInt16"},{"type":"property","title":"var fcPublishName: String?","path":"\/documentation\/haishinkit\/rtmpstream\/fcpublishname"},{"path":"\/documentation\/haishinkit\/rtmpstream\/info","title":"var info: RTMPStreamInfo","type":"property"},{"type":"property","path":"\/documentation\/haishinkit\/rtmpstream\/metadata","title":"var metadata: AMFArray"},{"type":"property","path":"\/documentation\/haishinkit\/rtmpstream\/objectencoding","title":"var objectEncoding: RTMPObjectEncoding"},{"type":"property","title":"var readyState: HKStreamReadyState","path":"\/documentation\/haishinkit\/rtmpstream\/readystate"},{"path":"\/documentation\/haishinkit\/rtmpstream\/status","title":"var status: AsyncStream<RTMPStatus>","type":"property"},{"path":"\/documentation\/haishinkit\/rtmpstream\/videosampleaccess","type":"property","title":"var videoSampleAccess: Bool"},{"title":"var videoTrackId: UInt8?","path":"\/documentation\/haishinkit\/rtmpstream\/videotrackid","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"type":"method","title":"func close() async throws -> RTMPResponse","path":"\/documentation\/haishinkit\/rtmpstream\/close()"},{"type":"method","path":"\/documentation\/haishinkit\/rtmpstream\/pause(_:)","title":"func pause(Bool) async throws -> RTMPResponse"},{"path":"\/documentation\/haishinkit\/rtmpstream\/play(_:)","type":"method","title":"func play((any Sendable)?...) async throws -> RTMPResponse"},{"title":"func publish(String?, type: RTMPStream.HowToPublish) async throws -> RTMPResponse","path":"\/documentation\/haishinkit\/rtmpstream\/publish(_:type:)","type":"method"},{"title":"func receiveAudio(Bool) async throws","path":"\/documentation\/haishinkit\/rtmpstream\/receiveaudio(_:)","type":"method"},{"title":"func receiveVideo(Bool) async throws","path":"\/documentation\/haishinkit\/rtmpstream\/receivevideo(_:)","type":"method"},{"type":"method","path":"\/documentation\/haishinkit\/rtmpstream\/seek(_:)","title":"func seek(Double) async throws"},{"type":"method","title":"func send(String, arguments: (any Sendable)?..., isResetTimestamp: Bool) throws","path":"\/documentation\/haishinkit\/rtmpstream\/send(_:arguments:isresettimestamp:)"},{"path":"\/documentation\/haishinkit\/rtmpstream\/togglepause()","type":"method","title":"func togglePause() async throws -> RTMPResponse"},{"title":"Enumerations","type":"groupMarker"},{"type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"type":"case","title":"case bufferEmpty","path":"\/documentation\/haishinkit\/rtmpstream\/code\/bufferempty"},{"title":"case bufferFlush","type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/code\/bufferflush"},{"title":"case bufferFull","type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/code\/bufferfull"},{"title":"case connectClosed","path":"\/documentation\/haishinkit\/rtmpstream\/code\/connectclosed","type":"case"},{"title":"case connectFailed","type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/code\/connectfailed"},{"title":"case connectRejected","path":"\/documentation\/haishinkit\/rtmpstream\/code\/connectrejected","type":"case"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/connectsuccess","type":"case","title":"case connectSuccess"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/drmupdateneeded","type":"case","title":"case drmUpdateNeeded"},{"type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/code\/failed","title":"case failed"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/multicaststreamreset","title":"case multicastStreamReset","type":"case"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/pausenotify","type":"case","title":"case pauseNotify"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/playfailed","type":"case","title":"case playFailed"},{"type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/code\/playfilestructureinvalid","title":"case playFileStructureInvalid"},{"type":"case","title":"case playInsufficientBW","path":"\/documentation\/haishinkit\/rtmpstream\/code\/playinsufficientbw"},{"title":"case playNoSupportedTrackFound","type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/code\/playnosupportedtrackfound"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/playreset","type":"case","title":"case playReset"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/playstart","type":"case","title":"case playStart"},{"title":"case playStop","type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/code\/playstop"},{"title":"case playStreamNotFound","path":"\/documentation\/haishinkit\/rtmpstream\/code\/playstreamnotfound","type":"case"},{"title":"case playTransition","type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/code\/playtransition"},{"type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/code\/playunpublishnotify","title":"case playUnpublishNotify"},{"title":"case publishBadName","type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/code\/publishbadname"},{"title":"case publishIdle","type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/code\/publishidle"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/publishstart","title":"case publishStart","type":"case"},{"title":"case recordAlreadyExists","path":"\/documentation\/haishinkit\/rtmpstream\/code\/recordalreadyexists","type":"case"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/recorddiskquotaexceeded","type":"case","title":"case recordDiskQuotaExceeded"},{"type":"case","title":"case recordFailed","path":"\/documentation\/haishinkit\/rtmpstream\/code\/recordfailed"},{"type":"case","title":"case recordNoAccess","path":"\/documentation\/haishinkit\/rtmpstream\/code\/recordnoaccess"},{"type":"case","title":"case recordStart","path":"\/documentation\/haishinkit\/rtmpstream\/code\/recordstart"},{"title":"case recordStop","type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/code\/recordstop"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/secondscreenstart","type":"case","title":"case secondScreenStart"},{"type":"case","title":"case secondScreenStop","path":"\/documentation\/haishinkit\/rtmpstream\/code\/secondscreenstop"},{"type":"case","title":"case seekFailed","path":"\/documentation\/haishinkit\/rtmpstream\/code\/seekfailed"},{"type":"case","title":"case seekInvalidTime","path":"\/documentation\/haishinkit\/rtmpstream\/code\/seekinvalidtime"},{"title":"case seekNotify","path":"\/documentation\/haishinkit\/rtmpstream\/code\/seeknotify","type":"case"},{"title":"case stepNotify","path":"\/documentation\/haishinkit\/rtmpstream\/code\/stepnotify","type":"case"},{"title":"case unpauseNotify","path":"\/documentation\/haishinkit\/rtmpstream\/code\/unpausenotify","type":"case"},{"type":"case","title":"case unpublishSuccess","path":"\/documentation\/haishinkit\/rtmpstream\/code\/unpublishsuccess"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/videodimensionchange","title":"case videoDimensionChange","type":"case"},{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init?(rawValue: String)","path":"\/documentation\/haishinkit\/rtmpstream\/code\/init(rawvalue:)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/haishinkit\/rtmpstream\/code\/level","title":"var level: String"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/equatable-implementations","title":"Equatable Implementations","type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","path":"\/documentation\/haishinkit\/rtmpstream\/code\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"}]},{"type":"symbol","title":"RawRepresentable Implementations","path":"\/documentation\/haishinkit\/rtmpstream\/code\/rawrepresentable-implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/hashvalue","type":"property","title":"var hashValue: Int"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/hash(into:)","type":"method","title":"func hash(into: inout Hasher)"}]}],"path":"\/documentation\/haishinkit\/rtmpstream\/code","title":"RTMPStream.Code"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/rtmpstream\/error\/invalidstate","type":"case","title":"case invalidState"},{"title":"case requestFailed(response: RTMPResponse)","path":"\/documentation\/haishinkit\/rtmpstream\/error\/requestfailed(response:)","type":"case"},{"title":"case requestTimedOut","path":"\/documentation\/haishinkit\/rtmpstream\/error\/requesttimedout","type":"case"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var localizedDescription: String","path":"\/documentation\/haishinkit\/rtmpstream\/error\/localizeddescription"}],"type":"symbol","path":"\/documentation\/haishinkit\/rtmpstream\/error\/error-implementations","title":"Error Implementations"}],"type":"enum","title":"RTMPStream.Error","path":"\/documentation\/haishinkit\/rtmpstream\/error"},{"path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case append","path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish\/append","type":"case"},{"type":"case","title":"case appendWithGap","path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish\/appendwithgap"},{"type":"case","title":"case live","path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish\/live"},{"title":"case record","path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish\/record","type":"case"},{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init?(rawValue: String)","path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish\/init(rawvalue:)"},{"type":"groupMarker","title":"Default Implementations"},{"title":"Equatable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish\/!=(_:_:)"}],"type":"symbol","path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish\/equatable-implementations"},{"type":"symbol","path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish\/rawrepresentable-implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish\/hashvalue","title":"var hashValue: Int"},{"type":"groupMarker","title":"Instance Methods"},{"title":"func hash(into: inout Hasher)","path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish\/hash(into:)","type":"method"}],"title":"RawRepresentable Implementations"}],"type":"enum","title":"RTMPStream.HowToPublish"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/rtmpstream\/actor-implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/rtmpstream\/assertisolated(_:file:line:)","type":"method","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)"},{"title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","path":"\/documentation\/haishinkit\/rtmpstream\/assumeisolated(_:file:line:)","type":"method"},{"title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method","path":"\/documentation\/haishinkit\/rtmpstream\/preconditionisolated(_:file:line:)"}],"title":"Actor Implementations","type":"symbol"},{"type":"symbol","path":"\/documentation\/haishinkit\/rtmpstream\/hkstream-implementations","title":"HKStream Implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/haishinkit\/rtmpstream\/audiosettings","title":"var audioSettings: AudioCodecSettings"},{"title":"var soundTransform: SoundTransform?","type":"property","path":"\/documentation\/haishinkit\/rtmpstream\/soundtransform"},{"title":"var videoSettings: VideoCodecSettings","path":"\/documentation\/haishinkit\/rtmpstream\/videosettings","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"type":"method","path":"\/documentation\/haishinkit\/rtmpstream\/addoutput(_:)","title":"func addOutput(some HKStreamOutput)"},{"title":"func append(CMSampleBuffer)","path":"\/documentation\/haishinkit\/rtmpstream\/append(_:)","type":"method"},{"type":"method","title":"func append(AVAudioBuffer, when: AVAudioTime)","path":"\/documentation\/haishinkit\/rtmpstream\/append(_:when:)"},{"type":"method","path":"\/documentation\/haishinkit\/rtmpstream\/attachaudioplayer(_:)","title":"func attachAudioPlayer(AudioPlayer?) async"},{"type":"method","path":"\/documentation\/haishinkit\/rtmpstream\/dispatch(_:)","title":"func dispatch(NetworkMonitorEvent) async"},{"path":"\/documentation\/haishinkit\/rtmpstream\/removeoutput(_:)","title":"func removeOutput(some HKStreamOutput)","type":"method"},{"type":"method","title":"func setAudioSettings(AudioCodecSettings)","path":"\/documentation\/haishinkit\/rtmpstream\/setaudiosettings(_:)"},{"path":"\/documentation\/haishinkit\/rtmpstream\/setbitratestorategy(_:)","title":"func setBitrateStorategy((some HKStreamBitRateStrategy)?)","type":"method"},{"title":"func setSoundTransform(SoundTransform) async","path":"\/documentation\/haishinkit\/rtmpstream\/setsoundtransform(_:)","type":"method"},{"path":"\/documentation\/haishinkit\/rtmpstream\/setvideoinputbuffercounts(_:)","type":"method","title":"func setVideoInputBufferCounts(Int)"},{"type":"method","title":"func setVideoSettings(VideoCodecSettings)","path":"\/documentation\/haishinkit\/rtmpstream\/setvideosettings(_:)"}]},{"path":"\/documentation\/haishinkit\/rtmpstream\/mediamixeroutput-implementations","title":"MediaMixerOutput Implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func mixer(MediaMixer, didOutput: CMSampleBuffer)","path":"\/documentation\/haishinkit\/rtmpstream\/mixer(_:didoutput:)"},{"title":"func mixer(MediaMixer, didOutput: AVAudioPCMBuffer, when: AVAudioTime)","type":"method","path":"\/documentation\/haishinkit\/rtmpstream\/mixer(_:didoutput:when:)"},{"path":"\/documentation\/haishinkit\/rtmpstream\/selecttrack(_:mediatype:)","type":"method","title":"func selectTrack(UInt8?, mediaType: CMFormatDescription.MediaType)"}]}],"path":"\/documentation\/haishinkit\/rtmpstream"},{"path":"\/documentation\/haishinkit\/screen","title":"Screen","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/screen\/init()","title":"init()","type":"init"},{"type":"groupMarker","title":"Instance Properties"},{"title":"var backgroundColor: CGColor","type":"property","path":"\/documentation\/haishinkit\/screen\/backgroundcolor"},{"path":"\/documentation\/haishinkit\/screen\/childcounts","title":"var childCounts: Int","type":"property"},{"path":"\/documentation\/haishinkit\/screen\/delegate","type":"property","title":"var delegate: (any ScreenDelegate)?"},{"title":"var size: CGSize","path":"\/documentation\/haishinkit\/screen\/size-swift.property","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func addChild(ScreenObject?) throws","path":"\/documentation\/haishinkit\/screen\/addchild(_:)","type":"method"},{"type":"method","title":"func registerVideoEffect(some VideoEffect) -> Bool","path":"\/documentation\/haishinkit\/screen\/registervideoeffect(_:)"},{"type":"method","path":"\/documentation\/haishinkit\/screen\/removechild(_:)","title":"func removeChild(ScreenObject?)"},{"title":"func unregisterVideoEffect(some VideoEffect) -> Bool","type":"method","path":"\/documentation\/haishinkit\/screen\/unregistervideoeffect(_:)"},{"type":"groupMarker","title":"Type Properties"},{"title":"static let size: CGSize","path":"\/documentation\/haishinkit\/screen\/size-swift.type.property","type":"property"}],"type":"class"},{"path":"\/documentation\/haishinkit\/screenactor","title":"ScreenActor","type":"class","children":[{"type":"groupMarker","title":"Type Properties"},{"type":"property","path":"\/documentation\/haishinkit\/screenactor\/shared","title":"static let shared: ScreenActor"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/screenactor\/actor-implementations","children":[{"type":"groupMarker","title":"Instance Methods"},{"title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/haishinkit\/screenactor\/assertisolated(_:file:line:)","type":"method"},{"title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","path":"\/documentation\/haishinkit\/screenactor\/assumeisolated(_:file:line:)","type":"method"},{"title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method","path":"\/documentation\/haishinkit\/screenactor\/preconditionisolated(_:file:line:)"}],"title":"Actor Implementations","type":"symbol"},{"title":"GlobalActor Implementations","type":"symbol","path":"\/documentation\/haishinkit\/screenactor\/globalactor-implementations","children":[{"type":"groupMarker","title":"Type Properties"},{"title":"static var sharedUnownedExecutor: UnownedSerialExecutor","path":"\/documentation\/haishinkit\/screenactor\/sharedunownedexecutor","type":"property"}]}]},{"children":[{"title":"Initializers","type":"groupMarker"},{"type":"init","title":"init()","path":"\/documentation\/haishinkit\/screenobject\/init()"},{"type":"groupMarker","title":"Instance Properties"},{"title":"var bounds: CGRect","path":"\/documentation\/haishinkit\/screenobject\/bounds","type":"property"},{"type":"property","title":"var cornerRadius: CGFloat","path":"\/documentation\/haishinkit\/screenobject\/cornerradius"},{"path":"\/documentation\/haishinkit\/screenobject\/horizontalalignment-swift.property","title":"var horizontalAlignment: ScreenObject.HorizontalAlignment","type":"property"},{"title":"var isVisible: Bool","path":"\/documentation\/haishinkit\/screenobject\/isvisible","type":"property"},{"path":"\/documentation\/haishinkit\/screenobject\/layoutmargin","title":"var layoutMargin: NSEdgeInsets","type":"property"},{"path":"\/documentation\/haishinkit\/screenobject\/parent","title":"var parent: ScreenObjectContainer?","type":"property"},{"path":"\/documentation\/haishinkit\/screenobject\/size","type":"property","title":"var size: CGSize"},{"path":"\/documentation\/haishinkit\/screenobject\/verticalalignment-swift.property","title":"var verticalAlignment: ScreenObject.VerticalAlignment","type":"property"},{"type":"groupMarker","title":"Instance Methods"},{"title":"func invalidateLayout()","path":"\/documentation\/haishinkit\/screenobject\/invalidatelayout()","type":"method"},{"path":"\/documentation\/haishinkit\/screenobject\/makebounds(_:)","type":"method","title":"func makeBounds(CGSize) -> CGRect"},{"path":"\/documentation\/haishinkit\/screenobject\/makeimage(_:)","type":"method","title":"func makeImage(some ScreenRenderer) -> CGImage?"},{"type":"groupMarker","title":"Enumerations"},{"path":"\/documentation\/haishinkit\/screenobject\/horizontalalignment-swift.enum","type":"enum","title":"ScreenObject.HorizontalAlignment","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"title":"case center","type":"case","path":"\/documentation\/haishinkit\/screenobject\/horizontalalignment-swift.enum\/center"},{"type":"case","path":"\/documentation\/haishinkit\/screenobject\/horizontalalignment-swift.enum\/left","title":"case left"},{"type":"case","title":"case right","path":"\/documentation\/haishinkit\/screenobject\/horizontalalignment-swift.enum\/right"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/haishinkit\/screenobject\/horizontalalignment-swift.enum\/!=(_:_:)"}],"title":"Equatable Implementations","path":"\/documentation\/haishinkit\/screenobject\/horizontalalignment-swift.enum\/equatable-implementations"}]},{"title":"ScreenObject.VerticalAlignment","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case bottom","type":"case","path":"\/documentation\/haishinkit\/screenobject\/verticalalignment-swift.enum\/bottom"},{"title":"case middle","path":"\/documentation\/haishinkit\/screenobject\/verticalalignment-swift.enum\/middle","type":"case"},{"type":"case","title":"case top","path":"\/documentation\/haishinkit\/screenobject\/verticalalignment-swift.enum\/top"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","title":"Equatable Implementations","path":"\/documentation\/haishinkit\/screenobject\/verticalalignment-swift.enum\/equatable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/haishinkit\/screenobject\/verticalalignment-swift.enum\/!=(_:_:)"}]}],"type":"enum","path":"\/documentation\/haishinkit\/screenobject\/verticalalignment-swift.enum"},{"title":"Default Implementations","type":"groupMarker"},{"type":"symbol","title":"Equatable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/haishinkit\/screenobject\/!=(_:_:)"},{"path":"\/documentation\/haishinkit\/screenobject\/==(_:_:)","type":"op","title":"static func == (ScreenObject, ScreenObject) -> Bool"}],"path":"\/documentation\/haishinkit\/screenobject\/equatable-implementations"},{"path":"\/documentation\/haishinkit\/screenobject\/hashable-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/screenobject\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"title":"Hashable Implementations"}],"type":"class","path":"\/documentation\/haishinkit\/screenobject","title":"ScreenObject"},{"path":"\/documentation\/haishinkit\/screenobjectcontainer","type":"class","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/screenobjectcontainer\/childcounts","type":"property","title":"var childCounts: Int"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/haishinkit\/screenobjectcontainer\/addchild(_:)","title":"func addChild(ScreenObject?) throws"},{"path":"\/documentation\/haishinkit\/screenobjectcontainer\/removechild(_:)","type":"method","title":"func removeChild(ScreenObject?)"},{"type":"groupMarker","title":"Enumerations"},{"path":"\/documentation\/haishinkit\/screenobjectcontainer\/error","title":"ScreenObjectContainer.Error","type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/screenobjectcontainer\/error\/alreadyexists","type":"case","title":"case alreadyExists"},{"type":"groupMarker","title":"Default Implementations"},{"title":"Equatable Implementations","path":"\/documentation\/haishinkit\/screenobjectcontainer\/error\/equatable-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/haishinkit\/screenobjectcontainer\/error\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}]},{"title":"Error Implementations","path":"\/documentation\/haishinkit\/screenobjectcontainer\/error\/error-implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var localizedDescription: String","type":"property","path":"\/documentation\/haishinkit\/screenobjectcontainer\/error\/localizeddescription"}],"type":"symbol"}]}],"title":"ScreenObjectContainer"},{"type":"class","path":"\/documentation\/haishinkit\/streamscreenobject","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/streamscreenobject\/chromakeycolor","type":"property","title":"var chromaKeyColor: CGColor?"},{"type":"property","title":"var videoGravity: AVLayerVideoGravity","path":"\/documentation\/haishinkit\/streamscreenobject\/videogravity"},{"type":"groupMarker","title":"Instance Methods"},{"title":"func makeBounds(CGSize) -> CGRect","type":"method","path":"\/documentation\/haishinkit\/streamscreenobject\/makebounds(_:)"},{"type":"method","title":"func makeImage(some ScreenRenderer) -> CGImage?","path":"\/documentation\/haishinkit\/streamscreenobject\/makeimage(_:)"},{"title":"Default Implementations","type":"groupMarker"},{"type":"symbol","title":"HKStreamOutput Implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/streamscreenobject\/stream(_:didoutput:)","type":"method","title":"func stream(some HKStream, didOutput: CMSampleBuffer)"},{"title":"func stream(some HKStream, didOutput: AVAudioBuffer, when: AVAudioTime)","type":"method","path":"\/documentation\/haishinkit\/streamscreenobject\/stream(_:didoutput:when:)"}],"path":"\/documentation\/haishinkit\/streamscreenobject\/hkstreamoutput-implementations"}],"title":"StreamScreenObject"},{"title":"TSReader","type":"class","path":"\/documentation\/haishinkit\/tsreader","children":[{"title":"Initializers","type":"groupMarker"},{"type":"init","title":"init()","path":"\/documentation\/haishinkit\/tsreader\/init()"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/tsreader\/output","title":"var output: AsyncStream<(UInt16, CMSampleBuffer)>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func clear()","path":"\/documentation\/haishinkit\/tsreader\/clear()","type":"method"},{"title":"func read(Data) -> Int","path":"\/documentation\/haishinkit\/tsreader\/read(_:)","type":"method"}]},{"type":"class","title":"TSWriter","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/tswriter\/init(segmentduration:)","type":"init","title":"init(segmentDuration: Double)"},{"title":"Instance Properties","type":"groupMarker"},{"type":"property","title":"var audioFormat: AVAudioFormat?","path":"\/documentation\/haishinkit\/tswriter\/audioformat"},{"title":"var expectedMedias: Set<AVMediaType>","path":"\/documentation\/haishinkit\/tswriter\/expectedmedias","type":"property"},{"title":"var output: AsyncStream<Data>","path":"\/documentation\/haishinkit\/tswriter\/output","type":"property"},{"title":"var videoFormat: CMFormatDescription?","type":"property","path":"\/documentation\/haishinkit\/tswriter\/videoformat"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func append(CMSampleBuffer)","path":"\/documentation\/haishinkit\/tswriter\/append(_:)"},{"type":"method","path":"\/documentation\/haishinkit\/tswriter\/append(_:when:)","title":"func append(AVAudioBuffer, when: AVAudioTime)"},{"type":"method","path":"\/documentation\/haishinkit\/tswriter\/clear()","title":"func clear()"}],"path":"\/documentation\/haishinkit\/tswriter"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/textscreenobject\/attributes","type":"property","title":"var attributes: [NSAttributedString.Key : Any]?"},{"type":"property","title":"var bounds: CGRect","path":"\/documentation\/haishinkit\/textscreenobject\/bounds"},{"title":"var string: String","path":"\/documentation\/haishinkit\/textscreenobject\/string","type":"property"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/haishinkit\/textscreenobject\/makebounds(_:)","title":"func makeBounds(CGSize) -> CGRect"},{"path":"\/documentation\/haishinkit\/textscreenobject\/makeimage(_:)","type":"method","title":"func makeImage(some ScreenRenderer) -> CGImage?"}],"type":"class","title":"TextScreenObject","path":"\/documentation\/haishinkit\/textscreenobject"},{"type":"class","title":"VideoDeviceUnit","path":"\/documentation\/haishinkit\/videodeviceunit","children":[{"title":"Instance Properties","type":"groupMarker"},{"type":"property","title":"var colorFormat: OSType","path":"\/documentation\/haishinkit\/videodeviceunit\/colorformat-swift.property"},{"type":"property","path":"\/documentation\/haishinkit\/videodeviceunit\/connection","title":"var connection: AVCaptureConnection?"},{"title":"var device: AVCaptureDevice?","type":"property","path":"\/documentation\/haishinkit\/videodeviceunit\/device"},{"title":"var input: AVCaptureInput?","type":"property","path":"\/documentation\/haishinkit\/videodeviceunit\/input"},{"type":"property","path":"\/documentation\/haishinkit\/videodeviceunit\/isvideomirrored","title":"var isVideoMirrored: Bool"},{"title":"var output: VideoDeviceUnit.Output?","path":"\/documentation\/haishinkit\/videodeviceunit\/output-swift.property","type":"property"},{"type":"property","path":"\/documentation\/haishinkit\/videodeviceunit\/track","title":"let track: UInt8"},{"type":"property","path":"\/documentation\/haishinkit\/videodeviceunit\/videoorientation","title":"var videoOrientation: AVCaptureVideoOrientation"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videodeviceunit\/output-swift.typealias","type":"typealias","title":"VideoDeviceUnit.Output"},{"title":"Type Properties","type":"groupMarker"},{"type":"property","path":"\/documentation\/haishinkit\/videodeviceunit\/colorformat-swift.type.property","title":"static let colorFormat: OSType"}]},{"path":"\/documentation\/haishinkit\/videorotator","title":"VideoRotator","type":"class","children":[{"type":"groupMarker","title":"Initializers"},{"title":"init?()","type":"init","path":"\/documentation\/haishinkit\/videorotator\/init()"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func rotate(buffer: CMSampleBuffer) -> Result<CMSampleBuffer, VideoRotator.Error>","path":"\/documentation\/haishinkit\/videorotator\/rotate(buffer:)","type":"method"},{"type":"groupMarker","title":"Enumerations"},{"type":"enum","path":"\/documentation\/haishinkit\/videorotator\/error","title":"VideoRotator.Error","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case cannotAllocatePixelBuffer(CVReturn)","path":"\/documentation\/haishinkit\/videorotator\/error\/cannotallocatepixelbuffer(_:)","type":"case"},{"title":"case noImageBuffer","path":"\/documentation\/haishinkit\/videorotator\/error\/noimagebuffer","type":"case"},{"title":"case noOrientationInfo","type":"case","path":"\/documentation\/haishinkit\/videorotator\/error\/noorientationinfo"},{"path":"\/documentation\/haishinkit\/videorotator\/error\/rotationfailure(_:)","type":"case","title":"case rotationFailure(OSStatus)"},{"title":"case unsupportedOrientation","path":"\/documentation\/haishinkit\/videorotator\/error\/unsupportedorientation","type":"case"},{"type":"groupMarker","title":"Default Implementations"},{"title":"Error Implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/videorotator\/error\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/haishinkit\/videorotator\/error\/error-implementations","type":"symbol"}]}]},{"type":"class","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videotrackscreenobject\/init()","title":"init()","type":"init"},{"type":"groupMarker","title":"Instance Properties"},{"title":"var chromaKeyColor: CGColor?","type":"property","path":"\/documentation\/haishinkit\/videotrackscreenobject\/chromakeycolor"},{"path":"\/documentation\/haishinkit\/videotrackscreenobject\/framerate","title":"var frameRate: Int","type":"property"},{"title":"var track: UInt8","path":"\/documentation\/haishinkit\/videotrackscreenobject\/track","type":"property"},{"title":"var videoGravity: AVLayerVideoGravity","type":"property","path":"\/documentation\/haishinkit\/videotrackscreenobject\/videogravity"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func draw(some ScreenRenderer)","type":"method","path":"\/documentation\/haishinkit\/videotrackscreenobject\/draw(_:)"},{"title":"func makeBounds(CGSize) -> CGRect","type":"method","path":"\/documentation\/haishinkit\/videotrackscreenobject\/makebounds(_:)"},{"type":"method","path":"\/documentation\/haishinkit\/videotrackscreenobject\/makeimage(_:)","title":"func makeImage(some ScreenRenderer) -> CGImage?"},{"title":"func registerVideoEffect(some VideoEffect) -> Bool","path":"\/documentation\/haishinkit\/videotrackscreenobject\/registervideoeffect(_:)","type":"method"},{"path":"\/documentation\/haishinkit\/videotrackscreenobject\/unregistervideoeffect(_:)","type":"method","title":"func unregisterVideoEffect(some VideoEffect) -> Bool"}],"path":"\/documentation\/haishinkit\/videotrackscreenobject","title":"VideoTrackScreenObject"},{"title":"Protocols","type":"groupMarker"},{"title":"AsyncRunner","path":"\/documentation\/haishinkit\/asyncrunner","type":"protocol","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/haishinkit\/asyncrunner\/isrunning","title":"var isRunning: Bool"},{"title":"Instance Methods","type":"groupMarker"},{"type":"method","title":"func startRunning() async","path":"\/documentation\/haishinkit\/asyncrunner\/startrunning()"},{"path":"\/documentation\/haishinkit\/asyncrunner\/stoprunning()","type":"method","title":"func stopRunning() async"}]},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"title":"var chromaKeyColor: CGColor?","type":"property","path":"\/documentation\/haishinkit\/chromakeyprocessable\/chromakeycolor"}],"path":"\/documentation\/haishinkit\/chromakeyprocessable","title":"ChromaKeyProcessable","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var audioSettings: AudioCodecSettings","path":"\/documentation\/haishinkit\/hkstream\/audiosettings","type":"property"},{"title":"var readyState: HKStreamReadyState","path":"\/documentation\/haishinkit\/hkstream\/readystate","type":"property"},{"path":"\/documentation\/haishinkit\/hkstream\/soundtransform","title":"var soundTransform: SoundTransform?","type":"property"},{"type":"property","path":"\/documentation\/haishinkit\/hkstream\/videosettings","title":"var videoSettings: VideoCodecSettings"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/hkstream\/addoutput(_:)","title":"func addOutput(some HKStreamOutput)","type":"method"},{"type":"method","title":"func append(CMSampleBuffer)","path":"\/documentation\/haishinkit\/hkstream\/append(_:)"},{"title":"func append(AVAudioBuffer, when: AVAudioTime)","type":"method","path":"\/documentation\/haishinkit\/hkstream\/append(_:when:)"},{"title":"func attachAudioPlayer(AudioPlayer?) async","path":"\/documentation\/haishinkit\/hkstream\/attachaudioplayer(_:)","type":"method"},{"title":"func dispatch(NetworkMonitorEvent) async","type":"method","path":"\/documentation\/haishinkit\/hkstream\/dispatch(_:)"},{"type":"method","path":"\/documentation\/haishinkit\/hkstream\/removeoutput(_:)","title":"func removeOutput(some HKStreamOutput)"},{"path":"\/documentation\/haishinkit\/hkstream\/setaudiosettings(_:)","title":"func setAudioSettings(AudioCodecSettings)","type":"method"},{"title":"func setBitrateStorategy((some HKStreamBitRateStrategy)?)","path":"\/documentation\/haishinkit\/hkstream\/setbitratestorategy(_:)","type":"method"},{"title":"func setSoundTransform(SoundTransform) async","type":"method","path":"\/documentation\/haishinkit\/hkstream\/setsoundtransform(_:)"},{"path":"\/documentation\/haishinkit\/hkstream\/setvideoinputbuffercounts(_:)","type":"method","title":"func setVideoInputBufferCounts(Int)"},{"title":"func setVideoSettings(VideoCodecSettings)","path":"\/documentation\/haishinkit\/hkstream\/setvideosettings(_:)","type":"method"}],"title":"HKStream","path":"\/documentation\/haishinkit\/hkstream","type":"protocol"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var mamimumAudioBitRate: Int","path":"\/documentation\/haishinkit\/hkstreambitratestrategy\/mamimumaudiobitrate"},{"type":"property","title":"var mamimumVideoBitRate: Int","path":"\/documentation\/haishinkit\/hkstreambitratestrategy\/mamimumvideobitrate"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/hkstreambitratestrategy\/adjustbitrate(_:stream:)","title":"func adjustBitrate(NetworkMonitorEvent, stream: some HKStream) async","type":"method"}],"title":"HKStreamBitRateStrategy","path":"\/documentation\/haishinkit\/hkstreambitratestrategy","type":"protocol"},{"children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/hkstreamoutput\/stream(_:didoutput:)","type":"method","title":"func stream(some HKStream, didOutput: CMSampleBuffer)"},{"type":"method","path":"\/documentation\/haishinkit\/hkstreamoutput\/stream(_:didoutput:when:)","title":"func stream(some HKStream, didOutput: AVAudioBuffer, when: AVAudioTime)"}],"path":"\/documentation\/haishinkit\/hkstreamoutput","title":"HKStreamOutput","type":"protocol"},{"path":"\/documentation\/haishinkit\/mediamixeroutput","type":"protocol","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var audioTrackId: UInt8?","path":"\/documentation\/haishinkit\/mediamixeroutput\/audiotrackid","type":"property"},{"type":"property","path":"\/documentation\/haishinkit\/mediamixeroutput\/videotrackid","title":"var videoTrackId: UInt8?"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/mediamixeroutput\/mixer(_:didoutput:)","title":"func mixer(MediaMixer, didOutput: CMSampleBuffer)","type":"method"},{"path":"\/documentation\/haishinkit\/mediamixeroutput\/mixer(_:didoutput:when:)","title":"func mixer(MediaMixer, didOutput: AVAudioPCMBuffer, when: AVAudioTime)","type":"method"},{"title":"func selectTrack(UInt8?, mediaType: CMFormatDescription.MediaType) async","type":"method","path":"\/documentation\/haishinkit\/mediamixeroutput\/selecttrack(_:mediatype:)"}],"title":"MediaMixerOutput"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var connected: Bool","type":"property","path":"\/documentation\/haishinkit\/networkconnection\/connected"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func close() async throws","path":"\/documentation\/haishinkit\/networkconnection\/close()"}],"type":"protocol","title":"NetworkConnection","path":"\/documentation\/haishinkit\/networkconnection"},{"type":"protocol","children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/networktransportreporter\/makenetworkmonitor()","type":"method","title":"func makeNetworkMonitor() async -> NetworkMonitor"},{"path":"\/documentation\/haishinkit\/networktransportreporter\/makenetworktransportreport()","title":"func makeNetworkTransportReport() async -> NetworkTransportReport","type":"method"}],"title":"NetworkTransportReporter","path":"\/documentation\/haishinkit\/networktransportreporter"},{"title":"Runner","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var isRunning: Bool","path":"\/documentation\/haishinkit\/runner\/isrunning"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func startRunning()","type":"method","path":"\/documentation\/haishinkit\/runner\/startrunning()"},{"path":"\/documentation\/haishinkit\/runner\/stoprunning()","title":"func stopRunning()","type":"method"}],"path":"\/documentation\/haishinkit\/runner","type":"protocol"},{"path":"\/documentation\/haishinkit\/screendelegate","title":"ScreenDelegate","type":"protocol","children":[{"type":"groupMarker","title":"Instance Methods"},{"title":"func screen(Screen, willLayout: CMTime)","path":"\/documentation\/haishinkit\/screendelegate\/screen(_:willlayout:)","type":"method"}]},{"type":"protocol","path":"\/documentation\/haishinkit\/screenrenderer","children":[{"type":"groupMarker","title":"Instance Properties"},{"title":"var backgroundColor: CGColor","path":"\/documentation\/haishinkit\/screenrenderer\/backgroundcolor","type":"property"},{"title":"var bounds: CGRect","type":"property","path":"\/documentation\/haishinkit\/screenrenderer\/bounds"},{"path":"\/documentation\/haishinkit\/screenrenderer\/context","title":"var context: CIContext","type":"property"},{"type":"property","title":"var presentationTimeStamp: CMTime","path":"\/documentation\/haishinkit\/screenrenderer\/presentationtimestamp"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/screenrenderer\/draw(_:)","type":"method","title":"func draw(ScreenObject)"},{"type":"method","path":"\/documentation\/haishinkit\/screenrenderer\/layout(_:)","title":"func layout(ScreenObject)"},{"type":"method","title":"func setTarget(CVPixelBuffer?)","path":"\/documentation\/haishinkit\/screenrenderer\/settarget(_:)"}],"title":"ScreenRenderer"},{"path":"\/documentation\/haishinkit\/videoeffect","type":"protocol","title":"VideoEffect","children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videoeffect\/execute(_:)","title":"func execute(CIImage) -> CIImage","type":"method"}]},{"title":"Structures","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/amfarray","type":"struct","title":"AMFArray","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/haishinkit\/amfarray\/init(count:)","type":"init","title":"init(count: Int)"},{"title":"init(data: [(any Sendable)?])","path":"\/documentation\/haishinkit\/amfarray\/init(data:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"type":"property","title":"var length: Int","path":"\/documentation\/haishinkit\/amfarray\/length"},{"title":"Subscripts","type":"groupMarker"},{"type":"subscript","path":"\/documentation\/haishinkit\/amfarray\/subscript(_:)","title":"subscript(Any) -> (any Sendable)?"},{"type":"groupMarker","title":"Default Implementations"},{"title":"CustomDebugStringConvertible Implementations","path":"\/documentation\/haishinkit\/amfarray\/customdebugstringconvertible-implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/amfarray\/debugdescription","type":"property","title":"var debugDescription: String"}],"type":"symbol"},{"path":"\/documentation\/haishinkit\/amfarray\/equatable-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/haishinkit\/amfarray\/!=(_:_:)"},{"title":"static func == (AMFArray, AMFArray) -> Bool","type":"op","path":"\/documentation\/haishinkit\/amfarray\/==(_:_:)"}],"title":"Equatable Implementations"},{"children":[{"title":"Initializers","type":"groupMarker"},{"type":"init","title":"init(arrayLiteral: (any Sendable)?...)","path":"\/documentation\/haishinkit\/amfarray\/init(arrayliteral:)"}],"path":"\/documentation\/haishinkit\/amfarray\/expressiblebyarrayliteral-implementations","title":"ExpressibleByArrayLiteral Implementations","type":"symbol"}]},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/amftypedobject\/data","title":"let data: AMFObject","type":"property"},{"path":"\/documentation\/haishinkit\/amftypedobject\/typename","type":"property","title":"let typeName: String"}],"title":"AMFTypedObject","type":"struct","path":"\/documentation\/haishinkit\/amftypedobject"},{"path":"\/documentation\/haishinkit\/amfundefined","title":"AMFUndefined","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var description: String","path":"\/documentation\/haishinkit\/amfundefined\/description"}],"type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(data: String)","path":"\/documentation\/haishinkit\/amfxml\/init(data:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/amfxml\/description","type":"property","title":"var description: String"},{"title":"Default Implementations","type":"groupMarker"},{"type":"symbol","title":"Equatable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/haishinkit\/amfxml\/!=(_:_:)"},{"title":"static func == (AMFXML, AMFXML) -> Bool","path":"\/documentation\/haishinkit\/amfxml\/==(_:_:)","type":"op"}],"path":"\/documentation\/haishinkit\/amfxml\/equatable-implementations"}],"path":"\/documentation\/haishinkit\/amfxml","type":"struct","title":"AMFXML"},{"title":"AMFXMLDocument","path":"\/documentation\/haishinkit\/amfxmldocument","type":"struct","children":[{"title":"Initializers","type":"groupMarker"},{"type":"init","title":"init(data: String)","path":"\/documentation\/haishinkit\/amfxmldocument\/init(data:)"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/amfxmldocument\/description","type":"property","title":"var description: String"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/amfxmldocument\/equatable-implementations","title":"Equatable Implementations","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/haishinkit\/amfxmldocument\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"},{"title":"static func == (AMFXMLDocument, AMFXMLDocument) -> Bool","path":"\/documentation\/haishinkit\/amfxmldocument\/==(_:_:)","type":"op"}],"type":"symbol"}]},{"title":"AudioCodecSettings","type":"struct","children":[{"title":"Initializers","type":"groupMarker"},{"type":"init","path":"\/documentation\/haishinkit\/audiocodecsettings\/init(bitrate:downmix:channelmap:samplerate:format:)","title":"init(bitRate: Int, downmix: Bool, channelMap: [Int]?, sampleRate: Float64, format: AudioCodecSettings.Format)"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/haishinkit\/audiocodecsettings\/init(from:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var bitRate: Int","path":"\/documentation\/haishinkit\/audiocodecsettings\/bitrate","type":"property"},{"path":"\/documentation\/haishinkit\/audiocodecsettings\/channelmap","title":"var channelMap: [Int]?","type":"property"},{"path":"\/documentation\/haishinkit\/audiocodecsettings\/downmix","title":"var downmix: Bool","type":"property"},{"path":"\/documentation\/haishinkit\/audiocodecsettings\/format-swift.property","title":"var format: AudioCodecSettings.Format","type":"property"},{"path":"\/documentation\/haishinkit\/audiocodecsettings\/samplerate","type":"property","title":"let sampleRate: Float64"},{"title":"Type Properties","type":"groupMarker"},{"type":"property","title":"static let `default`: AudioCodecSettings","path":"\/documentation\/haishinkit\/audiocodecsettings\/default"},{"type":"property","path":"\/documentation\/haishinkit\/audiocodecsettings\/defaultbitrate","title":"static let defaultBitRate: Int"},{"title":"static let maximumNumberOfChannels: UInt32","path":"\/documentation\/haishinkit\/audiocodecsettings\/maximumnumberofchannels","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"type":"enum","path":"\/documentation\/haishinkit\/audiocodecsettings\/format-swift.enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/audiocodecsettings\/format-swift.enum\/aac","title":"case aac","type":"case"},{"title":"case opus","type":"case","path":"\/documentation\/haishinkit\/audiocodecsettings\/format-swift.enum\/opus"},{"type":"case","title":"case pcm","path":"\/documentation\/haishinkit\/audiocodecsettings\/format-swift.enum\/pcm"},{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","type":"init","path":"\/documentation\/haishinkit\/audiocodecsettings\/format-swift.enum\/init(from:)"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"type":"op","path":"\/documentation\/haishinkit\/audiocodecsettings\/format-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"}],"title":"Equatable Implementations","path":"\/documentation\/haishinkit\/audiocodecsettings\/format-swift.enum\/equatable-implementations"}],"title":"AudioCodecSettings.Format"}],"path":"\/documentation\/haishinkit\/audiocodecsettings"},{"path":"\/documentation\/haishinkit\/audiomixersettings","type":"struct","title":"AudioMixerSettings","children":[{"title":"Initializers","type":"groupMarker"},{"type":"init","title":"init(sampleRate: Float64, channels: UInt32, isMuted: Bool, mainTrack: UInt8, tracks: [UInt8 : AudioMixerTrackSettings])","path":"\/documentation\/haishinkit\/audiomixersettings\/init(samplerate:channels:ismuted:maintrack:tracks:)"},{"type":"groupMarker","title":"Instance Properties"},{"title":"let channels: UInt32","path":"\/documentation\/haishinkit\/audiomixersettings\/channels","type":"property"},{"title":"var isMuted: Bool","path":"\/documentation\/haishinkit\/audiomixersettings\/ismuted","type":"property"},{"title":"var mainTrack: UInt8","path":"\/documentation\/haishinkit\/audiomixersettings\/maintrack","type":"property"},{"path":"\/documentation\/haishinkit\/audiomixersettings\/maximumnumberofchannels","title":"var maximumNumberOfChannels: UInt32","type":"property"},{"path":"\/documentation\/haishinkit\/audiomixersettings\/samplerate","type":"property","title":"let sampleRate: Float64"},{"path":"\/documentation\/haishinkit\/audiomixersettings\/tracks","type":"property","title":"var tracks: [UInt8 : AudioMixerTrackSettings]"},{"title":"Type Properties","type":"groupMarker"},{"type":"property","path":"\/documentation\/haishinkit\/audiomixersettings\/default","title":"static let `default`: AudioMixerSettings"},{"type":"property","title":"static let maximumSampleRate: Float64","path":"\/documentation\/haishinkit\/audiomixersettings\/maximumsamplerate"}]},{"type":"struct","path":"\/documentation\/haishinkit\/audiomixertracksettings","title":"AudioMixerTrackSettings","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/haishinkit\/audiomixertracksettings\/init(from:)","type":"init"},{"type":"init","title":"init(volume: Float, isMuted: Bool, downmix: Bool, channelMap: [Int]?)","path":"\/documentation\/haishinkit\/audiomixertracksettings\/init(volume:ismuted:downmix:channelmap:)"},{"title":"Instance Properties","type":"groupMarker"},{"type":"property","title":"var channelMap: [Int]?","path":"\/documentation\/haishinkit\/audiomixertracksettings\/channelmap"},{"title":"var downmix: Bool","type":"property","path":"\/documentation\/haishinkit\/audiomixertracksettings\/downmix"},{"title":"var isMuted: Bool","type":"property","path":"\/documentation\/haishinkit\/audiomixertracksettings\/ismuted"},{"title":"var volume: Float","type":"property","path":"\/documentation\/haishinkit\/audiomixertracksettings\/volume"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/audiomixertracksettings\/default","title":"static let `default`: AudioMixerTrackSettings","type":"property"}]},{"children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/haishinkit\/hkatomic\/init(_:)","type":"init","title":"init(A)"},{"title":"Instance Properties","type":"groupMarker"},{"type":"property","title":"var value: A","path":"\/documentation\/haishinkit\/hkatomic\/value"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/hkatomic\/mutate(_:)","type":"method","title":"func mutate((inout A) -> Void)"}],"path":"\/documentation\/haishinkit\/hkatomic","type":"struct","title":"HKAtomic"},{"title":"NetworkMonitorReport","type":"struct","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/networkmonitorreport\/currentbytesinpersecond","title":"let currentBytesInPerSecond: Int","type":"property"},{"path":"\/documentation\/haishinkit\/networkmonitorreport\/currentbytesoutpersecond","type":"property","title":"let currentBytesOutPerSecond: Int"},{"path":"\/documentation\/haishinkit\/networkmonitorreport\/currentqueuebytesout","type":"property","title":"let currentQueueBytesOut: Int"},{"path":"\/documentation\/haishinkit\/networkmonitorreport\/totalbytesin","title":"let totalBytesIn: Int","type":"property"},{"title":"let totalBytesOut: Int","path":"\/documentation\/haishinkit\/networkmonitorreport\/totalbytesout","type":"property"}],"path":"\/documentation\/haishinkit\/networkmonitorreport"},{"children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(queueBytesOut: Int, totalBytesIn: Int, totalBytesOut: Int)","type":"init","path":"\/documentation\/haishinkit\/networktransportreport\/init(queuebytesout:totalbytesin:totalbytesout:)"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/networktransportreport\/queuebytesout","title":"let queueBytesOut: Int","type":"property"},{"path":"\/documentation\/haishinkit\/networktransportreport\/totalbytesin","type":"property","title":"let totalBytesIn: Int"},{"path":"\/documentation\/haishinkit\/networktransportreport\/totalbytesout","type":"property","title":"let totalBytesOut: Int"}],"type":"struct","path":"\/documentation\/haishinkit\/networktransportreport","title":"NetworkTransportReport"},{"path":"\/documentation\/haishinkit\/rtmpresponse","type":"struct","title":"RTMPResponse","children":[{"title":"Instance Properties","type":"groupMarker"},{"type":"property","path":"\/documentation\/haishinkit\/rtmpresponse\/arguments","title":"let arguments: [(any Sendable)?]"},{"path":"\/documentation\/haishinkit\/rtmpresponse\/status","type":"property","title":"let status: RTMPStatus?"}]},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/rtmpstatus\/code","type":"property","title":"let code: String"},{"title":"let description: String","path":"\/documentation\/haishinkit\/rtmpstatus\/description","type":"property"},{"path":"\/documentation\/haishinkit\/rtmpstatus\/level","type":"property","title":"let level: String"},{"title":"Subscripts","type":"groupMarker"},{"title":"subscript(dynamicMember _: String) -> Double?","path":"\/documentation\/haishinkit\/rtmpstatus\/subscript(dynamicmember:)-7qc0b","type":"subscript"},{"title":"subscript(dynamicMember _: String) -> String?","path":"\/documentation\/haishinkit\/rtmpstatus\/subscript(dynamicmember:)-9sprr","type":"subscript"}],"path":"\/documentation\/haishinkit\/rtmpstatus","type":"struct","title":"RTMPStatus"},{"path":"\/documentation\/haishinkit\/rtmpstreaminfo","title":"RTMPStreamInfo","children":[{"type":"groupMarker","title":"Instance Properties"},{"title":"var byteCount: Int","path":"\/documentation\/haishinkit\/rtmpstreaminfo\/bytecount","type":"property"},{"title":"var currentBytesPerSecond: Int","type":"property","path":"\/documentation\/haishinkit\/rtmpstreaminfo\/currentbytespersecond"},{"title":"var resourceName: String?","path":"\/documentation\/haishinkit\/rtmpstreaminfo\/resourcename","type":"property"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var debugDescription: String","path":"\/documentation\/haishinkit\/rtmpstreaminfo\/debugdescription","type":"property"}],"path":"\/documentation\/haishinkit\/rtmpstreaminfo\/customdebugstringconvertible-implementations","type":"symbol","title":"CustomDebugStringConvertible Implementations"}],"type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"type":"init","title":"init(volume: Float, pan: Float)","path":"\/documentation\/haishinkit\/soundtransform\/init(volume:pan:)"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/soundtransform\/pan","type":"property","title":"var pan: Float"},{"title":"var volume: Float","path":"\/documentation\/haishinkit\/soundtransform\/volume","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/soundtransform\/defaultpan","type":"property","title":"static let defaultPan: Float"},{"type":"property","title":"static let defaultVolume: Float","path":"\/documentation\/haishinkit\/soundtransform\/defaultvolume"},{"title":"Default Implementations","type":"groupMarker"},{"title":"CustomDebugStringConvertible Implementations","type":"symbol","path":"\/documentation\/haishinkit\/soundtransform\/customdebugstringconvertible-implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"type":"property","title":"var debugDescription: String","path":"\/documentation\/haishinkit\/soundtransform\/debugdescription"}]},{"children":[{"title":"Operators","type":"groupMarker"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/haishinkit\/soundtransform\/!=(_:_:)"}],"title":"Equatable Implementations","path":"\/documentation\/haishinkit\/soundtransform\/equatable-implementations","type":"symbol"}],"type":"struct","path":"\/documentation\/haishinkit\/soundtransform","title":"SoundTransform"},{"path":"\/documentation\/haishinkit\/vtsessionoption","type":"struct","children":[{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/haishinkit\/vtsessionoption\/!=(_:_:)"},{"path":"\/documentation\/haishinkit\/vtsessionoption\/==(_:_:)","title":"static func == (VTSessionOption, VTSessionOption) -> Bool","type":"op"}],"title":"Equatable Implementations","path":"\/documentation\/haishinkit\/vtsessionoption\/equatable-implementations"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/vtsessionoption\/hash(into:)","type":"method","title":"func hash(into: inout Hasher)"}],"path":"\/documentation\/haishinkit\/vtsessionoption\/hashable-implementations","title":"Hashable Implementations","type":"symbol"}],"title":"VTSessionOption"},{"title":"VideoCodecSettings","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"type":"init","title":"init(videoSize: CGSize, bitRate: Int, profileLevel: String, scalingMode: VideoCodecSettings.ScalingMode, bitRateMode: VideoCodecSettings.BitRateMode, maxKeyFrameIntervalDuration: Int32, allowFrameReordering: Bool?, dataRateLimits: [Double]?, isHardwareEncoderEnabled: Bool)","path":"\/documentation\/haishinkit\/videocodecsettings\/init(videosize:bitrate:profilelevel:scalingmode:bitratemode:maxkeyframeintervalduration:allowframereordering:dataratelimits:ishardwareencoderenabled:)"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/allowframereordering","type":"property","title":"var allowFrameReordering: Bool?"},{"title":"var bitRate: Int","type":"property","path":"\/documentation\/haishinkit\/videocodecsettings\/bitrate"},{"type":"property","title":"var bitRateMode: VideoCodecSettings.BitRateMode","path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.property"},{"type":"property","title":"var dataRateLimits: [Double]?","path":"\/documentation\/haishinkit\/videocodecsettings\/dataratelimits"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/frameinterval","title":"var frameInterval: Double","type":"property"},{"type":"property","path":"\/documentation\/haishinkit\/videocodecsettings\/ishardwareencoderenabled","title":"var isHardwareEncoderEnabled: Bool"},{"title":"var maxKeyFrameIntervalDuration: Int32","path":"\/documentation\/haishinkit\/videocodecsettings\/maxkeyframeintervalduration","type":"property"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/profilelevel","title":"var profileLevel: String","type":"property"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.property","title":"var scalingMode: VideoCodecSettings.ScalingMode","type":"property"},{"type":"property","path":"\/documentation\/haishinkit\/videocodecsettings\/videosize","title":"var videoSize: CGSize"},{"title":"Type Properties","type":"groupMarker"},{"title":"static let `default`: VideoCodecSettings","type":"property","path":"\/documentation\/haishinkit\/videocodecsettings\/default"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/frameinterval01","type":"property","title":"static let frameInterval01: Double"},{"title":"static let frameInterval05: Double","path":"\/documentation\/haishinkit\/videocodecsettings\/frameinterval05","type":"property"},{"type":"property","title":"static let frameInterval10: Double","path":"\/documentation\/haishinkit\/videocodecsettings\/frameinterval10"},{"title":"static let frameInterval30: Double","path":"\/documentation\/haishinkit\/videocodecsettings\/frameinterval30","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/average","title":"case average","type":"case"},{"type":"case","title":"case constant","path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/constant"},{"type":"groupMarker","title":"Initializers"},{"title":"init?(rawValue: String)","path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/init(rawvalue:)","type":"init"},{"type":"groupMarker","title":"Default Implementations"},{"title":"Equatable Implementations","path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"type":"op","path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"}],"type":"symbol"},{"title":"RawRepresentable Implementations","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"type":"groupMarker","title":"Instance Properties"},{"title":"var hashValue: Int","path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/hashvalue","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"type":"method","path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/encode(to:)","title":"func encode(to: any Encoder) throws"},{"type":"method","path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)"}],"type":"symbol","path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/rawrepresentable-implementations"}],"path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum","title":"VideoCodecSettings.BitRateMode","type":"enum"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum","type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case cropSourceToCleanAperture","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/cropsourcetocleanaperture","type":"case"},{"title":"case letterbox","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/letterbox","type":"case"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/normal","title":"case normal","type":"case"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/trim","type":"case","title":"case trim"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"type":"groupMarker","title":"Operators"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/!=(_:_:)","type":"op"}],"title":"Equatable Implementations","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/equatable-implementations","type":"symbol"},{"type":"symbol","title":"RawRepresentable Implementations","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/hashvalue","type":"property","title":"var hashValue: Int"},{"title":"Instance Methods","type":"groupMarker"},{"type":"method","title":"func encode(to: any Encoder) throws","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/encode(to:)"},{"title":"func hash(into: inout Hasher)","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/hash(into:)","type":"method"}],"path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/rawrepresentable-implementations"}],"title":"VideoCodecSettings.ScalingMode"}],"path":"\/documentation\/haishinkit\/videocodecsettings","type":"struct"},{"title":"VideoMixerSettings","path":"\/documentation\/haishinkit\/videomixersettings","type":"struct","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videomixersettings\/init(from:)","type":"init","title":"init(from: any Decoder) throws"},{"title":"init(mode: VideoMixerSettings.Mode, isMuted: Bool, mainTrack: UInt8)","type":"init","path":"\/documentation\/haishinkit\/videomixersettings\/init(mode:ismuted:maintrack:)"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/videomixersettings\/ismuted","title":"var isMuted: Bool","type":"property"},{"title":"var mainTrack: UInt8","type":"property","path":"\/documentation\/haishinkit\/videomixersettings\/maintrack"},{"title":"var mode: VideoMixerSettings.Mode","path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.property","type":"property"},{"type":"groupMarker","title":"Type Properties"},{"path":"\/documentation\/haishinkit\/videomixersettings\/default","title":"static let `default`: VideoMixerSettings","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"type":"enum","path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum","title":"VideoMixerSettings.Mode","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"title":"case offscreen","type":"case","path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/offscreen"},{"path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/passthrough","type":"case","title":"case passthrough"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/equatable-implementations","title":"Equatable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/!=(_:_:)"}]},{"title":"RawRepresentable Implementations","path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/rawrepresentable-implementations","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","type":"init","path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/init(from:)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/hashvalue","title":"var hashValue: Int"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/encode(to:)","type":"method","title":"func encode(to: any Encoder) throws"},{"type":"method","title":"func hash(into: inout Hasher)","path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/hash(into:)"}],"type":"symbol"}]}]},{"title":"Variables","type":"groupMarker"},{"title":"let kAMFUndefined: AMFUndefined","path":"\/documentation\/haishinkit\/kamfundefined","type":"var"},{"title":"let kHaishinKitIdentifier: String","path":"\/documentation\/haishinkit\/khaishinkitidentifier","type":"var"},{"title":"Type Aliases","type":"groupMarker"},{"title":"AMFObject","path":"\/documentation\/haishinkit\/amfobject","type":"typealias"},{"title":"AudioDeviceConfigurationBlock","path":"\/documentation\/haishinkit\/audiodeviceconfigurationblock","type":"typealias"},{"path":"\/documentation\/haishinkit\/videodeviceconfigurationblock","type":"typealias","title":"VideoDeviceConfigurationBlock"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Type Methods"},{"title":"static func device(withLocalizedName: String, mediaType: AVMediaType) -> AVCaptureDevice?","type":"method","path":"\/documentation\/haishinkit\/deviceutil\/device(withlocalizedname:mediatype:)"}],"path":"\/documentation\/haishinkit\/deviceutil","title":"DeviceUtil","type":"enum"},{"title":"HKStreamReadyState","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/haishinkit\/hkstreamreadystate\/idle","title":"case idle","type":"case"},{"path":"\/documentation\/haishinkit\/hkstreamreadystate\/play","type":"case","title":"case play"},{"path":"\/documentation\/haishinkit\/hkstreamreadystate\/playing","type":"case","title":"case playing"},{"type":"case","title":"case publish","path":"\/documentation\/haishinkit\/hkstreamreadystate\/publish"},{"title":"case publishing","type":"case","path":"\/documentation\/haishinkit\/hkstreamreadystate\/publishing"},{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init?(rawValue: Int)","path":"\/documentation\/haishinkit\/hkstreamreadystate\/init(rawvalue:)"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/haishinkit\/hkstreamreadystate\/equatable-implementations","type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"type":"op","path":"\/documentation\/haishinkit\/hkstreamreadystate\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"}],"title":"Equatable Implementations"},{"title":"RawRepresentable Implementations","path":"\/documentation\/haishinkit\/hkstreamreadystate\/rawrepresentable-implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/hkstreamreadystate\/hashvalue","title":"var hashValue: Int","type":"property"},{"type":"groupMarker","title":"Instance Methods"},{"title":"func hash(into: inout Hasher)","type":"method","path":"\/documentation\/haishinkit\/hkstreamreadystate\/hash(into:)"}],"type":"symbol"}],"type":"enum","path":"\/documentation\/haishinkit\/hkstreamreadystate"},{"type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/haishinkit\/networkmonitorevent\/publishinsufficientbwoccured(report:)","type":"case","title":"case publishInsufficientBWOccured(report: NetworkMonitorReport)"},{"path":"\/documentation\/haishinkit\/networkmonitorevent\/reset","type":"case","title":"case reset"},{"type":"case","title":"case status(report: NetworkMonitorReport)","path":"\/documentation\/haishinkit\/networkmonitorevent\/status(report:)"}],"path":"\/documentation\/haishinkit\/networkmonitorevent","title":"NetworkMonitorEvent"},{"title":"RTMPObjectEncoding","type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case amf0","path":"\/documentation\/haishinkit\/rtmpobjectencoding\/amf0","type":"case"},{"type":"case","title":"case amf3","path":"\/documentation\/haishinkit\/rtmpobjectencoding\/amf3"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: UInt8)","type":"init","path":"\/documentation\/haishinkit\/rtmpobjectencoding\/init(rawvalue:)"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/haishinkit\/rtmpobjectencoding\/!=(_:_:)"}],"title":"Equatable Implementations","path":"\/documentation\/haishinkit\/rtmpobjectencoding\/equatable-implementations","type":"symbol"},{"title":"RawRepresentable Implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","path":"\/documentation\/haishinkit\/rtmpobjectencoding\/hashvalue","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/rtmpobjectencoding\/hash(into:)","type":"method","title":"func hash(into: inout Hasher)"}],"type":"symbol","path":"\/documentation\/haishinkit\/rtmpobjectencoding\/rawrepresentable-implementations"}],"path":"\/documentation\/haishinkit\/rtmpobjectencoding"},{"title":"Extended Modules","type":"groupMarker"},{"title":"CoreMedia","type":"extension","children":[{"title":"Extended Classes","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/coremedia\/cmformatdescription\/iscompressed","title":"var isCompressed: Bool","type":"property"}],"type":"extension","title":"CMFormatDescription","path":"\/documentation\/haishinkit\/coremedia\/cmformatdescription"}],"path":"\/documentation\/haishinkit\/coremedia"}],"title":"HaishinKit","path":"\/documentation\/haishinkit","type":"module"},{"title":"MoQTHaishinKit","children":[{"title":"Classes","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection","title":"MoQTConnection","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(MoQTSetupRole, requestTimeOut: UInt64)","path":"\/documentation\/moqthaishinkit\/moqtconnection\/init(_:requesttimeout:)","type":"init"},{"type":"groupMarker","title":"Instance Properties"},{"title":"var objectStream: AsyncStream<MoQTObject>","path":"\/documentation\/moqthaishinkit\/moqtconnection\/objectstream","type":"property"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/requesttimeout","type":"property","title":"let requestTimeout: UInt64"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtconnection\/role","title":"let role: MoQTSetupRole"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/annouce(_:authinfo:)","title":"func annouce([String], authInfo: String?) async throws -> Result<MoQTAnnounceOk, MoQTAnnounceError>","type":"method"},{"title":"func close() async","type":"method","path":"\/documentation\/moqthaishinkit\/moqtconnection\/close()"},{"title":"func connect(String) async throws -> MoQTServerSetup","path":"\/documentation\/moqthaishinkit\/moqtconnection\/connect(_:)","type":"method"},{"type":"method","path":"\/documentation\/moqthaishinkit\/moqtconnection\/send(_:header:)","title":"func send([MoQTObject], header: MoQTStreamHeaderSubgroup) async throws"},{"title":"func subscribe([String], name: String, authInfo: String?) async throws -> Result<MoQTSubscribeOk, MoQTSubscribeError>","path":"\/documentation\/moqthaishinkit\/moqtconnection\/subscribe(_:name:authinfo:)","type":"method"},{"title":"func subscribeAnnouces([String], authInfo: String?) async throws -> Result<MoQTSubscribeAnnouncesOk, MoQTSubscribeAnnouncesError>","path":"\/documentation\/moqthaishinkit\/moqtconnection\/subscribeannouces(_:authinfo:)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"title":"static let defaultPort: Int","type":"property","path":"\/documentation\/moqthaishinkit\/moqtconnection\/defaultport"},{"title":"static let defaultRequestTimeout: UInt64","path":"\/documentation\/moqthaishinkit\/moqtconnection\/defaultrequesttimeout","type":"property"},{"title":"static let supportedProtocols: [String]","path":"\/documentation\/moqthaishinkit\/moqtconnection\/supportedprotocols","type":"property"},{"type":"property","title":"static let supportedVersions: [MoQTVersion]","path":"\/documentation\/moqthaishinkit\/moqtconnection\/supportedversions"},{"type":"groupMarker","title":"Enumerations"},{"type":"enum","path":"\/documentation\/moqthaishinkit\/moqtconnection\/error","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","title":"case connectionTimedOut","path":"\/documentation\/moqthaishinkit\/moqtconnection\/error\/connectiontimedout"},{"title":"case invalidState","type":"case","path":"\/documentation\/moqthaishinkit\/moqtconnection\/error\/invalidstate"},{"title":"case requestTimedOut","path":"\/documentation\/moqthaishinkit\/moqtconnection\/error\/requesttimedout","type":"case"},{"type":"case","path":"\/documentation\/moqthaishinkit\/moqtconnection\/error\/socketerroroccurred(_:)","title":"case socketErrorOccurred(any Error)"},{"title":"case unknownResponse","path":"\/documentation\/moqthaishinkit\/moqtconnection\/error\/unknownresponse","type":"case"},{"title":"case unsupportedCommand(String)","path":"\/documentation\/moqthaishinkit\/moqtconnection\/error\/unsupportedcommand(_:)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Error Implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/error\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/moqthaishinkit\/moqtconnection\/error\/error-implementations","type":"symbol"}],"title":"MoQTConnection.Error"},{"type":"groupMarker","title":"Default Implementations"},{"title":"Actor Implementations","path":"\/documentation\/moqthaishinkit\/moqtconnection\/actor-implementations","type":"symbol","children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/assertisolated(_:file:line:)","type":"method","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)"},{"title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","type":"method","path":"\/documentation\/moqthaishinkit\/moqtconnection\/assumeisolated(_:file:line:)"},{"title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/moqthaishinkit\/moqtconnection\/preconditionisolated(_:file:line:)","type":"method"}]}],"type":"class"},{"title":"Protocols","type":"groupMarker"},{"type":"protocol","children":[{"title":"Instance Properties","type":"groupMarker"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtcontrolmessage\/payload","title":"var payload: Data"},{"path":"\/documentation\/moqthaishinkit\/moqtcontrolmessage\/type","type":"property","title":"var type: MoQTMessageType"}],"title":"MoQTControlMessage","path":"\/documentation\/moqthaishinkit\/moqtcontrolmessage"},{"title":"Structures","type":"groupMarker"},{"type":"struct","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtannounce\/payload","title":"var payload: Data"},{"title":"let subscribeParameters: [MoQTVersionSpecificParameter]","type":"property","path":"\/documentation\/moqthaishinkit\/moqtannounce\/subscribeparameters"},{"title":"let trackNamespace: [String]","path":"\/documentation\/moqthaishinkit\/moqtannounce\/tracknamespace","type":"property"},{"path":"\/documentation\/moqthaishinkit\/moqtannounce\/type","title":"let type: MoQTMessageType","type":"property"}],"title":"MoQTAnnounce","path":"\/documentation\/moqthaishinkit\/moqtannounce"},{"path":"\/documentation\/moqthaishinkit\/moqtannounceerror","title":"MoQTAnnounceError","type":"struct","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtannounceerror\/code","title":"let code: Int"},{"path":"\/documentation\/moqthaishinkit\/moqtannounceerror\/payload","title":"var payload: Data","type":"property"},{"path":"\/documentation\/moqthaishinkit\/moqtannounceerror\/reasonphrase","type":"property","title":"let reasonPhrase: String"},{"type":"property","title":"let trackNamespace: [String]","path":"\/documentation\/moqthaishinkit\/moqtannounceerror\/tracknamespace"},{"type":"property","title":"let type: MoQTMessageType","path":"\/documentation\/moqthaishinkit\/moqtannounceerror\/type"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtannounceerror\/error-implementations","title":"Error Implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtannounceerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"type":"symbol"}]},{"type":"struct","path":"\/documentation\/moqthaishinkit\/moqtannounceok","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtannounceok\/payload","type":"property","title":"var payload: Data"},{"path":"\/documentation\/moqthaishinkit\/moqtannounceok\/tracknamespace","type":"property","title":"let trackNamespace: [String]"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtannounceok\/type","title":"let type: MoQTMessageType"}],"title":"MoQTAnnounceOk"},{"type":"struct","title":"MoQTGoaway","path":"\/documentation\/moqthaishinkit\/moqtgoaway","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"let newSessionURI: String","path":"\/documentation\/moqthaishinkit\/moqtgoaway\/newsessionuri","type":"property"},{"type":"property","title":"var payload: Data","path":"\/documentation\/moqthaishinkit\/moqtgoaway\/payload"},{"title":"let type: MoQTMessageType","path":"\/documentation\/moqthaishinkit\/moqtgoaway\/type","type":"property"}]},{"title":"MoQTObject","path":"\/documentation\/moqthaishinkit\/moqtobject","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/moqthaishinkit\/moqtobject\/init(id:status:data:)","title":"init(id: Int, status: Int?, data: Data)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let data: Data","type":"property","path":"\/documentation\/moqthaishinkit\/moqtobject\/data"},{"title":"let id: Int","path":"\/documentation\/moqthaishinkit\/moqtobject\/id","type":"property"},{"title":"let status: Int?","path":"\/documentation\/moqthaishinkit\/moqtobject\/status","type":"property"}],"type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtserversetup\/payload","title":"var payload: Data"},{"type":"property","title":"let selectedVersion: Int","path":"\/documentation\/moqthaishinkit\/moqtserversetup\/selectedversion"},{"type":"property","title":"let setupParameters: [MoQTSetupParameter]","path":"\/documentation\/moqthaishinkit\/moqtserversetup\/setupparameters"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtserversetup\/type","title":"let type: MoQTMessageType"}],"type":"struct","path":"\/documentation\/moqthaishinkit\/moqtserversetup","title":"MoQTServerSetup"},{"type":"struct","path":"\/documentation\/moqthaishinkit\/moqtsetupparameter","title":"MoQTSetupParameter","children":[{"type":"groupMarker","title":"Instance Properties"},{"title":"let key: MoQTSetupParameterType","path":"\/documentation\/moqthaishinkit\/moqtsetupparameter\/key","type":"property"},{"title":"let value: (any Sendable)","path":"\/documentation\/moqthaishinkit\/moqtsetupparameter\/value","type":"property"}]},{"type":"struct","title":"MoQTStreamHeaderSubgroup","children":[{"title":"Initializers","type":"groupMarker"},{"type":"init","title":"init(trackAlias: Int, groupId: Int, subgroupId: Int, publisherPriority: Int)","path":"\/documentation\/moqthaishinkit\/moqtstreamheadersubgroup\/init(trackalias:groupid:subgroupid:publisherpriority:)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"let groupId: Int","path":"\/documentation\/moqthaishinkit\/moqtstreamheadersubgroup\/groupid"},{"path":"\/documentation\/moqthaishinkit\/moqtstreamheadersubgroup\/payload","title":"var payload: Data","type":"property"},{"title":"let publisherPriority: Int","path":"\/documentation\/moqthaishinkit\/moqtstreamheadersubgroup\/publisherpriority","type":"property"},{"path":"\/documentation\/moqthaishinkit\/moqtstreamheadersubgroup\/subgroupid","type":"property","title":"let subgroupId: Int"},{"type":"property","title":"let trackAlias: Int","path":"\/documentation\/moqthaishinkit\/moqtstreamheadersubgroup\/trackalias"},{"type":"property","title":"let type: MoQTDataStreamType","path":"\/documentation\/moqthaishinkit\/moqtstreamheadersubgroup\/type"}],"path":"\/documentation\/moqthaishinkit\/moqtstreamheadersubgroup"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/endgroup","title":"let endGroup: Int?"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/endobject","type":"property","title":"let endObject: Int?"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.property","type":"property","title":"let filterType: MoQTSubscribe.FilterType"},{"title":"let groupOrder: MoQTSubscribe.GroupOrder","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.property","type":"property"},{"type":"property","title":"var payload: Data","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/payload"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/startgroup","type":"property","title":"let startGroup: Int?"},{"title":"let startObject: Int?","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/startobject","type":"property"},{"title":"let subscribeId: Int","type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/subscribeid"},{"type":"property","title":"let subscribeParameters: [MoQTVersionSpecificParameter]","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/subscribeparameters"},{"type":"property","title":"let subscribePriority: Int","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/subscribepriority"},{"title":"let trackAlias: Int","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/trackalias","type":"property"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/trackname","title":"let trackName: String","type":"property"},{"title":"let trackNamespace: [String]","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/tracknamespace","type":"property"},{"title":"let type: MoQTMessageType","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/type","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"title":"MoQTSubscribe.FilterType","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"type":"case","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/absoluterange","title":"case absoluteRange"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/absolutestart","title":"case absoluteStart","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/latestgroup","type":"case","title":"case latestGroup"},{"title":"case latestObject","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/latestobject","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/equatable-implementations","title":"Equatable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/!=(_:_:)"}],"type":"symbol"},{"type":"symbol","title":"RawRepresentable Implementations","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/rawrepresentable-implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/hashvalue","type":"property"},{"type":"groupMarker","title":"Instance Methods"},{"title":"func hash(into: inout Hasher)","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/hash(into:)","type":"method"}]}],"type":"enum"},{"title":"MoQTSubscribe.GroupOrder","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case ascending","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/ascending","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/descending","title":"case descending","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/original","type":"case","title":"case original"},{"type":"groupMarker","title":"Initializers"},{"title":"init?(rawValue: Int)","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/init(rawvalue:)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"type":"symbol","title":"Equatable Implementations","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/equatable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/!=(_:_:)","type":"op"}]},{"title":"RawRepresentable Implementations","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/rawrepresentable-implementations","type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/hashvalue","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func hash(into: inout Hasher)","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/hash(into:)","type":"method"}]}],"type":"enum"}],"path":"\/documentation\/moqthaishinkit\/moqtsubscribe","title":"MoQTSubscribe","type":"struct"},{"title":"MoQTSubscribeAnnounces","children":[{"type":"groupMarker","title":"Instance Properties"},{"title":"let parameters: [MoQTVersionSpecificParameter]","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounces\/parameters","type":"property"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounces\/payload","type":"property","title":"var payload: Data"},{"title":"let trackNamespacePrefix: [String]","type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounces\/tracknamespaceprefix"},{"type":"property","title":"let type: MoQTMessageType","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounces\/type"}],"type":"struct","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounces"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"title":"let errorCode: Int","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounceserror\/errorcode","type":"property"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounceserror\/payload","title":"var payload: Data"},{"title":"let reasonPhrase: String","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounceserror\/reasonphrase","type":"property"},{"title":"let trackNamespacePrefix: [String]","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounceserror\/tracknamespaceprefix","type":"property"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounceserror\/type","type":"property","title":"let type: MoQTMessageType"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounceserror\/error-implementations","type":"symbol","title":"Error Implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounceserror\/localizeddescription","title":"var localizedDescription: String","type":"property"}]}],"type":"struct","title":"MoQTSubscribeAnnouncesError","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounceserror"},{"type":"struct","title":"MoQTSubscribeAnnouncesOk","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannouncesok","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannouncesok\/payload","title":"var payload: Data"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeannouncesok\/tracknamespaceprefix","type":"property","title":"let trackNamespacePrefix: [String]"},{"type":"property","title":"let type: MoQTMessageType","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannouncesok\/type"}]},{"type":"struct","title":"MoQTSubscribeError","path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror\/code","title":"let code: Int","type":"property"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror\/payload","type":"property","title":"var payload: Data"},{"title":"let reasonPhrase: String","path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror\/reasonphrase","type":"property"},{"title":"let subscribeId: Int","path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror\/subscribeid","type":"property"},{"title":"let trackAlias: Int","path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror\/trackalias","type":"property"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror\/type","title":"let type: MoQTMessageType","type":"property"},{"type":"groupMarker","title":"Default Implementations"},{"title":"Error Implementations","type":"symbol","path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror\/error-implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var localizedDescription: String","type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror\/localizeddescription"}]}]},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/contentexists","type":"property","title":"let contentExists: Bool"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/expires","title":"let expires: Int","type":"property"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/grouporder","title":"let groupOrder: MoQTSubscribe.GroupOrder"},{"title":"let largestGroupId: Int?","path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/largestgroupid","type":"property"},{"title":"let largestObjectId: Int?","type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/largestobjectid"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/payload","title":"var payload: Data","type":"property"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/subscribeid","type":"property","title":"let subscribeId: Int"},{"title":"let subscribeParameters: [MoQTVersionSpecificParameter]","path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/subscribeparameters","type":"property"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/type","title":"let type: MoQTMessageType","type":"property"}],"title":"MoQTSubscribeOk","type":"struct","path":"\/documentation\/moqthaishinkit\/moqtsubscribeok"},{"path":"\/documentation\/moqthaishinkit\/moqtversionspecificparameter","title":"MoQTVersionSpecificParameter","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/moqthaishinkit\/moqtversionspecificparameter\/key","title":"let key: MoQTVersionSpecificType","type":"property"},{"title":"let value: (any Sendable)","type":"property","path":"\/documentation\/moqthaishinkit\/moqtversionspecificparameter\/value"}],"type":"struct"},{"title":"Enumerations","type":"groupMarker"},{"title":"MoQTDataStreamType","path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"title":"case fetchHeader","path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/fetchheader","type":"case"},{"title":"case objectDatagram","path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/objectdatagram","type":"case"},{"title":"case streamHeaderSubgroup","type":"case","path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/streamheadersubgroup"},{"title":"Initializers","type":"groupMarker"},{"type":"init","title":"init?(rawValue: Int)","path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/init(rawvalue:)"},{"title":"Default Implementations","type":"groupMarker"},{"type":"symbol","title":"Equatable Implementations","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}],"path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/equatable-implementations"},{"type":"symbol","title":"RawRepresentable Implementations","path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/rawrepresentable-implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/hashvalue","type":"property","title":"var hashValue: Int"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}]}],"type":"enum"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype","title":"MoQTMessageType","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"title":"case announce","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/announce","type":"case"},{"title":"case announceCancel","type":"case","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/announcecancel"},{"title":"case announceError","type":"case","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/announceerror"},{"type":"case","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/announceok","title":"case announceOk"},{"type":"case","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/clientsetup","title":"case clientSetup"},{"type":"case","title":"case goaway","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/goaway"},{"type":"case","title":"case serverSetup","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/serversetup"},{"title":"case subscribe","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/subscribe","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/subscribeannounuces","title":"case subscribeAnnounuces","type":"case"},{"type":"case","title":"case subscribeAnnounucesError","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/subscribeannounuceserror"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/subscribeannounucesok","title":"case subscribeAnnounucesOk","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/subscribedone","title":"case subscribeDone","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/subscribeerror","type":"case","title":"case subscribeError"},{"title":"case subscribeOk","type":"case","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/subscribeok"},{"title":"case subscribeUpdate","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/subscribeupdate","type":"case"},{"type":"case","title":"case trackStatus","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/trackstatus"},{"type":"case","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/trackstatusrequest","title":"case trackStatusRequest"},{"title":"case unannounce","type":"case","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/unannounce"},{"type":"case","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/unsubscribe","title":"case unsubscribe"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/init(rawvalue:)","type":"init","title":"init?(rawValue: Int)"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/!=(_:_:)","type":"op"}],"type":"symbol","title":"Equatable Implementations","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/equatable-implementations"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/rawrepresentable-implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/hashvalue","title":"var hashValue: Int","type":"property"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func hash(into: inout Hasher)","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/hash(into:)"}],"title":"RawRepresentable Implementations","type":"symbol"}],"type":"enum"},{"type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/maxsubscribeid","type":"case","title":"case maxSubscribeId"},{"title":"case path","path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/path","type":"case"},{"type":"case","path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/role","title":"case role"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/init(rawvalue:)","type":"init","title":"init?(rawValue: Int)"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}],"title":"Equatable Implementations","path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/equatable-implementations","type":"symbol"},{"type":"symbol","children":[{"type":"groupMarker","title":"Instance Properties"},{"title":"var hashValue: Int","type":"property","path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/hashvalue"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"title":"RawRepresentable Implementations","path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/rawrepresentable-implementations"}],"path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype","title":"MoQTSetupParameterType"},{"path":"\/documentation\/moqthaishinkit\/moqtsetuprole","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/pubsub","type":"case","title":"case pubSub"},{"type":"case","path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/publisher","title":"case publisher"},{"type":"case","path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/subscriber","title":"case subscriber"},{"type":"groupMarker","title":"Initializers"},{"title":"init?(rawValue: Int)","path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/init(rawvalue:)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Operators"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/!=(_:_:)","type":"op"}],"type":"symbol","path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/equatable-implementations","title":"Equatable Implementations"},{"type":"symbol","path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/rawrepresentable-implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/hashvalue","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func hash(into: inout Hasher)","path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/hash(into:)","type":"method"}],"title":"RawRepresentable Implementations"}],"type":"enum","title":"MoQTSetupRole"},{"path":"\/documentation\/moqthaishinkit\/moqtversion","title":"MoQTVersion","type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/moqthaishinkit\/moqtversion\/draft01","type":"case","title":"case draft01"},{"title":"case draft02","path":"\/documentation\/moqthaishinkit\/moqtversion\/draft02","type":"case"},{"title":"case draft03","path":"\/documentation\/moqthaishinkit\/moqtversion\/draft03","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtversion\/draft04","title":"case draft04","type":"case"},{"title":"case draft05","path":"\/documentation\/moqthaishinkit\/moqtversion\/draft05","type":"case"},{"title":"case draft06","path":"\/documentation\/moqthaishinkit\/moqtversion\/draft06","type":"case"},{"title":"case draft07","path":"\/documentation\/moqthaishinkit\/moqtversion\/draft07","type":"case"},{"type":"case","path":"\/documentation\/moqthaishinkit\/moqtversion\/draft07exp","title":"case draft07Exp"},{"title":"case draft07Exp2","type":"case","path":"\/documentation\/moqthaishinkit\/moqtversion\/draft07exp2"},{"title":"Initializers","type":"groupMarker"},{"type":"init","title":"init?(rawValue: Int)","path":"\/documentation\/moqthaishinkit\/moqtversion\/init(rawvalue:)"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/moqthaishinkit\/moqtversion\/!=(_:_:)"}],"path":"\/documentation\/moqthaishinkit\/moqtversion\/equatable-implementations","title":"Equatable Implementations"},{"path":"\/documentation\/moqthaishinkit\/moqtversion\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtversion\/hashvalue","title":"var hashValue: Int"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/moqthaishinkit\/moqtversion\/hash(into:)","title":"func hash(into: inout Hasher)"}]}]},{"type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/authorizationinfo","title":"case authorizationInfo","type":"case"},{"type":"case","title":"case deliveryTimeout","path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/deliverytimeout"},{"type":"case","path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/maxcacheduration","title":"case maxCacheDuration"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/init(rawvalue:)","type":"init","title":"init?(rawValue: Int)"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/!=(_:_:)","type":"op"}],"title":"Equatable Implementations","path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/equatable-implementations"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/hash(into:)","type":"method","title":"func hash(into: inout Hasher)"}],"type":"symbol","path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/rawrepresentable-implementations","title":"RawRepresentable Implementations"}],"path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype","title":"MoQTVersionSpecificType"}],"type":"module","path":"\/documentation\/moqthaishinkit"},{"path":"\/documentation\/srthaishinkit","children":[{"title":"Classes","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/srthaishinkit\/srtconnection\/init()","title":"init()","type":"init"},{"type":"groupMarker","title":"Instance Properties"},{"title":"var connected: Bool","path":"\/documentation\/srthaishinkit\/srtconnection\/connected","type":"property"},{"type":"property","title":"var performanceData: SRTPerformanceData?","path":"\/documentation\/srthaishinkit\/srtconnection\/performancedata"},{"type":"property","title":"var uri: URL?","path":"\/documentation\/srthaishinkit\/srtconnection\/uri"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/srthaishinkit\/srtconnection\/close()","title":"func close() async","type":"method"},{"title":"func connect(URL?) async throws","type":"method","path":"\/documentation\/srthaishinkit\/srtconnection\/connect(_:)"},{"type":"method","path":"\/documentation\/srthaishinkit\/srtconnection\/open(_:mode:)","title":"func open(URL?, mode: SRTMode) async throws"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/srthaishinkit\/srtconnection\/version","title":"static let version: String","type":"property"},{"type":"groupMarker","title":"Enumerations"},{"type":"enum","path":"\/documentation\/srthaishinkit\/srtconnection\/error","title":"SRTConnection.Error","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"type":"case","title":"case failedToConnect(String, reson: Int32)","path":"\/documentation\/srthaishinkit\/srtconnection\/error\/failedtoconnect(_:reson:)"},{"type":"case","title":"case invalidState","path":"\/documentation\/srthaishinkit\/srtconnection\/error\/invalidstate"},{"title":"case unsupportedUri(URL?)","path":"\/documentation\/srthaishinkit\/srtconnection\/error\/unsupporteduri(_:)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"type":"property","title":"var localizedDescription: String","path":"\/documentation\/srthaishinkit\/srtconnection\/error\/localizeddescription"}],"type":"symbol","path":"\/documentation\/srthaishinkit\/srtconnection\/error\/error-implementations","title":"Error Implementations"}]},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/srthaishinkit\/srtconnection\/assertisolated(_:file:line:)","type":"method","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)"},{"path":"\/documentation\/srthaishinkit\/srtconnection\/assumeisolated(_:file:line:)","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","type":"method"},{"path":"\/documentation\/srthaishinkit\/srtconnection\/preconditionisolated(_:file:line:)","type":"method","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)"}],"title":"Actor Implementations","path":"\/documentation\/srthaishinkit\/srtconnection\/actor-implementations","type":"symbol"}],"path":"\/documentation\/srthaishinkit\/srtconnection","title":"SRTConnection","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"type":"property","title":"var functionalAreas: Set<SRTLogFunctionalArea>","path":"\/documentation\/srthaishinkit\/srtlogger\/functionalareas"},{"title":"var level: SRTLogLevel","path":"\/documentation\/srthaishinkit\/srtlogger\/level","type":"property"},{"type":"groupMarker","title":"Instance Methods"},{"title":"func setFunctionalAreas(Set<SRTLogFunctionalArea>)","type":"method","path":"\/documentation\/srthaishinkit\/srtlogger\/setfunctionalareas(_:)"},{"type":"method","title":"func setLevel(SRTLogLevel)","path":"\/documentation\/srthaishinkit\/srtlogger\/setlevel(_:)"},{"title":"Type Properties","type":"groupMarker"},{"title":"static let shared: SRTLogger","path":"\/documentation\/srthaishinkit\/srtlogger\/shared","type":"property"},{"type":"groupMarker","title":"Default Implementations"},{"title":"Actor Implementations","path":"\/documentation\/srthaishinkit\/srtlogger\/actor-implementations","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/srthaishinkit\/srtlogger\/assertisolated(_:file:line:)"},{"type":"method","path":"\/documentation\/srthaishinkit\/srtlogger\/assumeisolated(_:file:line:)","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T"},{"title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/srthaishinkit\/srtlogger\/preconditionisolated(_:file:line:)","type":"method"}],"type":"symbol"}],"type":"class","path":"\/documentation\/srthaishinkit\/srtlogger","title":"SRTLogger"},{"path":"\/documentation\/srthaishinkit\/srtstream","type":"class","title":"SRTStream","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(connection: SRTConnection)","path":"\/documentation\/srthaishinkit\/srtstream\/init(connection:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtstream\/audiotrackid","title":"var audioTrackId: UInt8?"},{"path":"\/documentation\/srthaishinkit\/srtstream\/readystate","type":"property","title":"var readyState: HKStreamReadyState"},{"type":"property","title":"var videoTrackId: UInt8?","path":"\/documentation\/srthaishinkit\/srtstream\/videotrackid"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func close() async","path":"\/documentation\/srthaishinkit\/srtstream\/close()"},{"title":"func play(String?) async","path":"\/documentation\/srthaishinkit\/srtstream\/play(_:)","type":"method"},{"path":"\/documentation\/srthaishinkit\/srtstream\/publish(_:)","title":"func publish(String?) async","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Actor Implementations","path":"\/documentation\/srthaishinkit\/srtstream\/actor-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Methods"},{"title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/srthaishinkit\/srtstream\/assertisolated(_:file:line:)","type":"method"},{"title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","path":"\/documentation\/srthaishinkit\/srtstream\/assumeisolated(_:file:line:)","type":"method"},{"title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method","path":"\/documentation\/srthaishinkit\/srtstream\/preconditionisolated(_:file:line:)"}]},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"title":"var audioSettings: AudioCodecSettings","path":"\/documentation\/srthaishinkit\/srtstream\/audiosettings","type":"property"},{"title":"var soundTransform: SoundTransform?","type":"property","path":"\/documentation\/srthaishinkit\/srtstream\/soundtransform"},{"title":"var videoSettings: VideoCodecSettings","type":"property","path":"\/documentation\/srthaishinkit\/srtstream\/videosettings"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func addOutput(some HKStreamOutput)","path":"\/documentation\/srthaishinkit\/srtstream\/addoutput(_:)"},{"title":"func append(CMSampleBuffer)","type":"method","path":"\/documentation\/srthaishinkit\/srtstream\/append(_:)"},{"path":"\/documentation\/srthaishinkit\/srtstream\/append(_:when:)","type":"method","title":"func append(AVAudioBuffer, when: AVAudioTime)"},{"title":"func attachAudioPlayer(AudioPlayer?) async","path":"\/documentation\/srthaishinkit\/srtstream\/attachaudioplayer(_:)","type":"method"},{"path":"\/documentation\/srthaishinkit\/srtstream\/dispatch(_:)","type":"method","title":"func dispatch(NetworkMonitorEvent) async"},{"path":"\/documentation\/srthaishinkit\/srtstream\/removeoutput(_:)","type":"method","title":"func removeOutput(some HKStreamOutput)"},{"path":"\/documentation\/srthaishinkit\/srtstream\/setaudiosettings(_:)","type":"method","title":"func setAudioSettings(AudioCodecSettings)"},{"title":"func setBitrateStorategy((some HKStreamBitRateStrategy)?)","path":"\/documentation\/srthaishinkit\/srtstream\/setbitratestorategy(_:)","type":"method"},{"type":"method","title":"func setSoundTransform(SoundTransform) async","path":"\/documentation\/srthaishinkit\/srtstream\/setsoundtransform(_:)"},{"title":"func setVideoInputBufferCounts(Int)","type":"method","path":"\/documentation\/srthaishinkit\/srtstream\/setvideoinputbuffercounts(_:)"},{"type":"method","title":"func setVideoSettings(VideoCodecSettings)","path":"\/documentation\/srthaishinkit\/srtstream\/setvideosettings(_:)"}],"title":"HKStream Implementations","path":"\/documentation\/srthaishinkit\/srtstream\/hkstream-implementations","type":"symbol"},{"path":"\/documentation\/srthaishinkit\/srtstream\/mediamixeroutput-implementations","title":"MediaMixerOutput Implementations","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/srthaishinkit\/srtstream\/mixer(_:didoutput:)","title":"func mixer(MediaMixer, didOutput: CMSampleBuffer)"},{"type":"method","title":"func mixer(MediaMixer, didOutput: AVAudioPCMBuffer, when: AVAudioTime)","path":"\/documentation\/srthaishinkit\/srtstream\/mixer(_:didoutput:when:)"},{"type":"method","path":"\/documentation\/srthaishinkit\/srtstream\/selecttrack(_:mediatype:)","title":"func selectTrack(UInt8?, mediaType: CMFormatDescription.MediaType)"}],"type":"symbol"}]},{"type":"groupMarker","title":"Structures"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"let byteAvailRcvBuf: Int32","type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/byteavailrcvbuf"},{"title":"let byteAvailSndBuf: Int32","type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/byteavailsndbuf"},{"title":"let byteMSS: Int32","type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytemss"},{"title":"let byteRcvBuf: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytercvbuf","type":"property"},{"title":"let byteRcvDrop: UInt64","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytercvdrop","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytercvdroptotal","type":"property","title":"let byteRcvDropTotal: UInt64"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytercvloss","type":"property","title":"let byteRcvLoss: UInt64"},{"title":"let byteRcvLossTotal: UInt64","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytercvlosstotal","type":"property"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytercvundecrypt","title":"let byteRcvUndecrypt: UInt64"},{"type":"property","title":"let byteRcvUndecryptTotal: UInt64","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytercvundecrypttotal"},{"title":"let byteRecv: UInt64","path":"\/documentation\/srthaishinkit\/srtperformancedata\/byterecv","type":"property"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/byterecvtotal","title":"let byteRecvTotal: UInt64"},{"title":"let byteRetrans: UInt64","type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/byteretrans"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/byteretranstotal","type":"property","title":"let byteRetransTotal: UInt64"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytesent","type":"property","title":"let byteSent: UInt64"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytesenttotal","type":"property","title":"let byteSentTotal: UInt64"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytesndbuf","type":"property","title":"let byteSndBuf: Int32"},{"type":"property","title":"let byteSndDrop: UInt64","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytesnddrop"},{"title":"let byteSndDropTotal: UInt64","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytesnddroptotal","type":"property"},{"type":"property","title":"let mbpsBandwidth: Double","path":"\/documentation\/srthaishinkit\/srtperformancedata\/mbpsbandwidth"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/mbpsmaxbw","type":"property","title":"let mbpsMaxBW: Double"},{"title":"let mbpsRecvRate: Double","path":"\/documentation\/srthaishinkit\/srtperformancedata\/mbpsrecvrate","type":"property"},{"title":"let mbpsSendRate: Double","path":"\/documentation\/srthaishinkit\/srtperformancedata\/mbpssendrate","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/msrtt","type":"property","title":"let msRTT: Double"},{"type":"property","title":"let msRcvBuf: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/msrcvbuf"},{"title":"let msRcvTsbPdDelay: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/msrcvtsbpddelay","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/mssndbuf","title":"let msSndBuf: Int32","type":"property"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/mssndtsbpddelay","title":"let msSndTsbPdDelay: Int32"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/mstimestamp","type":"property","title":"let msTimeStamp: Int64"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktcongestionwindow","type":"property","title":"let pktCongestionWindow: Int32"},{"title":"let pktFlightSize: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktflightsize","type":"property"},{"title":"let pktFlowWindow: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktflowwindow","type":"property"},{"title":"let pktRcvAvgBelatedTime: Double","type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvavgbelatedtime"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvbelated","title":"let pktRcvBelated: Int64","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvbuf","title":"let pktRcvBuf: Int32","type":"property"},{"title":"let pktRcvDrop: Int32","type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvdrop"},{"type":"property","title":"let pktRcvDropTotal: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvdroptotal"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvfilterextra","type":"property","title":"let pktRcvFilterExtra: Int32"},{"type":"property","title":"let pktRcvFilterExtraTotal: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvfilterextratotal"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvfilterloss","type":"property","title":"let pktRcvFilterLoss: Int32"},{"type":"property","title":"let pktRcvFilterLossTotal: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvfilterlosstotal"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvfiltersupply","title":"let pktRcvFilterSupply: Int32","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvfiltersupplytotal","type":"property","title":"let pktRcvFilterSupplyTotal: Int32"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvloss","title":"let pktRcvLoss: Int32","type":"property"},{"type":"property","title":"let pktRcvLossTotal: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvlosstotal"},{"title":"let pktRcvRetrans: Int32","type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvretrans"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvundecrypt","title":"let pktRcvUndecrypt: Int32","type":"property"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvundecrypttotal","title":"let pktRcvUndecryptTotal: Int32"},{"type":"property","title":"let pktRecv: Int64","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrecv"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrecvack","type":"property","title":"let pktRecvACK: Int32"},{"title":"let pktRecvACKTotal: Int32","type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrecvacktotal"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrecvnak","title":"let pktRecvNAK: Int32"},{"title":"let pktRecvNAKTotal: Int32","type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrecvnaktotal"},{"title":"let pktRecvTotal: Int64","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrecvtotal","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktreorderdistance","title":"let pktReorderDistance: Int32","type":"property"},{"title":"let pktReorderTolerance: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktreordertolerance","type":"property"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktretrans","title":"let pktRetrans: Int32"},{"title":"let pktRetransTotal: Int32","type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktretranstotal"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsent","type":"property","title":"let pktSent: Int64"},{"type":"property","title":"let pktSentACK: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsentack"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsentacktotal","type":"property","title":"let pktSentACKTotal: Int32"},{"type":"property","title":"let pktSentNAK: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsentnak"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsentnaktotal","title":"let pktSentNAKTotal: Int32"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsenttotal","title":"let pktSentTotal: Int64","type":"property"},{"title":"let pktSndBuf: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsndbuf","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsnddrop","title":"let pktSndDrop: Int32","type":"property"},{"type":"property","title":"let pktSndDropTotal: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsnddroptotal"},{"type":"property","title":"let pktSndFilterExtra: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsndfilterextra"},{"title":"let pktSndFilterExtraTotal: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsndfilterextratotal","type":"property"},{"type":"property","title":"let pktSndLoss: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsndloss"},{"type":"property","title":"let pktSndLossTotal: Int32","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsndlosstotal"},{"title":"let usPktSndPeriod: Double","path":"\/documentation\/srthaishinkit\/srtperformancedata\/uspktsndperiod","type":"property"},{"title":"let usSndDuration: Int64","path":"\/documentation\/srthaishinkit\/srtperformancedata\/ussndduration","type":"property"},{"title":"let usSndDurationTotal: Int64","type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/ussnddurationtotal"}],"title":"SRTPerformanceData","type":"struct"},{"type":"groupMarker","title":"Enumerations"},{"type":"enum","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea","title":"SRTLogFunctionalArea","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/apictrl","title":"case apiCtrl","type":"case"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/apirecv","type":"case","title":"case apiRecv"},{"title":"case apiSend","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/apisend","type":"case"},{"title":"case applog","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/applog","type":"case"},{"type":"case","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/bstats","title":"case bstats"},{"type":"case","title":"case bufRecv","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/bufrecv"},{"type":"case","title":"case bufSend","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/bufsend"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/chanrecv","title":"case chanRecv","type":"case"},{"title":"case chnMgmt","type":"case","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/chnmgmt"},{"title":"case chnSend","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/chnsend","type":"case"},{"type":"case","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/congest","title":"case congest"},{"type":"case","title":"case control","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/control"},{"title":"case data","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/data","type":"case"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/epollapi","type":"case","title":"case epollApi"},{"title":"case epollUpd","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/epollupd","type":"case"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/general","title":"case general","type":"case"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/grpmgmt","title":"case grpMgmt","type":"case"},{"title":"case grpRecv","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/grprecv","type":"case"},{"type":"case","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/grpsend","title":"case grpSend"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/haicrypt","title":"case haicrypt","type":"case"},{"title":"case `internal`","type":"case","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/internal"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/pfilter","type":"case","title":"case pfilter"},{"title":"case queCtrl","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/quectrl","type":"case"},{"title":"case queMgmt","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/quemgmt","type":"case"},{"type":"case","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/querecv","title":"case queRecv"},{"type":"case","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/quesend","title":"case queSend"},{"type":"case","title":"case rsrc","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/rsrc"},{"title":"case tsbpd","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/tsbpd","type":"case"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: Int32)","type":"init","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/init(rawvalue:)"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/equatable-implementations","title":"Equatable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/!=(_:_:)","type":"op"}]},{"type":"symbol","title":"RawRepresentable Implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/hashvalue","type":"property","title":"var hashValue: Int"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/rawrepresentable-implementations"}]},{"title":"SRTLogLevel","type":"enum","path":"\/documentation\/srthaishinkit\/srtloglevel","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","path":"\/documentation\/srthaishinkit\/srtloglevel\/crit","title":"case crit"},{"path":"\/documentation\/srthaishinkit\/srtloglevel\/debug","type":"case","title":"case debug"},{"title":"case error","path":"\/documentation\/srthaishinkit\/srtloglevel\/error","type":"case"},{"path":"\/documentation\/srthaishinkit\/srtloglevel\/notice","type":"case","title":"case notice"},{"type":"case","path":"\/documentation\/srthaishinkit\/srtloglevel\/warning","title":"case warning"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/srthaishinkit\/srtloglevel\/equatable-implementations","type":"symbol","title":"Equatable Implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/srthaishinkit\/srtloglevel\/!=(_:_:)"}]}]},{"path":"\/documentation\/srthaishinkit\/srtmode","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case caller","path":"\/documentation\/srthaishinkit\/srtmode\/caller","type":"case"},{"title":"case listener","type":"case","path":"\/documentation\/srthaishinkit\/srtmode\/listener"},{"type":"groupMarker","title":"Initializers"},{"title":"init?(rawValue: String)","path":"\/documentation\/srthaishinkit\/srtmode\/init(rawvalue:)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/srthaishinkit\/srtmode\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}],"path":"\/documentation\/srthaishinkit\/srtmode\/equatable-implementations","type":"symbol"},{"title":"RawRepresentable Implementations","type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/srthaishinkit\/srtmode\/hashvalue","type":"property","title":"var hashValue: Int"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func hash(into: inout Hasher)","path":"\/documentation\/srthaishinkit\/srtmode\/hash(into:)","type":"method"}],"path":"\/documentation\/srthaishinkit\/srtmode\/rawrepresentable-implementations"}],"type":"enum","title":"SRTMode"}],"title":"SRTHaishinKit","type":"module"}]},"includedArchiveIdentifiers":["Logboard","HaishinKit","MoQTHaishinKit","SRTHaishinKit"]}