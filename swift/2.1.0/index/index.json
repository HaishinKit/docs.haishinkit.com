{"interfaceLanguages":{"swift":[{"title":"HaishinKit","path":"\/documentation","type":"module","children":[{"path":"\/documentation\/logboard","children":[{"title":"Classes","type":"groupMarker"},{"title":"ConsoleAppender","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init()","path":"\/documentation\/logboard\/consoleappender\/init()"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func append(LBLogger, level: LBLogger.Level, format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/consoleappender\/append(_:level:format:arguments:file:function:line:)"},{"type":"method","title":"func append(LBLogger, level: LBLogger.Level, message: [Any], file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/consoleappender\/append(_:level:message:file:function:line:)"}],"type":"class","path":"\/documentation\/logboard\/consoleappender"},{"title":"LBLogger","children":[{"type":"groupMarker","title":"Structures"},{"type":"struct","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/logboard\/lblogger\/data\/init(_:)","type":"init","title":"init?(Data)"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/logboard\/lblogger\/data\/date","type":"property","title":"let date: Date"},{"path":"\/documentation\/logboard\/lblogger\/data\/file","type":"property","title":"let file: String"},{"path":"\/documentation\/logboard\/lblogger\/data\/function","type":"property","title":"let function: String"},{"path":"\/documentation\/logboard\/lblogger\/data\/identifier","type":"property","title":"let identifier: String"},{"path":"\/documentation\/logboard\/lblogger\/data\/level","type":"property","title":"let level: LBLogger.Level"},{"path":"\/documentation\/logboard\/lblogger\/data\/line","type":"property","title":"let line: Int"},{"path":"\/documentation\/logboard\/lblogger\/data\/message","type":"property","title":"let message: String"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/logboard\/lblogger\/data\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/logboard\/lblogger\/data\/description","type":"property","title":"var description: String"}],"type":"symbol"}],"path":"\/documentation\/logboard\/lblogger\/data","title":"LBLogger.Data"},{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/logboard\/lblogger\/init(_:)","title":"init(String)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/logboard\/lblogger\/appender","title":"var appender: any LBLoggerAppender"},{"type":"property","path":"\/documentation\/logboard\/lblogger\/identifier","title":"let identifier: String"},{"type":"property","path":"\/documentation\/logboard\/lblogger\/level-swift.property","title":"var level: LBLogger.Level"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/logboard\/lblogger\/debug(_:file:function:line:)","title":"func debug(Any..., file: StaticString, function: StaticString, line: Int)"},{"type":"method","path":"\/documentation\/logboard\/lblogger\/debug(format:arguments:file:function:line:)","title":"func debug(format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)"},{"type":"method","path":"\/documentation\/logboard\/lblogger\/error(_:file:function:line:)","title":"func error(Any..., file: StaticString, function: StaticString, line: Int)"},{"type":"method","path":"\/documentation\/logboard\/lblogger\/error(format:arguments:file:function:line:)","title":"func error(format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)"},{"type":"method","path":"\/documentation\/logboard\/lblogger\/info(_:file:function:line:)","title":"func info(Any..., file: StaticString, function: StaticString, line: Int)"},{"type":"method","path":"\/documentation\/logboard\/lblogger\/info(format:arguments:file:function:line:)","title":"func info(format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)"},{"type":"method","path":"\/documentation\/logboard\/lblogger\/isenabledfor(level:)","title":"func isEnabledFor(level: LBLogger.Level) -> Bool"},{"type":"method","path":"\/documentation\/logboard\/lblogger\/trace(_:file:function:line:)","title":"func trace(Any..., file: StaticString, function: StaticString, line: Int)"},{"type":"method","path":"\/documentation\/logboard\/lblogger\/trace(format:arguments:file:function:line:)","title":"func trace(format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)"},{"type":"method","path":"\/documentation\/logboard\/lblogger\/warn(_:file:function:line:)","title":"func warn(Any..., file: StaticString, function: StaticString, line: Int)"},{"type":"method","path":"\/documentation\/logboard\/lblogger\/warn(format:arguments:file:function:line:)","title":"func warn(format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)"},{"type":"groupMarker","title":"Type Properties"},{"type":"property","path":"\/documentation\/logboard\/lblogger\/dateformatter","title":"static var dateFormatter: DateFormatter"},{"type":"groupMarker","title":"Type Methods"},{"type":"method","path":"\/documentation\/logboard\/lblogger\/with(_:)","title":"static func with(String) -> LBLogger"},{"type":"groupMarker","title":"Enumerations"},{"type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case debug","type":"case","path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/debug"},{"title":"case error","type":"case","path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/error"},{"title":"case info","type":"case","path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/info"},{"title":"case trace","type":"case","path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/trace"},{"title":"case warn","type":"case","path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/warn"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: Int)","type":"init","path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/init(rawvalue:)"},{"title":"init?(string: String)","type":"init","path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/init(string:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var description: String","type":"property","path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/description"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","type":"symbol","path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/equatable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/!=(_:_:)"}]},{"title":"RawRepresentable Implementations","type":"symbol","path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/rawrepresentable-implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/hashvalue","title":"var hashValue: Int"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)"}]}],"path":"\/documentation\/logboard\/lblogger\/level-swift.enum","title":"LBLogger.Level"}],"type":"class","path":"\/documentation\/logboard\/lblogger"},{"title":"MultiAppender","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init()","path":"\/documentation\/logboard\/multiappender\/init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var appenders: [any LBLoggerAppender]","path":"\/documentation\/logboard\/multiappender\/appenders","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func append(LBLogger, level: LBLogger.Level, format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/multiappender\/append(_:level:format:arguments:file:function:line:)","type":"method"},{"title":"func append(LBLogger, level: LBLogger.Level, message: [Any], file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/multiappender\/append(_:level:message:file:function:line:)","type":"method"}],"type":"class","path":"\/documentation\/logboard\/multiappender"},{"title":"NullAppender","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func append(LBLogger, level: LBLogger.Level, format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/nullappender\/append(_:level:format:arguments:file:function:line:)"},{"type":"method","title":"func append(LBLogger, level: LBLogger.Level, message: [Any], file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/nullappender\/append(_:level:message:file:function:line:)"},{"type":"groupMarker","title":"Type Properties"},{"type":"property","title":"static let shared: NullAppender","path":"\/documentation\/logboard\/nullappender\/shared"}],"type":"class","path":"\/documentation\/logboard\/nullappender"},{"title":"OSLoggerAppender","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/logboard\/osloggerappender\/init(sybsystem:category:)","type":"init","title":"init(sybsystem: String, category: String)"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/logboard\/osloggerappender\/append(_:level:format:arguments:file:function:line:)","type":"method","title":"func append(LBLogger, level: LBLogger.Level, format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)"},{"path":"\/documentation\/logboard\/osloggerappender\/append(_:level:message:file:function:line:)","type":"method","title":"func append(LBLogger, level: LBLogger.Level, message: [Any], file: StaticString, function: StaticString, line: Int)"}],"type":"class","path":"\/documentation\/logboard\/osloggerappender"},{"title":"SocketAppender","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init()","type":"init","path":"\/documentation\/logboard\/socketappender\/init()"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func append(LBLogger, level: LBLogger.Level, format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)","type":"method","path":"\/documentation\/logboard\/socketappender\/append(_:level:format:arguments:file:function:line:)"},{"title":"func append(LBLogger, level: LBLogger.Level, message: [Any], file: StaticString, function: StaticString, line: Int)","type":"method","path":"\/documentation\/logboard\/socketappender\/append(_:level:message:file:function:line:)"},{"title":"func close()","type":"method","path":"\/documentation\/logboard\/socketappender\/close()"},{"title":"func connect(String, port: Int)","type":"method","path":"\/documentation\/logboard\/socketappender\/connect(_:port:)"}],"type":"class","path":"\/documentation\/logboard\/socketappender"},{"title":"Protocols","type":"groupMarker"},{"title":"LBLoggerAppender","children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/logboard\/lbloggerappender\/append(_:level:format:arguments:file:function:line:)","title":"func append(LBLogger, level: LBLogger.Level, format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)","type":"method"},{"path":"\/documentation\/logboard\/lbloggerappender\/append(_:level:message:file:function:line:)","title":"func append(LBLogger, level: LBLogger.Level, message: [Any], file: StaticString, function: StaticString, line: Int)","type":"method"}],"type":"protocol","path":"\/documentation\/logboard\/lbloggerappender"}],"title":"Logboard","type":"module"},{"path":"\/documentation\/haishinkit","children":[{"title":"Articles","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/faq","title":"FAQ","type":"article"},{"path":"\/documentation\/haishinkit\/offscreen","title":"Offscreen rendering api.","type":"article"},{"title":"Classes","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/assetscreenobject","title":"AssetScreenObject","type":"class","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/assetscreenobject\/chromakeycolor","title":"var chromaKeyColor: CGColor?","type":"property"},{"path":"\/documentation\/haishinkit\/assetscreenobject\/isreading","title":"var isReading: Bool","type":"property"},{"path":"\/documentation\/haishinkit\/assetscreenobject\/videogravity","title":"var videoGravity: AVLayerVideoGravity","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/assetscreenobject\/cancelreading()","title":"func cancelReading()","type":"method"},{"path":"\/documentation\/haishinkit\/assetscreenobject\/makebounds(_:)","title":"func makeBounds(CGSize) -> CGRect","type":"method"},{"path":"\/documentation\/haishinkit\/assetscreenobject\/makeimage(_:)","title":"func makeImage(some ScreenRenderer) -> CGImage?","type":"method"},{"path":"\/documentation\/haishinkit\/assetscreenobject\/startreading(_:)","title":"func startReading(AVAsset) throws","type":"method"}]},{"path":"\/documentation\/haishinkit\/audiodeviceunit","title":"AudioDeviceUnit","type":"class","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/haishinkit\/audiodeviceunit\/connection","title":"var connection: AVCaptureConnection?"},{"type":"property","path":"\/documentation\/haishinkit\/audiodeviceunit\/device","title":"var device: AVCaptureDevice?"},{"type":"property","path":"\/documentation\/haishinkit\/audiodeviceunit\/input","title":"var input: AVCaptureInput?"},{"type":"property","path":"\/documentation\/haishinkit\/audiodeviceunit\/output-swift.property","title":"var output: AudioDeviceUnit.Output?"},{"type":"property","path":"\/documentation\/haishinkit\/audiodeviceunit\/track","title":"let track: UInt8"},{"type":"groupMarker","title":"Type Aliases"},{"type":"typealias","path":"\/documentation\/haishinkit\/audiodeviceunit\/output-swift.typealias","title":"AudioDeviceUnit.Output"}]},{"path":"\/documentation\/haishinkit\/audioplayer","title":"AudioPlayer","type":"class","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init(audioEngine: AVAudioEngine)","path":"\/documentation\/haishinkit\/audioplayer\/init(audioengine:)"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","title":"Actor Implementations","path":"\/documentation\/haishinkit\/audioplayer\/actor-implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/audioplayer\/assertisolated(_:file:line:)","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method"},{"path":"\/documentation\/haishinkit\/audioplayer\/assumeisolated(_:file:line:)","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","type":"method"},{"path":"\/documentation\/haishinkit\/audioplayer\/preconditionisolated(_:file:line:)","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method"}]}]},{"path":"\/documentation\/haishinkit\/imagescreenobject","title":"ImageScreenObject","type":"class","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var cgImage: CGImage?","path":"\/documentation\/haishinkit\/imagescreenobject\/cgimage"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func makeBounds(CGSize) -> CGRect","path":"\/documentation\/haishinkit\/imagescreenobject\/makebounds(_:)"},{"type":"method","title":"func makeImage(some ScreenRenderer) -> CGImage?","path":"\/documentation\/haishinkit\/imagescreenobject\/makeimage(_:)"}]},{"path":"\/documentation\/haishinkit\/mthkview","title":"MTHKView","type":"class","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(coder: NSCoder)","path":"\/documentation\/haishinkit\/mthkview\/init(coder:)","type":"init"},{"title":"init(frame: CGRect)","path":"\/documentation\/haishinkit\/mthkview\/init(frame:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var audioTrackId: UInt8?","path":"\/documentation\/haishinkit\/mthkview\/audiotrackid","type":"property"},{"title":"var videoGravity: AVLayerVideoGravity","path":"\/documentation\/haishinkit\/mthkview\/videogravity","type":"property"},{"title":"var videoTrackId: UInt8?","path":"\/documentation\/haishinkit\/mthkview\/videotrackid","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func awakeFromNib()","path":"\/documentation\/haishinkit\/mthkview\/awakefromnib()","type":"method"},{"title":"func draw(CGRect)","path":"\/documentation\/haishinkit\/mthkview\/draw(_:)","type":"method"},{"title":"func registerVideoEffect(some VideoEffect) -> Bool","path":"\/documentation\/haishinkit\/mthkview\/registervideoeffect(_:)","type":"method"},{"title":"func unregisterVideoEffect(some VideoEffect) -> Bool","path":"\/documentation\/haishinkit\/mthkview\/unregistervideoeffect(_:)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"title":"MediaMixerOutput Implementations","path":"\/documentation\/haishinkit\/mthkview\/mediamixeroutput-implementations","type":"symbol","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func mixer(MediaMixer, didOutput: CMSampleBuffer)","path":"\/documentation\/haishinkit\/mthkview\/mixer(_:didoutput:)","type":"method"},{"title":"func mixer(MediaMixer, didOutput: AVAudioPCMBuffer, when: AVAudioTime)","path":"\/documentation\/haishinkit\/mthkview\/mixer(_:didoutput:when:)","type":"method"},{"title":"func selectTrack(UInt8?, mediaType: CMFormatDescription.MediaType) async","path":"\/documentation\/haishinkit\/mthkview\/selecttrack(_:mediatype:)","type":"method"}]},{"title":"StreamOutput Implementations","path":"\/documentation\/haishinkit\/mthkview\/streamoutput-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/mthkview\/stream(_:didoutput:)","type":"method","title":"func stream(some StreamConvertible, didOutput: CMSampleBuffer)"},{"path":"\/documentation\/haishinkit\/mthkview\/stream(_:didoutput:when:)","type":"method","title":"func stream(some StreamConvertible, didOutput: AVAudioBuffer, when: AVAudioTime)"}]}]},{"path":"\/documentation\/haishinkit\/mediamixer","title":"MediaMixer","type":"class","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init(multiTrackAudioMixingEnabled: Bool)","path":"\/documentation\/haishinkit\/mediamixer\/init(multitrackaudiomixingenabled:)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var audioInputFormats: [UInt8 : AVAudioFormat]","path":"\/documentation\/haishinkit\/mediamixer\/audioinputformats"},{"type":"property","title":"var audioMixerSettings: AudioMixerSettings","path":"\/documentation\/haishinkit\/mediamixer\/audiomixersettings"},{"type":"property","title":"var frameRate: Float64","path":"\/documentation\/haishinkit\/mediamixer\/framerate"},{"type":"property","title":"var isCapturing: Bool","path":"\/documentation\/haishinkit\/mediamixer\/iscapturing"},{"type":"property","title":"var isInterputted: AsyncStream<Bool>","path":"\/documentation\/haishinkit\/mediamixer\/isinterputted"},{"type":"property","title":"var isMonitoringEnabled: Bool","path":"\/documentation\/haishinkit\/mediamixer\/ismonitoringenabled"},{"type":"property","title":"var isMultiTrackAudioMixingEnabled: Bool","path":"\/documentation\/haishinkit\/mediamixer\/ismultitrackaudiomixingenabled"},{"type":"property","title":"var isRunning: Bool","path":"\/documentation\/haishinkit\/mediamixer\/isrunning"},{"type":"property","title":"var isTorchEnabled: Bool","path":"\/documentation\/haishinkit\/mediamixer\/istorchenabled"},{"type":"property","title":"var screen: Screen","path":"\/documentation\/haishinkit\/mediamixer\/screen"},{"type":"property","title":"var sessionPreset: AVCaptureSession.Preset","path":"\/documentation\/haishinkit\/mediamixer\/sessionpreset"},{"type":"property","title":"var videoInputFormats: [UInt8 : CMFormatDescription]","path":"\/documentation\/haishinkit\/mediamixer\/videoinputformats"},{"type":"property","title":"var videoMixerSettings: VideoMixerSettings","path":"\/documentation\/haishinkit\/mediamixer\/videomixersettings"},{"type":"property","title":"var videoOrientation: AVCaptureVideoOrientation","path":"\/documentation\/haishinkit\/mediamixer\/videoorientation"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func addOutput(some MediaMixerOutput)","path":"\/documentation\/haishinkit\/mediamixer\/addoutput(_:)"},{"type":"method","title":"func append(CMSampleBuffer, track: UInt8)","path":"\/documentation\/haishinkit\/mediamixer\/append(_:track:)"},{"type":"method","title":"func append(AVAudioBuffer, when: AVAudioTime, track: UInt8)","path":"\/documentation\/haishinkit\/mediamixer\/append(_:when:track:)"},{"type":"method","title":"func attachAudio(AVCaptureDevice?, track: UInt8, configuration: AudioDeviceConfigurationBlock?) async throws","path":"\/documentation\/haishinkit\/mediamixer\/attachaudio(_:track:configuration:)"},{"type":"method","title":"func attachVideo(AVCaptureDevice?, track: UInt8, configuration: VideoDeviceConfigurationBlock?) async throws","path":"\/documentation\/haishinkit\/mediamixer\/attachvideo(_:track:configuration:)"},{"type":"method","title":"func configuration((AVCaptureSession) throws -> Void) rethrows","path":"\/documentation\/haishinkit\/mediamixer\/configuration(_:)"},{"type":"method","title":"func configuration(audio: UInt8, configuration: (AudioDeviceUnit) throws -> Void) throws","path":"\/documentation\/haishinkit\/mediamixer\/configuration(audio:configuration:)"},{"type":"method","title":"func configuration(video: UInt8, configuration: (VideoDeviceUnit) throws -> Void) throws","path":"\/documentation\/haishinkit\/mediamixer\/configuration(video:configuration:)"},{"type":"method","title":"func removeOutput(some MediaMixerOutput)","path":"\/documentation\/haishinkit\/mediamixer\/removeoutput(_:)"},{"type":"method","title":"func setAudioMixerSettings(AudioMixerSettings)","path":"\/documentation\/haishinkit\/mediamixer\/setaudiomixersettings(_:)"},{"type":"method","title":"func setFrameRate(Float64) throws","path":"\/documentation\/haishinkit\/mediamixer\/setframerate(_:)"},{"type":"method","title":"func setMonitoringEnabled(Bool)","path":"\/documentation\/haishinkit\/mediamixer\/setmonitoringenabled(_:)"},{"type":"method","title":"func setSessionPreset(AVCaptureSession.Preset)","path":"\/documentation\/haishinkit\/mediamixer\/setsessionpreset(_:)"},{"type":"method","title":"func setTorchEnabled(Bool)","path":"\/documentation\/haishinkit\/mediamixer\/settorchenabled(_:)"},{"type":"method","title":"func setVideoMixerSettings(VideoMixerSettings)","path":"\/documentation\/haishinkit\/mediamixer\/setvideomixersettings(_:)"},{"type":"method","title":"func setVideoOrientation(AVCaptureVideoOrientation)","path":"\/documentation\/haishinkit\/mediamixer\/setvideoorientation(_:)"},{"type":"method","title":"func startCapturing()","path":"\/documentation\/haishinkit\/mediamixer\/startcapturing()"},{"type":"method","title":"func stopCapturing()","path":"\/documentation\/haishinkit\/mediamixer\/stopcapturing()"},{"type":"groupMarker","title":"Enumerations"},{"type":"enum","title":"MediaMixer.Error","path":"\/documentation\/haishinkit\/mediamixer\/error","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","path":"\/documentation\/haishinkit\/mediamixer\/error\/devicenotfound","title":"case deviceNotFound"},{"type":"case","path":"\/documentation\/haishinkit\/mediamixer\/error\/failedtoattach(_:)","title":"case failedToAttach(any Error)"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","path":"\/documentation\/haishinkit\/mediamixer\/error\/error-implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var localizedDescription: String","type":"property","path":"\/documentation\/haishinkit\/mediamixer\/error\/localizeddescription"}],"title":"Error Implementations"}]},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","title":"Actor Implementations","path":"\/documentation\/haishinkit\/mediamixer\/actor-implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/mediamixer\/assertisolated(_:file:line:)","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method"},{"path":"\/documentation\/haishinkit\/mediamixer\/assumeisolated(_:file:line:)","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","type":"method"},{"path":"\/documentation\/haishinkit\/mediamixer\/preconditionisolated(_:file:line:)","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method"}]},{"type":"symbol","title":"AsyncRunner Implementations","path":"\/documentation\/haishinkit\/mediamixer\/asyncrunner-implementations","children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/mediamixer\/startrunning()","type":"method","title":"func startRunning()"},{"path":"\/documentation\/haishinkit\/mediamixer\/stoprunning()","type":"method","title":"func stopRunning()"}]}]},{"path":"\/documentation\/haishinkit\/piphkview","title":"PiPHKView","type":"class","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init?(coder: NSCoder)","path":"\/documentation\/haishinkit\/piphkview\/init(coder:)","type":"init"},{"title":"init(frame: CGRect)","path":"\/documentation\/haishinkit\/piphkview\/init(frame:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var audioTrackId: UInt8?","path":"\/documentation\/haishinkit\/piphkview\/audiotrackid","type":"property"},{"title":"var videoGravity: AVLayerVideoGravity","path":"\/documentation\/haishinkit\/piphkview\/videogravity","type":"property"},{"title":"var videoTrackId: UInt8?","path":"\/documentation\/haishinkit\/piphkview\/videotrackid","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func awakeFromNib()","path":"\/documentation\/haishinkit\/piphkview\/awakefromnib()","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"title":"static var defaultBackgroundColor: NSColor","path":"\/documentation\/haishinkit\/piphkview\/defaultbackgroundcolor","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"title":"MediaMixerOutput Implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/piphkview\/mixer(_:didoutput:)","title":"func mixer(MediaMixer, didOutput: CMSampleBuffer)","type":"method"},{"path":"\/documentation\/haishinkit\/piphkview\/mixer(_:didoutput:when:)","title":"func mixer(MediaMixer, didOutput: AVAudioPCMBuffer, when: AVAudioTime)","type":"method"},{"path":"\/documentation\/haishinkit\/piphkview\/selecttrack(_:mediatype:)","title":"func selectTrack(UInt8?, mediaType: CMFormatDescription.MediaType) async","type":"method"}],"path":"\/documentation\/haishinkit\/piphkview\/mediamixeroutput-implementations","type":"symbol"},{"title":"StreamOutput Implementations","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func stream(some StreamConvertible, didOutput: CMSampleBuffer)","path":"\/documentation\/haishinkit\/piphkview\/stream(_:didoutput:)"},{"type":"method","title":"func stream(some StreamConvertible, didOutput: AVAudioBuffer, when: AVAudioTime)","path":"\/documentation\/haishinkit\/piphkview\/stream(_:didoutput:when:)"}],"path":"\/documentation\/haishinkit\/piphkview\/streamoutput-implementations","type":"symbol"}]},{"path":"\/documentation\/haishinkit\/screen","title":"Screen","type":"class","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init()","path":"\/documentation\/haishinkit\/screen\/init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var backgroundColor: CGColor","path":"\/documentation\/haishinkit\/screen\/backgroundcolor","type":"property"},{"title":"var childCounts: Int","path":"\/documentation\/haishinkit\/screen\/childcounts","type":"property"},{"title":"var delegate: (any ScreenDelegate)?","path":"\/documentation\/haishinkit\/screen\/delegate","type":"property"},{"title":"var size: CGSize","path":"\/documentation\/haishinkit\/screen\/size-swift.property","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func addChild(ScreenObject?) throws","path":"\/documentation\/haishinkit\/screen\/addchild(_:)","type":"method"},{"title":"func registerVideoEffect(some VideoEffect) -> Bool","path":"\/documentation\/haishinkit\/screen\/registervideoeffect(_:)","type":"method"},{"title":"func removeChild(ScreenObject?)","path":"\/documentation\/haishinkit\/screen\/removechild(_:)","type":"method"},{"title":"func unregisterVideoEffect(some VideoEffect) -> Bool","path":"\/documentation\/haishinkit\/screen\/unregistervideoeffect(_:)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"title":"static let size: CGSize","path":"\/documentation\/haishinkit\/screen\/size-swift.type.property","type":"property"}]},{"path":"\/documentation\/haishinkit\/screenactor","title":"ScreenActor","type":"class","children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/screenactor\/shared","title":"static let shared: ScreenActor","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/screenactor\/actor-implementations","title":"Actor Implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/screenactor\/assertisolated(_:file:line:)","type":"method","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)"},{"path":"\/documentation\/haishinkit\/screenactor\/assumeisolated(_:file:line:)","type":"method","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T"},{"path":"\/documentation\/haishinkit\/screenactor\/preconditionisolated(_:file:line:)","type":"method","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)"}]},{"path":"\/documentation\/haishinkit\/screenactor\/globalactor-implementations","title":"GlobalActor Implementations","type":"symbol","children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/screenactor\/sharedunownedexecutor","title":"static var sharedUnownedExecutor: UnownedSerialExecutor","type":"property"}]}]},{"path":"\/documentation\/haishinkit\/screenobject","title":"ScreenObject","type":"class","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/haishinkit\/screenobject\/init()","type":"init","title":"init()"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/screenobject\/bounds","type":"property","title":"var bounds: CGRect"},{"path":"\/documentation\/haishinkit\/screenobject\/cornerradius","type":"property","title":"var cornerRadius: CGFloat"},{"path":"\/documentation\/haishinkit\/screenobject\/horizontalalignment-swift.property","type":"property","title":"var horizontalAlignment: ScreenObject.HorizontalAlignment"},{"path":"\/documentation\/haishinkit\/screenobject\/isvisible","type":"property","title":"var isVisible: Bool"},{"path":"\/documentation\/haishinkit\/screenobject\/layoutmargin","type":"property","title":"var layoutMargin: NSEdgeInsets"},{"path":"\/documentation\/haishinkit\/screenobject\/parent","type":"property","title":"var parent: ScreenObjectContainer?"},{"path":"\/documentation\/haishinkit\/screenobject\/size","type":"property","title":"var size: CGSize"},{"path":"\/documentation\/haishinkit\/screenobject\/verticalalignment-swift.property","type":"property","title":"var verticalAlignment: ScreenObject.VerticalAlignment"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/screenobject\/invalidatelayout()","type":"method","title":"func invalidateLayout()"},{"path":"\/documentation\/haishinkit\/screenobject\/makebounds(_:)","type":"method","title":"func makeBounds(CGSize) -> CGRect"},{"path":"\/documentation\/haishinkit\/screenobject\/makeimage(_:)","type":"method","title":"func makeImage(some ScreenRenderer) -> CGImage?"},{"type":"groupMarker","title":"Enumerations"},{"path":"\/documentation\/haishinkit\/screenobject\/horizontalalignment-swift.enum","type":"enum","title":"ScreenObject.HorizontalAlignment","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case center","type":"case","path":"\/documentation\/haishinkit\/screenobject\/horizontalalignment-swift.enum\/center"},{"title":"case left","type":"case","path":"\/documentation\/haishinkit\/screenobject\/horizontalalignment-swift.enum\/left"},{"title":"case right","type":"case","path":"\/documentation\/haishinkit\/screenobject\/horizontalalignment-swift.enum\/right"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","type":"symbol","path":"\/documentation\/haishinkit\/screenobject\/horizontalalignment-swift.enum\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/screenobject\/horizontalalignment-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}]}]},{"path":"\/documentation\/haishinkit\/screenobject\/verticalalignment-swift.enum","type":"enum","title":"ScreenObject.VerticalAlignment","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case bottom","type":"case","path":"\/documentation\/haishinkit\/screenobject\/verticalalignment-swift.enum\/bottom"},{"title":"case middle","type":"case","path":"\/documentation\/haishinkit\/screenobject\/verticalalignment-swift.enum\/middle"},{"title":"case top","type":"case","path":"\/documentation\/haishinkit\/screenobject\/verticalalignment-swift.enum\/top"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/screenobject\/verticalalignment-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/haishinkit\/screenobject\/verticalalignment-swift.enum\/equatable-implementations"}]},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/haishinkit\/screenobject\/equatable-implementations","type":"symbol","title":"Equatable Implementations","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/haishinkit\/screenobject\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"},{"path":"\/documentation\/haishinkit\/screenobject\/==(_:_:)","type":"op","title":"static func == (ScreenObject, ScreenObject) -> Bool"}]},{"path":"\/documentation\/haishinkit\/screenobject\/hashable-implementations","type":"symbol","title":"Hashable Implementations","children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/screenobject\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}]}]},{"path":"\/documentation\/haishinkit\/screenobjectcontainer","title":"ScreenObjectContainer","type":"class","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/haishinkit\/screenobjectcontainer\/childcounts","title":"var childCounts: Int"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/haishinkit\/screenobjectcontainer\/addchild(_:)","title":"func addChild(ScreenObject?) throws"},{"type":"method","path":"\/documentation\/haishinkit\/screenobjectcontainer\/removechild(_:)","title":"func removeChild(ScreenObject?)"},{"type":"groupMarker","title":"Enumerations"},{"children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","path":"\/documentation\/haishinkit\/screenobjectcontainer\/error\/alreadyexists","title":"case alreadyExists"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","path":"\/documentation\/haishinkit\/screenobjectcontainer\/error\/equatable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/haishinkit\/screenobjectcontainer\/error\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"title":"Equatable Implementations"},{"type":"symbol","path":"\/documentation\/haishinkit\/screenobjectcontainer\/error\/error-implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var localizedDescription: String","path":"\/documentation\/haishinkit\/screenobjectcontainer\/error\/localizeddescription"}],"title":"Error Implementations"}],"type":"enum","path":"\/documentation\/haishinkit\/screenobjectcontainer\/error","title":"ScreenObjectContainer.Error"}]},{"path":"\/documentation\/haishinkit\/sessionbuilderfactory","title":"SessionBuilderFactory","type":"class","children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/sessionbuilderfactory\/make(_:)","type":"method","title":"func make(URL?) throws -> SessionBuilder"},{"path":"\/documentation\/haishinkit\/sessionbuilderfactory\/register(_:)","type":"method","title":"func register(some SessionFactory)"},{"type":"groupMarker","title":"Type Properties"},{"path":"\/documentation\/haishinkit\/sessionbuilderfactory\/shared","type":"property","title":"static let shared: SessionBuilderFactory"},{"type":"groupMarker","title":"Enumerations"},{"path":"\/documentation\/haishinkit\/sessionbuilderfactory\/error","type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case illegalArgument","type":"case","path":"\/documentation\/haishinkit\/sessionbuilderfactory\/error\/illegalargument"},{"title":"case notFound","type":"case","path":"\/documentation\/haishinkit\/sessionbuilderfactory\/error\/notfound"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/haishinkit\/sessionbuilderfactory\/error\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}],"type":"symbol","path":"\/documentation\/haishinkit\/sessionbuilderfactory\/error\/equatable-implementations"},{"title":"Error Implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var localizedDescription: String","type":"property","path":"\/documentation\/haishinkit\/sessionbuilderfactory\/error\/localizeddescription"}],"type":"symbol","path":"\/documentation\/haishinkit\/sessionbuilderfactory\/error\/error-implementations"}],"title":"SessionBuilderFactory.Error"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/haishinkit\/sessionbuilderfactory\/actor-implementations","type":"symbol","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/haishinkit\/sessionbuilderfactory\/assertisolated(_:file:line:)","type":"method"},{"title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","path":"\/documentation\/haishinkit\/sessionbuilderfactory\/assumeisolated(_:file:line:)","type":"method"},{"title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/haishinkit\/sessionbuilderfactory\/preconditionisolated(_:file:line:)","type":"method"}],"title":"Actor Implementations"}]},{"path":"\/documentation\/haishinkit\/streamrecorder","title":"StreamRecorder","type":"class","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/streamrecorder\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/streamrecorder\/audiotrackid","title":"var audioTrackId: UInt8?","type":"property"},{"path":"\/documentation\/haishinkit\/streamrecorder\/isrecording","title":"var isRecording: Bool","type":"property"},{"path":"\/documentation\/haishinkit\/streamrecorder\/moviefragmentinterval","title":"var movieFragmentInterval: Double?","type":"property"},{"path":"\/documentation\/haishinkit\/streamrecorder\/moviesdirectory","title":"var moviesDirectory: URL","type":"property"},{"path":"\/documentation\/haishinkit\/streamrecorder\/outputurl","title":"var outputURL: URL?","type":"property"},{"path":"\/documentation\/haishinkit\/streamrecorder\/settings","title":"var settings: [AVMediaType : [String : any Sendable]]","type":"property"},{"path":"\/documentation\/haishinkit\/streamrecorder\/videotrackid","title":"var videoTrackId: UInt8?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/streamrecorder\/selecttrack(_:mediatype:)","title":"func selectTrack(UInt8?, mediaType: CMFormatDescription.MediaType)","type":"method"},{"path":"\/documentation\/haishinkit\/streamrecorder\/setmoviefragmentinterval(_:)","title":"func setMovieFragmentInterval(Double?)","type":"method"},{"path":"\/documentation\/haishinkit\/streamrecorder\/startrecording(_:settings:)","title":"func startRecording(URL?, settings: [AVMediaType : [String : any Sendable]]) async throws","type":"method"},{"path":"\/documentation\/haishinkit\/streamrecorder\/stoprecording()","title":"func stopRecording() async throws -> URL","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/streamrecorder\/defaultsettings","title":"static let defaultSettings: [AVMediaType : [String : any Sendable]]","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/streamrecorder\/error","title":"StreamRecorder.Error","type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","title":"case failedToAppend(error: (any Error)?)","path":"\/documentation\/haishinkit\/streamrecorder\/error\/failedtoappend(error:)"},{"type":"case","title":"case failedToCreateAssetWriter(error: any Error)","path":"\/documentation\/haishinkit\/streamrecorder\/error\/failedtocreateassetwriter(error:)"},{"type":"case","title":"case failedToCreateAssetWriterInput(error: any Error)","path":"\/documentation\/haishinkit\/streamrecorder\/error\/failedtocreateassetwriterinput(error:)"},{"type":"case","title":"case failedToFinishWriting(error: (any Error)?)","path":"\/documentation\/haishinkit\/streamrecorder\/error\/failedtofinishwriting(error:)"},{"type":"case","title":"case fileAlreadyExists(outputURL: URL)","path":"\/documentation\/haishinkit\/streamrecorder\/error\/filealreadyexists(outputurl:)"},{"type":"case","title":"case invalidState","path":"\/documentation\/haishinkit\/streamrecorder\/error\/invalidstate"},{"type":"case","title":"case notSupportedFileType(pathExtension: String)","path":"\/documentation\/haishinkit\/streamrecorder\/error\/notsupportedfiletype(pathextension:)"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/streamrecorder\/error\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"type":"symbol","title":"Error Implementations","path":"\/documentation\/haishinkit\/streamrecorder\/error\/error-implementations"}]},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/streamrecorder\/actor-implementations","title":"Actor Implementations","type":"symbol","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/haishinkit\/streamrecorder\/assertisolated(_:file:line:)","type":"method"},{"title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","path":"\/documentation\/haishinkit\/streamrecorder\/assumeisolated(_:file:line:)","type":"method"},{"title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/haishinkit\/streamrecorder\/preconditionisolated(_:file:line:)","type":"method"}]},{"path":"\/documentation\/haishinkit\/streamrecorder\/mediamixeroutput-implementations","title":"MediaMixerOutput Implementations","type":"symbol","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func mixer(MediaMixer, didOutput: CMSampleBuffer)","path":"\/documentation\/haishinkit\/streamrecorder\/mixer(_:didoutput:)","type":"method"},{"title":"func mixer(MediaMixer, didOutput: AVAudioPCMBuffer, when: AVAudioTime)","path":"\/documentation\/haishinkit\/streamrecorder\/mixer(_:didoutput:when:)","type":"method"}]},{"path":"\/documentation\/haishinkit\/streamrecorder\/streamoutput-implementations","title":"StreamOutput Implementations","type":"symbol","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func stream(some StreamConvertible, didOutput: CMSampleBuffer)","path":"\/documentation\/haishinkit\/streamrecorder\/stream(_:didoutput:)","type":"method"},{"title":"func stream(some StreamConvertible, didOutput: AVAudioBuffer, when: AVAudioTime)","path":"\/documentation\/haishinkit\/streamrecorder\/stream(_:didoutput:when:)","type":"method"}]}]},{"path":"\/documentation\/haishinkit\/streamscreenobject","title":"StreamScreenObject","type":"class","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var chromaKeyColor: CGColor?","path":"\/documentation\/haishinkit\/streamscreenobject\/chromakeycolor"},{"type":"property","title":"var videoGravity: AVLayerVideoGravity","path":"\/documentation\/haishinkit\/streamscreenobject\/videogravity"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func makeBounds(CGSize) -> CGRect","path":"\/documentation\/haishinkit\/streamscreenobject\/makebounds(_:)"},{"type":"method","title":"func makeImage(some ScreenRenderer) -> CGImage?","path":"\/documentation\/haishinkit\/streamscreenobject\/makeimage(_:)"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func stream(some StreamConvertible, didOutput: CMSampleBuffer)","path":"\/documentation\/haishinkit\/streamscreenobject\/stream(_:didoutput:)"},{"type":"method","title":"func stream(some StreamConvertible, didOutput: AVAudioBuffer, when: AVAudioTime)","path":"\/documentation\/haishinkit\/streamscreenobject\/stream(_:didoutput:when:)"}],"type":"symbol","title":"StreamOutput Implementations","path":"\/documentation\/haishinkit\/streamscreenobject\/streamoutput-implementations"}]},{"path":"\/documentation\/haishinkit\/streamvideoadaptivebitratestrategy","title":"StreamVideoAdaptiveBitRateStrategy","type":"class","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(mamimumVideoBitrate: Int)","type":"init","path":"\/documentation\/haishinkit\/streamvideoadaptivebitratestrategy\/init(mamimumvideobitrate:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let mamimumAudioBitRate: Int","type":"property","path":"\/documentation\/haishinkit\/streamvideoadaptivebitratestrategy\/mamimumaudiobitrate"},{"title":"let mamimumVideoBitRate: Int","type":"property","path":"\/documentation\/haishinkit\/streamvideoadaptivebitratestrategy\/mamimumvideobitrate"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func adjustBitrate(NetworkMonitorEvent, stream: some StreamConvertible) async","type":"method","path":"\/documentation\/haishinkit\/streamvideoadaptivebitratestrategy\/adjustbitrate(_:stream:)"},{"title":"Type Properties","type":"groupMarker"},{"title":"static let statusCountsThreshold: Int","type":"property","path":"\/documentation\/haishinkit\/streamvideoadaptivebitratestrategy\/statuscountsthreshold"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Actor Implementations","type":"symbol","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method","path":"\/documentation\/haishinkit\/streamvideoadaptivebitratestrategy\/assertisolated(_:file:line:)"},{"title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","type":"method","path":"\/documentation\/haishinkit\/streamvideoadaptivebitratestrategy\/assumeisolated(_:file:line:)"},{"title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method","path":"\/documentation\/haishinkit\/streamvideoadaptivebitratestrategy\/preconditionisolated(_:file:line:)"}],"path":"\/documentation\/haishinkit\/streamvideoadaptivebitratestrategy\/actor-implementations"}]},{"path":"\/documentation\/haishinkit\/textscreenobject","title":"TextScreenObject","type":"class","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/textscreenobject\/attributes","title":"var attributes: [NSAttributedString.Key : Any]?","type":"property"},{"path":"\/documentation\/haishinkit\/textscreenobject\/bounds","title":"var bounds: CGRect","type":"property"},{"path":"\/documentation\/haishinkit\/textscreenobject\/string","title":"var string: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/textscreenobject\/makebounds(_:)","title":"func makeBounds(CGSize) -> CGRect","type":"method"},{"path":"\/documentation\/haishinkit\/textscreenobject\/makeimage(_:)","title":"func makeImage(some ScreenRenderer) -> CGImage?","type":"method"}]},{"path":"\/documentation\/haishinkit\/videodeviceunit","title":"VideoDeviceUnit","type":"class","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videodeviceunit\/colorformat-swift.property","title":"var colorFormat: OSType","type":"property"},{"path":"\/documentation\/haishinkit\/videodeviceunit\/connection","title":"var connection: AVCaptureConnection?","type":"property"},{"path":"\/documentation\/haishinkit\/videodeviceunit\/device","title":"var device: AVCaptureDevice?","type":"property"},{"path":"\/documentation\/haishinkit\/videodeviceunit\/framerate","title":"var frameRate: Float64","type":"property"},{"path":"\/documentation\/haishinkit\/videodeviceunit\/input","title":"var input: AVCaptureInput?","type":"property"},{"path":"\/documentation\/haishinkit\/videodeviceunit\/isvideomirrored","title":"var isVideoMirrored: Bool","type":"property"},{"path":"\/documentation\/haishinkit\/videodeviceunit\/output-swift.property","title":"var output: VideoDeviceUnit.Output?","type":"property"},{"path":"\/documentation\/haishinkit\/videodeviceunit\/track","title":"let track: UInt8","type":"property"},{"path":"\/documentation\/haishinkit\/videodeviceunit\/videoorientation","title":"var videoOrientation: AVCaptureVideoOrientation","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videodeviceunit\/setframerate(_:)","title":"func setFrameRate(Float64) throws","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videodeviceunit\/output-swift.typealias","title":"VideoDeviceUnit.Output","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videodeviceunit\/colorformat-swift.type.property","title":"static let colorFormat: OSType","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videodeviceunit\/error","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case unsupportedFrameRate","type":"case","path":"\/documentation\/haishinkit\/videodeviceunit\/error\/unsupportedframerate"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/haishinkit\/videodeviceunit\/error\/!=(_:_:)"}],"type":"symbol","path":"\/documentation\/haishinkit\/videodeviceunit\/error\/equatable-implementations"},{"title":"Error Implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"type":"property","title":"var localizedDescription: String","path":"\/documentation\/haishinkit\/videodeviceunit\/error\/localizeddescription"}],"type":"symbol","path":"\/documentation\/haishinkit\/videodeviceunit\/error\/error-implementations"}],"title":"VideoDeviceUnit.Error","type":"enum"}]},{"path":"\/documentation\/haishinkit\/videorotator","title":"VideoRotator","type":"class","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/haishinkit\/videorotator\/init()","type":"init","title":"init?()"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/videorotator\/rotate(buffer:)","type":"method","title":"func rotate(buffer: CMSampleBuffer) -> Result<CMSampleBuffer, VideoRotator.Error>"},{"type":"groupMarker","title":"Enumerations"},{"path":"\/documentation\/haishinkit\/videorotator\/error","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"type":"case","title":"case cannotAllocatePixelBuffer(CVReturn)","path":"\/documentation\/haishinkit\/videorotator\/error\/cannotallocatepixelbuffer(_:)"},{"type":"case","title":"case noImageBuffer","path":"\/documentation\/haishinkit\/videorotator\/error\/noimagebuffer"},{"type":"case","title":"case noOrientationInfo","path":"\/documentation\/haishinkit\/videorotator\/error\/noorientationinfo"},{"type":"case","title":"case rotationFailure(OSStatus)","path":"\/documentation\/haishinkit\/videorotator\/error\/rotationfailure(_:)"},{"type":"case","title":"case unsupportedOrientation","path":"\/documentation\/haishinkit\/videorotator\/error\/unsupportedorientation"},{"title":"Default Implementations","type":"groupMarker"},{"type":"symbol","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/videorotator\/error\/localizeddescription","type":"property","title":"var localizedDescription: String"}],"title":"Error Implementations","path":"\/documentation\/haishinkit\/videorotator\/error\/error-implementations"}],"type":"enum","title":"VideoRotator.Error"}]},{"path":"\/documentation\/haishinkit\/videotrackscreenobject","title":"VideoTrackScreenObject","type":"class","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init()","path":"\/documentation\/haishinkit\/videotrackscreenobject\/init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var chromaKeyColor: CGColor?","path":"\/documentation\/haishinkit\/videotrackscreenobject\/chromakeycolor","type":"property"},{"title":"var frameRate: Int","path":"\/documentation\/haishinkit\/videotrackscreenobject\/framerate","type":"property"},{"title":"var track: UInt8","path":"\/documentation\/haishinkit\/videotrackscreenobject\/track","type":"property"},{"title":"var videoGravity: AVLayerVideoGravity","path":"\/documentation\/haishinkit\/videotrackscreenobject\/videogravity","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func draw(some ScreenRenderer)","path":"\/documentation\/haishinkit\/videotrackscreenobject\/draw(_:)","type":"method"},{"title":"func makeBounds(CGSize) -> CGRect","path":"\/documentation\/haishinkit\/videotrackscreenobject\/makebounds(_:)","type":"method"},{"title":"func makeImage(some ScreenRenderer) -> CGImage?","path":"\/documentation\/haishinkit\/videotrackscreenobject\/makeimage(_:)","type":"method"},{"title":"func registerVideoEffect(some VideoEffect) -> Bool","path":"\/documentation\/haishinkit\/videotrackscreenobject\/registervideoeffect(_:)","type":"method"},{"title":"func unregisterVideoEffect(some VideoEffect) -> Bool","path":"\/documentation\/haishinkit\/videotrackscreenobject\/unregistervideoeffect(_:)","type":"method"}]},{"title":"Protocols","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/asyncrunner","title":"AsyncRunner","type":"protocol","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var isRunning: Bool","type":"property","path":"\/documentation\/haishinkit\/asyncrunner\/isrunning"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func startRunning() async","type":"method","path":"\/documentation\/haishinkit\/asyncrunner\/startrunning()"},{"title":"func stopRunning() async","type":"method","path":"\/documentation\/haishinkit\/asyncrunner\/stoprunning()"}]},{"path":"\/documentation\/haishinkit\/chromakeyprocessable","title":"ChromaKeyProcessable","type":"protocol","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/chromakeyprocessable\/chromakeycolor","type":"property","title":"var chromaKeyColor: CGColor?"}]},{"path":"\/documentation\/haishinkit\/mediamixeroutput","title":"MediaMixerOutput","type":"protocol","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var audioTrackId: UInt8?","type":"property","path":"\/documentation\/haishinkit\/mediamixeroutput\/audiotrackid"},{"title":"var videoTrackId: UInt8?","type":"property","path":"\/documentation\/haishinkit\/mediamixeroutput\/videotrackid"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func mixer(MediaMixer, didOutput: CMSampleBuffer)","type":"method","path":"\/documentation\/haishinkit\/mediamixeroutput\/mixer(_:didoutput:)"},{"title":"func mixer(MediaMixer, didOutput: AVAudioPCMBuffer, when: AVAudioTime)","type":"method","path":"\/documentation\/haishinkit\/mediamixeroutput\/mixer(_:didoutput:when:)"},{"title":"func selectTrack(UInt8?, mediaType: CMFormatDescription.MediaType) async","type":"method","path":"\/documentation\/haishinkit\/mediamixeroutput\/selecttrack(_:mediatype:)"}]},{"path":"\/documentation\/haishinkit\/networkconnection","title":"NetworkConnection","type":"protocol","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/networkconnection\/connected","title":"var connected: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/networkconnection\/close()","title":"func close() async throws","type":"method"}]},{"path":"\/documentation\/haishinkit\/runner","title":"Runner","type":"protocol","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var isRunning: Bool","path":"\/documentation\/haishinkit\/runner\/isrunning"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func startRunning()","path":"\/documentation\/haishinkit\/runner\/startrunning()"},{"type":"method","title":"func stopRunning()","path":"\/documentation\/haishinkit\/runner\/stoprunning()"}]},{"path":"\/documentation\/haishinkit\/screendelegate","title":"ScreenDelegate","type":"protocol","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func screen(Screen, willLayout: CMTime)","type":"method","path":"\/documentation\/haishinkit\/screendelegate\/screen(_:willlayout:)"}]},{"path":"\/documentation\/haishinkit\/screenrenderer","title":"ScreenRenderer","type":"protocol","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var backgroundColor: CGColor","type":"property","path":"\/documentation\/haishinkit\/screenrenderer\/backgroundcolor"},{"title":"var bounds: CGRect","type":"property","path":"\/documentation\/haishinkit\/screenrenderer\/bounds"},{"title":"var context: CIContext","type":"property","path":"\/documentation\/haishinkit\/screenrenderer\/context"},{"title":"var presentationTimeStamp: CMTime","type":"property","path":"\/documentation\/haishinkit\/screenrenderer\/presentationtimestamp"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func draw(ScreenObject)","type":"method","path":"\/documentation\/haishinkit\/screenrenderer\/draw(_:)"},{"title":"func layout(ScreenObject)","type":"method","path":"\/documentation\/haishinkit\/screenrenderer\/layout(_:)"},{"title":"func setTarget(CVPixelBuffer?)","type":"method","path":"\/documentation\/haishinkit\/screenrenderer\/settarget(_:)"}]},{"path":"\/documentation\/haishinkit\/session","title":"Session","type":"protocol","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(uri: URL)","type":"init","path":"\/documentation\/haishinkit\/session\/init(uri:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var readyState: AsyncStream<SessionReadyState>","type":"property","path":"\/documentation\/haishinkit\/session\/readystate"},{"title":"var stream: any StreamConvertible","type":"property","path":"\/documentation\/haishinkit\/session\/stream"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func connect(SessionMethod, disconnected: () -> Void) async throws","type":"method","path":"\/documentation\/haishinkit\/session\/connect(_:disconnected:)"},{"title":"func setMaxRetryCount(Int)","type":"method","path":"\/documentation\/haishinkit\/session\/setmaxretrycount(_:)"}]},{"path":"\/documentation\/haishinkit\/sessionfactory","title":"SessionFactory","type":"protocol","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var supportedProtocols: Set<String>","path":"\/documentation\/haishinkit\/sessionfactory\/supportedprotocols"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func make(URL) -> any Session","path":"\/documentation\/haishinkit\/sessionfactory\/make(_:)"}]},{"path":"\/documentation\/haishinkit\/streambitratestrategy","title":"StreamBitRateStrategy","type":"protocol","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/streambitratestrategy\/mamimumaudiobitrate","type":"property","title":"var mamimumAudioBitRate: Int"},{"path":"\/documentation\/haishinkit\/streambitratestrategy\/mamimumvideobitrate","type":"property","title":"var mamimumVideoBitRate: Int"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/streambitratestrategy\/adjustbitrate(_:stream:)","type":"method","title":"func adjustBitrate(NetworkMonitorEvent, stream: some StreamConvertible) async"}]},{"path":"\/documentation\/haishinkit\/streamconvertible","title":"StreamConvertible","type":"protocol","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/streamconvertible\/audiosettings","title":"var audioSettings: AudioCodecSettings","type":"property"},{"path":"\/documentation\/haishinkit\/streamconvertible\/readystate","title":"var readyState: StreamReadyState","type":"property"},{"path":"\/documentation\/haishinkit\/streamconvertible\/soundtransform","title":"var soundTransform: SoundTransform?","type":"property"},{"path":"\/documentation\/haishinkit\/streamconvertible\/videosettings","title":"var videoSettings: VideoCodecSettings","type":"property"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/streamconvertible\/addoutput(_:)","title":"func addOutput(some StreamOutput)","type":"method"},{"path":"\/documentation\/haishinkit\/streamconvertible\/append(_:)","title":"func append(CMSampleBuffer)","type":"method"},{"path":"\/documentation\/haishinkit\/streamconvertible\/append(_:when:)","title":"func append(AVAudioBuffer, when: AVAudioTime)","type":"method"},{"path":"\/documentation\/haishinkit\/streamconvertible\/attachaudioplayer(_:)","title":"func attachAudioPlayer(AudioPlayer?) async","type":"method"},{"path":"\/documentation\/haishinkit\/streamconvertible\/dispatch(_:)","title":"func dispatch(NetworkMonitorEvent) async","type":"method"},{"path":"\/documentation\/haishinkit\/streamconvertible\/removeoutput(_:)","title":"func removeOutput(some StreamOutput)","type":"method"},{"path":"\/documentation\/haishinkit\/streamconvertible\/setaudiosettings(_:)","title":"func setAudioSettings(AudioCodecSettings) throws","type":"method"},{"path":"\/documentation\/haishinkit\/streamconvertible\/setbitratestrategy(_:)","title":"func setBitRateStrategy((some StreamBitRateStrategy)?)","type":"method"},{"path":"\/documentation\/haishinkit\/streamconvertible\/setsoundtransform(_:)","title":"func setSoundTransform(SoundTransform) async","type":"method"},{"path":"\/documentation\/haishinkit\/streamconvertible\/setvideoinputbuffercounts(_:)","title":"func setVideoInputBufferCounts(Int)","type":"method"},{"path":"\/documentation\/haishinkit\/streamconvertible\/setvideosettings(_:)","title":"func setVideoSettings(VideoCodecSettings) throws","type":"method"}]},{"path":"\/documentation\/haishinkit\/streamoutput","title":"StreamOutput","type":"protocol","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/haishinkit\/streamoutput\/stream(_:didoutput:)","title":"func stream(some StreamConvertible, didOutput: CMSampleBuffer)"},{"type":"method","path":"\/documentation\/haishinkit\/streamoutput\/stream(_:didoutput:when:)","title":"func stream(some StreamConvertible, didOutput: AVAudioBuffer, when: AVAudioTime)"}]},{"path":"\/documentation\/haishinkit\/videoeffect","title":"VideoEffect","type":"protocol","children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videoeffect\/execute(_:)","title":"func execute(CIImage) -> CIImage","type":"method"}]},{"title":"Structures","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/audiocodecsettings","title":"AudioCodecSettings","type":"struct","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(bitRate: Int, downmix: Bool, channelMap: [Int]?, sampleRate: Float64, format: AudioCodecSettings.Format)","path":"\/documentation\/haishinkit\/audiocodecsettings\/init(bitrate:downmix:channelmap:samplerate:format:)","type":"init"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/haishinkit\/audiocodecsettings\/init(from:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var bitRate: Int","path":"\/documentation\/haishinkit\/audiocodecsettings\/bitrate","type":"property"},{"title":"var channelMap: [Int]?","path":"\/documentation\/haishinkit\/audiocodecsettings\/channelmap","type":"property"},{"title":"var downmix: Bool","path":"\/documentation\/haishinkit\/audiocodecsettings\/downmix","type":"property"},{"title":"var format: AudioCodecSettings.Format","path":"\/documentation\/haishinkit\/audiocodecsettings\/format-swift.property","type":"property"},{"title":"let sampleRate: Float64","path":"\/documentation\/haishinkit\/audiocodecsettings\/samplerate","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"title":"static let `default`: AudioCodecSettings","path":"\/documentation\/haishinkit\/audiocodecsettings\/default","type":"property"},{"title":"static let defaultBitRate: Int","path":"\/documentation\/haishinkit\/audiocodecsettings\/defaultbitrate","type":"property"},{"title":"static let maximumNumberOfChannels: UInt32","path":"\/documentation\/haishinkit\/audiocodecsettings\/maximumnumberofchannels","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"title":"AudioCodecSettings.Format","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/audiocodecsettings\/format-swift.enum\/aac","title":"case aac","type":"case"},{"path":"\/documentation\/haishinkit\/audiocodecsettings\/format-swift.enum\/opus","title":"case opus","type":"case"},{"path":"\/documentation\/haishinkit\/audiocodecsettings\/format-swift.enum\/pcm","title":"case pcm","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/audiocodecsettings\/format-swift.enum\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/audiocodecsettings\/format-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/haishinkit\/audiocodecsettings\/format-swift.enum\/!=(_:_:)"}]}],"path":"\/documentation\/haishinkit\/audiocodecsettings\/format-swift.enum","type":"enum"}]},{"path":"\/documentation\/haishinkit\/audiomixersettings","title":"AudioMixerSettings","type":"struct","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init(sampleRate: Float64, channels: UInt32, isMuted: Bool, mainTrack: UInt8, tracks: [UInt8 : AudioMixerTrackSettings])","path":"\/documentation\/haishinkit\/audiomixersettings\/init(samplerate:channels:ismuted:maintrack:tracks:)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"let channels: UInt32","path":"\/documentation\/haishinkit\/audiomixersettings\/channels"},{"type":"property","title":"var isMuted: Bool","path":"\/documentation\/haishinkit\/audiomixersettings\/ismuted"},{"type":"property","title":"var mainTrack: UInt8","path":"\/documentation\/haishinkit\/audiomixersettings\/maintrack"},{"type":"property","title":"var maximumNumberOfChannels: UInt32","path":"\/documentation\/haishinkit\/audiomixersettings\/maximumnumberofchannels"},{"type":"property","title":"let sampleRate: Float64","path":"\/documentation\/haishinkit\/audiomixersettings\/samplerate"},{"type":"property","title":"var tracks: [UInt8 : AudioMixerTrackSettings]","path":"\/documentation\/haishinkit\/audiomixersettings\/tracks"},{"type":"groupMarker","title":"Type Properties"},{"type":"property","title":"static let `default`: AudioMixerSettings","path":"\/documentation\/haishinkit\/audiomixersettings\/default"},{"type":"property","title":"static let maximumSampleRate: Float64","path":"\/documentation\/haishinkit\/audiomixersettings\/maximumsamplerate"}]},{"path":"\/documentation\/haishinkit\/audiomixertracksettings","title":"AudioMixerTrackSettings","type":"struct","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/haishinkit\/audiomixertracksettings\/init(from:)","title":"init(from: any Decoder) throws"},{"type":"init","path":"\/documentation\/haishinkit\/audiomixertracksettings\/init(volume:ismuted:downmix:channelmap:)","title":"init(volume: Float, isMuted: Bool, downmix: Bool, channelMap: [Int]?)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/haishinkit\/audiomixertracksettings\/channelmap","title":"var channelMap: [Int]?"},{"type":"property","path":"\/documentation\/haishinkit\/audiomixertracksettings\/downmix","title":"var downmix: Bool"},{"type":"property","path":"\/documentation\/haishinkit\/audiomixertracksettings\/ismuted","title":"var isMuted: Bool"},{"type":"property","path":"\/documentation\/haishinkit\/audiomixertracksettings\/volume","title":"var volume: Float"},{"type":"groupMarker","title":"Type Properties"},{"type":"property","path":"\/documentation\/haishinkit\/audiomixertracksettings\/default","title":"static let `default`: AudioMixerTrackSettings"}]},{"path":"\/documentation\/haishinkit\/networkmonitorreport","title":"NetworkMonitorReport","type":"struct","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/networkmonitorreport\/currentbytesinpersecond","type":"property","title":"let currentBytesInPerSecond: Int"},{"path":"\/documentation\/haishinkit\/networkmonitorreport\/currentbytesoutpersecond","type":"property","title":"let currentBytesOutPerSecond: Int"},{"path":"\/documentation\/haishinkit\/networkmonitorreport\/currentqueuebytesout","type":"property","title":"let currentQueueBytesOut: Int"},{"path":"\/documentation\/haishinkit\/networkmonitorreport\/totalbytesin","type":"property","title":"let totalBytesIn: Int"},{"path":"\/documentation\/haishinkit\/networkmonitorreport\/totalbytesout","type":"property","title":"let totalBytesOut: Int"}]},{"path":"\/documentation\/haishinkit\/sessionbuilder","title":"SessionBuilder","type":"struct","children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/sessionbuilder\/build()","title":"func build() async throws -> (any Session)?","type":"method"}]},{"path":"\/documentation\/haishinkit\/soundtransform","title":"SoundTransform","type":"struct","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(volume: Float, pan: Float)","path":"\/documentation\/haishinkit\/soundtransform\/init(volume:pan:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var pan: Float","path":"\/documentation\/haishinkit\/soundtransform\/pan","type":"property"},{"title":"var volume: Float","path":"\/documentation\/haishinkit\/soundtransform\/volume","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"title":"static let defaultPan: Float","path":"\/documentation\/haishinkit\/soundtransform\/defaultpan","type":"property"},{"title":"static let defaultVolume: Float","path":"\/documentation\/haishinkit\/soundtransform\/defaultvolume","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"title":"CustomDebugStringConvertible Implementations","path":"\/documentation\/haishinkit\/soundtransform\/customdebugstringconvertible-implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var debugDescription: String","path":"\/documentation\/haishinkit\/soundtransform\/debugdescription"}],"type":"symbol"},{"title":"Equatable Implementations","path":"\/documentation\/haishinkit\/soundtransform\/equatable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/haishinkit\/soundtransform\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}],"type":"symbol"}]},{"path":"\/documentation\/haishinkit\/videocodecsettings","title":"VideoCodecSettings","type":"struct","children":[{"title":"Initializers","type":"groupMarker"},{"type":"init","title":"init(from: any Decoder) throws","path":"\/documentation\/haishinkit\/videocodecsettings\/init(from:)"},{"type":"init","title":"init(videoSize: CGSize, bitRate: Int, profileLevel: String, scalingMode: VideoCodecSettings.ScalingMode, bitRateMode: VideoCodecSettings.BitRateMode, maxKeyFrameIntervalDuration: Int32, allowFrameReordering: Bool?, dataRateLimits: [Double]?, isHardwareAcceleratedEnabled: Bool)","path":"\/documentation\/haishinkit\/videocodecsettings\/init(videosize:bitrate:profilelevel:scalingmode:bitratemode:maxkeyframeintervalduration:allowframereordering:dataratelimits:ishardwareacceleratedenabled:)"},{"title":"Instance Properties","type":"groupMarker"},{"type":"property","title":"var allowFrameReordering: Bool?","path":"\/documentation\/haishinkit\/videocodecsettings\/allowframereordering"},{"type":"property","title":"var bitRate: Int","path":"\/documentation\/haishinkit\/videocodecsettings\/bitrate"},{"type":"property","title":"var bitRateMode: VideoCodecSettings.BitRateMode","path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.property"},{"type":"property","title":"var dataRateLimits: [Double]?","path":"\/documentation\/haishinkit\/videocodecsettings\/dataratelimits"},{"type":"property","title":"var frameInterval: Double","path":"\/documentation\/haishinkit\/videocodecsettings\/frameinterval"},{"type":"property","title":"var isHardwareAcceleratedEnabled: Bool","path":"\/documentation\/haishinkit\/videocodecsettings\/ishardwareacceleratedenabled"},{"type":"property","title":"var maxKeyFrameIntervalDuration: Int32","path":"\/documentation\/haishinkit\/videocodecsettings\/maxkeyframeintervalduration"},{"type":"property","title":"var profileLevel: String","path":"\/documentation\/haishinkit\/videocodecsettings\/profilelevel"},{"type":"property","title":"var scalingMode: VideoCodecSettings.ScalingMode","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.property"},{"type":"property","title":"var videoSize: CGSize","path":"\/documentation\/haishinkit\/videocodecsettings\/videosize"},{"title":"Type Properties","type":"groupMarker"},{"type":"property","title":"static let `default`: VideoCodecSettings","path":"\/documentation\/haishinkit\/videocodecsettings\/default"},{"type":"property","title":"static let frameInterval01: Double","path":"\/documentation\/haishinkit\/videocodecsettings\/frameinterval01"},{"type":"property","title":"static let frameInterval05: Double","path":"\/documentation\/haishinkit\/videocodecsettings\/frameinterval05"},{"type":"property","title":"static let frameInterval10: Double","path":"\/documentation\/haishinkit\/videocodecsettings\/frameinterval10"},{"type":"property","title":"static let frameInterval30: Double","path":"\/documentation\/haishinkit\/videocodecsettings\/frameinterval30"},{"title":"Enumerations","type":"groupMarker"},{"type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"type":"case","title":"case average","path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/average"},{"type":"case","title":"case constant","path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/constant"},{"title":"Initializers","type":"groupMarker"},{"type":"init","title":"init?(rawValue: String)","path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/init(rawvalue:)"},{"title":"Default Implementations","type":"groupMarker"},{"type":"symbol","title":"Equatable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/!=(_:_:)","type":"op"}],"path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/equatable-implementations"},{"type":"symbol","title":"RawRepresentable Implementations","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/init(from:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/hashvalue","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func encode(to: any Encoder) throws","path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/encode(to:)","type":"method"},{"title":"func hash(into: inout Hasher)","path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/hash(into:)","type":"method"}],"path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/rawrepresentable-implementations"}],"title":"VideoCodecSettings.BitRateMode","path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum"},{"type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/cropsourcetocleanaperture","title":"case cropSourceToCleanAperture"},{"title":"case letterbox","type":"case","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/letterbox"},{"title":"case normal","type":"case","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/normal"},{"title":"case trim","type":"case","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/trim"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: String)","type":"init","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/init(rawvalue:)"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/!=(_:_:)","type":"op"}],"title":"Equatable Implementations","type":"symbol","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/equatable-implementations"},{"children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/init(from:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/hashvalue","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func encode(to: any Encoder) throws","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/encode(to:)","type":"method"},{"title":"func hash(into: inout Hasher)","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/hash(into:)","type":"method"}],"title":"RawRepresentable Implementations","type":"symbol","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/rawrepresentable-implementations"}],"title":"VideoCodecSettings.ScalingMode","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum"}]},{"type":"struct","title":"VideoMixerSettings","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videomixersettings\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/haishinkit\/videomixersettings\/init(mode:ismuted:maintrack:)","title":"init(mode: VideoMixerSettings.Mode, isMuted: Bool, mainTrack: UInt8)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videomixersettings\/ismuted","title":"var isMuted: Bool","type":"property"},{"path":"\/documentation\/haishinkit\/videomixersettings\/maintrack","title":"var mainTrack: UInt8","type":"property"},{"path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.property","title":"var mode: VideoMixerSettings.Mode","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videomixersettings\/default","title":"static let `default`: VideoMixerSettings","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/offscreen","title":"case offscreen","type":"case"},{"path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/passthrough","title":"case passthrough","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/!=(_:_:)","type":"op"}],"path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/init(from:)","title":"init(from: any Decoder) throws"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/hashvalue","title":"var hashValue: Int"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/encode(to:)","title":"func encode(to: any Encoder) throws"},{"type":"method","path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)"}],"path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"title":"VideoMixerSettings.Mode","type":"enum"}],"path":"\/documentation\/haishinkit\/videomixersettings"},{"type":"groupMarker","title":"Variables"},{"type":"var","title":"let kHaishinKitIdentifier: String","path":"\/documentation\/haishinkit\/khaishinkitidentifier"},{"type":"groupMarker","title":"Type Aliases"},{"type":"typealias","title":"AudioDeviceConfigurationBlock","path":"\/documentation\/haishinkit\/audiodeviceconfigurationblock"},{"type":"typealias","title":"VideoDeviceConfigurationBlock","path":"\/documentation\/haishinkit\/videodeviceconfigurationblock"},{"type":"groupMarker","title":"Enumerations"},{"type":"enum","title":"DeviceUtil","children":[{"type":"groupMarker","title":"Type Methods"},{"path":"\/documentation\/haishinkit\/deviceutil\/device(withlocalizedname:mediatype:)","type":"method","title":"static func device(withLocalizedName: String, mediaType: AVMediaType) -> AVCaptureDevice?"}],"path":"\/documentation\/haishinkit\/deviceutil"},{"type":"enum","title":"NetworkMonitorEvent","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/haishinkit\/networkmonitorevent\/publishinsufficientbwoccured(report:)","type":"case","title":"case publishInsufficientBWOccured(report: NetworkMonitorReport)"},{"path":"\/documentation\/haishinkit\/networkmonitorevent\/reset","type":"case","title":"case reset"},{"path":"\/documentation\/haishinkit\/networkmonitorevent\/status(report:)","type":"case","title":"case status(report: NetworkMonitorReport)"}],"path":"\/documentation\/haishinkit\/networkmonitorevent"},{"type":"enum","title":"SessionMethod","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case ingest","type":"case","path":"\/documentation\/haishinkit\/sessionmethod\/ingest"},{"title":"case playback","type":"case","path":"\/documentation\/haishinkit\/sessionmethod\/playback"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/haishinkit\/sessionmethod\/!=(_:_:)","type":"op"}],"type":"symbol","path":"\/documentation\/haishinkit\/sessionmethod\/equatable-implementations"}],"path":"\/documentation\/haishinkit\/sessionmethod"},{"type":"enum","title":"SessionReadyState","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case closed","path":"\/documentation\/haishinkit\/sessionreadystate\/closed","type":"case"},{"title":"case closing","path":"\/documentation\/haishinkit\/sessionreadystate\/closing","type":"case"},{"title":"case connecting","path":"\/documentation\/haishinkit\/sessionreadystate\/connecting","type":"case"},{"title":"case open","path":"\/documentation\/haishinkit\/sessionreadystate\/open","type":"case"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: Int)","path":"\/documentation\/haishinkit\/sessionreadystate\/init(rawvalue:)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/sessionreadystate\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"title":"Equatable Implementations","path":"\/documentation\/haishinkit\/sessionreadystate\/equatable-implementations","type":"symbol"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var hashValue: Int","path":"\/documentation\/haishinkit\/sessionreadystate\/hashvalue"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func hash(into: inout Hasher)","path":"\/documentation\/haishinkit\/sessionreadystate\/hash(into:)"}],"title":"RawRepresentable Implementations","path":"\/documentation\/haishinkit\/sessionreadystate\/rawrepresentable-implementations","type":"symbol"}],"path":"\/documentation\/haishinkit\/sessionreadystate"},{"type":"enum","title":"StreamReadyState","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","path":"\/documentation\/haishinkit\/streamreadystate\/idle","title":"case idle"},{"type":"case","path":"\/documentation\/haishinkit\/streamreadystate\/play","title":"case play"},{"type":"case","path":"\/documentation\/haishinkit\/streamreadystate\/playing","title":"case playing"},{"type":"case","path":"\/documentation\/haishinkit\/streamreadystate\/publish","title":"case publish"},{"type":"case","path":"\/documentation\/haishinkit\/streamreadystate\/publishing","title":"case publishing"},{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/haishinkit\/streamreadystate\/init(rawvalue:)","title":"init?(rawValue: Int)"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","path":"\/documentation\/haishinkit\/streamreadystate\/equatable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/haishinkit\/streamreadystate\/!=(_:_:)"}],"title":"Equatable Implementations"},{"type":"symbol","path":"\/documentation\/haishinkit\/streamreadystate\/rawrepresentable-implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","path":"\/documentation\/haishinkit\/streamreadystate\/hashvalue","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func hash(into: inout Hasher)","path":"\/documentation\/haishinkit\/streamreadystate\/hash(into:)","type":"method"}],"title":"RawRepresentable Implementations"}],"path":"\/documentation\/haishinkit\/streamreadystate"}],"title":"HaishinKit","type":"module"},{"path":"\/documentation\/moqthaishinkit","title":"MoQTHaishinKit","children":[{"type":"groupMarker","title":"Classes"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/init(_:requesttimeout:)","type":"init","title":"init(MoQTSetupRole, requestTimeOut: UInt64)"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/objectstream","type":"property","title":"var objectStream: AsyncStream<MoQTObject>"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/requesttimeout","type":"property","title":"let requestTimeout: UInt64"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/role","type":"property","title":"let role: MoQTSetupRole"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/annouce(_:authinfo:)","type":"method","title":"func annouce([String], authInfo: String?) async throws -> Result<MoQTAnnounceOk, MoQTAnnounceError>"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/close()","type":"method","title":"func close() async"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/connect(_:)","type":"method","title":"func connect(String) async throws -> MoQTServerSetup"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/send(_:header:)","type":"method","title":"func send([MoQTObject], header: MoQTStreamHeaderSubgroup) async throws"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/subscribe(_:name:authinfo:)","type":"method","title":"func subscribe([String], name: String, authInfo: String?) async throws -> Result<MoQTSubscribeOk, MoQTSubscribeError>"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/subscribeannouces(_:authinfo:)","type":"method","title":"func subscribeAnnouces([String], authInfo: String?) async throws -> Result<MoQTSubscribeAnnouncesOk, MoQTSubscribeAnnouncesError>"},{"type":"groupMarker","title":"Type Properties"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/defaultport","type":"property","title":"static let defaultPort: Int"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/defaultrequesttimeout","type":"property","title":"static let defaultRequestTimeout: UInt64"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/supportedprotocols","type":"property","title":"static let supportedProtocols: [String]"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/supportedversions","type":"property","title":"static let supportedVersions: [MoQTVersion]"},{"type":"groupMarker","title":"Enumerations"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/error","type":"enum","title":"MoQTConnection.Error","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","title":"case connectionTimedOut","path":"\/documentation\/moqthaishinkit\/moqtconnection\/error\/connectiontimedout"},{"type":"case","title":"case invalidState","path":"\/documentation\/moqthaishinkit\/moqtconnection\/error\/invalidstate"},{"type":"case","title":"case requestTimedOut","path":"\/documentation\/moqthaishinkit\/moqtconnection\/error\/requesttimedout"},{"type":"case","title":"case socketErrorOccurred(any Error)","path":"\/documentation\/moqthaishinkit\/moqtconnection\/error\/socketerroroccurred(_:)"},{"type":"case","title":"case unknownResponse","path":"\/documentation\/moqthaishinkit\/moqtconnection\/error\/unknownresponse"},{"type":"case","title":"case unsupportedCommand(String)","path":"\/documentation\/moqthaishinkit\/moqtconnection\/error\/unsupportedcommand(_:)"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","title":"Error Implementations","path":"\/documentation\/moqthaishinkit\/moqtconnection\/error\/error-implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var localizedDescription: String","type":"property","path":"\/documentation\/moqthaishinkit\/moqtconnection\/error\/localizeddescription"}]}]},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/actor-implementations","type":"symbol","title":"Actor Implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/assertisolated(_:file:line:)","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/assumeisolated(_:file:line:)","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","type":"method"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/preconditionisolated(_:file:line:)","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method"}]}],"type":"class","title":"MoQTConnection"},{"type":"groupMarker","title":"Protocols"},{"path":"\/documentation\/moqthaishinkit\/moqtcontrolmessage","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/moqthaishinkit\/moqtcontrolmessage\/payload","type":"property","title":"var payload: Data"},{"path":"\/documentation\/moqthaishinkit\/moqtcontrolmessage\/type","type":"property","title":"var type: MoQTMessageType"}],"type":"protocol","title":"MoQTControlMessage"},{"type":"groupMarker","title":"Structures"},{"path":"\/documentation\/moqthaishinkit\/moqtannounce","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtannounce\/payload","title":"var payload: Data","type":"property"},{"path":"\/documentation\/moqthaishinkit\/moqtannounce\/subscribeparameters","title":"let subscribeParameters: [MoQTVersionSpecificParameter]","type":"property"},{"path":"\/documentation\/moqthaishinkit\/moqtannounce\/tracknamespace","title":"let trackNamespace: [String]","type":"property"},{"path":"\/documentation\/moqthaishinkit\/moqtannounce\/type","title":"let type: MoQTMessageType","type":"property"}],"type":"struct","title":"MoQTAnnounce"},{"path":"\/documentation\/moqthaishinkit\/moqtannounceerror","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/moqthaishinkit\/moqtannounceerror\/code","type":"property","title":"let code: Int"},{"path":"\/documentation\/moqthaishinkit\/moqtannounceerror\/payload","type":"property","title":"var payload: Data"},{"path":"\/documentation\/moqthaishinkit\/moqtannounceerror\/reasonphrase","type":"property","title":"let reasonPhrase: String"},{"path":"\/documentation\/moqthaishinkit\/moqtannounceerror\/tracknamespace","type":"property","title":"let trackNamespace: [String]"},{"path":"\/documentation\/moqthaishinkit\/moqtannounceerror\/type","type":"property","title":"let type: MoQTMessageType"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/moqthaishinkit\/moqtannounceerror\/error-implementations","type":"symbol","title":"Error Implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/moqthaishinkit\/moqtannounceerror\/localizeddescription","type":"property","title":"var localizedDescription: String"}]}],"type":"struct","title":"MoQTAnnounceError"},{"path":"\/documentation\/moqthaishinkit\/moqtannounceok","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var payload: Data","path":"\/documentation\/moqthaishinkit\/moqtannounceok\/payload"},{"type":"property","title":"let trackNamespace: [String]","path":"\/documentation\/moqthaishinkit\/moqtannounceok\/tracknamespace"},{"type":"property","title":"let type: MoQTMessageType","path":"\/documentation\/moqthaishinkit\/moqtannounceok\/type"}],"type":"struct","title":"MoQTAnnounceOk"},{"path":"\/documentation\/moqthaishinkit\/moqtgoaway","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"let newSessionURI: String","path":"\/documentation\/moqthaishinkit\/moqtgoaway\/newsessionuri","type":"property"},{"title":"var payload: Data","path":"\/documentation\/moqthaishinkit\/moqtgoaway\/payload","type":"property"},{"title":"let type: MoQTMessageType","path":"\/documentation\/moqthaishinkit\/moqtgoaway\/type","type":"property"}],"type":"struct","title":"MoQTGoaway"},{"path":"\/documentation\/moqthaishinkit\/moqtobject","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/moqthaishinkit\/moqtobject\/init(id:status:data:)","title":"init(id: Int, status: Int?, data: Data)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtobject\/data","title":"let data: Data"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtobject\/id","title":"let id: Int"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtobject\/status","title":"let status: Int?"}],"type":"struct","title":"MoQTObject"},{"path":"\/documentation\/moqthaishinkit\/moqtserversetup","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtserversetup\/payload","title":"var payload: Data","type":"property"},{"path":"\/documentation\/moqthaishinkit\/moqtserversetup\/selectedversion","title":"let selectedVersion: Int","type":"property"},{"path":"\/documentation\/moqthaishinkit\/moqtserversetup\/setupparameters","title":"let setupParameters: [MoQTSetupParameter]","type":"property"},{"path":"\/documentation\/moqthaishinkit\/moqtserversetup\/type","title":"let type: MoQTMessageType","type":"property"}],"type":"struct","title":"MoQTServerSetup"},{"path":"\/documentation\/moqthaishinkit\/moqtsetupparameter","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"let key: MoQTSetupParameterType","path":"\/documentation\/moqthaishinkit\/moqtsetupparameter\/key"},{"type":"property","title":"let value: any Sendable","path":"\/documentation\/moqthaishinkit\/moqtsetupparameter\/value"}],"type":"struct","title":"MoQTSetupParameter"},{"path":"\/documentation\/moqthaishinkit\/moqtstreamheadersubgroup","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init(trackAlias: Int, groupId: Int, subgroupId: Int, publisherPriority: Int)","path":"\/documentation\/moqthaishinkit\/moqtstreamheadersubgroup\/init(trackalias:groupid:subgroupid:publisherpriority:)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"let groupId: Int","path":"\/documentation\/moqthaishinkit\/moqtstreamheadersubgroup\/groupid"},{"type":"property","title":"var payload: Data","path":"\/documentation\/moqthaishinkit\/moqtstreamheadersubgroup\/payload"},{"type":"property","title":"let publisherPriority: Int","path":"\/documentation\/moqthaishinkit\/moqtstreamheadersubgroup\/publisherpriority"},{"type":"property","title":"let subgroupId: Int","path":"\/documentation\/moqthaishinkit\/moqtstreamheadersubgroup\/subgroupid"},{"type":"property","title":"let trackAlias: Int","path":"\/documentation\/moqthaishinkit\/moqtstreamheadersubgroup\/trackalias"},{"type":"property","title":"let type: MoQTDataStreamType","path":"\/documentation\/moqthaishinkit\/moqtstreamheadersubgroup\/type"}],"type":"struct","title":"MoQTStreamHeaderSubgroup"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"let endGroup: Int?","type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/endgroup"},{"title":"let endObject: Int?","type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/endobject"},{"title":"let filterType: MoQTSubscribe.FilterType","type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.property"},{"title":"let groupOrder: MoQTSubscribe.GroupOrder","type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.property"},{"title":"var payload: Data","type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/payload"},{"title":"let startGroup: Int?","type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/startgroup"},{"title":"let startObject: Int?","type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/startobject"},{"title":"let subscribeId: Int","type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/subscribeid"},{"title":"let subscribeParameters: [MoQTVersionSpecificParameter]","type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/subscribeparameters"},{"title":"let subscribePriority: Int","type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/subscribepriority"},{"title":"let trackAlias: Int","type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/trackalias"},{"title":"let trackName: String","type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/trackname"},{"title":"let trackNamespace: [String]","type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/tracknamespace"},{"title":"let type: MoQTMessageType","type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/type"},{"title":"Enumerations","type":"groupMarker"},{"title":"MoQTSubscribe.FilterType","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/absoluterange","type":"case","title":"case absoluteRange"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/absolutestart","type":"case","title":"case absoluteStart"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/latestgroup","type":"case","title":"case latestGroup"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/latestobject","type":"case","title":"case latestObject"},{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/init(rawvalue:)","type":"init","title":"init?(rawValue: Int)"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"type":"symbol","title":"Equatable Implementations"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/rawrepresentable-implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var hashValue: Int","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/hashvalue"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func hash(into: inout Hasher)","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/hash(into:)"}],"type":"symbol","title":"RawRepresentable Implementations"}],"type":"enum","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum"},{"title":"MoQTSubscribe.GroupOrder","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case ascending","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/ascending","type":"case"},{"title":"case descending","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/descending","type":"case"},{"title":"case original","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/original","type":"case"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: Int)","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/init(rawvalue:)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/!=(_:_:)","type":"op"}],"title":"Equatable Implementations","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/equatable-implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"title":"RawRepresentable Implementations","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/rawrepresentable-implementations","type":"symbol"}],"type":"enum","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum"}],"type":"struct","title":"MoQTSubscribe"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounces","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounces\/parameters","title":"let parameters: [MoQTVersionSpecificParameter]"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounces\/payload","title":"var payload: Data"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounces\/tracknamespaceprefix","title":"let trackNamespacePrefix: [String]"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounces\/type","title":"let type: MoQTMessageType"}],"type":"struct","title":"MoQTSubscribeAnnounces"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounceserror","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounceserror\/errorcode","type":"property","title":"let errorCode: Int"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounceserror\/payload","type":"property","title":"var payload: Data"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounceserror\/reasonphrase","type":"property","title":"let reasonPhrase: String"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounceserror\/tracknamespaceprefix","type":"property","title":"let trackNamespacePrefix: [String]"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounceserror\/type","type":"property","title":"let type: MoQTMessageType"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounceserror\/error-implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounceserror\/localizeddescription","type":"property","title":"var localizedDescription: String"}],"type":"symbol","title":"Error Implementations"}],"type":"struct","title":"MoQTSubscribeAnnouncesError"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeannouncesok","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var payload: Data","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannouncesok\/payload","type":"property"},{"title":"let trackNamespacePrefix: [String]","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannouncesok\/tracknamespaceprefix","type":"property"},{"title":"let type: MoQTMessageType","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannouncesok\/type","type":"property"}],"type":"struct","title":"MoQTSubscribeAnnouncesOk"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror\/code","title":"let code: Int"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror\/payload","title":"var payload: Data"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror\/reasonphrase","title":"let reasonPhrase: String"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror\/subscribeid","title":"let subscribeId: Int"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror\/trackalias","title":"let trackAlias: Int"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror\/type","title":"let type: MoQTMessageType"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var localizedDescription: String","path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror\/localizeddescription"}],"path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror\/error-implementations","title":"Error Implementations"}],"type":"struct","title":"MoQTSubscribeError"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeok","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"let contentExists: Bool","path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/contentexists","type":"property"},{"title":"let expires: Int","path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/expires","type":"property"},{"title":"let groupOrder: MoQTSubscribe.GroupOrder","path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/grouporder","type":"property"},{"title":"let largestGroupId: Int?","path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/largestgroupid","type":"property"},{"title":"let largestObjectId: Int?","path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/largestobjectid","type":"property"},{"title":"var payload: Data","path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/payload","type":"property"},{"title":"let subscribeId: Int","path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/subscribeid","type":"property"},{"title":"let subscribeParameters: [MoQTVersionSpecificParameter]","path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/subscribeparameters","type":"property"},{"title":"let type: MoQTMessageType","path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/type","type":"property"}],"type":"struct","title":"MoQTSubscribeOk"},{"path":"\/documentation\/moqthaishinkit\/moqtversionspecificparameter","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"let key: MoQTVersionSpecificType","path":"\/documentation\/moqthaishinkit\/moqtversionspecificparameter\/key","type":"property"},{"title":"let value: any Sendable","path":"\/documentation\/moqthaishinkit\/moqtversionspecificparameter\/value","type":"property"}],"type":"struct","title":"MoQTVersionSpecificParameter"},{"type":"groupMarker","title":"Enumerations"},{"path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","title":"case fetchHeader","path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/fetchheader"},{"type":"case","title":"case objectDatagram","path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/objectdatagram"},{"type":"case","title":"case streamHeaderSubgroup","path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/streamheadersubgroup"},{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init?(rawValue: Int)","path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/init(rawvalue:)"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/!=(_:_:)","type":"op"}],"type":"symbol","title":"Equatable Implementations","path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/equatable-implementations"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var hashValue: Int","path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/hashvalue"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func hash(into: inout Hasher)","path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/hash(into:)"}],"type":"symbol","title":"RawRepresentable Implementations","path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/rawrepresentable-implementations"}],"type":"enum","title":"MoQTDataStreamType"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case announce","type":"case","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/announce"},{"title":"case announceCancel","type":"case","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/announcecancel"},{"title":"case announceError","type":"case","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/announceerror"},{"title":"case announceOk","type":"case","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/announceok"},{"title":"case clientSetup","type":"case","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/clientsetup"},{"title":"case goaway","type":"case","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/goaway"},{"title":"case serverSetup","type":"case","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/serversetup"},{"title":"case subscribe","type":"case","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/subscribe"},{"title":"case subscribeAnnounuces","type":"case","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/subscribeannounuces"},{"title":"case subscribeAnnounucesError","type":"case","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/subscribeannounuceserror"},{"title":"case subscribeAnnounucesOk","type":"case","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/subscribeannounucesok"},{"title":"case subscribeDone","type":"case","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/subscribedone"},{"title":"case subscribeError","type":"case","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/subscribeerror"},{"title":"case subscribeOk","type":"case","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/subscribeok"},{"title":"case subscribeUpdate","type":"case","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/subscribeupdate"},{"title":"case trackStatus","type":"case","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/trackstatus"},{"title":"case trackStatusRequest","type":"case","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/trackstatusrequest"},{"title":"case unannounce","type":"case","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/unannounce"},{"title":"case unsubscribe","type":"case","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/unsubscribe"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: Int)","type":"init","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/init(rawvalue:)"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","type":"symbol","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/equatable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"}]},{"title":"RawRepresentable Implementations","type":"symbol","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/rawrepresentable-implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}]}],"type":"enum","title":"MoQTMessageType"},{"path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/maxsubscribeid","title":"case maxSubscribeId","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/path","title":"case path","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/role","title":"case role","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}],"path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"type":"enum","title":"MoQTSetupParameterType"},{"path":"\/documentation\/moqthaishinkit\/moqtsetuprole","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case pubSub","path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/pubsub","type":"case"},{"title":"case publisher","path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/publisher","type":"case"},{"title":"case subscriber","path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/subscriber","type":"case"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: Int)","path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/init(rawvalue:)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/equatable-implementations","type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/!=(_:_:)","type":"op"}]},{"title":"RawRepresentable Implementations","path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/rawrepresentable-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var hashValue: Int","path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/hashvalue"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func hash(into: inout Hasher)","path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/hash(into:)"}]}],"type":"enum","title":"MoQTSetupRole"},{"path":"\/documentation\/moqthaishinkit\/moqtversion","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtversion\/draft01","title":"case draft01","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtversion\/draft02","title":"case draft02","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtversion\/draft03","title":"case draft03","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtversion\/draft04","title":"case draft04","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtversion\/draft05","title":"case draft05","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtversion\/draft06","title":"case draft06","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtversion\/draft07","title":"case draft07","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtversion\/draft07exp","title":"case draft07Exp","type":"case"},{"path":"\/documentation\/moqthaishinkit\/moqtversion\/draft07exp2","title":"case draft07Exp2","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtversion\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtversion\/equatable-implementations","title":"Equatable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/moqthaishinkit\/moqtversion\/!=(_:_:)"}],"type":"symbol"},{"path":"\/documentation\/moqthaishinkit\/moqtversion\/rawrepresentable-implementations","title":"RawRepresentable Implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","path":"\/documentation\/moqthaishinkit\/moqtversion\/hashvalue","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func hash(into: inout Hasher)","path":"\/documentation\/moqthaishinkit\/moqtversion\/hash(into:)","type":"method"}],"type":"symbol"}],"type":"enum","title":"MoQTVersion"},{"path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case authorizationInfo","path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/authorizationinfo","type":"case"},{"title":"case deliveryTimeout","path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/deliverytimeout","type":"case"},{"title":"case maxCacheDuration","path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/maxcacheduration","type":"case"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: Int)","path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/init(rawvalue:)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/equatable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/!=(_:_:)"}],"type":"symbol"},{"title":"RawRepresentable Implementations","path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/rawrepresentable-implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/hashvalue","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func hash(into: inout Hasher)","path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/hash(into:)","type":"method"}],"type":"symbol"}],"type":"enum","title":"MoQTVersionSpecificType"}],"type":"module"},{"title":"RTMPHaishinKit","type":"module","children":[{"title":"Articles","type":"groupMarker"},{"title":"Enhanced RTMP","path":"\/documentation\/rtmphaishinkit\/e-rtmp","type":"article"},{"title":"Classes","type":"groupMarker"},{"title":"RTMPConnection","path":"\/documentation\/rtmphaishinkit\/rtmpconnection","type":"class","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init(swfUrl: String?, pageUrl: String?, flashVer: String, fourCcList: [String]?, videoFourCcInfoMap: AMFObject?, audioFourCcInfoMap: AMFObject?, capsEx: Int, timeout: Int, requestTimeout: UInt64, chunkSize: Int, qualityOfService: DispatchQoS)","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/init(swfurl:pageurl:flashver:fourcclist:videofourccinfomap:audiofourccinfomap:capsex:timeout:requesttimeout:chunksize:qualityofservice:)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"let audioFourCcInfoMap: AMFObject?","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/audiofourccinfomap"},{"type":"property","title":"let capsEx: Int","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/capsex"},{"type":"property","title":"let chunkSize: Int","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/chunksize"},{"type":"property","title":"var connected: Bool","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/connected"},{"type":"property","title":"let flashVer: String","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/flashver"},{"type":"property","title":"let fourCcList: [String]?","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/fourcclist"},{"type":"property","title":"let objectEncoding: RTMPObjectEncoding","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/objectencoding"},{"type":"property","title":"let pageUrl: String?","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/pageurl"},{"type":"property","title":"let qualityOfService: DispatchQoS","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/qualityofservice"},{"type":"property","title":"let requestTimeout: UInt64","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/requesttimeout"},{"type":"property","title":"var status: AsyncStream<RTMPStatus>","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/status"},{"type":"property","title":"let swfUrl: String?","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/swfurl"},{"type":"property","title":"let timeout: Int","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/timeout"},{"type":"property","title":"var uri: URL?","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/uri"},{"type":"property","title":"let videoFourCcInfoMap: AMFObject?","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/videofourccinfomap"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func call(String, arguments: (any Sendable)?...) async throws -> RTMPResponse","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/call(_:arguments:)"},{"type":"method","title":"func close() async throws","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/close()"},{"type":"method","title":"func connect(String, arguments: (any Sendable)?...) async throws -> RTMPResponse","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/connect(_:arguments:)"},{"type":"groupMarker","title":"Type Properties"},{"type":"property","title":"static let defaultCapabilities: Int","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/defaultcapabilities"},{"type":"property","title":"static let defaultChunkSizeS: Int","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/defaultchunksizes"},{"type":"property","title":"static let defaultFlashVer: String","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/defaultflashver"},{"type":"property","title":"static let defaultObjectEncoding: RTMPObjectEncoding","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/defaultobjectencoding"},{"type":"property","title":"static let defaultPort: Int","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/defaultport"},{"type":"property","title":"static let defaultRequestTimeout: UInt64","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/defaultrequesttimeout"},{"type":"property","title":"static let defaultSecurePort: Int","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/defaultsecureport"},{"type":"property","title":"static let defaultTimeout: Int","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/defaulttimeout"},{"type":"property","title":"static let defaultWindowSizeS: Int64","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/defaultwindowsizes"},{"type":"property","title":"static let supportedAudioFourCcInfoMap: AMFObject","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/supportedaudiofourccinfomap"},{"type":"property","title":"static let supportedFourCcList: [String]","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/supportedfourcclist"},{"type":"property","title":"static let supportedProtocols: Set<String>","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/supportedprotocols"},{"type":"property","title":"static let supportedVideoFourCcInfoMap: AMFObject","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/supportedvideofourccinfomap"},{"type":"groupMarker","title":"Enumerations"},{"type":"enum","title":"RTMPConnection.Code","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/code\/callbadversion","title":"case callBadVersion"},{"type":"case","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/code\/callfailed","title":"case callFailed"},{"type":"case","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/code\/callprohibited","title":"case callProhibited"},{"type":"case","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/code\/connectappshutdown","title":"case connectAppshutdown"},{"type":"case","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/code\/connectclosed","title":"case connectClosed"},{"type":"case","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/code\/connectfailed","title":"case connectFailed"},{"type":"case","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/code\/connectidletimeout","title":"case connectIdleTimeOut"},{"type":"case","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/code\/connectinvalidapp","title":"case connectInvalidApp"},{"type":"case","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/code\/connectnetworkchange","title":"case connectNetworkChange"},{"type":"case","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/code\/connectrejected","title":"case connectRejected"},{"type":"case","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/code\/connectsuccess","title":"case connectSuccess"},{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/code\/init(rawvalue:)","title":"init?(rawValue: String)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/code\/level","title":"var level: String"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/code\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"}],"path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/code\/equatable-implementations","title":"Equatable Implementations"},{"type":"symbol","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var hashValue: Int","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/code\/hashvalue"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func hash(into: inout Hasher)","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/code\/hash(into:)"}],"path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/code\/rawrepresentable-implementations","title":"RawRepresentable Implementations"}],"path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/code"},{"type":"enum","title":"RTMPConnection.Error","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case connectionTimedOut","type":"case","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/error\/connectiontimedout"},{"title":"case invalidState","type":"case","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/error\/invalidstate"},{"title":"case requestFailed(response: RTMPResponse)","type":"case","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/error\/requestfailed(response:)"},{"title":"case requestTimedOut","type":"case","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/error\/requesttimedout"},{"title":"case socketErrorOccurred((any Error)?)","type":"case","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/error\/socketerroroccurred(_:)"},{"title":"case unsupportedCommand(String)","type":"case","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/error\/unsupportedcommand(_:)"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Error Implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var localizedDescription: String","path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/error\/localizeddescription"}],"path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/error\/error-implementations"}],"path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/error"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","title":"Actor Implementations","children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/assertisolated(_:file:line:)","type":"method","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)"},{"path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/assumeisolated(_:file:line:)","type":"method","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T"},{"path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/preconditionisolated(_:file:line:)","type":"method","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)"}],"path":"\/documentation\/rtmphaishinkit\/rtmpconnection\/actor-implementations"}]},{"title":"RTMPSharedObject","path":"\/documentation\/rtmphaishinkit\/rtmpsharedobject","type":"class","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var data: AMFObject","path":"\/documentation\/rtmphaishinkit\/rtmpsharedobject\/data"},{"type":"property","title":"let objectEncoding: RTMPObjectEncoding","path":"\/documentation\/rtmphaishinkit\/rtmpsharedobject\/objectencoding"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func clear() async","path":"\/documentation\/rtmphaishinkit\/rtmpsharedobject\/clear()"},{"type":"method","title":"func close() async","path":"\/documentation\/rtmphaishinkit\/rtmpsharedobject\/close()"},{"type":"method","title":"func connect(RTMPConnection) async","path":"\/documentation\/rtmphaishinkit\/rtmpsharedobject\/connect(_:)"},{"type":"method","title":"func setProperty(String, (any Sendable)?) async","path":"\/documentation\/rtmphaishinkit\/rtmpsharedobject\/setproperty(_:_:)"},{"type":"groupMarker","title":"Type Methods"},{"type":"method","title":"static func getRemote(withName: String, remotePath: String, persistence: Bool) -> RTMPSharedObject","path":"\/documentation\/rtmphaishinkit\/rtmpsharedobject\/getremote(withname:remotepath:persistence:)"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","title":"Actor Implementations","path":"\/documentation\/rtmphaishinkit\/rtmpsharedobject\/actor-implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/rtmphaishinkit\/rtmpsharedobject\/assertisolated(_:file:line:)","type":"method"},{"title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","path":"\/documentation\/rtmphaishinkit\/rtmpsharedobject\/assumeisolated(_:file:line:)","type":"method"},{"title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/rtmphaishinkit\/rtmpsharedobject\/preconditionisolated(_:file:line:)","type":"method"}]}]},{"title":"RTMPStream","path":"\/documentation\/rtmphaishinkit\/rtmpstream","type":"class","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(connection: RTMPConnection, fcPublishName: String?)","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/init(connection:fcpublishname:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var audioSampleAccess: Bool","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/audiosampleaccess","type":"property"},{"title":"var audioTrackId: UInt8?","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/audiotrackid","type":"property"},{"title":"var currentFPS: UInt16","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/currentfps","type":"property"},{"title":"var fcPublishName: String?","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/fcpublishname","type":"property"},{"title":"var info: RTMPStreamInfo","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/info","type":"property"},{"title":"var metadata: AMFArray","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/metadata","type":"property"},{"title":"var objectEncoding: RTMPObjectEncoding","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/objectencoding","type":"property"},{"title":"var readyState: StreamReadyState","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/readystate","type":"property"},{"title":"var status: AsyncStream<RTMPStatus>","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/status","type":"property"},{"title":"var videoSampleAccess: Bool","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/videosampleaccess","type":"property"},{"title":"var videoTrackId: UInt8?","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/videotrackid","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func close() async throws -> RTMPResponse","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/close()","type":"method"},{"title":"func pause(Bool) async throws -> RTMPResponse","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/pause(_:)","type":"method"},{"title":"func play((any Sendable)?...) async throws -> RTMPResponse","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/play(_:)","type":"method"},{"title":"func publish(String?, type: RTMPStream.HowToPublish) async throws -> RTMPResponse","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/publish(_:type:)","type":"method"},{"title":"func receiveAudio(Bool) async throws","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/receiveaudio(_:)","type":"method"},{"title":"func receiveVideo(Bool) async throws","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/receivevideo(_:)","type":"method"},{"title":"func seek(Double) async throws","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/seek(_:)","type":"method"},{"title":"func send(String, arguments: (any Sendable)?..., isResetTimestamp: Bool) throws","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/send(_:arguments:isresettimestamp:)","type":"method"},{"title":"func togglePause() async throws -> RTMPResponse","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/togglepause()","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"title":"RTMPStream.Code","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code","type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/bufferempty","type":"case","title":"case bufferEmpty"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/bufferflush","type":"case","title":"case bufferFlush"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/bufferfull","type":"case","title":"case bufferFull"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/connectclosed","type":"case","title":"case connectClosed"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/connectfailed","type":"case","title":"case connectFailed"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/connectrejected","type":"case","title":"case connectRejected"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/connectsuccess","type":"case","title":"case connectSuccess"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/drmupdateneeded","type":"case","title":"case drmUpdateNeeded"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/failed","type":"case","title":"case failed"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/multicaststreamreset","type":"case","title":"case multicastStreamReset"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/pausenotify","type":"case","title":"case pauseNotify"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/playfailed","type":"case","title":"case playFailed"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/playfilestructureinvalid","type":"case","title":"case playFileStructureInvalid"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/playinsufficientbw","type":"case","title":"case playInsufficientBW"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/playnosupportedtrackfound","type":"case","title":"case playNoSupportedTrackFound"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/playreset","type":"case","title":"case playReset"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/playstart","type":"case","title":"case playStart"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/playstop","type":"case","title":"case playStop"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/playstreamnotfound","type":"case","title":"case playStreamNotFound"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/playtransition","type":"case","title":"case playTransition"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/playunpublishnotify","type":"case","title":"case playUnpublishNotify"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/publishbadname","type":"case","title":"case publishBadName"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/publishidle","type":"case","title":"case publishIdle"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/publishstart","type":"case","title":"case publishStart"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/recordalreadyexists","type":"case","title":"case recordAlreadyExists"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/recorddiskquotaexceeded","type":"case","title":"case recordDiskQuotaExceeded"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/recordfailed","type":"case","title":"case recordFailed"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/recordnoaccess","type":"case","title":"case recordNoAccess"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/recordstart","type":"case","title":"case recordStart"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/recordstop","type":"case","title":"case recordStop"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/secondscreenstart","type":"case","title":"case secondScreenStart"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/secondscreenstop","type":"case","title":"case secondScreenStop"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/seekfailed","type":"case","title":"case seekFailed"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/seekinvalidtime","type":"case","title":"case seekInvalidTime"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/seeknotify","type":"case","title":"case seekNotify"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/stepnotify","type":"case","title":"case stepNotify"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/unpausenotify","type":"case","title":"case unpauseNotify"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/unpublishsuccess","type":"case","title":"case unpublishSuccess"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/videodimensionchange","type":"case","title":"case videoDimensionChange"},{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/init(rawvalue:)","type":"init","title":"init?(rawValue: String)"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/level","type":"property","title":"var level: String"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/!=(_:_:)","type":"op"}],"type":"symbol","title":"Equatable Implementations"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/rawrepresentable-implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/hashvalue","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func hash(into: inout Hasher)","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/code\/hash(into:)","type":"method"}],"type":"symbol","title":"RawRepresentable Implementations"}]},{"title":"RTMPStream.Error","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/error","type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","title":"case invalidState","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/error\/invalidstate"},{"type":"case","title":"case requestFailed(response: RTMPResponse)","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/error\/requestfailed(response:)"},{"type":"case","title":"case requestTimedOut","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/error\/requesttimedout"},{"type":"case","title":"case unsupportedCodec","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/error\/unsupportedcodec"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var localizedDescription: String","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/error\/localizeddescription"}],"title":"Error Implementations","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/error\/error-implementations"}]},{"title":"RTMPStream.HowToPublish","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/howtopublish","type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case append","type":"case","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/howtopublish\/append"},{"title":"case appendWithGap","type":"case","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/howtopublish\/appendwithgap"},{"title":"case live","type":"case","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/howtopublish\/live"},{"title":"case record","type":"case","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/howtopublish\/record"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: String)","type":"init","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/howtopublish\/init(rawvalue:)"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/howtopublish\/!=(_:_:)"}],"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/howtopublish\/equatable-implementations"},{"title":"RawRepresentable Implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/howtopublish\/hashvalue","title":"var hashValue: Int"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/howtopublish\/hash(into:)","title":"func hash(into: inout Hasher)"}],"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/howtopublish\/rawrepresentable-implementations"}]},{"title":"Default Implementations","type":"groupMarker"},{"title":"Actor Implementations","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/actor-implementations","type":"symbol","children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/assertisolated(_:file:line:)","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/assumeisolated(_:file:line:)","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","type":"method"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/preconditionisolated(_:file:line:)","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method"}]},{"title":"MediaMixerOutput Implementations","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/mediamixeroutput-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/mixer(_:didoutput:)","title":"func mixer(MediaMixer, didOutput: CMSampleBuffer)","type":"method"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/mixer(_:didoutput:when:)","title":"func mixer(MediaMixer, didOutput: AVAudioPCMBuffer, when: AVAudioTime)","type":"method"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/selecttrack(_:mediatype:)","title":"func selectTrack(UInt8?, mediaType: CMFormatDescription.MediaType)","type":"method"}]},{"title":"StreamConvertible Implementations","path":"\/documentation\/rtmphaishinkit\/rtmpstream\/streamconvertible-implementations","type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/audiosettings","title":"var audioSettings: AudioCodecSettings","type":"property"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/soundtransform","title":"var soundTransform: SoundTransform?","type":"property"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/videosettings","title":"var videoSettings: VideoCodecSettings","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/addoutput(_:)","title":"func addOutput(some StreamOutput)","type":"method"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/append(_:)","title":"func append(CMSampleBuffer)","type":"method"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/append(_:when:)","title":"func append(AVAudioBuffer, when: AVAudioTime)","type":"method"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/attachaudioplayer(_:)","title":"func attachAudioPlayer(AudioPlayer?) async","type":"method"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/dispatch(_:)","title":"func dispatch(NetworkMonitorEvent) async","type":"method"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/removeoutput(_:)","title":"func removeOutput(some StreamOutput)","type":"method"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/setaudiosettings(_:)","title":"func setAudioSettings(AudioCodecSettings) throws","type":"method"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/setbitratestrategy(_:)","title":"func setBitRateStrategy((some StreamBitRateStrategy)?)","type":"method"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/setsoundtransform(_:)","title":"func setSoundTransform(SoundTransform) async","type":"method"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/setvideoinputbuffercounts(_:)","title":"func setVideoInputBufferCounts(Int)","type":"method"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstream\/setvideosettings(_:)","title":"func setVideoSettings(VideoCodecSettings) throws","type":"method"}]}]},{"title":"Structures","type":"groupMarker"},{"title":"AMFArray","path":"\/documentation\/rtmphaishinkit\/amfarray","type":"struct","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/rtmphaishinkit\/amfarray\/init(count:)","title":"init(count: Int)","type":"init"},{"path":"\/documentation\/rtmphaishinkit\/amfarray\/init(data:)","title":"init(data: [(any Sendable)?])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/rtmphaishinkit\/amfarray\/length","title":"var length: Int","type":"property"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/rtmphaishinkit\/amfarray\/subscript(_:)","title":"subscript(Any) -> (any Sendable)?","type":"subscript"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/rtmphaishinkit\/amfarray\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/rtmphaishinkit\/amfarray\/debugdescription","title":"var debugDescription: String","type":"property"}]},{"path":"\/documentation\/rtmphaishinkit\/amfarray\/equatable-implementations","title":"Equatable Implementations","type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","path":"\/documentation\/rtmphaishinkit\/amfarray\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"},{"type":"op","path":"\/documentation\/rtmphaishinkit\/amfarray\/==(_:_:)","title":"static func == (AMFArray, AMFArray) -> Bool"}]},{"path":"\/documentation\/rtmphaishinkit\/amfarray\/expressiblebyarrayliteral-implementations","title":"ExpressibleByArrayLiteral Implementations","type":"symbol","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/rtmphaishinkit\/amfarray\/init(arrayliteral:)","title":"init(arrayLiteral: (any Sendable)?...)","type":"init"}]}]},{"title":"AMFTypedObject","path":"\/documentation\/rtmphaishinkit\/amftypedobject","type":"struct","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/rtmphaishinkit\/amftypedobject\/data","title":"let data: AMFObject","type":"property"},{"path":"\/documentation\/rtmphaishinkit\/amftypedobject\/typename","title":"let typeName: String","type":"property"}]},{"title":"AMFUndefined","path":"\/documentation\/rtmphaishinkit\/amfundefined","type":"struct","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var description: String","path":"\/documentation\/rtmphaishinkit\/amfundefined\/description","type":"property"}]},{"title":"AMFXML","path":"\/documentation\/rtmphaishinkit\/amfxml","type":"struct","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(data: String)","path":"\/documentation\/rtmphaishinkit\/amfxml\/init(data:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var description: String","path":"\/documentation\/rtmphaishinkit\/amfxml\/description","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","path":"\/documentation\/rtmphaishinkit\/amfxml\/equatable-implementations","type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/rtmphaishinkit\/amfxml\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/rtmphaishinkit\/amfxml\/==(_:_:)","title":"static func == (AMFXML, AMFXML) -> Bool","type":"op"}]}]},{"title":"AMFXMLDocument","path":"\/documentation\/rtmphaishinkit\/amfxmldocument","type":"struct","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(data: String)","type":"init","path":"\/documentation\/rtmphaishinkit\/amfxmldocument\/init(data:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var description: String","type":"property","path":"\/documentation\/rtmphaishinkit\/amfxmldocument\/description"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/rtmphaishinkit\/amfxmldocument\/!=(_:_:)"},{"title":"static func == (AMFXMLDocument, AMFXMLDocument) -> Bool","type":"op","path":"\/documentation\/rtmphaishinkit\/amfxmldocument\/==(_:_:)"}],"path":"\/documentation\/rtmphaishinkit\/amfxmldocument\/equatable-implementations"}]},{"title":"HKAtomic","path":"\/documentation\/rtmphaishinkit\/hkatomic","type":"struct","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(A)","path":"\/documentation\/rtmphaishinkit\/hkatomic\/init(_:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var value: A","path":"\/documentation\/rtmphaishinkit\/hkatomic\/value","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func mutate((inout A) -> Void)","path":"\/documentation\/rtmphaishinkit\/hkatomic\/mutate(_:)","type":"method"}]},{"title":"RTMPResponse","path":"\/documentation\/rtmphaishinkit\/rtmpresponse","type":"struct","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"let arguments: [(any Sendable)?]","path":"\/documentation\/rtmphaishinkit\/rtmpresponse\/arguments"},{"type":"property","title":"let status: RTMPStatus?","path":"\/documentation\/rtmphaishinkit\/rtmpresponse\/status"}]},{"title":"RTMPSessionFactory","path":"\/documentation\/rtmphaishinkit\/rtmpsessionfactory","type":"struct","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init()","type":"init","path":"\/documentation\/rtmphaishinkit\/rtmpsessionfactory\/init()"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let supportedProtocols: Set<String>","type":"property","path":"\/documentation\/rtmphaishinkit\/rtmpsessionfactory\/supportedprotocols"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func make(URL) -> any Session","type":"method","path":"\/documentation\/rtmphaishinkit\/rtmpsessionfactory\/make(_:)"}]},{"title":"RTMPStatus","path":"\/documentation\/rtmphaishinkit\/rtmpstatus","type":"struct","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"let code: String","type":"property","path":"\/documentation\/rtmphaishinkit\/rtmpstatus\/code"},{"title":"let description: String","type":"property","path":"\/documentation\/rtmphaishinkit\/rtmpstatus\/description"},{"title":"let level: String","type":"property","path":"\/documentation\/rtmphaishinkit\/rtmpstatus\/level"},{"title":"Subscripts","type":"groupMarker"},{"title":"subscript(dynamicMember _: String) -> Double?","type":"subscript","path":"\/documentation\/rtmphaishinkit\/rtmpstatus\/subscript(dynamicmember:)-2uh36"},{"title":"subscript(dynamicMember _: String) -> String?","type":"subscript","path":"\/documentation\/rtmphaishinkit\/rtmpstatus\/subscript(dynamicmember:)-710qw"}]},{"title":"RTMPStreamInfo","path":"\/documentation\/rtmphaishinkit\/rtmpstreaminfo","type":"struct","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var byteCount: Int","path":"\/documentation\/rtmphaishinkit\/rtmpstreaminfo\/bytecount","type":"property"},{"title":"var currentBytesPerSecond: Int","path":"\/documentation\/rtmphaishinkit\/rtmpstreaminfo\/currentbytespersecond","type":"property"},{"title":"var resourceName: String?","path":"\/documentation\/rtmphaishinkit\/rtmpstreaminfo\/resourcename","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"title":"CustomDebugStringConvertible Implementations","path":"\/documentation\/rtmphaishinkit\/rtmpstreaminfo\/customdebugstringconvertible-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/rtmphaishinkit\/rtmpstreaminfo\/debugdescription","type":"property","title":"var debugDescription: String"}]}]},{"title":"Variables","type":"groupMarker"},{"title":"let kAMFUndefined: AMFUndefined","path":"\/documentation\/rtmphaishinkit\/kamfundefined","type":"var"},{"title":"let kRTMPHaishinKitIdentifier: String","path":"\/documentation\/rtmphaishinkit\/krtmphaishinkitidentifier","type":"var"},{"title":"Type Aliases","type":"groupMarker"},{"title":"AMFObject","path":"\/documentation\/rtmphaishinkit\/amfobject","type":"typealias"},{"title":"Enumerations","type":"groupMarker"},{"title":"RTMPObjectEncoding","path":"\/documentation\/rtmphaishinkit\/rtmpobjectencoding","type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/rtmphaishinkit\/rtmpobjectencoding\/amf0","type":"case","title":"case amf0"},{"path":"\/documentation\/rtmphaishinkit\/rtmpobjectencoding\/amf3","type":"case","title":"case amf3"},{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/rtmphaishinkit\/rtmpobjectencoding\/init(rawvalue:)","type":"init","title":"init?(rawValue: UInt8)"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/rtmphaishinkit\/rtmpobjectencoding\/equatable-implementations","type":"symbol","title":"Equatable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/rtmphaishinkit\/rtmpobjectencoding\/!=(_:_:)","type":"op"}]},{"path":"\/documentation\/rtmphaishinkit\/rtmpobjectencoding\/rawrepresentable-implementations","type":"symbol","title":"RawRepresentable Implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/rtmphaishinkit\/rtmpobjectencoding\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/rtmphaishinkit\/rtmpobjectencoding\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}]}]}],"path":"\/documentation\/rtmphaishinkit"},{"title":"SRTHaishinKit","type":"module","children":[{"title":"Classes","type":"groupMarker"},{"path":"\/documentation\/srthaishinkit\/srtconnection","title":"SRTConnection","type":"class","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/srthaishinkit\/srtconnection\/init()","title":"init()"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtconnection\/connected","title":"var connected: Bool"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtconnection\/performancedata","title":"var performanceData: SRTPerformanceData?"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtconnection\/uri","title":"var uri: URL?"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/srthaishinkit\/srtconnection\/close()","title":"func close() async"},{"type":"method","path":"\/documentation\/srthaishinkit\/srtconnection\/connect(_:)","title":"func connect(URL?) async throws"},{"type":"method","path":"\/documentation\/srthaishinkit\/srtconnection\/getsocketoption(_:)","title":"func getSocketOption(SRTSocketOption.Name) async throws -> SRTSocketOption?"},{"type":"method","path":"\/documentation\/srthaishinkit\/srtconnection\/setsocketoption(_:)","title":"func setSocketOption(SRTSocketOption) async throws"},{"type":"groupMarker","title":"Type Properties"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtconnection\/version","title":"static let version: String"},{"type":"groupMarker","title":"Enumerations"},{"type":"enum","path":"\/documentation\/srthaishinkit\/srtconnection\/error","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","path":"\/documentation\/srthaishinkit\/srtconnection\/error\/failedtoconnect(_:)","title":"case failedToConnect(SRTRejectReason)"},{"type":"case","path":"\/documentation\/srthaishinkit\/srtconnection\/error\/invalidstate","title":"case invalidState"},{"type":"case","path":"\/documentation\/srthaishinkit\/srtconnection\/error\/unsupporteduri(_:)","title":"case unsupportedUri(URL?)"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","path":"\/documentation\/srthaishinkit\/srtconnection\/error\/error-implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtconnection\/error\/localizeddescription","title":"var localizedDescription: String"}],"title":"Error Implementations"}],"title":"SRTConnection.Error"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","path":"\/documentation\/srthaishinkit\/srtconnection\/actor-implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/srthaishinkit\/srtconnection\/assertisolated(_:file:line:)","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method"},{"path":"\/documentation\/srthaishinkit\/srtconnection\/assumeisolated(_:file:line:)","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","type":"method"},{"path":"\/documentation\/srthaishinkit\/srtconnection\/preconditionisolated(_:file:line:)","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method"}],"title":"Actor Implementations"}]},{"path":"\/documentation\/srthaishinkit\/srtlogger","title":"SRTLogger","type":"class","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var functionalAreas: Set<SRTLogFunctionalArea>","type":"property","path":"\/documentation\/srthaishinkit\/srtlogger\/functionalareas"},{"title":"var level: SRTLogLevel","type":"property","path":"\/documentation\/srthaishinkit\/srtlogger\/level"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func setFunctionalAreas(Set<SRTLogFunctionalArea>)","type":"method","path":"\/documentation\/srthaishinkit\/srtlogger\/setfunctionalareas(_:)"},{"title":"func setLevel(SRTLogLevel)","type":"method","path":"\/documentation\/srthaishinkit\/srtlogger\/setlevel(_:)"},{"title":"Type Properties","type":"groupMarker"},{"title":"static let shared: SRTLogger","type":"property","path":"\/documentation\/srthaishinkit\/srtlogger\/shared"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Actor Implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"type":"method","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/srthaishinkit\/srtlogger\/assertisolated(_:file:line:)"},{"type":"method","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","path":"\/documentation\/srthaishinkit\/srtlogger\/assumeisolated(_:file:line:)"},{"type":"method","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/srthaishinkit\/srtlogger\/preconditionisolated(_:file:line:)"}],"type":"symbol","path":"\/documentation\/srthaishinkit\/srtlogger\/actor-implementations"}]},{"path":"\/documentation\/srthaishinkit\/srtstream","title":"SRTStream","type":"class","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/srthaishinkit\/srtstream\/init(connection:)","type":"init","title":"init(connection: SRTConnection)"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/srthaishinkit\/srtstream\/audiotrackid","type":"property","title":"var audioTrackId: UInt8?"},{"path":"\/documentation\/srthaishinkit\/srtstream\/readystate","type":"property","title":"var readyState: StreamReadyState"},{"path":"\/documentation\/srthaishinkit\/srtstream\/videotrackid","type":"property","title":"var videoTrackId: UInt8?"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/srthaishinkit\/srtstream\/close()","type":"method","title":"func close() async"},{"path":"\/documentation\/srthaishinkit\/srtstream\/play(_:)","type":"method","title":"func play(String?) async"},{"path":"\/documentation\/srthaishinkit\/srtstream\/publish(_:)","type":"method","title":"func publish(String?) async"},{"type":"groupMarker","title":"Enumerations"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case unsupportedCodec","path":"\/documentation\/srthaishinkit\/srtstream\/error\/unsupportedcodec","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","path":"\/documentation\/srthaishinkit\/srtstream\/error\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/srthaishinkit\/srtstream\/error\/!=(_:_:)"}],"type":"symbol"},{"title":"Error Implementations","path":"\/documentation\/srthaishinkit\/srtstream\/error\/error-implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/srthaishinkit\/srtstream\/error\/localizeddescription","type":"property","title":"var localizedDescription: String"}],"type":"symbol"}],"path":"\/documentation\/srthaishinkit\/srtstream\/error","type":"enum","title":"SRTStream.Error"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/srthaishinkit\/srtstream\/assertisolated(_:file:line:)","type":"method","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)"},{"path":"\/documentation\/srthaishinkit\/srtstream\/assumeisolated(_:file:line:)","type":"method","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T"},{"path":"\/documentation\/srthaishinkit\/srtstream\/preconditionisolated(_:file:line:)","type":"method","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)"}],"path":"\/documentation\/srthaishinkit\/srtstream\/actor-implementations","type":"symbol","title":"Actor Implementations"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func mixer(MediaMixer, didOutput: CMSampleBuffer)","type":"method","path":"\/documentation\/srthaishinkit\/srtstream\/mixer(_:didoutput:)"},{"title":"func mixer(MediaMixer, didOutput: AVAudioPCMBuffer, when: AVAudioTime)","type":"method","path":"\/documentation\/srthaishinkit\/srtstream\/mixer(_:didoutput:when:)"},{"title":"func selectTrack(UInt8?, mediaType: CMFormatDescription.MediaType)","type":"method","path":"\/documentation\/srthaishinkit\/srtstream\/selecttrack(_:mediatype:)"}],"path":"\/documentation\/srthaishinkit\/srtstream\/mediamixeroutput-implementations","type":"symbol","title":"MediaMixerOutput Implementations"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/srthaishinkit\/srtstream\/audiosettings","title":"var audioSettings: AudioCodecSettings","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtstream\/soundtransform","title":"var soundTransform: SoundTransform?","type":"property"},{"path":"\/documentation\/srthaishinkit\/srtstream\/videosettings","title":"var videoSettings: VideoCodecSettings","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/srthaishinkit\/srtstream\/addoutput(_:)","title":"func addOutput(some StreamOutput)","type":"method"},{"path":"\/documentation\/srthaishinkit\/srtstream\/append(_:)","title":"func append(CMSampleBuffer)","type":"method"},{"path":"\/documentation\/srthaishinkit\/srtstream\/append(_:when:)","title":"func append(AVAudioBuffer, when: AVAudioTime)","type":"method"},{"path":"\/documentation\/srthaishinkit\/srtstream\/attachaudioplayer(_:)","title":"func attachAudioPlayer(AudioPlayer?) async","type":"method"},{"path":"\/documentation\/srthaishinkit\/srtstream\/dispatch(_:)","title":"func dispatch(NetworkMonitorEvent) async","type":"method"},{"path":"\/documentation\/srthaishinkit\/srtstream\/removeoutput(_:)","title":"func removeOutput(some StreamOutput)","type":"method"},{"path":"\/documentation\/srthaishinkit\/srtstream\/setaudiosettings(_:)","title":"func setAudioSettings(AudioCodecSettings) throws","type":"method"},{"path":"\/documentation\/srthaishinkit\/srtstream\/setbitratestrategy(_:)","title":"func setBitRateStrategy((some StreamBitRateStrategy)?)","type":"method"},{"path":"\/documentation\/srthaishinkit\/srtstream\/setsoundtransform(_:)","title":"func setSoundTransform(SoundTransform) async","type":"method"},{"path":"\/documentation\/srthaishinkit\/srtstream\/setvideoinputbuffercounts(_:)","title":"func setVideoInputBufferCounts(Int)","type":"method"},{"path":"\/documentation\/srthaishinkit\/srtstream\/setvideosettings(_:)","title":"func setVideoSettings(VideoCodecSettings) throws","type":"method"}],"path":"\/documentation\/srthaishinkit\/srtstream\/streamconvertible-implementations","type":"symbol","title":"StreamConvertible Implementations"}]},{"title":"Structures","type":"groupMarker"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata","title":"SRTPerformanceData","type":"struct","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/byteavailrcvbuf","type":"property","title":"let byteAvailRcvBuf: Int32"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/byteavailsndbuf","type":"property","title":"let byteAvailSndBuf: Int32"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytemss","type":"property","title":"let byteMSS: Int32"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytercvbuf","type":"property","title":"let byteRcvBuf: Int32"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytercvdrop","type":"property","title":"let byteRcvDrop: UInt64"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytercvdroptotal","type":"property","title":"let byteRcvDropTotal: UInt64"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytercvloss","type":"property","title":"let byteRcvLoss: UInt64"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytercvlosstotal","type":"property","title":"let byteRcvLossTotal: UInt64"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytercvundecrypt","type":"property","title":"let byteRcvUndecrypt: UInt64"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytercvundecrypttotal","type":"property","title":"let byteRcvUndecryptTotal: UInt64"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/byterecv","type":"property","title":"let byteRecv: UInt64"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/byterecvtotal","type":"property","title":"let byteRecvTotal: UInt64"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/byteretrans","type":"property","title":"let byteRetrans: UInt64"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/byteretranstotal","type":"property","title":"let byteRetransTotal: UInt64"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytesent","type":"property","title":"let byteSent: UInt64"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytesenttotal","type":"property","title":"let byteSentTotal: UInt64"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytesndbuf","type":"property","title":"let byteSndBuf: Int32"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytesnddrop","type":"property","title":"let byteSndDrop: UInt64"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytesnddroptotal","type":"property","title":"let byteSndDropTotal: UInt64"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/mbpsbandwidth","type":"property","title":"let mbpsBandwidth: Double"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/mbpsmaxbw","type":"property","title":"let mbpsMaxBW: Double"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/mbpsrecvrate","type":"property","title":"let mbpsRecvRate: Double"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/mbpssendrate","type":"property","title":"let mbpsSendRate: Double"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/msrtt","type":"property","title":"let msRTT: Double"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/msrcvbuf","type":"property","title":"let msRcvBuf: Int32"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/msrcvtsbpddelay","type":"property","title":"let msRcvTsbPdDelay: Int32"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/mssndbuf","type":"property","title":"let msSndBuf: Int32"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/mssndtsbpddelay","type":"property","title":"let msSndTsbPdDelay: Int32"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/mstimestamp","type":"property","title":"let msTimeStamp: Int64"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktcongestionwindow","type":"property","title":"let pktCongestionWindow: Int32"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktflightsize","type":"property","title":"let pktFlightSize: Int32"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktflowwindow","type":"property","title":"let pktFlowWindow: Int32"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvavgbelatedtime","type":"property","title":"let pktRcvAvgBelatedTime: Double"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvbelated","type":"property","title":"let pktRcvBelated: Int64"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvbuf","type":"property","title":"let pktRcvBuf: Int32"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvdrop","type":"property","title":"let pktRcvDrop: Int32"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvdroptotal","type":"property","title":"let pktRcvDropTotal: Int32"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvfilterextra","type":"property","title":"let pktRcvFilterExtra: Int32"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvfilterextratotal","type":"property","title":"let pktRcvFilterExtraTotal: Int32"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvfilterloss","type":"property","title":"let pktRcvFilterLoss: Int32"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvfilterlosstotal","type":"property","title":"let pktRcvFilterLossTotal: Int32"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvfiltersupply","type":"property","title":"let pktRcvFilterSupply: Int32"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvfiltersupplytotal","type":"property","title":"let pktRcvFilterSupplyTotal: Int32"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvloss","type":"property","title":"let pktRcvLoss: Int32"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvlosstotal","type":"property","title":"let pktRcvLossTotal: Int32"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvretrans","type":"property","title":"let pktRcvRetrans: Int32"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvundecrypt","type":"property","title":"let pktRcvUndecrypt: Int32"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvundecrypttotal","type":"property","title":"let pktRcvUndecryptTotal: Int32"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrecv","type":"property","title":"let pktRecv: Int64"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrecvack","type":"property","title":"let pktRecvACK: Int32"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrecvacktotal","type":"property","title":"let pktRecvACKTotal: Int32"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrecvnak","type":"property","title":"let pktRecvNAK: Int32"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrecvnaktotal","type":"property","title":"let pktRecvNAKTotal: Int32"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrecvtotal","type":"property","title":"let pktRecvTotal: Int64"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktreorderdistance","type":"property","title":"let pktReorderDistance: Int32"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktreordertolerance","type":"property","title":"let pktReorderTolerance: Int32"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktretrans","type":"property","title":"let pktRetrans: Int32"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktretranstotal","type":"property","title":"let pktRetransTotal: Int32"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsent","type":"property","title":"let pktSent: Int64"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsentack","type":"property","title":"let pktSentACK: Int32"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsentacktotal","type":"property","title":"let pktSentACKTotal: Int32"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsentnak","type":"property","title":"let pktSentNAK: Int32"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsentnaktotal","type":"property","title":"let pktSentNAKTotal: Int32"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsenttotal","type":"property","title":"let pktSentTotal: Int64"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsndbuf","type":"property","title":"let pktSndBuf: Int32"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsnddrop","type":"property","title":"let pktSndDrop: Int32"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsnddroptotal","type":"property","title":"let pktSndDropTotal: Int32"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsndfilterextra","type":"property","title":"let pktSndFilterExtra: Int32"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsndfilterextratotal","type":"property","title":"let pktSndFilterExtraTotal: Int32"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsndloss","type":"property","title":"let pktSndLoss: Int32"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsndlosstotal","type":"property","title":"let pktSndLossTotal: Int32"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/uspktsndperiod","type":"property","title":"let usPktSndPeriod: Double"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/ussndduration","type":"property","title":"let usSndDuration: Int64"},{"path":"\/documentation\/srthaishinkit\/srtperformancedata\/ussnddurationtotal","type":"property","title":"let usSndDurationTotal: Int64"}]},{"path":"\/documentation\/srthaishinkit\/srtsessionfactory","title":"SRTSessionFactory","type":"struct","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/srthaishinkit\/srtsessionfactory\/init()","type":"init","title":"init()"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/srthaishinkit\/srtsessionfactory\/supportedprotocols","type":"property","title":"let supportedProtocols: Set<String>"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/srthaishinkit\/srtsessionfactory\/make(_:)","type":"method","title":"func make(URL) -> any Session"}]},{"path":"\/documentation\/srthaishinkit\/srtsocketoption","title":"SRTSocketOption","type":"struct","children":[{"type":"groupMarker","title":"Structures"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct","type":"struct","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/init(rawvalue:symbol:restriction:type:)","type":"init","title":"init(rawValue: String, symbol: SRT_SOCKOPT, restriction: SRTSocketOption.Restriction?, type: SRTSocketOption.CType)"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/rawvalue-swift.property","type":"property","title":"let rawValue: String"},{"type":"groupMarker","title":"Type Aliases"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/rawvalue-swift.typealias","type":"typealias","title":"SRTSocketOption.Name.RawValue"},{"type":"groupMarker","title":"Type Properties"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/bindtodevice","type":"property","title":"static let bindtodevice: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/congestion","type":"property","title":"static let congestion: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/conntimeo","type":"property","title":"static let conntimeo: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/drifttracer","type":"property","title":"static let drifttracer: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/enforcedencryption","type":"property","title":"static let enforcedencryption: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/event","type":"property","title":"static let event: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/fc","type":"property","title":"static let fc: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/groupconnect","type":"property","title":"static let groupconnect: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/groupminstabletimeo","type":"property","title":"static let groupminstabletimeo: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/grouptype","type":"property","title":"static let grouptype: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/inputbw","type":"property","title":"static let inputbw: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/iptos","type":"property","title":"static let iptos: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/ipttl","type":"property","title":"static let ipttl: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/ipv6only","type":"property","title":"static let ipv6only: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/isn","type":"property","title":"static let isn: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/kmpreannounce","type":"property","title":"static let kmpreannounce: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/kmrefreshrate","type":"property","title":"static let kmrefreshrate: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/kmstate","type":"property","title":"static let kmstate: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/latency","type":"property","title":"static let latency: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/lossmaxttl","type":"property","title":"static let lossmaxttl: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/maxbw","type":"property","title":"static let maxbw: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/messageapi","type":"property","title":"static let messageapi: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/mininputbw","type":"property","title":"static let mininputbw: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/minversion","type":"property","title":"static let minversion: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/mss","type":"property","title":"static let mss: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/nakreport","type":"property","title":"static let nakreport: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/oheadbw","type":"property","title":"static let oheadbw: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/packetfilter","type":"property","title":"static let packetfilter: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/passphrase","type":"property","title":"static let passphrase: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/pbkeylen","type":"property","title":"static let pbkeylen: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/peeridletimeo","type":"property","title":"static let peeridletimeo: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/peerlatency","type":"property","title":"static let peerlatency: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/peerversion","type":"property","title":"static let peerversion: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/rcvbuf","type":"property","title":"static let rcvbuf: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/rcvdata","type":"property","title":"static let rcvdata: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/rcvlatency","type":"property","title":"static let rcvlatency: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/rcvsyn","type":"property","title":"static let rcvsyn: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/rcvtimeo","type":"property","title":"static let rcvtimeo: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/rendezvous","type":"property","title":"static let rendezvous: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/retransmitalgo","type":"property","title":"static let retransmitalgo: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/reuseaddr","type":"property","title":"static let reuseaddr: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/sender","type":"property","title":"static let sender: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/sndbuf","type":"property","title":"static let sndbuf: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/snddata","type":"property","title":"static let snddata: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/snddropdelay","type":"property","title":"static let snddropdelay: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/sndkmstate","type":"property","title":"static let sndkmstate: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/sndsyn","type":"property","title":"static let sndsyn: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/sndtimeo","type":"property","title":"static let sndtimeo: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/state","type":"property","title":"static let state: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/streamid","type":"property","title":"static let streamid: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/tlpktdrop","type":"property","title":"static let tlpktdrop: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/transtype","type":"property","title":"static let transtype: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/tsbpdmode","type":"property","title":"static let tsbpdmode: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/udprcvbuf","type":"property","title":"static let udpRcvbuf: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/udpsndbuf","type":"property","title":"static let udpSndbuf: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/version","type":"property","title":"static let version: SRTSocketOption.Name"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: String)","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/init(rawvalue:)","type":"init"}],"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/rawrepresentable-implementations","type":"symbol","title":"RawRepresentable Implementations"}],"title":"SRTSocketOption.Name"},{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/init(name:value:)-3uyvp","type":"init","title":"init(name: SRTSocketOption.Name, value: String) throws"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/init(name:value:)-66kiu","type":"init","title":"init(name: SRTSocketOption.Name, value: Int) throws"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/boolvalue","type":"property","title":"var boolValue: Bool"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/intvalue","type":"property","title":"var intValue: Int"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.property","type":"property","title":"let name: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/stringvalue","type":"property","title":"var stringValue: String"},{"type":"groupMarker","title":"Enumerations"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/ctype","type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/ctype\/bool","title":"case bool","type":"case"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/ctype\/int32","title":"case int32","type":"case"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/ctype\/int64","title":"case int64","type":"case"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/ctype\/string","title":"case string","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/ctype\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/ctype\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/srthaishinkit\/srtsocketoption\/ctype\/!=(_:_:)","type":"op"}],"title":"Equatable Implementations","type":"symbol"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/ctype\/rawrepresentable-implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/ctype\/hashvalue","title":"var hashValue: Int"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/srthaishinkit\/srtsocketoption\/ctype\/hash(into:)","title":"func hash(into: inout Hasher)"}],"title":"RawRepresentable Implementations","type":"symbol"}],"title":"SRTSocketOption.CType"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/error","type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","path":"\/documentation\/srthaishinkit\/srtsocketoption\/error\/invalidargument(_:)","title":"case invalidArgument(String)"},{"type":"case","path":"\/documentation\/srthaishinkit\/srtsocketoption\/error\/invalidoption(_:)","title":"case invalidOption(String)"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","path":"\/documentation\/srthaishinkit\/srtsocketoption\/error\/error-implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/error\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"title":"Error Implementations"}],"title":"SRTSocketOption.Error"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/restriction","type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","title":"case post","path":"\/documentation\/srthaishinkit\/srtsocketoption\/restriction\/post"},{"type":"case","title":"case pre","path":"\/documentation\/srthaishinkit\/srtsocketoption\/restriction\/pre"},{"type":"case","title":"case preBind","path":"\/documentation\/srthaishinkit\/srtsocketoption\/restriction\/prebind"},{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init?(rawValue: Int)","path":"\/documentation\/srthaishinkit\/srtsocketoption\/restriction\/init(rawvalue:)"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/srthaishinkit\/srtsocketoption\/restriction\/!=(_:_:)"}],"type":"symbol","title":"Equatable Implementations","path":"\/documentation\/srthaishinkit\/srtsocketoption\/restriction\/equatable-implementations"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/restriction\/hashvalue","title":"var hashValue: Int"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/srthaishinkit\/srtsocketoption\/restriction\/hash(into:)","title":"func hash(into: inout Hasher)"}],"type":"symbol","title":"RawRepresentable Implementations","path":"\/documentation\/srthaishinkit\/srtsocketoption\/restriction\/rawrepresentable-implementations"}],"title":"SRTSocketOption.Restriction"}]},{"title":"Variables","type":"groupMarker"},{"path":"\/documentation\/srthaishinkit\/ksrthaishinkitidentifier","title":"let kSRTHaishinKitIdentifier: String","type":"var"},{"title":"Enumerations","type":"groupMarker"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea","title":"SRTLogFunctionalArea","type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/apictrl","type":"case","title":"case apiCtrl"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/apirecv","type":"case","title":"case apiRecv"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/apisend","type":"case","title":"case apiSend"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/applog","type":"case","title":"case applog"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/bstats","type":"case","title":"case bstats"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/bufrecv","type":"case","title":"case bufRecv"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/bufsend","type":"case","title":"case bufSend"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/chanrecv","type":"case","title":"case chanRecv"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/chnmgmt","type":"case","title":"case chnMgmt"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/chnsend","type":"case","title":"case chnSend"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/congest","type":"case","title":"case congest"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/control","type":"case","title":"case control"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/data","type":"case","title":"case data"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/epollapi","type":"case","title":"case epollApi"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/epollupd","type":"case","title":"case epollUpd"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/general","type":"case","title":"case general"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/grpmgmt","type":"case","title":"case grpMgmt"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/grprecv","type":"case","title":"case grpRecv"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/grpsend","type":"case","title":"case grpSend"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/haicrypt","type":"case","title":"case haicrypt"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/internal","type":"case","title":"case `internal`"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/pfilter","type":"case","title":"case pfilter"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/quectrl","type":"case","title":"case queCtrl"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/quemgmt","type":"case","title":"case queMgmt"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/querecv","type":"case","title":"case queRecv"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/quesend","type":"case","title":"case queSend"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/rsrc","type":"case","title":"case rsrc"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/tsbpd","type":"case","title":"case tsbpd"},{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/init(rawvalue:)","type":"init","title":"init?(rawValue: Int32)"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/!=(_:_:)","type":"op"}],"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/equatable-implementations","type":"symbol","title":"Equatable Implementations"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","type":"property","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/hashvalue"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func hash(into: inout Hasher)","type":"method","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/hash(into:)"}],"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/rawrepresentable-implementations","type":"symbol","title":"RawRepresentable Implementations"}]},{"path":"\/documentation\/srthaishinkit\/srtloglevel","title":"SRTLogLevel","type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","title":"case crit","path":"\/documentation\/srthaishinkit\/srtloglevel\/crit"},{"type":"case","title":"case debug","path":"\/documentation\/srthaishinkit\/srtloglevel\/debug"},{"type":"case","title":"case error","path":"\/documentation\/srthaishinkit\/srtloglevel\/error"},{"type":"case","title":"case notice","path":"\/documentation\/srthaishinkit\/srtloglevel\/notice"},{"type":"case","title":"case warning","path":"\/documentation\/srthaishinkit\/srtloglevel\/warning"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/srthaishinkit\/srtloglevel\/!=(_:_:)"}],"title":"Equatable Implementations","path":"\/documentation\/srthaishinkit\/srtloglevel\/equatable-implementations"}]},{"path":"\/documentation\/srthaishinkit\/srtrejectreason","title":"SRTRejectReason","type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case backlog","path":"\/documentation\/srthaishinkit\/srtrejectreason\/backlog","type":"case"},{"title":"case badsecret","path":"\/documentation\/srthaishinkit\/srtrejectreason\/badsecret","type":"case"},{"title":"case close","path":"\/documentation\/srthaishinkit\/srtrejectreason\/close","type":"case"},{"title":"case congestion","path":"\/documentation\/srthaishinkit\/srtrejectreason\/congestion","type":"case"},{"title":"case crypto","path":"\/documentation\/srthaishinkit\/srtrejectreason\/crypto","type":"case"},{"title":"case filter","path":"\/documentation\/srthaishinkit\/srtrejectreason\/filter","type":"case"},{"title":"case group","path":"\/documentation\/srthaishinkit\/srtrejectreason\/group","type":"case"},{"title":"case ipe","path":"\/documentation\/srthaishinkit\/srtrejectreason\/ipe","type":"case"},{"title":"case messageapi","path":"\/documentation\/srthaishinkit\/srtrejectreason\/messageapi","type":"case"},{"title":"case peer","path":"\/documentation\/srthaishinkit\/srtrejectreason\/peer","type":"case"},{"title":"case rdvcookie","path":"\/documentation\/srthaishinkit\/srtrejectreason\/rdvcookie","type":"case"},{"title":"case resource","path":"\/documentation\/srthaishinkit\/srtrejectreason\/resource","type":"case"},{"title":"case rogue","path":"\/documentation\/srthaishinkit\/srtrejectreason\/rogue","type":"case"},{"title":"case system","path":"\/documentation\/srthaishinkit\/srtrejectreason\/system","type":"case"},{"title":"case timeout","path":"\/documentation\/srthaishinkit\/srtrejectreason\/timeout","type":"case"},{"title":"case unknown","path":"\/documentation\/srthaishinkit\/srtrejectreason\/unknown","type":"case"},{"title":"case unsecure","path":"\/documentation\/srthaishinkit\/srtrejectreason\/unsecure","type":"case"},{"title":"case version","path":"\/documentation\/srthaishinkit\/srtrejectreason\/version","type":"case"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: Int)","path":"\/documentation\/srthaishinkit\/srtrejectreason\/init(rawvalue:)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/srthaishinkit\/srtrejectreason\/!=(_:_:)"}],"title":"Equatable Implementations","path":"\/documentation\/srthaishinkit\/srtrejectreason\/equatable-implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","path":"\/documentation\/srthaishinkit\/srtrejectreason\/hashvalue","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func hash(into: inout Hasher)","path":"\/documentation\/srthaishinkit\/srtrejectreason\/hash(into:)","type":"method"}],"title":"RawRepresentable Implementations","path":"\/documentation\/srthaishinkit\/srtrejectreason\/rawrepresentable-implementations","type":"symbol"}]}],"path":"\/documentation\/srthaishinkit"}]}]},"includedArchiveIdentifiers":["Logboard","HaishinKit","MoQTHaishinKit","RTMPHaishinKit","SRTHaishinKit"],"schemaVersion":{"patch":2,"major":0,"minor":1}}