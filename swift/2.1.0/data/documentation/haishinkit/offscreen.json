{"identifier":{"url":"doc:\/\/HaishinKit\/documentation\/HaishinKit\/offscreen","interfaceLanguage":"swift"},"kind":"article","sections":[],"metadata":{"title":"Offscreen rendering api.","modules":[{"name":"HaishinKit"}],"roleHeading":"Article","role":"article"},"primaryContentSections":[{"kind":"content","content":[{"type":"heading","level":2,"text":"Overview","anchor":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"HaishinKit provides APIs for overlaying still images on camera footage and for embedding text. These features are collectively referred to as "},{"identifier":"https:\/\/docs.haishinkit.com\/swift\/latest\/documentation\/haishinkit\/screenobject","isActive":true,"type":"reference"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Filtering with CIFilter is also supported, and for use cases such as applying a mosaic effect to camera footage, the use of CIFilter is recommended."}]},{"type":"heading","level":2,"text":"Usage","anchor":"Usage"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Here is an overview of how to use the typical ScreenObject objects."}]},{"type":"heading","level":3,"text":"ImageScreenObject","anchor":"ImageScreenObject"},{"type":"paragraph","inlineContent":[{"text":"An example of compositing images.","type":"text"}]},{"type":"codeListing","code":["let imageScreenObject = ImageScreenObject()","let imageURL = URL(fileURLWithPath: Bundle.main.path(forResource: \"game_jikkyou\", ofType: \"png\") ?? \"\")","if let provider = CGDataProvider(url: imageURL as CFURL) {","  imageScreenObject.verticalAlignment = .bottom","  imageScreenObject.layoutMargin = .init(top: 0, left: 0, bottom: 16, right: 0)","  imageScreenObject.cgImage = CGImage(","    pngDataProviderSource: provider,","    decode: nil,","    shouldInterpolate: false,","    intent: .defaultIntent","  )","} else {","  print(\"no image\")","}","","try? await mixer.screen.addChild(imageScreenObject)"],"syntax":"swift"},{"type":"heading","level":3,"text":"VideoTrackScreenObject","anchor":"VideoTrackScreenObject"},{"type":"paragraph","inlineContent":[{"type":"text","text":"There may be situations where you want to capture the scenery with the rear camera while showing your facial expression with the front camera."}]},{"type":"paragraph","inlineContent":[{"text":"First, set up the cameras as follows. Make sure to remember the track numbers, as they will be used later.","type":"text"}]},{"type":"codeListing","code":["Task {","  let back = AVCaptureDevice.default(.builtInWideAngleCamera, for: .video, position: .back)","  try? await mixer.attachVideo(back, track: 0)","  let front = AVCaptureDevice.default(.builtInWideAngleCamera, for: .video, position: .front)","  try? await mixer.attachVideo(front, track: 1)","}"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"Track number 0 is designed to be rendered across the entire screen. In this case, we are specifying where to render track number 1.","type":"text"}]},{"type":"codeListing","code":["Task { @ScreenActor in","  let videoScreenObject = VideoTrackScreenObject()","  videoScreenObject.cornerRadius = 32.0","  videoScreenObject.track = 1","  videoScreenObject.horizontalAlignment = .right","  videoScreenObject.layoutMargin = .init(top: 16, left: 0, bottom: 0, right: 16)","  videoScreenObject.size = .init(width: 160 * 2, height: 90 * 2)","  \/\/ You can add a CIFilter-based filter using the registerVideoEffect API.","  _ = videoScreenObject.registerVideoEffect(MonochromeEffect())","","  try? await mixer.screen.addChild(videoScreenObject)","}"],"syntax":"swift"}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/haishinkit\/offscreen"]}],"hierarchy":{"paths":[["doc:\/\/HaishinKit\/documentation\/HaishinKit"]]},"schemaVersion":{"minor":3,"major":0,"patch":0},"references":{"doc://HaishinKit/documentation/HaishinKit":{"abstract":[{"text":"This is the main module.","type":"text"}],"kind":"symbol","url":"\/documentation\/haishinkit","identifier":"doc:\/\/HaishinKit\/documentation\/HaishinKit","title":"HaishinKit","type":"topic","role":"collection"},"https://docs.haishinkit.com/swift/latest/documentation/haishinkit/screenobject":{"type":"link","title":"ScreenObjects","titleInlineContent":[{"text":"ScreenObjects","type":"text"}],"identifier":"https:\/\/docs.haishinkit.com\/swift\/latest\/documentation\/haishinkit\/screenobject","url":"https:\/\/docs.haishinkit.com\/swift\/latest\/documentation\/haishinkit\/screenobject"}}}