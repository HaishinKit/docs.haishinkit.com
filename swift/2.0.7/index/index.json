{"includedArchiveIdentifiers":["Logboard","HaishinKit","MoQTHaishinKit","SRTHaishinKit"],"interfaceLanguages":{"swift":[{"type":"module","children":[{"path":"\/documentation\/logboard","children":[{"title":"Classes","type":"groupMarker"},{"title":"ConsoleAppender","path":"\/documentation\/logboard\/consoleappender","type":"class","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/logboard\/consoleappender\/init()","title":"init()"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/logboard\/consoleappender\/append(_:level:format:arguments:file:function:line:)","title":"func append(LBLogger, level: LBLogger.Level, format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)"},{"type":"method","path":"\/documentation\/logboard\/consoleappender\/append(_:level:message:file:function:line:)","title":"func append(LBLogger, level: LBLogger.Level, message: [Any], file: StaticString, function: StaticString, line: Int)"}]},{"title":"LBLogger","path":"\/documentation\/logboard\/lblogger","type":"class","children":[{"title":"Structures","type":"groupMarker"},{"title":"LBLogger.Data","path":"\/documentation\/logboard\/lblogger\/data","type":"struct","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/logboard\/lblogger\/data\/init(_:)","title":"init?(Data)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/logboard\/lblogger\/data\/date","title":"let date: Date"},{"type":"property","path":"\/documentation\/logboard\/lblogger\/data\/file","title":"let file: String"},{"type":"property","path":"\/documentation\/logboard\/lblogger\/data\/function","title":"let function: String"},{"type":"property","path":"\/documentation\/logboard\/lblogger\/data\/identifier","title":"let identifier: String"},{"type":"property","path":"\/documentation\/logboard\/lblogger\/data\/level","title":"let level: LBLogger.Level"},{"type":"property","path":"\/documentation\/logboard\/lblogger\/data\/line","title":"let line: Int"},{"type":"property","path":"\/documentation\/logboard\/lblogger\/data\/message","title":"let message: String"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/logboard\/lblogger\/data\/customstringconvertible-implementations","type":"symbol","title":"CustomStringConvertible Implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var description: String","path":"\/documentation\/logboard\/lblogger\/data\/description"}]}]},{"title":"Initializers","type":"groupMarker"},{"title":"init(String)","path":"\/documentation\/logboard\/lblogger\/init(_:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var appender: any LBLoggerAppender","path":"\/documentation\/logboard\/lblogger\/appender","type":"property"},{"title":"let identifier: String","path":"\/documentation\/logboard\/lblogger\/identifier","type":"property"},{"title":"var level: LBLogger.Level","path":"\/documentation\/logboard\/lblogger\/level-swift.property","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func debug(Any..., file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/lblogger\/debug(_:file:function:line:)","type":"method"},{"title":"func debug(format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/lblogger\/debug(format:arguments:file:function:line:)","type":"method"},{"title":"func error(Any..., file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/lblogger\/error(_:file:function:line:)","type":"method"},{"title":"func error(format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/lblogger\/error(format:arguments:file:function:line:)","type":"method"},{"title":"func info(Any..., file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/lblogger\/info(_:file:function:line:)","type":"method"},{"title":"func info(format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/lblogger\/info(format:arguments:file:function:line:)","type":"method"},{"title":"func isEnabledFor(level: LBLogger.Level) -> Bool","path":"\/documentation\/logboard\/lblogger\/isenabledfor(level:)","type":"method"},{"title":"func trace(Any..., file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/lblogger\/trace(_:file:function:line:)","type":"method"},{"title":"func trace(format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/lblogger\/trace(format:arguments:file:function:line:)","type":"method"},{"title":"func warn(Any..., file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/lblogger\/warn(_:file:function:line:)","type":"method"},{"title":"func warn(format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/lblogger\/warn(format:arguments:file:function:line:)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"title":"static var dateFormatter: DateFormatter","path":"\/documentation\/logboard\/lblogger\/dateformatter","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"title":"static func with(String) -> LBLogger","path":"\/documentation\/logboard\/lblogger\/with(_:)","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"title":"LBLogger.Level","path":"\/documentation\/logboard\/lblogger\/level-swift.enum","type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case debug","path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/debug","type":"case"},{"title":"case error","path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/error","type":"case"},{"title":"case info","path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/info","type":"case"},{"title":"case trace","path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/trace","type":"case"},{"title":"case warn","path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/warn","type":"case"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: Int)","path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/init(rawvalue:)","type":"init"},{"title":"init?(string: String)","path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/init(string:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var description: String","path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/description","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/!=(_:_:)","type":"op"}],"title":"Equatable Implementations","path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/equatable-implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"title":"RawRepresentable Implementations","path":"\/documentation\/logboard\/lblogger\/level-swift.enum\/rawrepresentable-implementations","type":"symbol"}]}]},{"title":"MultiAppender","path":"\/documentation\/logboard\/multiappender","type":"class","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/logboard\/multiappender\/init()","type":"init","title":"init()"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/logboard\/multiappender\/appenders","type":"property","title":"var appenders: [any LBLoggerAppender]"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/logboard\/multiappender\/append(_:level:format:arguments:file:function:line:)","type":"method","title":"func append(LBLogger, level: LBLogger.Level, format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)"},{"path":"\/documentation\/logboard\/multiappender\/append(_:level:message:file:function:line:)","type":"method","title":"func append(LBLogger, level: LBLogger.Level, message: [Any], file: StaticString, function: StaticString, line: Int)"}]},{"title":"NullAppender","path":"\/documentation\/logboard\/nullappender","type":"class","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func append(LBLogger, level: LBLogger.Level, format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/nullappender\/append(_:level:format:arguments:file:function:line:)"},{"type":"method","title":"func append(LBLogger, level: LBLogger.Level, message: [Any], file: StaticString, function: StaticString, line: Int)","path":"\/documentation\/logboard\/nullappender\/append(_:level:message:file:function:line:)"},{"type":"groupMarker","title":"Type Properties"},{"type":"property","title":"static let shared: NullAppender","path":"\/documentation\/logboard\/nullappender\/shared"}]},{"title":"OSLoggerAppender","path":"\/documentation\/logboard\/osloggerappender","type":"class","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/logboard\/osloggerappender\/init(sybsystem:category:)","type":"init","title":"init(sybsystem: String, category: String)"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/logboard\/osloggerappender\/append(_:level:format:arguments:file:function:line:)","type":"method","title":"func append(LBLogger, level: LBLogger.Level, format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)"},{"path":"\/documentation\/logboard\/osloggerappender\/append(_:level:message:file:function:line:)","type":"method","title":"func append(LBLogger, level: LBLogger.Level, message: [Any], file: StaticString, function: StaticString, line: Int)"}]},{"title":"SocketAppender","path":"\/documentation\/logboard\/socketappender","type":"class","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/logboard\/socketappender\/init()","title":"init()"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/logboard\/socketappender\/append(_:level:format:arguments:file:function:line:)","title":"func append(LBLogger, level: LBLogger.Level, format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)"},{"type":"method","path":"\/documentation\/logboard\/socketappender\/append(_:level:message:file:function:line:)","title":"func append(LBLogger, level: LBLogger.Level, message: [Any], file: StaticString, function: StaticString, line: Int)"},{"type":"method","path":"\/documentation\/logboard\/socketappender\/close()","title":"func close()"},{"type":"method","path":"\/documentation\/logboard\/socketappender\/connect(_:port:)","title":"func connect(String, port: Int)"}]},{"title":"Protocols","type":"groupMarker"},{"title":"LBLoggerAppender","path":"\/documentation\/logboard\/lbloggerappender","type":"protocol","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func append(LBLogger, level: LBLogger.Level, format: String, arguments: any CVarArg, file: StaticString, function: StaticString, line: Int)","type":"method","path":"\/documentation\/logboard\/lbloggerappender\/append(_:level:format:arguments:file:function:line:)"},{"title":"func append(LBLogger, level: LBLogger.Level, message: [Any], file: StaticString, function: StaticString, line: Int)","type":"method","path":"\/documentation\/logboard\/lbloggerappender\/append(_:level:message:file:function:line:)"}]}],"title":"Logboard","type":"module"},{"path":"\/documentation\/haishinkit","children":[{"type":"groupMarker","title":"Articles"},{"path":"\/documentation\/haishinkit\/e-rtmp","type":"article","title":"Enhanced RTMP"},{"type":"groupMarker","title":"Classes"},{"path":"\/documentation\/haishinkit\/assetscreenobject","type":"class","title":"AssetScreenObject","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/haishinkit\/assetscreenobject\/chromakeycolor","title":"var chromaKeyColor: CGColor?"},{"type":"property","path":"\/documentation\/haishinkit\/assetscreenobject\/isreading","title":"var isReading: Bool"},{"type":"property","path":"\/documentation\/haishinkit\/assetscreenobject\/videogravity","title":"var videoGravity: AVLayerVideoGravity"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/haishinkit\/assetscreenobject\/cancelreading()","title":"func cancelReading()"},{"type":"method","path":"\/documentation\/haishinkit\/assetscreenobject\/makebounds(_:)","title":"func makeBounds(CGSize) -> CGRect"},{"type":"method","path":"\/documentation\/haishinkit\/assetscreenobject\/makeimage(_:)","title":"func makeImage(some ScreenRenderer) -> CGImage?"},{"type":"method","path":"\/documentation\/haishinkit\/assetscreenobject\/startreading(_:)","title":"func startReading(AVAsset) throws"}]},{"path":"\/documentation\/haishinkit\/audiodeviceunit","type":"class","title":"AudioDeviceUnit","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var connection: AVCaptureConnection?","path":"\/documentation\/haishinkit\/audiodeviceunit\/connection"},{"type":"property","title":"var device: AVCaptureDevice?","path":"\/documentation\/haishinkit\/audiodeviceunit\/device"},{"type":"property","title":"var input: AVCaptureInput?","path":"\/documentation\/haishinkit\/audiodeviceunit\/input"},{"type":"property","title":"var output: AudioDeviceUnit.Output?","path":"\/documentation\/haishinkit\/audiodeviceunit\/output-swift.property"},{"type":"property","title":"let track: UInt8","path":"\/documentation\/haishinkit\/audiodeviceunit\/track"},{"type":"groupMarker","title":"Type Aliases"},{"type":"typealias","title":"AudioDeviceUnit.Output","path":"\/documentation\/haishinkit\/audiodeviceunit\/output-swift.typealias"}]},{"path":"\/documentation\/haishinkit\/audioplayer","type":"class","title":"AudioPlayer","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/haishinkit\/audioplayer\/init(audioengine:)","type":"init","title":"init(audioEngine: AVAudioEngine)"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/haishinkit\/audioplayer\/actor-implementations","type":"symbol","title":"Actor Implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method","path":"\/documentation\/haishinkit\/audioplayer\/assertisolated(_:file:line:)"},{"title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","type":"method","path":"\/documentation\/haishinkit\/audioplayer\/assumeisolated(_:file:line:)"},{"title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method","path":"\/documentation\/haishinkit\/audioplayer\/preconditionisolated(_:file:line:)"}]}]},{"path":"\/documentation\/haishinkit\/hkincomingstream","type":"class","title":"HKIncomingStream","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(some HKStream)","path":"\/documentation\/haishinkit\/hkincomingstream\/init(_:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var isRunning: Bool","path":"\/documentation\/haishinkit\/hkincomingstream\/isrunning","type":"property"},{"title":"var soundTransfrom: SoundTransform?","path":"\/documentation\/haishinkit\/hkincomingstream\/soundtransfrom","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func append(CMSampleBuffer)","path":"\/documentation\/haishinkit\/hkincomingstream\/append(_:)","type":"method"},{"title":"func append(AVAudioBuffer, when: AVAudioTime)","path":"\/documentation\/haishinkit\/hkincomingstream\/append(_:when:)","type":"method"},{"title":"func attachAudioPlayer(AudioPlayer?) async","path":"\/documentation\/haishinkit\/hkincomingstream\/attachaudioplayer(_:)","type":"method"},{"title":"func setSoundTransform(SoundTransform) async","path":"\/documentation\/haishinkit\/hkincomingstream\/setsoundtransform(_:)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Actor Implementations","path":"\/documentation\/haishinkit\/hkincomingstream\/actor-implementations","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/haishinkit\/hkincomingstream\/assertisolated(_:file:line:)"},{"type":"method","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","path":"\/documentation\/haishinkit\/hkincomingstream\/assumeisolated(_:file:line:)"},{"type":"method","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/haishinkit\/hkincomingstream\/preconditionisolated(_:file:line:)"}],"type":"symbol"},{"title":"AsyncRunner Implementations","path":"\/documentation\/haishinkit\/hkincomingstream\/asyncrunner-implementations","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func startRunning()","path":"\/documentation\/haishinkit\/hkincomingstream\/startrunning()"},{"type":"method","title":"func stopRunning()","path":"\/documentation\/haishinkit\/hkincomingstream\/stoprunning()"}],"type":"symbol"}]},{"path":"\/documentation\/haishinkit\/hkoutgoingstream","type":"class","title":"HKOutgoingStream","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/haishinkit\/hkoutgoingstream\/init()","type":"init","title":"init()"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/hkoutgoingstream\/audioinputformat","type":"property","title":"var audioInputFormat: CMFormatDescription?"},{"path":"\/documentation\/haishinkit\/hkoutgoingstream\/audiooutputstream","type":"property","title":"var audioOutputStream: AsyncStream<(AVAudioBuffer, AVAudioTime)>"},{"path":"\/documentation\/haishinkit\/hkoutgoingstream\/audiosettings","type":"property","title":"var audioSettings: AudioCodecSettings"},{"path":"\/documentation\/haishinkit\/hkoutgoingstream\/isrunning","type":"property","title":"var isRunning: Bool"},{"path":"\/documentation\/haishinkit\/hkoutgoingstream\/videoinputbuffercounts","type":"property","title":"var videoInputBufferCounts: Int"},{"path":"\/documentation\/haishinkit\/hkoutgoingstream\/videoinputformat","type":"property","title":"var videoInputFormat: CMFormatDescription?"},{"path":"\/documentation\/haishinkit\/hkoutgoingstream\/videoinputstream","type":"property","title":"var videoInputStream: AsyncStream<CMSampleBuffer>"},{"path":"\/documentation\/haishinkit\/hkoutgoingstream\/videooutputstream","type":"property","title":"var videoOutputStream: AsyncStream<CMSampleBuffer>"},{"path":"\/documentation\/haishinkit\/hkoutgoingstream\/videosettings","type":"property","title":"var videoSettings: VideoCodecSettings"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/hkoutgoingstream\/append(_:)","type":"method","title":"func append(CMSampleBuffer)"},{"path":"\/documentation\/haishinkit\/hkoutgoingstream\/append(_:when:)","type":"method","title":"func append(AVAudioBuffer, when: AVAudioTime)"},{"path":"\/documentation\/haishinkit\/hkoutgoingstream\/append(video:)","type":"method","title":"func append(video: CMSampleBuffer)"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/haishinkit\/hkoutgoingstream\/runner-implementations","type":"symbol","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func startRunning()","path":"\/documentation\/haishinkit\/hkoutgoingstream\/startrunning()","type":"method"},{"title":"func stopRunning()","path":"\/documentation\/haishinkit\/hkoutgoingstream\/stoprunning()","type":"method"}],"title":"Runner Implementations"}]},{"path":"\/documentation\/haishinkit\/hkstreamrecorder","type":"class","title":"HKStreamRecorder","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/init()","type":"init","title":"init()"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/audiotrackid","type":"property","title":"var audioTrackId: UInt8?"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/isrecording","type":"property","title":"var isRecording: Bool"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/moviefragmentinterval","type":"property","title":"var movieFragmentInterval: Double?"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/moviesdirectory","type":"property","title":"var moviesDirectory: URL"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/outputurl","type":"property","title":"var outputURL: URL?"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/settings","type":"property","title":"var settings: [AVMediaType : [String : any Sendable]]"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/videotrackid","type":"property","title":"var videoTrackId: UInt8?"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/selecttrack(_:mediatype:)","type":"method","title":"func selectTrack(UInt8?, mediaType: CMFormatDescription.MediaType)"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/setmoviefragmentinterval(_:)","type":"method","title":"func setMovieFragmentInterval(Double?)"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/setmoviefragmentinterval(moviefragmentinterval:)","type":"method","title":"func setMovieFragmentInterval(movieFragmentInterval: Double?)"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/startrecording(_:settings:)","type":"method","title":"func startRecording(URL?, settings: [AVMediaType : [String : any Sendable]]) async throws"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/stoprecording()","type":"method","title":"func stopRecording() async throws -> URL"},{"type":"groupMarker","title":"Type Properties"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/defaultsettings","type":"property","title":"static let defaultSettings: [AVMediaType : [String : any Sendable]]"},{"type":"groupMarker","title":"Enumerations"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/error","type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/error\/failedtoappend(error:)","type":"case","title":"case failedToAppend(error: (any Error)?)"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/error\/failedtocreateassetwriter(error:)","type":"case","title":"case failedToCreateAssetWriter(error: any Error)"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/error\/failedtocreateassetwriterinput(error:)","type":"case","title":"case failedToCreateAssetWriterInput(error: any Error)"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/error\/failedtofinishwriting(error:)","type":"case","title":"case failedToFinishWriting(error: (any Error)?)"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/error\/filealreadyexists(outputurl:)","type":"case","title":"case fileAlreadyExists(outputURL: URL)"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/error\/invalidstate","type":"case","title":"case invalidState"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/error\/notsupportedfiletype(pathextension:)","type":"case","title":"case notSupportedFileType(pathExtension: String)"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/error\/error-implementations","type":"symbol","title":"Error Implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/error\/localizeddescription","title":"var localizedDescription: String","type":"property"}]}],"title":"HKStreamRecorder.Error"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/actor-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/assertisolated(_:file:line:)","type":"method","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/assumeisolated(_:file:line:)","type":"method","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/preconditionisolated(_:file:line:)","type":"method","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)"}],"title":"Actor Implementations"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/hkstreamoutput-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func stream(some HKStream, didOutput: CMSampleBuffer)","path":"\/documentation\/haishinkit\/hkstreamrecorder\/stream(_:didoutput:)"},{"type":"method","title":"func stream(some HKStream, didOutput: AVAudioBuffer, when: AVAudioTime)","path":"\/documentation\/haishinkit\/hkstreamrecorder\/stream(_:didoutput:when:)"}],"title":"HKStreamOutput Implementations"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/mediamixeroutput-implementations","type":"symbol","children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/mixer(_:didoutput:)","title":"func mixer(MediaMixer, didOutput: CMSampleBuffer)","type":"method"},{"path":"\/documentation\/haishinkit\/hkstreamrecorder\/mixer(_:didoutput:when:)","title":"func mixer(MediaMixer, didOutput: AVAudioPCMBuffer, when: AVAudioTime)","type":"method"}],"title":"MediaMixerOutput Implementations"}]},{"path":"\/documentation\/haishinkit\/hkstreamvideoadaptivebitratestrategy","type":"class","title":"HKStreamVideoAdaptiveBitRateStrategy","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/hkstreamvideoadaptivebitratestrategy\/init(mamimumvideobitrate:)","title":"init(mamimumVideoBitrate: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/hkstreamvideoadaptivebitratestrategy\/mamimumaudiobitrate","title":"let mamimumAudioBitRate: Int","type":"property"},{"path":"\/documentation\/haishinkit\/hkstreamvideoadaptivebitratestrategy\/mamimumvideobitrate","title":"let mamimumVideoBitRate: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/hkstreamvideoadaptivebitratestrategy\/adjustbitrate(_:stream:)","title":"func adjustBitrate(NetworkMonitorEvent, stream: some HKStream) async","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/hkstreamvideoadaptivebitratestrategy\/statuscountsthreshold","title":"static let statusCountsThreshold: Int","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/hkstreamvideoadaptivebitratestrategy\/actor-implementations","title":"Actor Implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/hkstreamvideoadaptivebitratestrategy\/assertisolated(_:file:line:)","type":"method","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)"},{"path":"\/documentation\/haishinkit\/hkstreamvideoadaptivebitratestrategy\/assumeisolated(_:file:line:)","type":"method","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T"},{"path":"\/documentation\/haishinkit\/hkstreamvideoadaptivebitratestrategy\/preconditionisolated(_:file:line:)","type":"method","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)"}]}]},{"path":"\/documentation\/haishinkit\/imagescreenobject","type":"class","title":"ImageScreenObject","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/imagescreenobject\/cgimage","title":"var cgImage: CGImage?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/imagescreenobject\/makebounds(_:)","title":"func makeBounds(CGSize) -> CGRect","type":"method"},{"path":"\/documentation\/haishinkit\/imagescreenobject\/makeimage(_:)","title":"func makeImage(some ScreenRenderer) -> CGImage?","type":"method"}]},{"path":"\/documentation\/haishinkit\/mthkview","type":"class","title":"MTHKView","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/mthkview\/init(coder:)","title":"init(coder: NSCoder)","type":"init"},{"path":"\/documentation\/haishinkit\/mthkview\/init(frame:)","title":"init(frame: CGRect)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/mthkview\/audiotrackid","title":"var audioTrackId: UInt8?","type":"property"},{"path":"\/documentation\/haishinkit\/mthkview\/videogravity","title":"var videoGravity: AVLayerVideoGravity","type":"property"},{"path":"\/documentation\/haishinkit\/mthkview\/videotrackid","title":"var videoTrackId: UInt8?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/mthkview\/awakefromnib()","title":"func awakeFromNib()","type":"method"},{"path":"\/documentation\/haishinkit\/mthkview\/draw(_:)","title":"func draw(CGRect)","type":"method"},{"path":"\/documentation\/haishinkit\/mthkview\/registervideoeffect(_:)","title":"func registerVideoEffect(some VideoEffect) -> Bool","type":"method"},{"path":"\/documentation\/haishinkit\/mthkview\/unregistervideoeffect(_:)","title":"func unregisterVideoEffect(some VideoEffect) -> Bool","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/mthkview\/hkstreamoutput-implementations","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func stream(some HKStream, didOutput: CMSampleBuffer)","path":"\/documentation\/haishinkit\/mthkview\/stream(_:didoutput:)"},{"type":"method","title":"func stream(some HKStream, didOutput: AVAudioBuffer, when: AVAudioTime)","path":"\/documentation\/haishinkit\/mthkview\/stream(_:didoutput:when:)"}],"title":"HKStreamOutput Implementations","type":"symbol"},{"path":"\/documentation\/haishinkit\/mthkview\/mediamixeroutput-implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func mixer(MediaMixer, didOutput: CMSampleBuffer)","type":"method","path":"\/documentation\/haishinkit\/mthkview\/mixer(_:didoutput:)"},{"title":"func mixer(MediaMixer, didOutput: AVAudioPCMBuffer, when: AVAudioTime)","type":"method","path":"\/documentation\/haishinkit\/mthkview\/mixer(_:didoutput:when:)"},{"title":"func selectTrack(UInt8?, mediaType: CMFormatDescription.MediaType) async","type":"method","path":"\/documentation\/haishinkit\/mthkview\/selecttrack(_:mediatype:)"}],"title":"MediaMixerOutput Implementations","type":"symbol"}]},{"path":"\/documentation\/haishinkit\/mediamixer","type":"class","title":"MediaMixer","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(multiTrackAudioMixingEnabled: Bool, useManualCapture: Bool)","path":"\/documentation\/haishinkit\/mediamixer\/init(multitrackaudiomixingenabled:usemanualcapture:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var audioInputFormats: [UInt8 : AVAudioFormat]","path":"\/documentation\/haishinkit\/mediamixer\/audioinputformats","type":"property"},{"title":"var audioMixerSettings: AudioMixerSettings","path":"\/documentation\/haishinkit\/mediamixer\/audiomixersettings","type":"property"},{"title":"var frameRate: Float64","path":"\/documentation\/haishinkit\/mediamixer\/framerate","type":"property"},{"title":"var isCapturing: Bool","path":"\/documentation\/haishinkit\/mediamixer\/iscapturing","type":"property"},{"title":"var isInterputted: AsyncStream<Bool>","path":"\/documentation\/haishinkit\/mediamixer\/isinterputted","type":"property"},{"title":"var isMonitoringEnabled: Bool","path":"\/documentation\/haishinkit\/mediamixer\/ismonitoringenabled","type":"property"},{"title":"var isMultiTrackAudioMixingEnabled: Bool","path":"\/documentation\/haishinkit\/mediamixer\/ismultitrackaudiomixingenabled","type":"property"},{"title":"var isRunning: Bool","path":"\/documentation\/haishinkit\/mediamixer\/isrunning","type":"property"},{"title":"var isTorchEnabled: Bool","path":"\/documentation\/haishinkit\/mediamixer\/istorchenabled","type":"property"},{"title":"var screen: Screen","path":"\/documentation\/haishinkit\/mediamixer\/screen","type":"property"},{"title":"var sessionPreset: AVCaptureSession.Preset","path":"\/documentation\/haishinkit\/mediamixer\/sessionpreset","type":"property"},{"title":"var videoInputFormats: [UInt8 : CMFormatDescription]","path":"\/documentation\/haishinkit\/mediamixer\/videoinputformats","type":"property"},{"title":"var videoMixerSettings: VideoMixerSettings","path":"\/documentation\/haishinkit\/mediamixer\/videomixersettings","type":"property"},{"title":"var videoOrientation: AVCaptureVideoOrientation","path":"\/documentation\/haishinkit\/mediamixer\/videoorientation","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func addOutput(some MediaMixerOutput)","path":"\/documentation\/haishinkit\/mediamixer\/addoutput(_:)","type":"method"},{"title":"func append(CMSampleBuffer, track: UInt8)","path":"\/documentation\/haishinkit\/mediamixer\/append(_:track:)","type":"method"},{"title":"func append(AVAudioBuffer, when: AVAudioTime, track: UInt8)","path":"\/documentation\/haishinkit\/mediamixer\/append(_:when:track:)","type":"method"},{"title":"func attachAudio(AVCaptureDevice?, track: UInt8, configuration: AudioDeviceConfigurationBlock?) async throws","path":"\/documentation\/haishinkit\/mediamixer\/attachaudio(_:track:configuration:)","type":"method"},{"title":"func attachVideo(AVCaptureDevice?, track: UInt8, configuration: VideoDeviceConfigurationBlock?) async throws","path":"\/documentation\/haishinkit\/mediamixer\/attachvideo(_:track:configuration:)","type":"method"},{"title":"func configuration((AVCaptureSession) throws -> Void) rethrows","path":"\/documentation\/haishinkit\/mediamixer\/configuration(_:)","type":"method"},{"title":"func configuration(audio: UInt8, configuration: (AudioDeviceUnit) throws -> Void) throws","path":"\/documentation\/haishinkit\/mediamixer\/configuration(audio:configuration:)","type":"method"},{"title":"func configuration(video: UInt8, configuration: (VideoDeviceUnit) throws -> Void) throws","path":"\/documentation\/haishinkit\/mediamixer\/configuration(video:configuration:)","type":"method"},{"title":"func removeOutput(some MediaMixerOutput)","path":"\/documentation\/haishinkit\/mediamixer\/removeoutput(_:)","type":"method"},{"title":"func setAudioMixerSettings(AudioMixerSettings)","path":"\/documentation\/haishinkit\/mediamixer\/setaudiomixersettings(_:)","type":"method"},{"title":"func setFrameRate(Float64)","path":"\/documentation\/haishinkit\/mediamixer\/setframerate(_:)","type":"method"},{"title":"func setMonitoringEnabled(Bool)","path":"\/documentation\/haishinkit\/mediamixer\/setmonitoringenabled(_:)","type":"method"},{"title":"func setSessionPreset(AVCaptureSession.Preset)","path":"\/documentation\/haishinkit\/mediamixer\/setsessionpreset(_:)","type":"method"},{"title":"func setTorchEnabled(Bool)","path":"\/documentation\/haishinkit\/mediamixer\/settorchenabled(_:)","type":"method"},{"title":"func setVideoMixerSettings(VideoMixerSettings)","path":"\/documentation\/haishinkit\/mediamixer\/setvideomixersettings(_:)","type":"method"},{"title":"func setVideoOrientation(AVCaptureVideoOrientation)","path":"\/documentation\/haishinkit\/mediamixer\/setvideoorientation(_:)","type":"method"},{"title":"func startCapturing()","path":"\/documentation\/haishinkit\/mediamixer\/startcapturing()","type":"method"},{"title":"func stopCapturing()","path":"\/documentation\/haishinkit\/mediamixer\/stopcapturing()","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"title":"MediaMixer.Error","path":"\/documentation\/haishinkit\/mediamixer\/error","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","title":"case deviceNotFound","path":"\/documentation\/haishinkit\/mediamixer\/error\/devicenotfound"},{"type":"case","title":"case failedToAttach(any Error)","path":"\/documentation\/haishinkit\/mediamixer\/error\/failedtoattach(_:)"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","title":"Error Implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/mediamixer\/error\/localizeddescription","type":"property","title":"var localizedDescription: String"}],"path":"\/documentation\/haishinkit\/mediamixer\/error\/error-implementations"}],"type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Actor Implementations","path":"\/documentation\/haishinkit\/mediamixer\/actor-implementations","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/haishinkit\/mediamixer\/assertisolated(_:file:line:)","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)"},{"type":"method","path":"\/documentation\/haishinkit\/mediamixer\/assumeisolated(_:file:line:)","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T"},{"type":"method","path":"\/documentation\/haishinkit\/mediamixer\/preconditionisolated(_:file:line:)","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)"}],"type":"symbol"},{"title":"AsyncRunner Implementations","path":"\/documentation\/haishinkit\/mediamixer\/asyncrunner-implementations","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func startRunning()","path":"\/documentation\/haishinkit\/mediamixer\/startrunning()"},{"type":"method","title":"func stopRunning()","path":"\/documentation\/haishinkit\/mediamixer\/stoprunning()"}],"type":"symbol"}]},{"path":"\/documentation\/haishinkit\/networkmonitor","type":"class","title":"NetworkMonitor","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(some NetworkTransportReporter)","path":"\/documentation\/haishinkit\/networkmonitor\/init(_:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var event: AsyncStream<NetworkMonitorEvent>","path":"\/documentation\/haishinkit\/networkmonitor\/event","type":"property"},{"title":"var isRunning: Bool","path":"\/documentation\/haishinkit\/networkmonitor\/isrunning","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"title":"NetworkMonitor.Error","path":"\/documentation\/haishinkit\/networkmonitor\/error","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case invalidState","type":"case","path":"\/documentation\/haishinkit\/networkmonitor\/error\/invalidstate"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/haishinkit\/networkmonitor\/error\/!=(_:_:)","type":"op"}],"path":"\/documentation\/haishinkit\/networkmonitor\/error\/equatable-implementations"},{"title":"Error Implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var localizedDescription: String","path":"\/documentation\/haishinkit\/networkmonitor\/error\/localizeddescription"}],"path":"\/documentation\/haishinkit\/networkmonitor\/error\/error-implementations"}],"type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Actor Implementations","path":"\/documentation\/haishinkit\/networkmonitor\/actor-implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/haishinkit\/networkmonitor\/assertisolated(_:file:line:)","type":"method"},{"title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","path":"\/documentation\/haishinkit\/networkmonitor\/assumeisolated(_:file:line:)","type":"method"},{"title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/haishinkit\/networkmonitor\/preconditionisolated(_:file:line:)","type":"method"}],"type":"symbol"},{"title":"AsyncRunner Implementations","path":"\/documentation\/haishinkit\/networkmonitor\/asyncrunner-implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func startRunning()","type":"method","path":"\/documentation\/haishinkit\/networkmonitor\/startrunning()"},{"title":"func stopRunning()","type":"method","path":"\/documentation\/haishinkit\/networkmonitor\/stoprunning()"}],"type":"symbol"}]},{"path":"\/documentation\/haishinkit\/piphkview","type":"class","title":"PiPHKView","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/haishinkit\/piphkview\/init(coder:)","type":"init","title":"init?(coder: NSCoder)"},{"path":"\/documentation\/haishinkit\/piphkview\/init(frame:)","type":"init","title":"init(frame: CGRect)"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/piphkview\/audiotrackid","type":"property","title":"var audioTrackId: UInt8?"},{"path":"\/documentation\/haishinkit\/piphkview\/videogravity","type":"property","title":"var videoGravity: AVLayerVideoGravity"},{"path":"\/documentation\/haishinkit\/piphkview\/videotrackid","type":"property","title":"var videoTrackId: UInt8?"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/piphkview\/awakefromnib()","type":"method","title":"func awakeFromNib()"},{"type":"groupMarker","title":"Type Properties"},{"path":"\/documentation\/haishinkit\/piphkview\/defaultbackgroundcolor","type":"property","title":"static var defaultBackgroundColor: NSColor"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/haishinkit\/piphkview\/stream(_:didoutput:)","title":"func stream(some HKStream, didOutput: CMSampleBuffer)"},{"type":"method","path":"\/documentation\/haishinkit\/piphkview\/stream(_:didoutput:when:)","title":"func stream(some HKStream, didOutput: AVAudioBuffer, when: AVAudioTime)"}],"path":"\/documentation\/haishinkit\/piphkview\/hkstreamoutput-implementations","type":"symbol","title":"HKStreamOutput Implementations"},{"children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/haishinkit\/piphkview\/mixer(_:didoutput:)","title":"func mixer(MediaMixer, didOutput: CMSampleBuffer)"},{"type":"method","path":"\/documentation\/haishinkit\/piphkview\/mixer(_:didoutput:when:)","title":"func mixer(MediaMixer, didOutput: AVAudioPCMBuffer, when: AVAudioTime)"},{"type":"method","path":"\/documentation\/haishinkit\/piphkview\/selecttrack(_:mediatype:)","title":"func selectTrack(UInt8?, mediaType: CMFormatDescription.MediaType) async"}],"path":"\/documentation\/haishinkit\/piphkview\/mediamixeroutput-implementations","type":"symbol","title":"MediaMixerOutput Implementations"}]},{"path":"\/documentation\/haishinkit\/rtmpconnection","type":"class","title":"RTMPConnection","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/init(swfurl:pageurl:flashver:fourcclist:videofourccinfomap:audiofourccinfomap:capsex:timeout:requesttimeout:chunksize:qualityofservice:)","type":"init","title":"init(swfUrl: String?, pageUrl: String?, flashVer: String, fourCcList: [String]?, videoFourCcInfoMap: AMFObject?, audioFourCcInfoMap: AMFObject?, capsEx: Int, timeout: Int, requestTimeout: UInt64, chunkSize: Int, qualityOfService: DispatchQoS)"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/audiofourccinfomap","type":"property","title":"let audioFourCcInfoMap: AMFObject?"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/capsex","type":"property","title":"let capsEx: Int"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/chunksize","type":"property","title":"let chunkSize: Int"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/connected","type":"property","title":"var connected: Bool"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/flashver","type":"property","title":"let flashVer: String"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/fourcclist","type":"property","title":"let fourCcList: [String]?"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/objectencoding","type":"property","title":"let objectEncoding: RTMPObjectEncoding"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/pageurl","type":"property","title":"let pageUrl: String?"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/qualityofservice","type":"property","title":"let qualityOfService: DispatchQoS"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/requesttimeout","type":"property","title":"let requestTimeout: UInt64"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/status","type":"property","title":"var status: AsyncStream<RTMPStatus>"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/swfurl","type":"property","title":"let swfUrl: String?"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/timeout","type":"property","title":"let timeout: Int"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/uri","type":"property","title":"var uri: URL?"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/videofourccinfomap","type":"property","title":"let videoFourCcInfoMap: AMFObject?"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/call(_:arguments:)","type":"method","title":"func call(String, arguments: (any Sendable)?...) async throws -> RTMPResponse"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/close()","type":"method","title":"func close() async throws"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/connect(_:arguments:)","type":"method","title":"func connect(String, arguments: (any Sendable)?...) async throws -> RTMPResponse"},{"type":"groupMarker","title":"Type Properties"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/defaultcapabilities","type":"property","title":"static let defaultCapabilities: Int"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/defaultchunksizes","type":"property","title":"static let defaultChunkSizeS: Int"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/defaultflashver","type":"property","title":"static let defaultFlashVer: String"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/defaultobjectencoding","type":"property","title":"static let defaultObjectEncoding: RTMPObjectEncoding"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/defaultport","type":"property","title":"static let defaultPort: Int"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/defaultrequesttimeout","type":"property","title":"static let defaultRequestTimeout: UInt64"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/defaultsecureport","type":"property","title":"static let defaultSecurePort: Int"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/defaulttimeout","type":"property","title":"static let defaultTimeout: Int"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/defaultwindowsizes","type":"property","title":"static let defaultWindowSizeS: Int64"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/supportedaudiofourccinfomap","type":"property","title":"static let supportedAudioFourCcInfoMap: AMFObject"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/supportedfourcclist","type":"property","title":"static let supportedFourCcList: [String]"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/supportedprotocols","type":"property","title":"static let supportedProtocols: Set<String>"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/supportedvideofourccinfomap","type":"property","title":"static let supportedVideoFourCcInfoMap: AMFObject"},{"type":"groupMarker","title":"Enumerations"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/code","type":"enum","title":"RTMPConnection.Code","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case callBadVersion","type":"case","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/callbadversion"},{"title":"case callFailed","type":"case","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/callfailed"},{"title":"case callProhibited","type":"case","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/callprohibited"},{"title":"case connectAppshutdown","type":"case","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/connectappshutdown"},{"title":"case connectClosed","type":"case","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/connectclosed"},{"title":"case connectFailed","type":"case","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/connectfailed"},{"title":"case connectIdleTimeOut","type":"case","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/connectidletimeout"},{"title":"case connectInvalidApp","type":"case","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/connectinvalidapp"},{"title":"case connectNetworkChange","type":"case","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/connectnetworkchange"},{"title":"case connectRejected","type":"case","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/connectrejected"},{"title":"case connectSuccess","type":"case","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/connectsuccess"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: String)","type":"init","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/init(rawvalue:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var level: String","type":"property","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/level"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"}],"path":"\/documentation\/haishinkit\/rtmpconnection\/code\/equatable-implementations"},{"title":"RawRepresentable Implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var hashValue: Int","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/hashvalue"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func hash(into: inout Hasher)","path":"\/documentation\/haishinkit\/rtmpconnection\/code\/hash(into:)"}],"path":"\/documentation\/haishinkit\/rtmpconnection\/code\/rawrepresentable-implementations"}]},{"path":"\/documentation\/haishinkit\/rtmpconnection\/error","type":"enum","title":"RTMPConnection.Error","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case connectionTimedOut","path":"\/documentation\/haishinkit\/rtmpconnection\/error\/connectiontimedout","type":"case"},{"title":"case invalidState","path":"\/documentation\/haishinkit\/rtmpconnection\/error\/invalidstate","type":"case"},{"title":"case requestFailed(response: RTMPResponse)","path":"\/documentation\/haishinkit\/rtmpconnection\/error\/requestfailed(response:)","type":"case"},{"title":"case requestTimedOut","path":"\/documentation\/haishinkit\/rtmpconnection\/error\/requesttimedout","type":"case"},{"title":"case socketErrorOccurred(any Error)","path":"\/documentation\/haishinkit\/rtmpconnection\/error\/socketerroroccurred(_:)","type":"case"},{"title":"case unsupportedCommand(String)","path":"\/documentation\/haishinkit\/rtmpconnection\/error\/unsupportedcommand(_:)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Error Implementations","path":"\/documentation\/haishinkit\/rtmpconnection\/error\/error-implementations","type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var localizedDescription: String","type":"property","path":"\/documentation\/haishinkit\/rtmpconnection\/error\/localizeddescription"}]}]},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/actor-implementations","type":"symbol","title":"Actor Implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method","path":"\/documentation\/haishinkit\/rtmpconnection\/assertisolated(_:file:line:)"},{"title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","type":"method","path":"\/documentation\/haishinkit\/rtmpconnection\/assumeisolated(_:file:line:)"},{"title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method","path":"\/documentation\/haishinkit\/rtmpconnection\/preconditionisolated(_:file:line:)"}]}]},{"path":"\/documentation\/haishinkit\/rtmpsharedobject","type":"class","title":"RTMPSharedObject","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var data: AMFObject","path":"\/documentation\/haishinkit\/rtmpsharedobject\/data","type":"property"},{"title":"let objectEncoding: RTMPObjectEncoding","path":"\/documentation\/haishinkit\/rtmpsharedobject\/objectencoding","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func clear() async","path":"\/documentation\/haishinkit\/rtmpsharedobject\/clear()","type":"method"},{"title":"func close() async","path":"\/documentation\/haishinkit\/rtmpsharedobject\/close()","type":"method"},{"title":"func connect(RTMPConnection) async","path":"\/documentation\/haishinkit\/rtmpsharedobject\/connect(_:)","type":"method"},{"title":"func setProperty(String, (any Sendable)?) async","path":"\/documentation\/haishinkit\/rtmpsharedobject\/setproperty(_:_:)","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"title":"static func getRemote(withName: String, remotePath: String, persistence: Bool) -> RTMPSharedObject","path":"\/documentation\/haishinkit\/rtmpsharedobject\/getremote(withname:remotepath:persistence:)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Actor Implementations","path":"\/documentation\/haishinkit\/rtmpsharedobject\/actor-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/haishinkit\/rtmpsharedobject\/assertisolated(_:file:line:)"},{"type":"method","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","path":"\/documentation\/haishinkit\/rtmpsharedobject\/assumeisolated(_:file:line:)"},{"type":"method","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/haishinkit\/rtmpsharedobject\/preconditionisolated(_:file:line:)"}]}]},{"path":"\/documentation\/haishinkit\/rtmpstream","type":"class","title":"RTMPStream","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/haishinkit\/rtmpstream\/init(connection:fcpublishname:)","title":"init(connection: RTMPConnection, fcPublishName: String?)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/haishinkit\/rtmpstream\/audiosampleaccess","title":"var audioSampleAccess: Bool"},{"type":"property","path":"\/documentation\/haishinkit\/rtmpstream\/audiotrackid","title":"var audioTrackId: UInt8?"},{"type":"property","path":"\/documentation\/haishinkit\/rtmpstream\/currentfps","title":"var currentFPS: UInt16"},{"type":"property","path":"\/documentation\/haishinkit\/rtmpstream\/fcpublishname","title":"var fcPublishName: String?"},{"type":"property","path":"\/documentation\/haishinkit\/rtmpstream\/info","title":"var info: RTMPStreamInfo"},{"type":"property","path":"\/documentation\/haishinkit\/rtmpstream\/metadata","title":"var metadata: AMFArray"},{"type":"property","path":"\/documentation\/haishinkit\/rtmpstream\/objectencoding","title":"var objectEncoding: RTMPObjectEncoding"},{"type":"property","path":"\/documentation\/haishinkit\/rtmpstream\/readystate","title":"var readyState: HKStreamReadyState"},{"type":"property","path":"\/documentation\/haishinkit\/rtmpstream\/status","title":"var status: AsyncStream<RTMPStatus>"},{"type":"property","path":"\/documentation\/haishinkit\/rtmpstream\/videosampleaccess","title":"var videoSampleAccess: Bool"},{"type":"property","path":"\/documentation\/haishinkit\/rtmpstream\/videotrackid","title":"var videoTrackId: UInt8?"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/haishinkit\/rtmpstream\/close()","title":"func close() async throws -> RTMPResponse"},{"type":"method","path":"\/documentation\/haishinkit\/rtmpstream\/pause(_:)","title":"func pause(Bool) async throws -> RTMPResponse"},{"type":"method","path":"\/documentation\/haishinkit\/rtmpstream\/play(_:)","title":"func play((any Sendable)?...) async throws -> RTMPResponse"},{"type":"method","path":"\/documentation\/haishinkit\/rtmpstream\/publish(_:type:)","title":"func publish(String?, type: RTMPStream.HowToPublish) async throws -> RTMPResponse"},{"type":"method","path":"\/documentation\/haishinkit\/rtmpstream\/receiveaudio(_:)","title":"func receiveAudio(Bool) async throws"},{"type":"method","path":"\/documentation\/haishinkit\/rtmpstream\/receivevideo(_:)","title":"func receiveVideo(Bool) async throws"},{"type":"method","path":"\/documentation\/haishinkit\/rtmpstream\/seek(_:)","title":"func seek(Double) async throws"},{"type":"method","path":"\/documentation\/haishinkit\/rtmpstream\/send(_:arguments:isresettimestamp:)","title":"func send(String, arguments: (any Sendable)?..., isResetTimestamp: Bool) throws"},{"type":"method","path":"\/documentation\/haishinkit\/rtmpstream\/togglepause()","title":"func togglePause() async throws -> RTMPResponse"},{"type":"groupMarker","title":"Enumerations"},{"type":"enum","path":"\/documentation\/haishinkit\/rtmpstream\/code","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/bufferempty","type":"case","title":"case bufferEmpty"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/bufferflush","type":"case","title":"case bufferFlush"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/bufferfull","type":"case","title":"case bufferFull"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/connectclosed","type":"case","title":"case connectClosed"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/connectfailed","type":"case","title":"case connectFailed"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/connectrejected","type":"case","title":"case connectRejected"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/connectsuccess","type":"case","title":"case connectSuccess"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/drmupdateneeded","type":"case","title":"case drmUpdateNeeded"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/failed","type":"case","title":"case failed"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/multicaststreamreset","type":"case","title":"case multicastStreamReset"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/pausenotify","type":"case","title":"case pauseNotify"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/playfailed","type":"case","title":"case playFailed"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/playfilestructureinvalid","type":"case","title":"case playFileStructureInvalid"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/playinsufficientbw","type":"case","title":"case playInsufficientBW"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/playnosupportedtrackfound","type":"case","title":"case playNoSupportedTrackFound"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/playreset","type":"case","title":"case playReset"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/playstart","type":"case","title":"case playStart"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/playstop","type":"case","title":"case playStop"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/playstreamnotfound","type":"case","title":"case playStreamNotFound"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/playtransition","type":"case","title":"case playTransition"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/playunpublishnotify","type":"case","title":"case playUnpublishNotify"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/publishbadname","type":"case","title":"case publishBadName"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/publishidle","type":"case","title":"case publishIdle"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/publishstart","type":"case","title":"case publishStart"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/recordalreadyexists","type":"case","title":"case recordAlreadyExists"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/recorddiskquotaexceeded","type":"case","title":"case recordDiskQuotaExceeded"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/recordfailed","type":"case","title":"case recordFailed"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/recordnoaccess","type":"case","title":"case recordNoAccess"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/recordstart","type":"case","title":"case recordStart"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/recordstop","type":"case","title":"case recordStop"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/secondscreenstart","type":"case","title":"case secondScreenStart"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/secondscreenstop","type":"case","title":"case secondScreenStop"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/seekfailed","type":"case","title":"case seekFailed"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/seekinvalidtime","type":"case","title":"case seekInvalidTime"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/seeknotify","type":"case","title":"case seekNotify"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/stepnotify","type":"case","title":"case stepNotify"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/unpausenotify","type":"case","title":"case unpauseNotify"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/unpublishsuccess","type":"case","title":"case unpublishSuccess"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/videodimensionchange","type":"case","title":"case videoDimensionChange"},{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/init(rawvalue:)","type":"init","title":"init?(rawValue: String)"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/level","type":"property","title":"var level: String"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/equatable-implementations","type":"symbol","title":"Equatable Implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","path":"\/documentation\/haishinkit\/rtmpstream\/code\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"}]},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/rawrepresentable-implementations","type":"symbol","title":"RawRepresentable Implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}]}],"title":"RTMPStream.Code"},{"type":"enum","path":"\/documentation\/haishinkit\/rtmpstream\/error","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case invalidState","type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/error\/invalidstate"},{"title":"case requestFailed(response: RTMPResponse)","type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/error\/requestfailed(response:)"},{"title":"case requestTimedOut","type":"case","path":"\/documentation\/haishinkit\/rtmpstream\/error\/requesttimedout"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Error Implementations","type":"symbol","path":"\/documentation\/haishinkit\/rtmpstream\/error\/error-implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/rtmpstream\/error\/localizeddescription","title":"var localizedDescription: String","type":"property"}]}],"title":"RTMPStream.Error"},{"type":"enum","path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","title":"case append","path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish\/append"},{"type":"case","title":"case appendWithGap","path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish\/appendwithgap"},{"type":"case","title":"case live","path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish\/live"},{"type":"case","title":"case record","path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish\/record"},{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init?(rawValue: String)","path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish\/init(rawvalue:)"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","title":"Equatable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish\/equatable-implementations"},{"type":"symbol","title":"RawRepresentable Implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish\/rawrepresentable-implementations"}],"title":"RTMPStream.HowToPublish"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","path":"\/documentation\/haishinkit\/rtmpstream\/actor-implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/rtmpstream\/assertisolated(_:file:line:)","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method"},{"path":"\/documentation\/haishinkit\/rtmpstream\/assumeisolated(_:file:line:)","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","type":"method"},{"path":"\/documentation\/haishinkit\/rtmpstream\/preconditionisolated(_:file:line:)","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method"}],"title":"Actor Implementations"},{"type":"symbol","path":"\/documentation\/haishinkit\/rtmpstream\/hkstream-implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var audioSettings: AudioCodecSettings","type":"property","path":"\/documentation\/haishinkit\/rtmpstream\/audiosettings"},{"title":"var soundTransform: SoundTransform?","type":"property","path":"\/documentation\/haishinkit\/rtmpstream\/soundtransform"},{"title":"var videoSettings: VideoCodecSettings","type":"property","path":"\/documentation\/haishinkit\/rtmpstream\/videosettings"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func addOutput(some HKStreamOutput)","type":"method","path":"\/documentation\/haishinkit\/rtmpstream\/addoutput(_:)"},{"title":"func append(CMSampleBuffer)","type":"method","path":"\/documentation\/haishinkit\/rtmpstream\/append(_:)"},{"title":"func append(AVAudioBuffer, when: AVAudioTime)","type":"method","path":"\/documentation\/haishinkit\/rtmpstream\/append(_:when:)"},{"title":"func attachAudioPlayer(AudioPlayer?) async","type":"method","path":"\/documentation\/haishinkit\/rtmpstream\/attachaudioplayer(_:)"},{"title":"func dispatch(NetworkMonitorEvent) async","type":"method","path":"\/documentation\/haishinkit\/rtmpstream\/dispatch(_:)"},{"title":"func removeOutput(some HKStreamOutput)","type":"method","path":"\/documentation\/haishinkit\/rtmpstream\/removeoutput(_:)"},{"title":"func setAudioSettings(AudioCodecSettings)","type":"method","path":"\/documentation\/haishinkit\/rtmpstream\/setaudiosettings(_:)"},{"title":"func setBitrateStorategy((some HKStreamBitRateStrategy)?)","type":"method","path":"\/documentation\/haishinkit\/rtmpstream\/setbitratestorategy(_:)"},{"title":"func setSoundTransform(SoundTransform) async","type":"method","path":"\/documentation\/haishinkit\/rtmpstream\/setsoundtransform(_:)"},{"title":"func setVideoInputBufferCounts(Int)","type":"method","path":"\/documentation\/haishinkit\/rtmpstream\/setvideoinputbuffercounts(_:)"},{"title":"func setVideoSettings(VideoCodecSettings)","type":"method","path":"\/documentation\/haishinkit\/rtmpstream\/setvideosettings(_:)"}],"title":"HKStream Implementations"},{"type":"symbol","path":"\/documentation\/haishinkit\/rtmpstream\/mediamixeroutput-implementations","children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/rtmpstream\/mixer(_:didoutput:)","type":"method","title":"func mixer(MediaMixer, didOutput: CMSampleBuffer)"},{"path":"\/documentation\/haishinkit\/rtmpstream\/mixer(_:didoutput:when:)","type":"method","title":"func mixer(MediaMixer, didOutput: AVAudioPCMBuffer, when: AVAudioTime)"},{"path":"\/documentation\/haishinkit\/rtmpstream\/selecttrack(_:mediatype:)","type":"method","title":"func selectTrack(UInt8?, mediaType: CMFormatDescription.MediaType)"}],"title":"MediaMixerOutput Implementations"}]},{"path":"\/documentation\/haishinkit\/screen","type":"class","title":"Screen","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/haishinkit\/screen\/init()","type":"init","title":"init()"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/screen\/backgroundcolor","type":"property","title":"var backgroundColor: CGColor"},{"path":"\/documentation\/haishinkit\/screen\/childcounts","type":"property","title":"var childCounts: Int"},{"path":"\/documentation\/haishinkit\/screen\/delegate","type":"property","title":"var delegate: (any ScreenDelegate)?"},{"path":"\/documentation\/haishinkit\/screen\/size-swift.property","type":"property","title":"var size: CGSize"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/screen\/addchild(_:)","type":"method","title":"func addChild(ScreenObject?) throws"},{"path":"\/documentation\/haishinkit\/screen\/registervideoeffect(_:)","type":"method","title":"func registerVideoEffect(some VideoEffect) -> Bool"},{"path":"\/documentation\/haishinkit\/screen\/removechild(_:)","type":"method","title":"func removeChild(ScreenObject?)"},{"path":"\/documentation\/haishinkit\/screen\/unregistervideoeffect(_:)","type":"method","title":"func unregisterVideoEffect(some VideoEffect) -> Bool"},{"type":"groupMarker","title":"Type Properties"},{"path":"\/documentation\/haishinkit\/screen\/size-swift.type.property","type":"property","title":"static let size: CGSize"}]},{"path":"\/documentation\/haishinkit\/screenactor","type":"class","title":"ScreenActor","children":[{"type":"groupMarker","title":"Type Properties"},{"path":"\/documentation\/haishinkit\/screenactor\/shared","type":"property","title":"static let shared: ScreenActor"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/screenactor\/assertisolated(_:file:line:)","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method"},{"path":"\/documentation\/haishinkit\/screenactor\/assumeisolated(_:file:line:)","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","type":"method"},{"path":"\/documentation\/haishinkit\/screenactor\/preconditionisolated(_:file:line:)","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method"}],"path":"\/documentation\/haishinkit\/screenactor\/actor-implementations","type":"symbol","title":"Actor Implementations"},{"children":[{"type":"groupMarker","title":"Type Properties"},{"path":"\/documentation\/haishinkit\/screenactor\/sharedunownedexecutor","type":"property","title":"static var sharedUnownedExecutor: UnownedSerialExecutor"}],"path":"\/documentation\/haishinkit\/screenactor\/globalactor-implementations","type":"symbol","title":"GlobalActor Implementations"}]},{"path":"\/documentation\/haishinkit\/screenobject","type":"class","title":"ScreenObject","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init()","path":"\/documentation\/haishinkit\/screenobject\/init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var bounds: CGRect","path":"\/documentation\/haishinkit\/screenobject\/bounds","type":"property"},{"title":"var cornerRadius: CGFloat","path":"\/documentation\/haishinkit\/screenobject\/cornerradius","type":"property"},{"title":"var horizontalAlignment: ScreenObject.HorizontalAlignment","path":"\/documentation\/haishinkit\/screenobject\/horizontalalignment-swift.property","type":"property"},{"title":"var isVisible: Bool","path":"\/documentation\/haishinkit\/screenobject\/isvisible","type":"property"},{"title":"var layoutMargin: NSEdgeInsets","path":"\/documentation\/haishinkit\/screenobject\/layoutmargin","type":"property"},{"title":"var parent: ScreenObjectContainer?","path":"\/documentation\/haishinkit\/screenobject\/parent","type":"property"},{"title":"var size: CGSize","path":"\/documentation\/haishinkit\/screenobject\/size","type":"property"},{"title":"var verticalAlignment: ScreenObject.VerticalAlignment","path":"\/documentation\/haishinkit\/screenobject\/verticalalignment-swift.property","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func invalidateLayout()","path":"\/documentation\/haishinkit\/screenobject\/invalidatelayout()","type":"method"},{"title":"func makeBounds(CGSize) -> CGRect","path":"\/documentation\/haishinkit\/screenobject\/makebounds(_:)","type":"method"},{"title":"func makeImage(some ScreenRenderer) -> CGImage?","path":"\/documentation\/haishinkit\/screenobject\/makeimage(_:)","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"title":"ScreenObject.HorizontalAlignment","path":"\/documentation\/haishinkit\/screenobject\/horizontalalignment-swift.enum","type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/screenobject\/horizontalalignment-swift.enum\/center","title":"case center","type":"case"},{"path":"\/documentation\/haishinkit\/screenobject\/horizontalalignment-swift.enum\/left","title":"case left","type":"case"},{"path":"\/documentation\/haishinkit\/screenobject\/horizontalalignment-swift.enum\/right","title":"case right","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/screenobject\/horizontalalignment-swift.enum\/equatable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/haishinkit\/screenobject\/horizontalalignment-swift.enum\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}],"title":"Equatable Implementations","type":"symbol"}]},{"title":"ScreenObject.VerticalAlignment","path":"\/documentation\/haishinkit\/screenobject\/verticalalignment-swift.enum","type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/haishinkit\/screenobject\/verticalalignment-swift.enum\/bottom","type":"case","title":"case bottom"},{"path":"\/documentation\/haishinkit\/screenobject\/verticalalignment-swift.enum\/middle","type":"case","title":"case middle"},{"path":"\/documentation\/haishinkit\/screenobject\/verticalalignment-swift.enum\/top","type":"case","title":"case top"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/haishinkit\/screenobject\/verticalalignment-swift.enum\/equatable-implementations","type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/haishinkit\/screenobject\/verticalalignment-swift.enum\/!=(_:_:)","type":"op"}],"title":"Equatable Implementations"}]},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","path":"\/documentation\/haishinkit\/screenobject\/equatable-implementations","type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/haishinkit\/screenobject\/!=(_:_:)","type":"op"},{"title":"static func == (ScreenObject, ScreenObject) -> Bool","path":"\/documentation\/haishinkit\/screenobject\/==(_:_:)","type":"op"}]},{"title":"Hashable Implementations","path":"\/documentation\/haishinkit\/screenobject\/hashable-implementations","type":"symbol","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func hash(into: inout Hasher)","type":"method","path":"\/documentation\/haishinkit\/screenobject\/hash(into:)"}]}]},{"path":"\/documentation\/haishinkit\/screenobjectcontainer","type":"class","title":"ScreenObjectContainer","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/haishinkit\/screenobjectcontainer\/childcounts","title":"var childCounts: Int"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/haishinkit\/screenobjectcontainer\/addchild(_:)","title":"func addChild(ScreenObject?) throws"},{"type":"method","path":"\/documentation\/haishinkit\/screenobjectcontainer\/removechild(_:)","title":"func removeChild(ScreenObject?)"},{"type":"groupMarker","title":"Enumerations"},{"type":"enum","path":"\/documentation\/haishinkit\/screenobjectcontainer\/error","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/screenobjectcontainer\/error\/alreadyexists","title":"case alreadyExists","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/screenobjectcontainer\/error\/equatable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/haishinkit\/screenobjectcontainer\/error\/!=(_:_:)"}],"title":"Equatable Implementations","type":"symbol"},{"path":"\/documentation\/haishinkit\/screenobjectcontainer\/error\/error-implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var localizedDescription: String","type":"property","path":"\/documentation\/haishinkit\/screenobjectcontainer\/error\/localizeddescription"}],"title":"Error Implementations","type":"symbol"}],"title":"ScreenObjectContainer.Error"}]},{"path":"\/documentation\/haishinkit\/streamscreenobject","type":"class","title":"StreamScreenObject","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var chromaKeyColor: CGColor?","path":"\/documentation\/haishinkit\/streamscreenobject\/chromakeycolor"},{"type":"property","title":"var videoGravity: AVLayerVideoGravity","path":"\/documentation\/haishinkit\/streamscreenobject\/videogravity"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func makeBounds(CGSize) -> CGRect","path":"\/documentation\/haishinkit\/streamscreenobject\/makebounds(_:)"},{"type":"method","title":"func makeImage(some ScreenRenderer) -> CGImage?","path":"\/documentation\/haishinkit\/streamscreenobject\/makeimage(_:)"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","title":"HKStreamOutput Implementations","path":"\/documentation\/haishinkit\/streamscreenobject\/hkstreamoutput-implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/streamscreenobject\/stream(_:didoutput:)","title":"func stream(some HKStream, didOutput: CMSampleBuffer)","type":"method"},{"path":"\/documentation\/haishinkit\/streamscreenobject\/stream(_:didoutput:when:)","title":"func stream(some HKStream, didOutput: AVAudioBuffer, when: AVAudioTime)","type":"method"}]}]},{"path":"\/documentation\/haishinkit\/tsreader","type":"class","title":"TSReader","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/haishinkit\/tsreader\/init()","type":"init","title":"init()"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/tsreader\/output","type":"property","title":"var output: AsyncStream<(UInt16, CMSampleBuffer)>"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/tsreader\/clear()","type":"method","title":"func clear()"},{"path":"\/documentation\/haishinkit\/tsreader\/read(_:)","type":"method","title":"func read(Data) -> Int"}]},{"path":"\/documentation\/haishinkit\/tswriter","type":"class","title":"TSWriter","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init(segmentDuration: Double)","path":"\/documentation\/haishinkit\/tswriter\/init(segmentduration:)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var audioFormat: AVAudioFormat?","path":"\/documentation\/haishinkit\/tswriter\/audioformat"},{"type":"property","title":"var expectedMedias: Set<AVMediaType>","path":"\/documentation\/haishinkit\/tswriter\/expectedmedias"},{"type":"property","title":"var output: AsyncStream<Data>","path":"\/documentation\/haishinkit\/tswriter\/output"},{"type":"property","title":"var videoFormat: CMFormatDescription?","path":"\/documentation\/haishinkit\/tswriter\/videoformat"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func append(CMSampleBuffer)","path":"\/documentation\/haishinkit\/tswriter\/append(_:)"},{"type":"method","title":"func append(AVAudioBuffer, when: AVAudioTime)","path":"\/documentation\/haishinkit\/tswriter\/append(_:when:)"},{"type":"method","title":"func clear()","path":"\/documentation\/haishinkit\/tswriter\/clear()"}]},{"path":"\/documentation\/haishinkit\/textscreenobject","type":"class","title":"TextScreenObject","children":[{"type":"groupMarker","title":"Instance Properties"},{"title":"var attributes: [NSAttributedString.Key : Any]?","path":"\/documentation\/haishinkit\/textscreenobject\/attributes","type":"property"},{"title":"var bounds: CGRect","path":"\/documentation\/haishinkit\/textscreenobject\/bounds","type":"property"},{"title":"var string: String","path":"\/documentation\/haishinkit\/textscreenobject\/string","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func makeBounds(CGSize) -> CGRect","path":"\/documentation\/haishinkit\/textscreenobject\/makebounds(_:)","type":"method"},{"title":"func makeImage(some ScreenRenderer) -> CGImage?","path":"\/documentation\/haishinkit\/textscreenobject\/makeimage(_:)","type":"method"}]},{"path":"\/documentation\/haishinkit\/videodeviceunit","type":"class","title":"VideoDeviceUnit","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/videodeviceunit\/colorformat-swift.property","type":"property","title":"var colorFormat: OSType"},{"path":"\/documentation\/haishinkit\/videodeviceunit\/connection","type":"property","title":"var connection: AVCaptureConnection?"},{"path":"\/documentation\/haishinkit\/videodeviceunit\/device","type":"property","title":"var device: AVCaptureDevice?"},{"path":"\/documentation\/haishinkit\/videodeviceunit\/input","type":"property","title":"var input: AVCaptureInput?"},{"path":"\/documentation\/haishinkit\/videodeviceunit\/isvideomirrored","type":"property","title":"var isVideoMirrored: Bool"},{"path":"\/documentation\/haishinkit\/videodeviceunit\/output-swift.property","type":"property","title":"var output: VideoDeviceUnit.Output?"},{"path":"\/documentation\/haishinkit\/videodeviceunit\/track","type":"property","title":"let track: UInt8"},{"path":"\/documentation\/haishinkit\/videodeviceunit\/videoorientation","type":"property","title":"var videoOrientation: AVCaptureVideoOrientation"},{"type":"groupMarker","title":"Type Aliases"},{"path":"\/documentation\/haishinkit\/videodeviceunit\/output-swift.typealias","type":"typealias","title":"VideoDeviceUnit.Output"},{"type":"groupMarker","title":"Type Properties"},{"path":"\/documentation\/haishinkit\/videodeviceunit\/colorformat-swift.type.property","type":"property","title":"static let colorFormat: OSType"}]},{"path":"\/documentation\/haishinkit\/videorotator","type":"class","title":"VideoRotator","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init?()","path":"\/documentation\/haishinkit\/videorotator\/init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func rotate(buffer: CMSampleBuffer) -> Result<CMSampleBuffer, VideoRotator.Error>","path":"\/documentation\/haishinkit\/videorotator\/rotate(buffer:)","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"title":"VideoRotator.Error","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/haishinkit\/videorotator\/error\/cannotallocatepixelbuffer(_:)","type":"case","title":"case cannotAllocatePixelBuffer(CVReturn)"},{"path":"\/documentation\/haishinkit\/videorotator\/error\/noimagebuffer","type":"case","title":"case noImageBuffer"},{"path":"\/documentation\/haishinkit\/videorotator\/error\/noorientationinfo","type":"case","title":"case noOrientationInfo"},{"path":"\/documentation\/haishinkit\/videorotator\/error\/rotationfailure(_:)","type":"case","title":"case rotationFailure(OSStatus)"},{"path":"\/documentation\/haishinkit\/videorotator\/error\/unsupportedorientation","type":"case","title":"case unsupportedOrientation"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/haishinkit\/videorotator\/error\/error-implementations","type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var localizedDescription: String","type":"property","path":"\/documentation\/haishinkit\/videorotator\/error\/localizeddescription"}],"title":"Error Implementations"}],"path":"\/documentation\/haishinkit\/videorotator\/error","type":"enum"}]},{"path":"\/documentation\/haishinkit\/videotrackscreenobject","type":"class","title":"VideoTrackScreenObject","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/haishinkit\/videotrackscreenobject\/init()","title":"init()"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/haishinkit\/videotrackscreenobject\/chromakeycolor","title":"var chromaKeyColor: CGColor?"},{"type":"property","path":"\/documentation\/haishinkit\/videotrackscreenobject\/framerate","title":"var frameRate: Int"},{"type":"property","path":"\/documentation\/haishinkit\/videotrackscreenobject\/track","title":"var track: UInt8"},{"type":"property","path":"\/documentation\/haishinkit\/videotrackscreenobject\/videogravity","title":"var videoGravity: AVLayerVideoGravity"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/haishinkit\/videotrackscreenobject\/draw(_:)","title":"func draw(some ScreenRenderer)"},{"type":"method","path":"\/documentation\/haishinkit\/videotrackscreenobject\/makebounds(_:)","title":"func makeBounds(CGSize) -> CGRect"},{"type":"method","path":"\/documentation\/haishinkit\/videotrackscreenobject\/makeimage(_:)","title":"func makeImage(some ScreenRenderer) -> CGImage?"},{"type":"method","path":"\/documentation\/haishinkit\/videotrackscreenobject\/registervideoeffect(_:)","title":"func registerVideoEffect(some VideoEffect) -> Bool"},{"type":"method","path":"\/documentation\/haishinkit\/videotrackscreenobject\/unregistervideoeffect(_:)","title":"func unregisterVideoEffect(some VideoEffect) -> Bool"}]},{"type":"groupMarker","title":"Protocols"},{"path":"\/documentation\/haishinkit\/asyncrunner","type":"protocol","title":"AsyncRunner","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var isRunning: Bool","type":"property","path":"\/documentation\/haishinkit\/asyncrunner\/isrunning"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func startRunning() async","type":"method","path":"\/documentation\/haishinkit\/asyncrunner\/startrunning()"},{"title":"func stopRunning() async","type":"method","path":"\/documentation\/haishinkit\/asyncrunner\/stoprunning()"}]},{"path":"\/documentation\/haishinkit\/chromakeyprocessable","type":"protocol","title":"ChromaKeyProcessable","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/chromakeyprocessable\/chromakeycolor","type":"property","title":"var chromaKeyColor: CGColor?"}]},{"path":"\/documentation\/haishinkit\/hkstream","type":"protocol","title":"HKStream","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/haishinkit\/hkstream\/audiosettings","title":"var audioSettings: AudioCodecSettings"},{"type":"property","path":"\/documentation\/haishinkit\/hkstream\/readystate","title":"var readyState: HKStreamReadyState"},{"type":"property","path":"\/documentation\/haishinkit\/hkstream\/soundtransform","title":"var soundTransform: SoundTransform?"},{"type":"property","path":"\/documentation\/haishinkit\/hkstream\/videosettings","title":"var videoSettings: VideoCodecSettings"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/haishinkit\/hkstream\/addoutput(_:)","title":"func addOutput(some HKStreamOutput)"},{"type":"method","path":"\/documentation\/haishinkit\/hkstream\/append(_:)","title":"func append(CMSampleBuffer)"},{"type":"method","path":"\/documentation\/haishinkit\/hkstream\/append(_:when:)","title":"func append(AVAudioBuffer, when: AVAudioTime)"},{"type":"method","path":"\/documentation\/haishinkit\/hkstream\/attachaudioplayer(_:)","title":"func attachAudioPlayer(AudioPlayer?) async"},{"type":"method","path":"\/documentation\/haishinkit\/hkstream\/dispatch(_:)","title":"func dispatch(NetworkMonitorEvent) async"},{"type":"method","path":"\/documentation\/haishinkit\/hkstream\/removeoutput(_:)","title":"func removeOutput(some HKStreamOutput)"},{"type":"method","path":"\/documentation\/haishinkit\/hkstream\/setaudiosettings(_:)","title":"func setAudioSettings(AudioCodecSettings)"},{"type":"method","path":"\/documentation\/haishinkit\/hkstream\/setbitratestorategy(_:)","title":"func setBitrateStorategy((some HKStreamBitRateStrategy)?)"},{"type":"method","path":"\/documentation\/haishinkit\/hkstream\/setsoundtransform(_:)","title":"func setSoundTransform(SoundTransform) async"},{"type":"method","path":"\/documentation\/haishinkit\/hkstream\/setvideoinputbuffercounts(_:)","title":"func setVideoInputBufferCounts(Int)"},{"type":"method","path":"\/documentation\/haishinkit\/hkstream\/setvideosettings(_:)","title":"func setVideoSettings(VideoCodecSettings)"}]},{"path":"\/documentation\/haishinkit\/hkstreambitratestrategy","type":"protocol","title":"HKStreamBitRateStrategy","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var mamimumAudioBitRate: Int","path":"\/documentation\/haishinkit\/hkstreambitratestrategy\/mamimumaudiobitrate","type":"property"},{"title":"var mamimumVideoBitRate: Int","path":"\/documentation\/haishinkit\/hkstreambitratestrategy\/mamimumvideobitrate","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func adjustBitrate(NetworkMonitorEvent, stream: some HKStream) async","path":"\/documentation\/haishinkit\/hkstreambitratestrategy\/adjustbitrate(_:stream:)","type":"method"}]},{"path":"\/documentation\/haishinkit\/hkstreamoutput","type":"protocol","title":"HKStreamOutput","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func stream(some HKStream, didOutput: CMSampleBuffer)","path":"\/documentation\/haishinkit\/hkstreamoutput\/stream(_:didoutput:)"},{"type":"method","title":"func stream(some HKStream, didOutput: AVAudioBuffer, when: AVAudioTime)","path":"\/documentation\/haishinkit\/hkstreamoutput\/stream(_:didoutput:when:)"}]},{"path":"\/documentation\/haishinkit\/mediamixeroutput","type":"protocol","title":"MediaMixerOutput","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var audioTrackId: UInt8?","path":"\/documentation\/haishinkit\/mediamixeroutput\/audiotrackid"},{"type":"property","title":"var videoTrackId: UInt8?","path":"\/documentation\/haishinkit\/mediamixeroutput\/videotrackid"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func mixer(MediaMixer, didOutput: CMSampleBuffer)","path":"\/documentation\/haishinkit\/mediamixeroutput\/mixer(_:didoutput:)"},{"type":"method","title":"func mixer(MediaMixer, didOutput: AVAudioPCMBuffer, when: AVAudioTime)","path":"\/documentation\/haishinkit\/mediamixeroutput\/mixer(_:didoutput:when:)"},{"type":"method","title":"func selectTrack(UInt8?, mediaType: CMFormatDescription.MediaType) async","path":"\/documentation\/haishinkit\/mediamixeroutput\/selecttrack(_:mediatype:)"}]},{"path":"\/documentation\/haishinkit\/networkconnection","type":"protocol","title":"NetworkConnection","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var connected: Bool","type":"property","path":"\/documentation\/haishinkit\/networkconnection\/connected"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func close() async throws","type":"method","path":"\/documentation\/haishinkit\/networkconnection\/close()"}]},{"path":"\/documentation\/haishinkit\/networktransportreporter","type":"protocol","title":"NetworkTransportReporter","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func makeNetworkMonitor() async -> NetworkMonitor","path":"\/documentation\/haishinkit\/networktransportreporter\/makenetworkmonitor()","type":"method"},{"title":"func makeNetworkTransportReport() async -> NetworkTransportReport","path":"\/documentation\/haishinkit\/networktransportreporter\/makenetworktransportreport()","type":"method"}]},{"path":"\/documentation\/haishinkit\/runner","type":"protocol","title":"Runner","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var isRunning: Bool","path":"\/documentation\/haishinkit\/runner\/isrunning","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func startRunning()","path":"\/documentation\/haishinkit\/runner\/startrunning()","type":"method"},{"title":"func stopRunning()","path":"\/documentation\/haishinkit\/runner\/stoprunning()","type":"method"}]},{"path":"\/documentation\/haishinkit\/screendelegate","type":"protocol","title":"ScreenDelegate","children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/screendelegate\/screen(_:willlayout:)","title":"func screen(Screen, willLayout: CMTime)","type":"method"}]},{"path":"\/documentation\/haishinkit\/screenrenderer","type":"protocol","title":"ScreenRenderer","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/screenrenderer\/backgroundcolor","title":"var backgroundColor: CGColor","type":"property"},{"path":"\/documentation\/haishinkit\/screenrenderer\/bounds","title":"var bounds: CGRect","type":"property"},{"path":"\/documentation\/haishinkit\/screenrenderer\/context","title":"var context: CIContext","type":"property"},{"path":"\/documentation\/haishinkit\/screenrenderer\/presentationtimestamp","title":"var presentationTimeStamp: CMTime","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/screenrenderer\/draw(_:)","title":"func draw(ScreenObject)","type":"method"},{"path":"\/documentation\/haishinkit\/screenrenderer\/layout(_:)","title":"func layout(ScreenObject)","type":"method"},{"path":"\/documentation\/haishinkit\/screenrenderer\/settarget(_:)","title":"func setTarget(CVPixelBuffer?)","type":"method"}]},{"path":"\/documentation\/haishinkit\/videoeffect","type":"protocol","title":"VideoEffect","children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/videoeffect\/execute(_:)","title":"func execute(CIImage) -> CIImage","type":"method"}]},{"type":"groupMarker","title":"Structures"},{"path":"\/documentation\/haishinkit\/amfarray","type":"struct","title":"AMFArray","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(count: Int)","path":"\/documentation\/haishinkit\/amfarray\/init(count:)","type":"init"},{"title":"init(data: [(any Sendable)?])","path":"\/documentation\/haishinkit\/amfarray\/init(data:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var length: Int","path":"\/documentation\/haishinkit\/amfarray\/length","type":"property"},{"title":"Subscripts","type":"groupMarker"},{"title":"subscript(Any) -> (any Sendable)?","path":"\/documentation\/haishinkit\/amfarray\/subscript(_:)","type":"subscript"},{"title":"Default Implementations","type":"groupMarker"},{"title":"CustomDebugStringConvertible Implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/amfarray\/debugdescription","type":"property","title":"var debugDescription: String"}],"path":"\/documentation\/haishinkit\/amfarray\/customdebugstringconvertible-implementations","type":"symbol"},{"title":"Equatable Implementations","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/haishinkit\/amfarray\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"},{"path":"\/documentation\/haishinkit\/amfarray\/==(_:_:)","type":"op","title":"static func == (AMFArray, AMFArray) -> Bool"}],"path":"\/documentation\/haishinkit\/amfarray\/equatable-implementations","type":"symbol"},{"title":"ExpressibleByArrayLiteral Implementations","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(arrayLiteral: (any Sendable)?...)","path":"\/documentation\/haishinkit\/amfarray\/init(arrayliteral:)","type":"init"}],"path":"\/documentation\/haishinkit\/amfarray\/expressiblebyarrayliteral-implementations","type":"symbol"}]},{"path":"\/documentation\/haishinkit\/amftypedobject","type":"struct","title":"AMFTypedObject","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"let data: AMFObject","path":"\/documentation\/haishinkit\/amftypedobject\/data"},{"type":"property","title":"let typeName: String","path":"\/documentation\/haishinkit\/amftypedobject\/typename"}]},{"path":"\/documentation\/haishinkit\/amfundefined","type":"struct","title":"AMFUndefined","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var description: String","path":"\/documentation\/haishinkit\/amfundefined\/description","type":"property"}]},{"path":"\/documentation\/haishinkit\/amfxml","type":"struct","title":"AMFXML","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(data: String)","path":"\/documentation\/haishinkit\/amfxml\/init(data:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var description: String","path":"\/documentation\/haishinkit\/amfxml\/description","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","path":"\/documentation\/haishinkit\/amfxml\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"},{"type":"op","path":"\/documentation\/haishinkit\/amfxml\/==(_:_:)","title":"static func == (AMFXML, AMFXML) -> Bool"}],"path":"\/documentation\/haishinkit\/amfxml\/equatable-implementations","type":"symbol"}]},{"path":"\/documentation\/haishinkit\/amfxmldocument","type":"struct","title":"AMFXMLDocument","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/amfxmldocument\/init(data:)","title":"init(data: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/amfxmldocument\/description","title":"var description: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/amfxmldocument\/equatable-implementations","title":"Equatable Implementations","type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/haishinkit\/amfxmldocument\/!=(_:_:)"},{"type":"op","title":"static func == (AMFXMLDocument, AMFXMLDocument) -> Bool","path":"\/documentation\/haishinkit\/amfxmldocument\/==(_:_:)"}]}]},{"path":"\/documentation\/haishinkit\/audiocodecsettings","type":"struct","title":"AudioCodecSettings","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(bitRate: Int, downmix: Bool, channelMap: [Int]?, sampleRate: Float64, format: AudioCodecSettings.Format)","type":"init","path":"\/documentation\/haishinkit\/audiocodecsettings\/init(bitrate:downmix:channelmap:samplerate:format:)"},{"title":"init(from: any Decoder) throws","type":"init","path":"\/documentation\/haishinkit\/audiocodecsettings\/init(from:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var bitRate: Int","type":"property","path":"\/documentation\/haishinkit\/audiocodecsettings\/bitrate"},{"title":"var channelMap: [Int]?","type":"property","path":"\/documentation\/haishinkit\/audiocodecsettings\/channelmap"},{"title":"var downmix: Bool","type":"property","path":"\/documentation\/haishinkit\/audiocodecsettings\/downmix"},{"title":"var format: AudioCodecSettings.Format","type":"property","path":"\/documentation\/haishinkit\/audiocodecsettings\/format-swift.property"},{"title":"let sampleRate: Float64","type":"property","path":"\/documentation\/haishinkit\/audiocodecsettings\/samplerate"},{"title":"Type Properties","type":"groupMarker"},{"title":"static let `default`: AudioCodecSettings","type":"property","path":"\/documentation\/haishinkit\/audiocodecsettings\/default"},{"title":"static let defaultBitRate: Int","type":"property","path":"\/documentation\/haishinkit\/audiocodecsettings\/defaultbitrate"},{"title":"static let maximumNumberOfChannels: UInt32","type":"property","path":"\/documentation\/haishinkit\/audiocodecsettings\/maximumnumberofchannels"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/audiocodecsettings\/format-swift.enum\/aac","title":"case aac","type":"case"},{"path":"\/documentation\/haishinkit\/audiocodecsettings\/format-swift.enum\/opus","title":"case opus","type":"case"},{"path":"\/documentation\/haishinkit\/audiocodecsettings\/format-swift.enum\/pcm","title":"case pcm","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/audiocodecsettings\/format-swift.enum\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/audiocodecsettings\/format-swift.enum\/equatable-implementations","title":"Equatable Implementations","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/haishinkit\/audiocodecsettings\/format-swift.enum\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}],"type":"symbol"}],"title":"AudioCodecSettings.Format","type":"enum","path":"\/documentation\/haishinkit\/audiocodecsettings\/format-swift.enum"}]},{"path":"\/documentation\/haishinkit\/audiomixersettings","type":"struct","title":"AudioMixerSettings","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init(sampleRate: Float64, channels: UInt32, isMuted: Bool, mainTrack: UInt8, tracks: [UInt8 : AudioMixerTrackSettings])","path":"\/documentation\/haishinkit\/audiomixersettings\/init(samplerate:channels:ismuted:maintrack:tracks:)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"let channels: UInt32","path":"\/documentation\/haishinkit\/audiomixersettings\/channels"},{"type":"property","title":"var isMuted: Bool","path":"\/documentation\/haishinkit\/audiomixersettings\/ismuted"},{"type":"property","title":"var mainTrack: UInt8","path":"\/documentation\/haishinkit\/audiomixersettings\/maintrack"},{"type":"property","title":"var maximumNumberOfChannels: UInt32","path":"\/documentation\/haishinkit\/audiomixersettings\/maximumnumberofchannels"},{"type":"property","title":"let sampleRate: Float64","path":"\/documentation\/haishinkit\/audiomixersettings\/samplerate"},{"type":"property","title":"var tracks: [UInt8 : AudioMixerTrackSettings]","path":"\/documentation\/haishinkit\/audiomixersettings\/tracks"},{"type":"groupMarker","title":"Type Properties"},{"type":"property","title":"static let `default`: AudioMixerSettings","path":"\/documentation\/haishinkit\/audiomixersettings\/default"},{"type":"property","title":"static let maximumSampleRate: Float64","path":"\/documentation\/haishinkit\/audiomixersettings\/maximumsamplerate"}]},{"path":"\/documentation\/haishinkit\/audiomixertracksettings","type":"struct","title":"AudioMixerTrackSettings","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/audiomixertracksettings\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/haishinkit\/audiomixertracksettings\/init(volume:ismuted:downmix:channelmap:)","title":"init(volume: Float, isMuted: Bool, downmix: Bool, channelMap: [Int]?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/audiomixertracksettings\/channelmap","title":"var channelMap: [Int]?","type":"property"},{"path":"\/documentation\/haishinkit\/audiomixertracksettings\/downmix","title":"var downmix: Bool","type":"property"},{"path":"\/documentation\/haishinkit\/audiomixertracksettings\/ismuted","title":"var isMuted: Bool","type":"property"},{"path":"\/documentation\/haishinkit\/audiomixertracksettings\/volume","title":"var volume: Float","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/audiomixertracksettings\/default","title":"static let `default`: AudioMixerTrackSettings","type":"property"}]},{"path":"\/documentation\/haishinkit\/hkatomic","type":"struct","title":"HKAtomic","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init(A)","path":"\/documentation\/haishinkit\/hkatomic\/init(_:)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var value: A","path":"\/documentation\/haishinkit\/hkatomic\/value"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func mutate((inout A) -> Void)","path":"\/documentation\/haishinkit\/hkatomic\/mutate(_:)"}]},{"path":"\/documentation\/haishinkit\/networkmonitorreport","type":"struct","title":"NetworkMonitorReport","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"let currentBytesInPerSecond: Int","path":"\/documentation\/haishinkit\/networkmonitorreport\/currentbytesinpersecond","type":"property"},{"title":"let currentBytesOutPerSecond: Int","path":"\/documentation\/haishinkit\/networkmonitorreport\/currentbytesoutpersecond","type":"property"},{"title":"let currentQueueBytesOut: Int","path":"\/documentation\/haishinkit\/networkmonitorreport\/currentqueuebytesout","type":"property"},{"title":"let totalBytesIn: Int","path":"\/documentation\/haishinkit\/networkmonitorreport\/totalbytesin","type":"property"},{"title":"let totalBytesOut: Int","path":"\/documentation\/haishinkit\/networkmonitorreport\/totalbytesout","type":"property"}]},{"path":"\/documentation\/haishinkit\/networktransportreport","type":"struct","title":"NetworkTransportReport","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(queueBytesOut: Int, totalBytesIn: Int, totalBytesOut: Int)","type":"init","path":"\/documentation\/haishinkit\/networktransportreport\/init(queuebytesout:totalbytesin:totalbytesout:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let queueBytesOut: Int","type":"property","path":"\/documentation\/haishinkit\/networktransportreport\/queuebytesout"},{"title":"let totalBytesIn: Int","type":"property","path":"\/documentation\/haishinkit\/networktransportreport\/totalbytesin"},{"title":"let totalBytesOut: Int","type":"property","path":"\/documentation\/haishinkit\/networktransportreport\/totalbytesout"}]},{"path":"\/documentation\/haishinkit\/rtmpresponse","type":"struct","title":"RTMPResponse","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"let arguments: [(any Sendable)?]","path":"\/documentation\/haishinkit\/rtmpresponse\/arguments"},{"type":"property","title":"let status: RTMPStatus?","path":"\/documentation\/haishinkit\/rtmpresponse\/status"}]},{"path":"\/documentation\/haishinkit\/rtmpstatus","type":"struct","title":"RTMPStatus","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"let code: String","path":"\/documentation\/haishinkit\/rtmpstatus\/code"},{"type":"property","title":"let description: String","path":"\/documentation\/haishinkit\/rtmpstatus\/description"},{"type":"property","title":"let level: String","path":"\/documentation\/haishinkit\/rtmpstatus\/level"},{"type":"groupMarker","title":"Subscripts"},{"type":"subscript","title":"subscript(dynamicMember _: String) -> Double?","path":"\/documentation\/haishinkit\/rtmpstatus\/subscript(dynamicmember:)-7qc0b"},{"type":"subscript","title":"subscript(dynamicMember _: String) -> String?","path":"\/documentation\/haishinkit\/rtmpstatus\/subscript(dynamicmember:)-9sprr"}]},{"path":"\/documentation\/haishinkit\/rtmpstreaminfo","type":"struct","title":"RTMPStreamInfo","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var byteCount: Int","path":"\/documentation\/haishinkit\/rtmpstreaminfo\/bytecount"},{"type":"property","title":"var currentBytesPerSecond: Int","path":"\/documentation\/haishinkit\/rtmpstreaminfo\/currentbytespersecond"},{"type":"property","title":"var resourceName: String?","path":"\/documentation\/haishinkit\/rtmpstreaminfo\/resourcename"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","title":"CustomDebugStringConvertible Implementations","path":"\/documentation\/haishinkit\/rtmpstreaminfo\/customdebugstringconvertible-implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/rtmpstreaminfo\/debugdescription","title":"var debugDescription: String","type":"property"}]}]},{"path":"\/documentation\/haishinkit\/soundtransform","type":"struct","title":"SoundTransform","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(volume: Float, pan: Float)","path":"\/documentation\/haishinkit\/soundtransform\/init(volume:pan:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var pan: Float","path":"\/documentation\/haishinkit\/soundtransform\/pan","type":"property"},{"title":"var volume: Float","path":"\/documentation\/haishinkit\/soundtransform\/volume","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"title":"static let defaultPan: Float","path":"\/documentation\/haishinkit\/soundtransform\/defaultpan","type":"property"},{"title":"static let defaultVolume: Float","path":"\/documentation\/haishinkit\/soundtransform\/defaultvolume","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"title":"CustomDebugStringConvertible Implementations","path":"\/documentation\/haishinkit\/soundtransform\/customdebugstringconvertible-implementations","type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var debugDescription: String","type":"property","path":"\/documentation\/haishinkit\/soundtransform\/debugdescription"}]},{"title":"Equatable Implementations","path":"\/documentation\/haishinkit\/soundtransform\/equatable-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/haishinkit\/soundtransform\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}]}]},{"path":"\/documentation\/haishinkit\/vtsessionoption","type":"struct","title":"VTSessionOption","children":[{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/haishinkit\/vtsessionoption\/!=(_:_:)","type":"op"},{"title":"static func == (VTSessionOption, VTSessionOption) -> Bool","path":"\/documentation\/haishinkit\/vtsessionoption\/==(_:_:)","type":"op"}],"title":"Equatable Implementations","path":"\/documentation\/haishinkit\/vtsessionoption\/equatable-implementations"},{"type":"symbol","children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/vtsessionoption\/hash(into:)","type":"method","title":"func hash(into: inout Hasher)"}],"title":"Hashable Implementations","path":"\/documentation\/haishinkit\/vtsessionoption\/hashable-implementations"}]},{"path":"\/documentation\/haishinkit\/videocodecsettings","type":"struct","title":"VideoCodecSettings","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/haishinkit\/videocodecsettings\/init(from:)","type":"init"},{"title":"init(videoSize: CGSize, bitRate: Int, profileLevel: String, scalingMode: VideoCodecSettings.ScalingMode, bitRateMode: VideoCodecSettings.BitRateMode, maxKeyFrameIntervalDuration: Int32, allowFrameReordering: Bool?, dataRateLimits: [Double]?, isHardwareEncoderEnabled: Bool)","path":"\/documentation\/haishinkit\/videocodecsettings\/init(videosize:bitrate:profilelevel:scalingmode:bitratemode:maxkeyframeintervalduration:allowframereordering:dataratelimits:ishardwareencoderenabled:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var allowFrameReordering: Bool?","path":"\/documentation\/haishinkit\/videocodecsettings\/allowframereordering","type":"property"},{"title":"var bitRate: Int","path":"\/documentation\/haishinkit\/videocodecsettings\/bitrate","type":"property"},{"title":"var bitRateMode: VideoCodecSettings.BitRateMode","path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.property","type":"property"},{"title":"var dataRateLimits: [Double]?","path":"\/documentation\/haishinkit\/videocodecsettings\/dataratelimits","type":"property"},{"title":"var frameInterval: Double","path":"\/documentation\/haishinkit\/videocodecsettings\/frameinterval","type":"property"},{"title":"var isHardwareEncoderEnabled: Bool","path":"\/documentation\/haishinkit\/videocodecsettings\/ishardwareencoderenabled","type":"property"},{"title":"var maxKeyFrameIntervalDuration: Int32","path":"\/documentation\/haishinkit\/videocodecsettings\/maxkeyframeintervalduration","type":"property"},{"title":"var profileLevel: String","path":"\/documentation\/haishinkit\/videocodecsettings\/profilelevel","type":"property"},{"title":"var scalingMode: VideoCodecSettings.ScalingMode","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.property","type":"property"},{"title":"var videoSize: CGSize","path":"\/documentation\/haishinkit\/videocodecsettings\/videosize","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"title":"static let `default`: VideoCodecSettings","path":"\/documentation\/haishinkit\/videocodecsettings\/default","type":"property"},{"title":"static let frameInterval01: Double","path":"\/documentation\/haishinkit\/videocodecsettings\/frameinterval01","type":"property"},{"title":"static let frameInterval05: Double","path":"\/documentation\/haishinkit\/videocodecsettings\/frameinterval05","type":"property"},{"title":"static let frameInterval10: Double","path":"\/documentation\/haishinkit\/videocodecsettings\/frameinterval10","type":"property"},{"title":"static let frameInterval30: Double","path":"\/documentation\/haishinkit\/videocodecsettings\/frameinterval30","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"title":"VideoCodecSettings.BitRateMode","path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum","type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/average","type":"case","title":"case average"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/constant","type":"case","title":"case constant"},{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/init(rawvalue:)","type":"init","title":"init?(rawValue: String)"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}],"path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/equatable-implementations","type":"symbol","title":"Equatable Implementations"},{"children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/init(from:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/hashvalue","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func encode(to: any Encoder) throws","path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/encode(to:)","type":"method"},{"title":"func hash(into: inout Hasher)","path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/hash(into:)","type":"method"}],"path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/rawrepresentable-implementations","type":"symbol","title":"RawRepresentable Implementations"}]},{"title":"VideoCodecSettings.ScalingMode","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum","type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/cropsourcetocleanaperture","type":"case","title":"case cropSourceToCleanAperture"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/letterbox","type":"case","title":"case letterbox"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/normal","type":"case","title":"case normal"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/trim","type":"case","title":"case trim"},{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/init(rawvalue:)","type":"init","title":"init?(rawValue: String)"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/equatable-implementations","type":"symbol","title":"Equatable Implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"}]},{"path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/rawrepresentable-implementations","type":"symbol","title":"RawRepresentable Implementations","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}]}]}]},{"path":"\/documentation\/haishinkit\/videomixersettings","type":"struct","title":"VideoMixerSettings","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/haishinkit\/videomixersettings\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/haishinkit\/videomixersettings\/init(mode:ismuted:maintrack:)","title":"init(mode: VideoMixerSettings.Mode, isMuted: Bool, mainTrack: UInt8)","type":"init"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/haishinkit\/videomixersettings\/ismuted","title":"var isMuted: Bool","type":"property"},{"path":"\/documentation\/haishinkit\/videomixersettings\/maintrack","title":"var mainTrack: UInt8","type":"property"},{"path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.property","title":"var mode: VideoMixerSettings.Mode","type":"property"},{"type":"groupMarker","title":"Type Properties"},{"path":"\/documentation\/haishinkit\/videomixersettings\/default","title":"static let `default`: VideoMixerSettings","type":"property"},{"type":"groupMarker","title":"Enumerations"},{"path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum","title":"VideoMixerSettings.Mode","type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","title":"case offscreen","path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/offscreen"},{"type":"case","title":"case passthrough","path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/passthrough"},{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init?(rawValue: String)","path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/init(rawvalue:)"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/!=(_:_:)"}],"type":"symbol","title":"Equatable Implementations","path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/equatable-implementations"},{"children":[{"title":"Initializers","type":"groupMarker"},{"type":"init","title":"init(from: any Decoder) throws","path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/init(from:)"},{"title":"Instance Properties","type":"groupMarker"},{"type":"property","title":"var hashValue: Int","path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/hashvalue"},{"title":"Instance Methods","type":"groupMarker"},{"type":"method","title":"func encode(to: any Encoder) throws","path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/encode(to:)"},{"type":"method","title":"func hash(into: inout Hasher)","path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/hash(into:)"}],"type":"symbol","title":"RawRepresentable Implementations","path":"\/documentation\/haishinkit\/videomixersettings\/mode-swift.enum\/rawrepresentable-implementations"}]}]},{"type":"groupMarker","title":"Variables"},{"path":"\/documentation\/haishinkit\/kamfundefined","type":"var","title":"let kAMFUndefined: AMFUndefined"},{"path":"\/documentation\/haishinkit\/khaishinkitidentifier","type":"var","title":"let kHaishinKitIdentifier: String"},{"type":"groupMarker","title":"Type Aliases"},{"path":"\/documentation\/haishinkit\/amfobject","type":"typealias","title":"AMFObject"},{"path":"\/documentation\/haishinkit\/audiodeviceconfigurationblock","type":"typealias","title":"AudioDeviceConfigurationBlock"},{"path":"\/documentation\/haishinkit\/videodeviceconfigurationblock","type":"typealias","title":"VideoDeviceConfigurationBlock"},{"type":"groupMarker","title":"Enumerations"},{"path":"\/documentation\/haishinkit\/deviceutil","type":"enum","title":"DeviceUtil","children":[{"type":"groupMarker","title":"Type Methods"},{"type":"method","path":"\/documentation\/haishinkit\/deviceutil\/device(withlocalizedname:mediatype:)","title":"static func device(withLocalizedName: String, mediaType: AVMediaType) -> AVCaptureDevice?"}]},{"path":"\/documentation\/haishinkit\/hkstreamreadystate","type":"enum","title":"HKStreamReadyState","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case idle","type":"case","path":"\/documentation\/haishinkit\/hkstreamreadystate\/idle"},{"title":"case play","type":"case","path":"\/documentation\/haishinkit\/hkstreamreadystate\/play"},{"title":"case playing","type":"case","path":"\/documentation\/haishinkit\/hkstreamreadystate\/playing"},{"title":"case publish","type":"case","path":"\/documentation\/haishinkit\/hkstreamreadystate\/publish"},{"title":"case publishing","type":"case","path":"\/documentation\/haishinkit\/hkstreamreadystate\/publishing"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: Int)","type":"init","path":"\/documentation\/haishinkit\/hkstreamreadystate\/init(rawvalue:)"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/hkstreamreadystate\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"type":"symbol","path":"\/documentation\/haishinkit\/hkstreamreadystate\/equatable-implementations"},{"title":"RawRepresentable Implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","path":"\/documentation\/haishinkit\/hkstreamreadystate\/hashvalue","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func hash(into: inout Hasher)","path":"\/documentation\/haishinkit\/hkstreamreadystate\/hash(into:)","type":"method"}],"type":"symbol","path":"\/documentation\/haishinkit\/hkstreamreadystate\/rawrepresentable-implementations"}]},{"path":"\/documentation\/haishinkit\/networkmonitorevent","type":"enum","title":"NetworkMonitorEvent","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/networkmonitorevent\/publishinsufficientbwoccured(report:)","type":"case","title":"case publishInsufficientBWOccured(report: NetworkMonitorReport)"},{"path":"\/documentation\/haishinkit\/networkmonitorevent\/reset","type":"case","title":"case reset"},{"path":"\/documentation\/haishinkit\/networkmonitorevent\/status(report:)","type":"case","title":"case status(report: NetworkMonitorReport)"}]},{"path":"\/documentation\/haishinkit\/rtmpobjectencoding","type":"enum","title":"RTMPObjectEncoding","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case amf0","type":"case","path":"\/documentation\/haishinkit\/rtmpobjectencoding\/amf0"},{"title":"case amf3","type":"case","path":"\/documentation\/haishinkit\/rtmpobjectencoding\/amf3"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: UInt8)","type":"init","path":"\/documentation\/haishinkit\/rtmpobjectencoding\/init(rawvalue:)"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/rtmpobjectencoding\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/haishinkit\/rtmpobjectencoding\/equatable-implementations"},{"title":"RawRepresentable Implementations","type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/rtmpobjectencoding\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/rtmpobjectencoding\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/haishinkit\/rtmpobjectencoding\/rawrepresentable-implementations"}]},{"type":"groupMarker","title":"Extended Modules"},{"path":"\/documentation\/haishinkit\/coremedia","type":"extension","title":"CoreMedia","children":[{"type":"groupMarker","title":"Extended Classes"},{"type":"extension","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var isCompressed: Bool","path":"\/documentation\/haishinkit\/coremedia\/cmformatdescription\/iscompressed","type":"property"}],"title":"CMFormatDescription","path":"\/documentation\/haishinkit\/coremedia\/cmformatdescription"}]}],"title":"HaishinKit","type":"module"},{"path":"\/documentation\/moqthaishinkit","children":[{"title":"Classes","type":"groupMarker"},{"title":"MoQTConnection","path":"\/documentation\/moqthaishinkit\/moqtconnection","type":"class","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init(MoQTSetupRole, requestTimeOut: UInt64)","path":"\/documentation\/moqthaishinkit\/moqtconnection\/init(_:requesttimeout:)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var objectStream: AsyncStream<MoQTObject>","path":"\/documentation\/moqthaishinkit\/moqtconnection\/objectstream"},{"type":"property","title":"let requestTimeout: UInt64","path":"\/documentation\/moqthaishinkit\/moqtconnection\/requesttimeout"},{"type":"property","title":"let role: MoQTSetupRole","path":"\/documentation\/moqthaishinkit\/moqtconnection\/role"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func annouce([String], authInfo: String?) async throws -> Result<MoQTAnnounceOk, MoQTAnnounceError>","path":"\/documentation\/moqthaishinkit\/moqtconnection\/annouce(_:authinfo:)"},{"type":"method","title":"func close() async","path":"\/documentation\/moqthaishinkit\/moqtconnection\/close()"},{"type":"method","title":"func connect(String) async throws -> MoQTServerSetup","path":"\/documentation\/moqthaishinkit\/moqtconnection\/connect(_:)"},{"type":"method","title":"func send([MoQTObject], header: MoQTStreamHeaderSubgroup) async throws","path":"\/documentation\/moqthaishinkit\/moqtconnection\/send(_:header:)"},{"type":"method","title":"func subscribe([String], name: String, authInfo: String?) async throws -> Result<MoQTSubscribeOk, MoQTSubscribeError>","path":"\/documentation\/moqthaishinkit\/moqtconnection\/subscribe(_:name:authinfo:)"},{"type":"method","title":"func subscribeAnnouces([String], authInfo: String?) async throws -> Result<MoQTSubscribeAnnouncesOk, MoQTSubscribeAnnouncesError>","path":"\/documentation\/moqthaishinkit\/moqtconnection\/subscribeannouces(_:authinfo:)"},{"type":"groupMarker","title":"Type Properties"},{"type":"property","title":"static let defaultPort: Int","path":"\/documentation\/moqthaishinkit\/moqtconnection\/defaultport"},{"type":"property","title":"static let defaultRequestTimeout: UInt64","path":"\/documentation\/moqthaishinkit\/moqtconnection\/defaultrequesttimeout"},{"type":"property","title":"static let supportedProtocols: [String]","path":"\/documentation\/moqthaishinkit\/moqtconnection\/supportedprotocols"},{"type":"property","title":"static let supportedVersions: [MoQTVersion]","path":"\/documentation\/moqthaishinkit\/moqtconnection\/supportedversions"},{"type":"groupMarker","title":"Enumerations"},{"type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","path":"\/documentation\/moqthaishinkit\/moqtconnection\/error\/connectiontimedout","title":"case connectionTimedOut"},{"type":"case","path":"\/documentation\/moqthaishinkit\/moqtconnection\/error\/invalidstate","title":"case invalidState"},{"type":"case","path":"\/documentation\/moqthaishinkit\/moqtconnection\/error\/requesttimedout","title":"case requestTimedOut"},{"type":"case","path":"\/documentation\/moqthaishinkit\/moqtconnection\/error\/socketerroroccurred(_:)","title":"case socketErrorOccurred(any Error)"},{"type":"case","path":"\/documentation\/moqthaishinkit\/moqtconnection\/error\/unknownresponse","title":"case unknownResponse"},{"type":"case","path":"\/documentation\/moqthaishinkit\/moqtconnection\/error\/unsupportedcommand(_:)","title":"case unsupportedCommand(String)"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","path":"\/documentation\/moqthaishinkit\/moqtconnection\/error\/error-implementations","title":"Error Implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/moqthaishinkit\/moqtconnection\/error\/localizeddescription","type":"property","title":"var localizedDescription: String"}]}],"title":"MoQTConnection.Error","path":"\/documentation\/moqthaishinkit\/moqtconnection\/error"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/moqthaishinkit\/moqtconnection\/assertisolated(_:file:line:)","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)"},{"type":"method","path":"\/documentation\/moqthaishinkit\/moqtconnection\/assumeisolated(_:file:line:)","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T"},{"type":"method","path":"\/documentation\/moqthaishinkit\/moqtconnection\/preconditionisolated(_:file:line:)","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)"}],"title":"Actor Implementations","path":"\/documentation\/moqthaishinkit\/moqtconnection\/actor-implementations"}]},{"title":"Protocols","type":"groupMarker"},{"title":"MoQTControlMessage","path":"\/documentation\/moqthaishinkit\/moqtcontrolmessage","type":"protocol","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var payload: Data","path":"\/documentation\/moqthaishinkit\/moqtcontrolmessage\/payload","type":"property"},{"title":"var type: MoQTMessageType","path":"\/documentation\/moqthaishinkit\/moqtcontrolmessage\/type","type":"property"}]},{"title":"Structures","type":"groupMarker"},{"title":"MoQTAnnounce","path":"\/documentation\/moqthaishinkit\/moqtannounce","type":"struct","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/moqthaishinkit\/moqtannounce\/payload","type":"property","title":"var payload: Data"},{"path":"\/documentation\/moqthaishinkit\/moqtannounce\/subscribeparameters","type":"property","title":"let subscribeParameters: [MoQTVersionSpecificParameter]"},{"path":"\/documentation\/moqthaishinkit\/moqtannounce\/tracknamespace","type":"property","title":"let trackNamespace: [String]"},{"path":"\/documentation\/moqthaishinkit\/moqtannounce\/type","type":"property","title":"let type: MoQTMessageType"}]},{"title":"MoQTAnnounceError","path":"\/documentation\/moqthaishinkit\/moqtannounceerror","type":"struct","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"let code: Int","path":"\/documentation\/moqthaishinkit\/moqtannounceerror\/code","type":"property"},{"title":"var payload: Data","path":"\/documentation\/moqthaishinkit\/moqtannounceerror\/payload","type":"property"},{"title":"let reasonPhrase: String","path":"\/documentation\/moqthaishinkit\/moqtannounceerror\/reasonphrase","type":"property"},{"title":"let trackNamespace: [String]","path":"\/documentation\/moqthaishinkit\/moqtannounceerror\/tracknamespace","type":"property"},{"title":"let type: MoQTMessageType","path":"\/documentation\/moqthaishinkit\/moqtannounceerror\/type","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Error Implementations","path":"\/documentation\/moqthaishinkit\/moqtannounceerror\/error-implementations","type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var localizedDescription: String","type":"property","path":"\/documentation\/moqthaishinkit\/moqtannounceerror\/localizeddescription"}]}]},{"title":"MoQTAnnounceOk","path":"\/documentation\/moqthaishinkit\/moqtannounceok","type":"struct","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtannounceok\/payload","title":"var payload: Data"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtannounceok\/tracknamespace","title":"let trackNamespace: [String]"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtannounceok\/type","title":"let type: MoQTMessageType"}]},{"title":"MoQTGoaway","path":"\/documentation\/moqthaishinkit\/moqtgoaway","type":"struct","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"let newSessionURI: String","type":"property","path":"\/documentation\/moqthaishinkit\/moqtgoaway\/newsessionuri"},{"title":"var payload: Data","type":"property","path":"\/documentation\/moqthaishinkit\/moqtgoaway\/payload"},{"title":"let type: MoQTMessageType","type":"property","path":"\/documentation\/moqthaishinkit\/moqtgoaway\/type"}]},{"title":"MoQTObject","path":"\/documentation\/moqthaishinkit\/moqtobject","type":"struct","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(id: Int, status: Int?, data: Data)","type":"init","path":"\/documentation\/moqthaishinkit\/moqtobject\/init(id:status:data:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let data: Data","type":"property","path":"\/documentation\/moqthaishinkit\/moqtobject\/data"},{"title":"let id: Int","type":"property","path":"\/documentation\/moqthaishinkit\/moqtobject\/id"},{"title":"let status: Int?","type":"property","path":"\/documentation\/moqthaishinkit\/moqtobject\/status"}]},{"title":"MoQTServerSetup","path":"\/documentation\/moqthaishinkit\/moqtserversetup","type":"struct","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var payload: Data","type":"property","path":"\/documentation\/moqthaishinkit\/moqtserversetup\/payload"},{"title":"let selectedVersion: Int","type":"property","path":"\/documentation\/moqthaishinkit\/moqtserversetup\/selectedversion"},{"title":"let setupParameters: [MoQTSetupParameter]","type":"property","path":"\/documentation\/moqthaishinkit\/moqtserversetup\/setupparameters"},{"title":"let type: MoQTMessageType","type":"property","path":"\/documentation\/moqthaishinkit\/moqtserversetup\/type"}]},{"title":"MoQTSetupParameter","path":"\/documentation\/moqthaishinkit\/moqtsetupparameter","type":"struct","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"let key: MoQTSetupParameterType","path":"\/documentation\/moqthaishinkit\/moqtsetupparameter\/key","type":"property"},{"title":"let value: any Sendable","path":"\/documentation\/moqthaishinkit\/moqtsetupparameter\/value","type":"property"}]},{"title":"MoQTStreamHeaderSubgroup","path":"\/documentation\/moqthaishinkit\/moqtstreamheadersubgroup","type":"struct","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(trackAlias: Int, groupId: Int, subgroupId: Int, publisherPriority: Int)","path":"\/documentation\/moqthaishinkit\/moqtstreamheadersubgroup\/init(trackalias:groupid:subgroupid:publisherpriority:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let groupId: Int","path":"\/documentation\/moqthaishinkit\/moqtstreamheadersubgroup\/groupid","type":"property"},{"title":"var payload: Data","path":"\/documentation\/moqthaishinkit\/moqtstreamheadersubgroup\/payload","type":"property"},{"title":"let publisherPriority: Int","path":"\/documentation\/moqthaishinkit\/moqtstreamheadersubgroup\/publisherpriority","type":"property"},{"title":"let subgroupId: Int","path":"\/documentation\/moqthaishinkit\/moqtstreamheadersubgroup\/subgroupid","type":"property"},{"title":"let trackAlias: Int","path":"\/documentation\/moqthaishinkit\/moqtstreamheadersubgroup\/trackalias","type":"property"},{"title":"let type: MoQTDataStreamType","path":"\/documentation\/moqthaishinkit\/moqtstreamheadersubgroup\/type","type":"property"}]},{"title":"MoQTSubscribe","path":"\/documentation\/moqthaishinkit\/moqtsubscribe","type":"struct","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"let endGroup: Int?","type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/endgroup"},{"title":"let endObject: Int?","type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/endobject"},{"title":"let filterType: MoQTSubscribe.FilterType","type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.property"},{"title":"let groupOrder: MoQTSubscribe.GroupOrder","type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.property"},{"title":"var payload: Data","type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/payload"},{"title":"let startGroup: Int?","type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/startgroup"},{"title":"let startObject: Int?","type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/startobject"},{"title":"let subscribeId: Int","type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/subscribeid"},{"title":"let subscribeParameters: [MoQTVersionSpecificParameter]","type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/subscribeparameters"},{"title":"let subscribePriority: Int","type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/subscribepriority"},{"title":"let trackAlias: Int","type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/trackalias"},{"title":"let trackName: String","type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/trackname"},{"title":"let trackNamespace: [String]","type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/tracknamespace"},{"title":"let type: MoQTMessageType","type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/type"},{"title":"Enumerations","type":"groupMarker"},{"title":"MoQTSubscribe.FilterType","type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/absoluterange","title":"case absoluteRange"},{"type":"case","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/absolutestart","title":"case absoluteStart"},{"type":"case","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/latestgroup","title":"case latestGroup"},{"type":"case","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/latestobject","title":"case latestObject"},{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/init(rawvalue:)","title":"init?(rawValue: Int)"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/equatable-implementations","title":"Equatable Implementations","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}]},{"type":"symbol","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/hashvalue"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func hash(into: inout Hasher)","type":"method","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum\/hash(into:)"}]}],"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/filtertype-swift.enum"},{"title":"MoQTSubscribe.GroupOrder","type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case ascending","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/ascending","type":"case"},{"title":"case descending","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/descending","type":"case"},{"title":"case original","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/original","type":"case"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: Int)","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/init(rawvalue:)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/equatable-implementations","type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}]},{"title":"RawRepresentable Implementations","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/rawrepresentable-implementations","type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/hashvalue"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func hash(into: inout Hasher)","type":"method","path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum\/hash(into:)"}]}],"path":"\/documentation\/moqthaishinkit\/moqtsubscribe\/grouporder-swift.enum"}]},{"title":"MoQTSubscribeAnnounces","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounces","type":"struct","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounces\/parameters","type":"property","title":"let parameters: [MoQTVersionSpecificParameter]"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounces\/payload","type":"property","title":"var payload: Data"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounces\/tracknamespaceprefix","type":"property","title":"let trackNamespacePrefix: [String]"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounces\/type","type":"property","title":"let type: MoQTMessageType"}]},{"title":"MoQTSubscribeAnnouncesError","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounceserror","type":"struct","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounceserror\/errorcode","title":"let errorCode: Int","type":"property"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounceserror\/payload","title":"var payload: Data","type":"property"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounceserror\/reasonphrase","title":"let reasonPhrase: String","type":"property"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounceserror\/tracknamespaceprefix","title":"let trackNamespacePrefix: [String]","type":"property"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounceserror\/type","title":"let type: MoQTMessageType","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounceserror\/error-implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var localizedDescription: String","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannounceserror\/localizeddescription"}],"title":"Error Implementations","type":"symbol"}]},{"title":"MoQTSubscribeAnnouncesOk","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannouncesok","type":"struct","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannouncesok\/payload","title":"var payload: Data"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannouncesok\/tracknamespaceprefix","title":"let trackNamespacePrefix: [String]"},{"type":"property","path":"\/documentation\/moqthaishinkit\/moqtsubscribeannouncesok\/type","title":"let type: MoQTMessageType"}]},{"title":"MoQTSubscribeError","path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror","type":"struct","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror\/code","type":"property","title":"let code: Int"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror\/payload","type":"property","title":"var payload: Data"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror\/reasonphrase","type":"property","title":"let reasonPhrase: String"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror\/subscribeid","type":"property","title":"let subscribeId: Int"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror\/trackalias","type":"property","title":"let trackAlias: Int"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror\/type","type":"property","title":"let type: MoQTMessageType"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror\/error-implementations","type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtsubscribeerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"title":"Error Implementations"}]},{"title":"MoQTSubscribeOk","path":"\/documentation\/moqthaishinkit\/moqtsubscribeok","type":"struct","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"let contentExists: Bool","path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/contentexists","type":"property"},{"title":"let expires: Int","path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/expires","type":"property"},{"title":"let groupOrder: MoQTSubscribe.GroupOrder","path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/grouporder","type":"property"},{"title":"let largestGroupId: Int?","path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/largestgroupid","type":"property"},{"title":"let largestObjectId: Int?","path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/largestobjectid","type":"property"},{"title":"var payload: Data","path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/payload","type":"property"},{"title":"let subscribeId: Int","path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/subscribeid","type":"property"},{"title":"let subscribeParameters: [MoQTVersionSpecificParameter]","path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/subscribeparameters","type":"property"},{"title":"let type: MoQTMessageType","path":"\/documentation\/moqthaishinkit\/moqtsubscribeok\/type","type":"property"}]},{"title":"MoQTVersionSpecificParameter","path":"\/documentation\/moqthaishinkit\/moqtversionspecificparameter","type":"struct","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"let key: MoQTVersionSpecificType","path":"\/documentation\/moqthaishinkit\/moqtversionspecificparameter\/key"},{"type":"property","title":"let value: any Sendable","path":"\/documentation\/moqthaishinkit\/moqtversionspecificparameter\/value"}]},{"title":"Enumerations","type":"groupMarker"},{"title":"MoQTDataStreamType","path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype","type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"type":"case","title":"case fetchHeader","path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/fetchheader"},{"type":"case","title":"case objectDatagram","path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/objectdatagram"},{"type":"case","title":"case streamHeaderSubgroup","path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/streamheadersubgroup"},{"title":"Initializers","type":"groupMarker"},{"type":"init","title":"init?(rawValue: Int)","path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/init(rawvalue:)"},{"title":"Default Implementations","type":"groupMarker"},{"type":"symbol","title":"Equatable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/equatable-implementations"},{"type":"symbol","title":"RawRepresentable Implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/hashvalue","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func hash(into: inout Hasher)","path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/hash(into:)","type":"method"}],"path":"\/documentation\/moqthaishinkit\/moqtdatastreamtype\/rawrepresentable-implementations"}]},{"title":"MoQTMessageType","path":"\/documentation\/moqthaishinkit\/moqtmessagetype","type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case announce","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/announce","type":"case"},{"title":"case announceCancel","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/announcecancel","type":"case"},{"title":"case announceError","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/announceerror","type":"case"},{"title":"case announceOk","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/announceok","type":"case"},{"title":"case clientSetup","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/clientsetup","type":"case"},{"title":"case goaway","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/goaway","type":"case"},{"title":"case serverSetup","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/serversetup","type":"case"},{"title":"case subscribe","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/subscribe","type":"case"},{"title":"case subscribeAnnounuces","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/subscribeannounuces","type":"case"},{"title":"case subscribeAnnounucesError","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/subscribeannounuceserror","type":"case"},{"title":"case subscribeAnnounucesOk","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/subscribeannounucesok","type":"case"},{"title":"case subscribeDone","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/subscribedone","type":"case"},{"title":"case subscribeError","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/subscribeerror","type":"case"},{"title":"case subscribeOk","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/subscribeok","type":"case"},{"title":"case subscribeUpdate","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/subscribeupdate","type":"case"},{"title":"case trackStatus","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/trackstatus","type":"case"},{"title":"case trackStatusRequest","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/trackstatusrequest","type":"case"},{"title":"case unannounce","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/unannounce","type":"case"},{"title":"case unsubscribe","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/unsubscribe","type":"case"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: Int)","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/init(rawvalue:)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/equatable-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"}]},{"title":"RawRepresentable Implementations","path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/rawrepresentable-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/hashvalue","type":"property","title":"var hashValue: Int"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/moqthaishinkit\/moqtmessagetype\/hash(into:)","type":"method","title":"func hash(into: inout Hasher)"}]}]},{"title":"MoQTSetupParameterType","path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype","type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/maxsubscribeid","title":"case maxSubscribeId"},{"type":"case","path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/path","title":"case path"},{"type":"case","path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/role","title":"case role"},{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/init(rawvalue:)","title":"init?(rawValue: Int)"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/!=(_:_:)"}],"path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/equatable-implementations","title":"Equatable Implementations"},{"type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","type":"property","path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/hashvalue"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func hash(into: inout Hasher)","type":"method","path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/hash(into:)"}],"path":"\/documentation\/moqthaishinkit\/moqtsetupparametertype\/rawrepresentable-implementations","title":"RawRepresentable Implementations"}]},{"title":"MoQTSetupRole","path":"\/documentation\/moqthaishinkit\/moqtsetuprole","type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case pubSub","path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/pubsub","type":"case"},{"title":"case publisher","path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/publisher","type":"case"},{"title":"case subscriber","path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/subscriber","type":"case"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: Int)","path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/init(rawvalue:)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Operators"},{"type":"op","path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"}],"title":"Equatable Implementations","path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/equatable-implementations","type":"symbol"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/hashvalue","type":"property","title":"var hashValue: Int"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/hash(into:)","type":"method","title":"func hash(into: inout Hasher)"}],"title":"RawRepresentable Implementations","path":"\/documentation\/moqthaishinkit\/moqtsetuprole\/rawrepresentable-implementations","type":"symbol"}]},{"title":"MoQTVersion","path":"\/documentation\/moqthaishinkit\/moqtversion","type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case draft01","type":"case","path":"\/documentation\/moqthaishinkit\/moqtversion\/draft01"},{"title":"case draft02","type":"case","path":"\/documentation\/moqthaishinkit\/moqtversion\/draft02"},{"title":"case draft03","type":"case","path":"\/documentation\/moqthaishinkit\/moqtversion\/draft03"},{"title":"case draft04","type":"case","path":"\/documentation\/moqthaishinkit\/moqtversion\/draft04"},{"title":"case draft05","type":"case","path":"\/documentation\/moqthaishinkit\/moqtversion\/draft05"},{"title":"case draft06","type":"case","path":"\/documentation\/moqthaishinkit\/moqtversion\/draft06"},{"title":"case draft07","type":"case","path":"\/documentation\/moqthaishinkit\/moqtversion\/draft07"},{"title":"case draft07Exp","type":"case","path":"\/documentation\/moqthaishinkit\/moqtversion\/draft07exp"},{"title":"case draft07Exp2","type":"case","path":"\/documentation\/moqthaishinkit\/moqtversion\/draft07exp2"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: Int)","type":"init","path":"\/documentation\/moqthaishinkit\/moqtversion\/init(rawvalue:)"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/moqthaishinkit\/moqtversion\/!=(_:_:)"}],"path":"\/documentation\/moqthaishinkit\/moqtversion\/equatable-implementations"},{"title":"RawRepresentable Implementations","type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","path":"\/documentation\/moqthaishinkit\/moqtversion\/hashvalue","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func hash(into: inout Hasher)","path":"\/documentation\/moqthaishinkit\/moqtversion\/hash(into:)","type":"method"}],"path":"\/documentation\/moqthaishinkit\/moqtversion\/rawrepresentable-implementations"}]},{"title":"MoQTVersionSpecificType","path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype","type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/authorizationinfo","type":"case","title":"case authorizationInfo"},{"path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/deliverytimeout","type":"case","title":"case deliveryTimeout"},{"path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/maxcacheduration","type":"case","title":"case maxCacheDuration"},{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/init(rawvalue:)","type":"init","title":"init?(rawValue: Int)"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/equatable-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}],"title":"Equatable Implementations"},{"path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/rawrepresentable-implementations","type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/hashvalue","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func hash(into: inout Hasher)","path":"\/documentation\/moqthaishinkit\/moqtversionspecifictype\/hash(into:)","type":"method"}],"title":"RawRepresentable Implementations"}]}],"title":"MoQTHaishinKit","type":"module"},{"path":"\/documentation\/srthaishinkit","children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"title":"init()","path":"\/documentation\/srthaishinkit\/srtconnection\/init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var connected: Bool","path":"\/documentation\/srthaishinkit\/srtconnection\/connected","type":"property"},{"title":"var performanceData: SRTPerformanceData?","path":"\/documentation\/srthaishinkit\/srtconnection\/performancedata","type":"property"},{"title":"var uri: URL?","path":"\/documentation\/srthaishinkit\/srtconnection\/uri","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func close() async","path":"\/documentation\/srthaishinkit\/srtconnection\/close()","type":"method"},{"title":"func connect(URL?) async throws","path":"\/documentation\/srthaishinkit\/srtconnection\/connect(_:)","type":"method"},{"title":"func getSocketOption(SRTSocketOption.Name) async throws -> SRTSocketOption?","path":"\/documentation\/srthaishinkit\/srtconnection\/getsocketoption(_:)","type":"method"},{"title":"func open(URL?, mode: SRTMode) async throws","path":"\/documentation\/srthaishinkit\/srtconnection\/open(_:mode:)","type":"method"},{"title":"func setSocketOption(SRTSocketOption) async throws","path":"\/documentation\/srthaishinkit\/srtconnection\/setsocketoption(_:)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"title":"static let version: String","path":"\/documentation\/srthaishinkit\/srtconnection\/version","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"title":"SRTConnection.Error","path":"\/documentation\/srthaishinkit\/srtconnection\/error","type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","path":"\/documentation\/srthaishinkit\/srtconnection\/error\/failedtoconnect(_:reson:)","title":"case failedToConnect(String, reson: Int32)"},{"type":"case","path":"\/documentation\/srthaishinkit\/srtconnection\/error\/invalidstate","title":"case invalidState"},{"type":"case","path":"\/documentation\/srthaishinkit\/srtconnection\/error\/unsupporteduri(_:)","title":"case unsupportedUri(URL?)"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","path":"\/documentation\/srthaishinkit\/srtconnection\/error\/error-implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/srthaishinkit\/srtconnection\/error\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"title":"Error Implementations"}]},{"title":"Default Implementations","type":"groupMarker"},{"title":"Actor Implementations","path":"\/documentation\/srthaishinkit\/srtconnection\/actor-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/srthaishinkit\/srtconnection\/assertisolated(_:file:line:)","type":"method","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)"},{"path":"\/documentation\/srthaishinkit\/srtconnection\/assumeisolated(_:file:line:)","type":"method","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T"},{"path":"\/documentation\/srthaishinkit\/srtconnection\/preconditionisolated(_:file:line:)","type":"method","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)"}]}],"title":"SRTConnection","path":"\/documentation\/srthaishinkit\/srtconnection","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var functionalAreas: Set<SRTLogFunctionalArea>","type":"property","path":"\/documentation\/srthaishinkit\/srtlogger\/functionalareas"},{"title":"var level: SRTLogLevel","type":"property","path":"\/documentation\/srthaishinkit\/srtlogger\/level"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func setFunctionalAreas(Set<SRTLogFunctionalArea>)","type":"method","path":"\/documentation\/srthaishinkit\/srtlogger\/setfunctionalareas(_:)"},{"title":"func setLevel(SRTLogLevel)","type":"method","path":"\/documentation\/srthaishinkit\/srtlogger\/setlevel(_:)"},{"title":"Type Properties","type":"groupMarker"},{"title":"static let shared: SRTLogger","type":"property","path":"\/documentation\/srthaishinkit\/srtlogger\/shared"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/srthaishinkit\/srtlogger\/assertisolated(_:file:line:)","type":"method"},{"title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","path":"\/documentation\/srthaishinkit\/srtlogger\/assumeisolated(_:file:line:)","type":"method"},{"title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","path":"\/documentation\/srthaishinkit\/srtlogger\/preconditionisolated(_:file:line:)","type":"method"}],"title":"Actor Implementations","type":"symbol","path":"\/documentation\/srthaishinkit\/srtlogger\/actor-implementations"}],"title":"SRTLogger","path":"\/documentation\/srthaishinkit\/srtlogger","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(connection: SRTConnection)","path":"\/documentation\/srthaishinkit\/srtstream\/init(connection:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var audioTrackId: UInt8?","path":"\/documentation\/srthaishinkit\/srtstream\/audiotrackid","type":"property"},{"title":"var readyState: HKStreamReadyState","path":"\/documentation\/srthaishinkit\/srtstream\/readystate","type":"property"},{"title":"var videoTrackId: UInt8?","path":"\/documentation\/srthaishinkit\/srtstream\/videotrackid","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func close() async","path":"\/documentation\/srthaishinkit\/srtstream\/close()","type":"method"},{"title":"func play(String?) async","path":"\/documentation\/srthaishinkit\/srtstream\/play(_:)","type":"method"},{"title":"func publish(String?) async","path":"\/documentation\/srthaishinkit\/srtstream\/publish(_:)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Actor Implementations","path":"\/documentation\/srthaishinkit\/srtstream\/actor-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/srthaishinkit\/srtstream\/assertisolated(_:file:line:)","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)"},{"type":"method","path":"\/documentation\/srthaishinkit\/srtstream\/assumeisolated(_:file:line:)","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T"},{"type":"method","path":"\/documentation\/srthaishinkit\/srtstream\/preconditionisolated(_:file:line:)","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)"}]},{"title":"HKStream Implementations","path":"\/documentation\/srthaishinkit\/srtstream\/hkstream-implementations","type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var audioSettings: AudioCodecSettings","path":"\/documentation\/srthaishinkit\/srtstream\/audiosettings","type":"property"},{"title":"var soundTransform: SoundTransform?","path":"\/documentation\/srthaishinkit\/srtstream\/soundtransform","type":"property"},{"title":"var videoSettings: VideoCodecSettings","path":"\/documentation\/srthaishinkit\/srtstream\/videosettings","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func addOutput(some HKStreamOutput)","path":"\/documentation\/srthaishinkit\/srtstream\/addoutput(_:)","type":"method"},{"title":"func append(CMSampleBuffer)","path":"\/documentation\/srthaishinkit\/srtstream\/append(_:)","type":"method"},{"title":"func append(AVAudioBuffer, when: AVAudioTime)","path":"\/documentation\/srthaishinkit\/srtstream\/append(_:when:)","type":"method"},{"title":"func attachAudioPlayer(AudioPlayer?) async","path":"\/documentation\/srthaishinkit\/srtstream\/attachaudioplayer(_:)","type":"method"},{"title":"func dispatch(NetworkMonitorEvent) async","path":"\/documentation\/srthaishinkit\/srtstream\/dispatch(_:)","type":"method"},{"title":"func removeOutput(some HKStreamOutput)","path":"\/documentation\/srthaishinkit\/srtstream\/removeoutput(_:)","type":"method"},{"title":"func setAudioSettings(AudioCodecSettings)","path":"\/documentation\/srthaishinkit\/srtstream\/setaudiosettings(_:)","type":"method"},{"title":"func setBitrateStorategy((some HKStreamBitRateStrategy)?)","path":"\/documentation\/srthaishinkit\/srtstream\/setbitratestorategy(_:)","type":"method"},{"title":"func setSoundTransform(SoundTransform) async","path":"\/documentation\/srthaishinkit\/srtstream\/setsoundtransform(_:)","type":"method"},{"title":"func setVideoInputBufferCounts(Int)","path":"\/documentation\/srthaishinkit\/srtstream\/setvideoinputbuffercounts(_:)","type":"method"},{"title":"func setVideoSettings(VideoCodecSettings)","path":"\/documentation\/srthaishinkit\/srtstream\/setvideosettings(_:)","type":"method"}]},{"title":"MediaMixerOutput Implementations","path":"\/documentation\/srthaishinkit\/srtstream\/mediamixeroutput-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/srthaishinkit\/srtstream\/mixer(_:didoutput:)","type":"method","title":"func mixer(MediaMixer, didOutput: CMSampleBuffer)"},{"path":"\/documentation\/srthaishinkit\/srtstream\/mixer(_:didoutput:when:)","type":"method","title":"func mixer(MediaMixer, didOutput: AVAudioPCMBuffer, when: AVAudioTime)"},{"path":"\/documentation\/srthaishinkit\/srtstream\/selecttrack(_:mediatype:)","type":"method","title":"func selectTrack(UInt8?, mediaType: CMFormatDescription.MediaType)"}]}],"title":"SRTStream","path":"\/documentation\/srthaishinkit\/srtstream","type":"class"},{"title":"Structures","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/byteavailrcvbuf","title":"let byteAvailRcvBuf: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/byteavailsndbuf","title":"let byteAvailSndBuf: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytemss","title":"let byteMSS: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytercvbuf","title":"let byteRcvBuf: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytercvdrop","title":"let byteRcvDrop: UInt64"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytercvdroptotal","title":"let byteRcvDropTotal: UInt64"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytercvloss","title":"let byteRcvLoss: UInt64"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytercvlosstotal","title":"let byteRcvLossTotal: UInt64"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytercvundecrypt","title":"let byteRcvUndecrypt: UInt64"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytercvundecrypttotal","title":"let byteRcvUndecryptTotal: UInt64"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/byterecv","title":"let byteRecv: UInt64"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/byterecvtotal","title":"let byteRecvTotal: UInt64"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/byteretrans","title":"let byteRetrans: UInt64"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/byteretranstotal","title":"let byteRetransTotal: UInt64"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytesent","title":"let byteSent: UInt64"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytesenttotal","title":"let byteSentTotal: UInt64"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytesndbuf","title":"let byteSndBuf: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytesnddrop","title":"let byteSndDrop: UInt64"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/bytesnddroptotal","title":"let byteSndDropTotal: UInt64"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/mbpsbandwidth","title":"let mbpsBandwidth: Double"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/mbpsmaxbw","title":"let mbpsMaxBW: Double"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/mbpsrecvrate","title":"let mbpsRecvRate: Double"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/mbpssendrate","title":"let mbpsSendRate: Double"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/msrtt","title":"let msRTT: Double"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/msrcvbuf","title":"let msRcvBuf: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/msrcvtsbpddelay","title":"let msRcvTsbPdDelay: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/mssndbuf","title":"let msSndBuf: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/mssndtsbpddelay","title":"let msSndTsbPdDelay: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/mstimestamp","title":"let msTimeStamp: Int64"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktcongestionwindow","title":"let pktCongestionWindow: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktflightsize","title":"let pktFlightSize: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktflowwindow","title":"let pktFlowWindow: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvavgbelatedtime","title":"let pktRcvAvgBelatedTime: Double"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvbelated","title":"let pktRcvBelated: Int64"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvbuf","title":"let pktRcvBuf: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvdrop","title":"let pktRcvDrop: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvdroptotal","title":"let pktRcvDropTotal: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvfilterextra","title":"let pktRcvFilterExtra: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvfilterextratotal","title":"let pktRcvFilterExtraTotal: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvfilterloss","title":"let pktRcvFilterLoss: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvfilterlosstotal","title":"let pktRcvFilterLossTotal: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvfiltersupply","title":"let pktRcvFilterSupply: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvfiltersupplytotal","title":"let pktRcvFilterSupplyTotal: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvloss","title":"let pktRcvLoss: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvlosstotal","title":"let pktRcvLossTotal: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvretrans","title":"let pktRcvRetrans: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvundecrypt","title":"let pktRcvUndecrypt: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrcvundecrypttotal","title":"let pktRcvUndecryptTotal: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrecv","title":"let pktRecv: Int64"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrecvack","title":"let pktRecvACK: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrecvacktotal","title":"let pktRecvACKTotal: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrecvnak","title":"let pktRecvNAK: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrecvnaktotal","title":"let pktRecvNAKTotal: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktrecvtotal","title":"let pktRecvTotal: Int64"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktreorderdistance","title":"let pktReorderDistance: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktreordertolerance","title":"let pktReorderTolerance: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktretrans","title":"let pktRetrans: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktretranstotal","title":"let pktRetransTotal: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsent","title":"let pktSent: Int64"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsentack","title":"let pktSentACK: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsentacktotal","title":"let pktSentACKTotal: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsentnak","title":"let pktSentNAK: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsentnaktotal","title":"let pktSentNAKTotal: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsenttotal","title":"let pktSentTotal: Int64"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsndbuf","title":"let pktSndBuf: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsnddrop","title":"let pktSndDrop: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsnddroptotal","title":"let pktSndDropTotal: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsndfilterextra","title":"let pktSndFilterExtra: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsndfilterextratotal","title":"let pktSndFilterExtraTotal: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsndloss","title":"let pktSndLoss: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/pktsndlosstotal","title":"let pktSndLossTotal: Int32"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/uspktsndperiod","title":"let usPktSndPeriod: Double"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/ussndduration","title":"let usSndDuration: Int64"},{"type":"property","path":"\/documentation\/srthaishinkit\/srtperformancedata\/ussnddurationtotal","title":"let usSndDurationTotal: Int64"}],"title":"SRTPerformanceData","path":"\/documentation\/srthaishinkit\/srtperformancedata","type":"struct"},{"children":[{"type":"groupMarker","title":"Structures"},{"type":"struct","title":"SRTSocketOption.Name","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/init(rawvalue:symbol:restriction:type:)","type":"init","title":"init(rawValue: String, symbol: SRT_SOCKOPT, restriction: SRTSocketOption.Restriction?, type: SRTSocketOption.CType)"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/rawvalue-swift.property","type":"property","title":"let rawValue: String"},{"type":"groupMarker","title":"Type Aliases"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/rawvalue-swift.typealias","type":"typealias","title":"SRTSocketOption.Name.RawValue"},{"type":"groupMarker","title":"Type Properties"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/bindtodevice","type":"property","title":"static let bindtodevice: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/congestion","type":"property","title":"static let congestion: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/conntimeo","type":"property","title":"static let conntimeo: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/drifttracer","type":"property","title":"static let drifttracer: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/enforcedencryption","type":"property","title":"static let enforcedencryption: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/event","type":"property","title":"static let event: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/fc","type":"property","title":"static let fc: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/groupconnect","type":"property","title":"static let groupconnect: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/groupminstabletimeo","type":"property","title":"static let groupminstabletimeo: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/grouptype","type":"property","title":"static let grouptype: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/inputbw","type":"property","title":"static let inputbw: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/iptos","type":"property","title":"static let iptos: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/ipttl","type":"property","title":"static let ipttl: SRTSocketOption.Name"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/ipv6only","type":"property","title":"static let ipv6only: SRTSocketOption.Name"},{"title":"static let isn: SRTSocketOption.Name","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/isn"},{"title":"static let kmpreannounce: SRTSocketOption.Name","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/kmpreannounce"},{"title":"static let kmrefreshrate: SRTSocketOption.Name","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/kmrefreshrate"},{"title":"static let kmstate: SRTSocketOption.Name","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/kmstate"},{"title":"static let latency: SRTSocketOption.Name","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/latency"},{"title":"static let lossmaxttl: SRTSocketOption.Name","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/lossmaxttl"},{"title":"static let maxbw: SRTSocketOption.Name","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/maxbw"},{"title":"static let messageapi: SRTSocketOption.Name","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/messageapi"},{"title":"static let mininputbw: SRTSocketOption.Name","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/mininputbw"},{"title":"static let minversion: SRTSocketOption.Name","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/minversion"},{"title":"static let mss: SRTSocketOption.Name","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/mss"},{"title":"static let nakreport: SRTSocketOption.Name","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/nakreport"},{"title":"static let oheadbw: SRTSocketOption.Name","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/oheadbw"},{"title":"static let packetfilter: SRTSocketOption.Name","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/packetfilter"},{"title":"static let passphrase: SRTSocketOption.Name","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/passphrase"},{"title":"static let pbkeylen: SRTSocketOption.Name","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/pbkeylen"},{"title":"static let peeridletimeo: SRTSocketOption.Name","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/peeridletimeo"},{"title":"static let peerlatency: SRTSocketOption.Name","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/peerlatency"},{"title":"static let peerversion: SRTSocketOption.Name","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/peerversion"},{"title":"static let rcvbuf: SRTSocketOption.Name","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/rcvbuf"},{"title":"static let rcvdata: SRTSocketOption.Name","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/rcvdata"},{"title":"static let rcvlatency: SRTSocketOption.Name","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/rcvlatency"},{"title":"static let rcvsyn: SRTSocketOption.Name","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/rcvsyn"},{"title":"static let rcvtimeo: SRTSocketOption.Name","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/rcvtimeo"},{"title":"static let rendezvous: SRTSocketOption.Name","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/rendezvous"},{"title":"static let retransmitalgo: SRTSocketOption.Name","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/retransmitalgo"},{"title":"static let reuseaddr: SRTSocketOption.Name","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/reuseaddr"},{"title":"static let sender: SRTSocketOption.Name","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/sender"},{"title":"static let sndbuf: SRTSocketOption.Name","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/sndbuf"},{"title":"static let snddata: SRTSocketOption.Name","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/snddata"},{"title":"static let snddropdelay: SRTSocketOption.Name","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/snddropdelay"},{"title":"static let sndkmstate: SRTSocketOption.Name","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/sndkmstate"},{"title":"static let sndsyn: SRTSocketOption.Name","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/sndsyn"},{"title":"static let sndtimeo: SRTSocketOption.Name","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/sndtimeo"},{"title":"static let state: SRTSocketOption.Name","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/state"},{"title":"static let streamid: SRTSocketOption.Name","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/streamid"},{"title":"static let tlpktdrop: SRTSocketOption.Name","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/tlpktdrop"},{"title":"static let transtype: SRTSocketOption.Name","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/transtype"},{"title":"static let tsbpdmode: SRTSocketOption.Name","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/tsbpdmode"},{"title":"static let udpRcvbuf: SRTSocketOption.Name","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/udprcvbuf"},{"title":"static let udpSndbuf: SRTSocketOption.Name","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/udpsndbuf"},{"title":"static let version: SRTSocketOption.Name","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/version"},{"title":"Default Implementations","type":"groupMarker"},{"title":"RawRepresentable Implementations","type":"symbol","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init?(rawValue: String)","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/init(rawvalue:)"}],"path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.struct\/rawrepresentable-implementations"}]},{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init(name: SRTSocketOption.Name, value: String) throws","path":"\/documentation\/srthaishinkit\/srtsocketoption\/init(name:value:)-3uyvp"},{"type":"init","title":"init(name: SRTSocketOption.Name, value: Int) throws","path":"\/documentation\/srthaishinkit\/srtsocketoption\/init(name:value:)-66kiu"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var boolValue: Bool","path":"\/documentation\/srthaishinkit\/srtsocketoption\/boolvalue"},{"type":"property","title":"var intValue: Int","path":"\/documentation\/srthaishinkit\/srtsocketoption\/intvalue"},{"type":"property","title":"let name: SRTSocketOption.Name","path":"\/documentation\/srthaishinkit\/srtsocketoption\/name-swift.property"},{"type":"property","title":"var stringValue: String","path":"\/documentation\/srthaishinkit\/srtsocketoption\/stringvalue"},{"type":"groupMarker","title":"Enumerations"},{"type":"enum","title":"SRTSocketOption.CType","path":"\/documentation\/srthaishinkit\/srtsocketoption\/ctype","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case bool","path":"\/documentation\/srthaishinkit\/srtsocketoption\/ctype\/bool","type":"case"},{"title":"case int32","path":"\/documentation\/srthaishinkit\/srtsocketoption\/ctype\/int32","type":"case"},{"title":"case int64","path":"\/documentation\/srthaishinkit\/srtsocketoption\/ctype\/int64","type":"case"},{"title":"case string","path":"\/documentation\/srthaishinkit\/srtsocketoption\/ctype\/string","type":"case"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: Int)","path":"\/documentation\/srthaishinkit\/srtsocketoption\/ctype\/init(rawvalue:)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/ctype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"title":"Equatable Implementations","path":"\/documentation\/srthaishinkit\/srtsocketoption\/ctype\/equatable-implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","type":"property","path":"\/documentation\/srthaishinkit\/srtsocketoption\/ctype\/hashvalue"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func hash(into: inout Hasher)","type":"method","path":"\/documentation\/srthaishinkit\/srtsocketoption\/ctype\/hash(into:)"}],"title":"RawRepresentable Implementations","path":"\/documentation\/srthaishinkit\/srtsocketoption\/ctype\/rawrepresentable-implementations","type":"symbol"}]},{"type":"enum","title":"SRTSocketOption.Restriction","path":"\/documentation\/srthaishinkit\/srtsocketoption\/restriction","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/restriction\/post","type":"case","title":"case post"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/restriction\/pre","type":"case","title":"case pre"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/restriction\/prebind","type":"case","title":"case preBind"},{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/restriction\/init(rawvalue:)","type":"init","title":"init?(rawValue: Int)"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/restriction\/equatable-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","path":"\/documentation\/srthaishinkit\/srtsocketoption\/restriction\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"}],"title":"Equatable Implementations"},{"path":"\/documentation\/srthaishinkit\/srtsocketoption\/restriction\/rawrepresentable-implementations","type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","path":"\/documentation\/srthaishinkit\/srtsocketoption\/restriction\/hashvalue","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func hash(into: inout Hasher)","path":"\/documentation\/srthaishinkit\/srtsocketoption\/restriction\/hash(into:)","type":"method"}],"title":"RawRepresentable Implementations"}]}],"title":"SRTSocketOption","path":"\/documentation\/srthaishinkit\/srtsocketoption","type":"struct"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case apiCtrl","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/apictrl","type":"case"},{"title":"case apiRecv","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/apirecv","type":"case"},{"title":"case apiSend","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/apisend","type":"case"},{"title":"case applog","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/applog","type":"case"},{"title":"case bstats","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/bstats","type":"case"},{"title":"case bufRecv","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/bufrecv","type":"case"},{"title":"case bufSend","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/bufsend","type":"case"},{"title":"case chanRecv","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/chanrecv","type":"case"},{"title":"case chnMgmt","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/chnmgmt","type":"case"},{"title":"case chnSend","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/chnsend","type":"case"},{"title":"case congest","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/congest","type":"case"},{"title":"case control","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/control","type":"case"},{"title":"case data","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/data","type":"case"},{"title":"case epollApi","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/epollapi","type":"case"},{"title":"case epollUpd","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/epollupd","type":"case"},{"title":"case general","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/general","type":"case"},{"title":"case grpMgmt","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/grpmgmt","type":"case"},{"title":"case grpRecv","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/grprecv","type":"case"},{"title":"case grpSend","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/grpsend","type":"case"},{"title":"case haicrypt","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/haicrypt","type":"case"},{"title":"case `internal`","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/internal","type":"case"},{"title":"case pfilter","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/pfilter","type":"case"},{"title":"case queCtrl","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/quectrl","type":"case"},{"title":"case queMgmt","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/quemgmt","type":"case"},{"title":"case queRecv","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/querecv","type":"case"},{"title":"case queSend","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/quesend","type":"case"},{"title":"case rsrc","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/rsrc","type":"case"},{"title":"case tsbpd","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/tsbpd","type":"case"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: Int32)","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/init(rawvalue:)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/equatable-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}]},{"title":"RawRepresentable Implementations","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/rawrepresentable-implementations","type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/hashvalue","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func hash(into: inout Hasher)","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea\/hash(into:)","type":"method"}]}],"title":"SRTLogFunctionalArea","path":"\/documentation\/srthaishinkit\/srtlogfunctionalarea","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case crit","type":"case","path":"\/documentation\/srthaishinkit\/srtloglevel\/crit"},{"title":"case debug","type":"case","path":"\/documentation\/srthaishinkit\/srtloglevel\/debug"},{"title":"case error","type":"case","path":"\/documentation\/srthaishinkit\/srtloglevel\/error"},{"title":"case notice","type":"case","path":"\/documentation\/srthaishinkit\/srtloglevel\/notice"},{"title":"case warning","type":"case","path":"\/documentation\/srthaishinkit\/srtloglevel\/warning"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/srthaishinkit\/srtloglevel\/!=(_:_:)"}],"path":"\/documentation\/srthaishinkit\/srtloglevel\/equatable-implementations"}],"title":"SRTLogLevel","path":"\/documentation\/srthaishinkit\/srtloglevel","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case caller","type":"case","path":"\/documentation\/srthaishinkit\/srtmode\/caller"},{"title":"case listener","type":"case","path":"\/documentation\/srthaishinkit\/srtmode\/listener"},{"title":"case rendezvous","type":"case","path":"\/documentation\/srthaishinkit\/srtmode\/rendezvous"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: String)","type":"init","path":"\/documentation\/srthaishinkit\/srtmode\/init(rawvalue:)"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/srthaishinkit\/srtmode\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"type":"symbol","path":"\/documentation\/srthaishinkit\/srtmode\/equatable-implementations"},{"title":"RawRepresentable Implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","type":"property","path":"\/documentation\/srthaishinkit\/srtmode\/hashvalue"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func hash(into: inout Hasher)","type":"method","path":"\/documentation\/srthaishinkit\/srtmode\/hash(into:)"}],"type":"symbol","path":"\/documentation\/srthaishinkit\/srtmode\/rawrepresentable-implementations"}],"title":"SRTMode","path":"\/documentation\/srthaishinkit\/srtmode","type":"enum"}],"title":"SRTHaishinKit","type":"module"}],"title":"HaishinKit","path":"\/documentation"}]},"schemaVersion":{"major":0,"patch":2,"minor":1}}